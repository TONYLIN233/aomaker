2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/LoginRequest
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/LoginRequest -> LoginRequest
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: LoginRequest
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/TokenResponseData
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: TokenResponseData
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: TokenResponseData -> TokenResponseData
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: TokenResponseData -> TokenResponseData
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 TokenResponseData 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/TokenResponseData
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/TokenResponseData -> TokenResponseData
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: TokenResponseData
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/TokenResponseData
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/TokenResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: TokenResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: TokenResponse -> TokenResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: TokenResponse -> TokenResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 TokenResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/TokenResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/TokenResponse -> TokenResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: TokenResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/TokenResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/UserListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: UserListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: UserListResponse -> UserListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: UserListResponse -> UserListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 UserListResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/UserListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/UserListResponse -> UserListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: UserListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/UserListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: User -> User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: User -> User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 User 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/User -> User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: User -> User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: User -> User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 User 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: UserResponse -> UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: UserResponse -> UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 UserResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/UserResponse -> UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: User -> User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: User -> User
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 User 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: UserResponse -> UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: UserResponse -> UserResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 UserResponse 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/ProductListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: ProductListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: ProductListResponse -> ProductListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: ProductListResponse -> ProductListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 ProductListResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/ProductListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/ProductListResponse -> ProductListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: ProductListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/ProductListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Product -> Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Product -> Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 Product 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/Product -> Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/ProductResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: ProductResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: ProductResponse -> ProductResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: ProductResponse -> ProductResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 ProductResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/ProductResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/ProductResponse -> ProductResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: ProductResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/ProductResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Product -> Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Product -> Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 Product 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Order -> Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Order -> Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 Order 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/Order -> Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_object_type:240]-[DEBUG]:跳过注册空模型: Order_productsItem
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/OrderResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: OrderResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: OrderResponse -> OrderResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: OrderResponse -> OrderResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 OrderResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/OrderResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/OrderResponse -> OrderResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: OrderResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/OrderResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Order -> Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Order -> Order
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 Order 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/Body_update_order_status_api_orders__order_id__status_put
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/Body_update_order_status_api_orders__order_id__status_put -> Body_update_order_status_api_orders__order_id__status_put
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: Body_update_order_status_api_orders__order_id__status_put
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: GenericResponse -> GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: GenericResponse -> GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 GenericResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/GenericResponse -> GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: UserDetailResponse -> UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: UserDetailResponse -> UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 UserDetailResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/UserDetailResponse -> UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: UserDetail -> UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: UserDetail -> UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 UserDetail 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/UserDetail -> UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Address
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Address
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Address -> Address
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Address -> Address
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 Address 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/Address
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/Address -> Address
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: Address
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/Address
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_object_type:240]-[DEBUG]:跳过注册空模型: UserDetail_preferences
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: UserDetail -> UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: UserDetail -> UserDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 UserDetail 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: UserDetailResponse -> UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: UserDetailResponse -> UserDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 UserDetailResponse 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/CommentListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: CommentListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: CommentListResponse -> CommentListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: CommentListResponse -> CommentListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 CommentListResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/CommentListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/CommentListResponse -> CommentListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: CommentListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/CommentListResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 Comment 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/SystemStatusResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: SystemStatusResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: SystemStatusResponse -> SystemStatusResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: SystemStatusResponse -> SystemStatusResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 SystemStatusResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/SystemStatusResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/SystemStatusResponse -> SystemStatusResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: SystemStatusResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/SystemStatusResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_object_type:240]-[DEBUG]:跳过注册空模型: SystemStatusResponse_data
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 Comment 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/CommentResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: CommentResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: CommentResponse -> CommentResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: CommentResponse -> CommentResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 CommentResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/CommentResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/CommentResponse -> CommentResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: CommentResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/CommentResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 Comment 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: GenericResponse -> GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: GenericResponse -> GenericResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 GenericResponse 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[parser.parse_endpoint:147]-[DEBUG]:跳过生成空的请求体模型: UploadAvatarApiUsersUserIdAvatarPatchAPIRequestBody
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: FileUploadDataResponse -> FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: FileUploadDataResponse -> FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 FileUploadDataResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/FileUploadDataResponse -> FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/FileUploadResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: FileUploadResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: FileUploadResponse -> FileUploadResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: FileUploadResponse -> FileUploadResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 FileUploadResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/FileUploadResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/FileUploadResponse -> FileUploadResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: FileUploadResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/FileUploadResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/Body_upload_file_api_files_upload_post
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/Body_upload_file_api_files_upload_post -> Body_upload_file_api_files_upload_post
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: Body_upload_file_api_files_upload_post
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: FileUploadDataResponse -> FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: FileUploadDataResponse -> FileUploadDataResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 FileUploadDataResponse 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/Body_batch_upload_files_api_files_batch_upload_post
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/Body_batch_upload_files_api_files_batch_upload_post -> Body_batch_upload_files_api_files_batch_upload_post
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: Body_batch_upload_files_api_files_batch_upload_post
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_object_type:240]-[DEBUG]:跳过注册空模型: BatchUploadFilesApiFilesBatchUploadPostAPIResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: ProductDetailResponse -> ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: ProductDetailResponse -> ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 ProductDetailResponse 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/ProductDetailResponse -> ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: ProductDetail -> ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: ProductDetail -> ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:347]-[DEBUG]:模型 ProductDetail 未注册，开始解析原始schema
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:34]-[DEBUG]:尝试获取引用schema: #/components/schemas/ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:39]-[DEBUG]:提取schema名称: #/components/schemas/ProductDetail -> ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.get_ref_schema:58]-[DEBUG]:成功找到schema: ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:357]-[DEBUG]:找到引用schema，开始解析: #/components/schemas/ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Product -> Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Product -> Product
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 Product 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: Comment -> Comment
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 Comment 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_object_type:240]-[DEBUG]:跳过注册空模型: ProductDetail_specifications
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: ProductDetail -> ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: ProductDetail -> ProductDetail
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 ProductDetail 已注册，从注册表构建DataType
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:307]-[DEBUG]:开始处理引用: #/components/schemas/ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:693]-[DEBUG]:开始规范化类名: ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema.normalize_class_name:743]-[DEBUG]:类名规范化完成: ProductDetailResponse -> ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:326]-[DEBUG]:引用名规范化: ProductDetailResponse -> ProductDetailResponse
2025-09-16 14:02:32 [MainProcess]-[MainThread]-[jsonschema._parse_reference:363]-[DEBUG]:模型 ProductDetailResponse 已注册，从注册表构建DataType
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MDMzMjMyfQ.5LNW3S7Oms5v7ZAfcOoAG31I1l_o8A0Wq8pFIOhiWLs', 'token_type': 'bearer', 'expires_in': 1799}}
     Elapsed: 0.003828s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: GetUsersAPI 获取用户列表
🚀 <Request>
     URL: http://127.0.0.1:9999/api/users
     Method: GET
     Request Params: {'offset': 0, 'limit': 2}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': 'success', 'data': [{'id': 1, 'username': '张三', 'email': 'zhangsan@example.com', 'created_at': '2025-09-16T14:01:34.854329', 'is_active': True}, {'id': 2, 'username': '李四', 'email': 'lisi@example.com', 'created_at': '2025-09-16T14:01:34.854329', 'is_active': True}], 'total': 3}
     Elapsed: 0.004999s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: GetUserAPI 获取单个用户信息
🚀 <Request>
     URL: http://127.0.0.1:9999/api/users/1
     Method: GET
✅ <Response>
     Response Body: {'ret_code': 0, 'message': 'success', 'data': {'id': 1, 'username': '张三', 'email': 'zhangsan@example.com', 'created_at': '2025-09-16T14:01:34.854329', 'is_active': True}}
     Elapsed: 0.002384s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: CreateUserAPI 创建新用户
🚀 <Request>
     URL: http://127.0.0.1:9999/api/users
     Method: POST
     Request Json: {'id': 4, 'username': '赵六', 'email': 'zhaoliu@example.com', 'created_at': '2025-09-16T14:03:52.699184', 'is_active': True}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '用户创建成功', 'data': {'id': 4, 'username': '赵六', 'email': 'zhaoliu@example.com', 'created_at': '2025-09-16T14:03:52.699184', 'is_active': True}}
     Elapsed: 0.003159s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: GetProductsAPI 获取产品列表
🚀 <Request>
     URL: http://127.0.0.1:9999/api/products
     Method: GET
     Request Params: {'offset': 0, 'limit': 10, 'category': '电子产品'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': 'success', 'data': [{'id': 1, 'name': '笔记本电脑', 'price': 5999.0, 'description': '高性能笔记本', 'stock': 100, 'category': '电子产品'}, {'id': 2, 'name': '智能手机', 'price': 3999.0, 'description': '最新款智能手机', 'stock': 200, 'category': '电子产品'}], 'total': 2}
     Elapsed: 0.0028s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: GetProductAPI 获取单个产品信息
🚀 <Request>
     URL: http://127.0.0.1:9999/api/products/1
     Method: GET
✅ <Response>
     Response Body: {'ret_code': 0, 'message': 'success', 'data': {'id': 1, 'name': '笔记本电脑', 'price': 5999.0, 'description': '高性能笔记本', 'stock': 100, 'category': '电子产品'}}
     Elapsed: 0.002382s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: CreateOrderAPI 创建新订单
🚀 <Request>
     URL: http://127.0.0.1:9999/api/orders
     Method: POST
     Request Json: {'id': 3, 'user_id': 3, 'products': [{'product_id': 3, 'quantity': 2}], 'total_price': 1998.0, 'status': '待付款', 'created_at': '2025-09-16T14:03:52.756804'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '订单创建成功', 'data': {'id': 3, 'user_id': 3, 'products': [{'product_id': 3, 'quantity': 2}], 'total_price': 1998.0, 'status': '待付款', 'created_at': '2025-09-16T14:03:52.756804'}}
     Elapsed: 0.002841s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: UpdateOrderStatusAPI 更新订单状态
🚀 <Request>
     URL: http://127.0.0.1:9999/api/orders/1/status
     Method: PUT
     Request Json: {'status': '已发货'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '订单状态更新成功'}
     Elapsed: 0.003006s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: GetUserDetailAPI 获取用户详细信息
🚀 <Request>
     URL: http://127.0.0.1:9999/api/user_details/1
     Method: GET
✅ <Response>
     Response Body: {'ret_code': 0, 'message': 'success', 'data': {'user_id': 1, 'address': {'street': '人民路123号', 'city': '上海', 'province': '上海', 'postal_code': '200001', 'country': '中国'}, 'phone': '13800138000', 'birth_date': '1990-01-01T00:00:00', 'tags': ['VIP', '常客'], 'preferences': {'theme': 'dark', 'newsletter': True}}}
     Elapsed: 0.002744s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: GetCommentsAPI 获取评论列表
🚀 <Request>
     URL: http://127.0.0.1:9999/api/comments
     Method: GET
     Request Params: {'product_id': 1, 'min_rating': 4, 'offset': 0, 'limit': 10}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': 'success', 'data': [{'id': 1, 'product_id': 1, 'user_id': 1, 'content': '非常好用的笔记本电脑', 'rating': 5, 'created_at': '2025-09-16T14:01:34.854329'}, {'id': 2, 'product_id': 1, 'user_id': 2, 'content': '性价比很高', 'rating': 4, 'created_at': '2025-09-16T14:01:34.854329'}], 'total': 2}
     Elapsed: 0.002231s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: GetSystemStatusAPI 获取系统状态
🚀 <Request>
     URL: http://127.0.0.1:9999/api/system/status
     Method: GET
✅ <Response>
     Response Body: {'ret_code': 0, 'message': 'success', 'data': {'status': 'running', 'version': '1.0.0', 'uptime': '3天12小时', 'cpu_usage': 35.2, 'memory_usage': 42.8, 'user_count': 4, 'product_count': 3, 'order_count': 3}}
     Elapsed: 0.002125s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: AddProductCommentAPI 添加产品评论
🚀 <Request>
     URL: http://127.0.0.1:9999/api/products/1/comments
     Method: POST
     Request Json: {'id': 5, 'product_id': 1, 'user_id': 2, 'content': '非常满意的购物体验', 'rating': 5, 'created_at': '2025-09-16T14:03:52.856708'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '评论添加成功', 'data': {'id': 5, 'product_id': 1, 'user_id': 2, 'content': '非常满意的购物体验', 'rating': 5, 'created_at': '2025-09-16T14:03:52.856708'}}
     Elapsed: 0.002843s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: AddProductCommentAPI 添加产品评论
🚀 <Request>
     URL: http://127.0.0.1:9999/api/products/1/comments
     Method: POST
     Request Json: {'id': 6, 'product_id': 1, 'user_id': 3, 'content': '测试删除评论', 'rating': 4, 'created_at': '2025-09-16T14:03:52.878679'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '评论添加成功', 'data': {'id': 6, 'product_id': 1, 'user_id': 3, 'content': '测试删除评论', 'rating': 4, 'created_at': '2025-09-16T14:03:52.878679'}}
     Elapsed: 0.027368s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: DeleteCommentAPI 删除评论
🚀 <Request>
     URL: http://127.0.0.1:9999/api/comments/6
     Method: DELETE
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '评论删除成功'}
     Elapsed: 0.002533s
====================================================================================================
2025-09-16 14:03:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: UploadAvatarAPI 上传用户头像
🚀 <Request>
     URL: http://127.0.0.1:9999/api/users/1/avatar
     Method: PATCH
     Request Json: {'file_name': 'avatar.png', 'file_size': 2048, 'file_type': 'image/png'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '头像上传成功', 'data': {'file_id': 'avatar_1_20250916140352', 'file_name': 'avatar.png', 'file_size': 2048, 'file_type': 'image/png', 'upload_time': '2025-09-16T14:03:52.933472', 'download_url': 'https://example.com/files/avatar_1_20250916140352'}}
     Elapsed: 0.003849s
====================================================================================================
2025-09-18 08:51:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: 
====================================================================================================
2025-09-18 08:51:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: 
====================================================================================================
2025-09-18 08:52:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MTg3MzY0fQ.TwWiw0lMSCOczlBk6YJIVtKRumVDusm_xgqdhgwQOMg', 'token_type': 'bearer', 'expires_in': 1799}}
     Elapsed: 0.005555s
====================================================================================================
2025-09-18 08:52:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '123456'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '123456'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004314s
====================================================================================================
2025-09-18 08:52:44 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  }
}
2025-09-18 08:52:44 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 08:52:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002011s
====================================================================================================
2025-09-18 08:52:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker2', 'password': '123456'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00189s
====================================================================================================
2025-09-18 08:52:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '234567'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00189s
====================================================================================================
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MTg3NjMzfQ.-O5QhME78Fr6JNAYRlrLGzs4nSxfCOacgoeTKHBsbCk', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.003377s
====================================================================================================
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  }
}
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '123456'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '123456'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002512s
====================================================================================================
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  }
}
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002404s
====================================================================================================
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker2', 'password': '123456'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001981s
====================================================================================================
2025-09-18 08:57:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '234567'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001804s
====================================================================================================
2025-09-18 09:09:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MTg4Mzg4fQ.yVJsaeIfTdGxVXkaMJ-J_HGBTby7-Tvp7iiNILAxU-s', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.00315s
====================================================================================================
2025-09-18 09:09:48 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  }
}
2025-09-18 09:09:48 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 09:09:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '123456'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '123456'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00322s
====================================================================================================
2025-09-18 09:09:49 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-18 09:09:49 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 09:09:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002463s
====================================================================================================
2025-09-18 09:09:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker2', 'password': '123456'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002346s
====================================================================================================
2025-09-18 09:09:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '234567'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004794s
====================================================================================================
2025-09-18 23:53:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MjQxMzgyfQ.yekmLWIEU_sURfqP7d2jYvqccEFTYt71zJcOyIv8u3g', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.003688s
====================================================================================================
2025-09-18 23:53:02 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  },
  "dictionary_item_removed": [
    "root['properties']['detail']"
  ]
}
2025-09-18 23:53:02 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 23:53:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'valid_test_user', 'password': 'valid_test_password'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001989s
====================================================================================================
2025-09-18 23:53:04 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-18 23:53:04 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 23:54:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MjQxNDk5fQ.Y8ruAlFHda5Y_Ovb9NKzajt5MV2Kdk8cRd_SZsbcXvY', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.002541s
====================================================================================================
2025-09-18 23:54:59 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  },
  "dictionary_item_removed": [
    "root['properties']['detail']"
  ]
}
2025-09-18 23:54:59 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 23:55:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.020667s
====================================================================================================
2025-09-18 23:55:00 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-18 23:55:00 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-18 23:55:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -31079}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -31079, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -31079}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.007621s
====================================================================================================
2025-09-18 23:55:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 121, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 121, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004033s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 121, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 121, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00402s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 121, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 121, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004117s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 121, 'password': 121}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 121, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 121, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003738s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 121, 'password': 1}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 121, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 1, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003962s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 1, 'password': 1}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 1, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 1, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003651s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -59}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -59, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003676s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004027s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['É', 'Î\x88=U', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['É', 'Î\x88=U', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004051s
====================================================================================================
2025-09-18 23:55:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['É', 'Î\x88=U', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['É', 'Î\x88=U', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003721s
====================================================================================================
2025-09-18 23:55:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['É', 'Î\x88=U', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['É', 'Î\x88=U', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004057s
====================================================================================================
2025-09-18 23:55:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['', 'Î\x88=U', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', 'Î\x88=U', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.019112s
====================================================================================================
2025-09-18 23:55:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['', 'Î\x88=U', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', 'Î\x88=U', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004217s
====================================================================================================
2025-09-18 23:55:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', 'Î\x88=U', ''], 'password': ['', 'Î\x88=U', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', 'Î\x88=U', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', 'Î\x88=U', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003883s
====================================================================================================
2025-09-18 23:55:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U000a0b9dÐ\x1e!\x90\x8b½wSË÷åC\x15\U000693fc饢üYÞ¨s#\x96\U00019a21\x89ÓF\x9f}\U000b93f6&\'ý\U0010521a\U000d76b0B\U000ad9c0\U000fbbc0T¢à?2ÛÝ\U00075f62\x91c_Ï\U000c2d3eô\U0007e265\x86¥\U000cc836åô®¨\x81\U000b4293²\x06]Î\x0b\U000cbd43\x8e\x11Ï\U000ee46c\x1dÊ𝑜E|\x8bm\U001084d1t\U00082227\U0004643b\U00082bf8zó(_\x9e}닷\U000ba9b2\U000fe71eÄ§\U0008443c\x15\x14zæðº\U0003c566}â}ÅY\U000e3ca8\x13\x16\x145í\x94%\U000bb72f\U000fefc3\U000c7eed>Î\U0008463dÃ/5³É[]\U000f5b0c\\¦\U0005c699\x01\U0003cf63:9 𠷢OM\x9cFKB®s%s7®Ë\U000c2d8aZÜª\x1b\x0b\U000c40f7Ó\U000ed755\x12\x1aZ\U000d6c20WOS\x0cÚ\x97\x8e𐭾M\nY\U00016cc8¤°\x7f\x90\U0001c28b\x03ó\x8b\x81¾KS<\U0008c238\x02\x88}\U000cd9fa\U000f420bà²)ò\U00101bf4\x1d\x9b.·\x9f\x9d\t蜻Úº\xady\U000ce1cb\U00086997²´\xa0\x86Ü\x80F2\ryîÃ¶ýrm\x7f]\U0004eb22£\xa0ó\U000c2a3bàº\U00079b7eÖtµG1ª³¹Ýdn\U000a61c7®^\U00093298l"G\U000d8b91`𥮤@\x9b\U00104087ñ\U000a02bf𭥃\U00036de0¨\U00085e80\U000993d9\x80\U000aecadg\x9d6ý\x1c\U00037d81g\x1e\U000de992úÉy\x0fØ\x02K:ð×\x06\xa0o\'T/}¼¬ü(,°xrW´\U00019a10\x9a\x1b-Ú\x90\x91𤓗\U000b257f𠓢@U\x9e P\U00097e3b\U000c941aLLÅ?"\x11\U0007daff\U0004a598F\U00103b66¡!Ò\xad𢯾ö¤n\x0e|ÇÏõG8²ð\U000fcf820\U0005f469Êò\U0006a206\U0008e687å\x00\U000c56b7éÖ\U000b728c\U000c7015²®múÒ·ºfø\U000b4318\x83ÀÚ[º\x01\x7fõ\x8c\U000aae7d\x0cäãÚñ;¤\U000f5615yæ\x8f\x1a\x12\x81\U0009003e?þ~U¯\x86\U0007b06d\x00\nßÒG-\U00069843\x00\U0008f3dc\x80\U000e358f \x9f\U0008e665Á¢媫:\U00082677C\U000f5c31}ᩕE¡·Àl\U000dade6G?ó\U000ebe8cHmZx®\x91\U000cac51\U00103022\x11"\x9e\x107b\x04\U000a3b7b\x99\U000ca66f¯z\x88¨ùl\U000c6ef5×\x07\U0004e6a5\U000e5ead|EIHÃ>³\U00077968·\x7f(\xad\x8cw\x95jýU\U0005069fîå\x05\xa0\x8e\\¼·\x9a´f\U0005777b\x17øH©#Ñ\U0009edc2ô셤%\x83ó\x05óïtj"\U000e2196V\xa0V\U0010305a\x7f¹\x15V<Î\U00081095\U000326acÕ\U000a9e6c\x81\x02í\x9cÙ\U000a4755V»\x18\x87\U000f5daaȤ\U000fad4bn\x0c\U00072364´\U00047d46\U0007b4c6½£ú¤¼ð\x18\\\x90Öô!\U00095aacdU\\à\U000e75b4»¢\x9e¯\U000d957b𡃟\\«Å\x17Ûë\x8c\U0007b847ë¿Ç¥ÞK\x15\U0001aef7R#\x9c\U0005c7e3Ù\x95\xa0\U000f3e4fø\x89\U00087c25åØ\U000b9fd82õF\x9fØÎ\U000a71ef\x1d\U000f7cf9Û\U0010b998æ\U000cf78dB\xad5\n\U00100dd7\x12eû\x83벓\U000896dd\x8c\x9e\U000b8925 \U00106e20\U000af391Ú\U00042794¸5ÏK¹-\x04îW_w\x81è\U0007ed18\U000982a8\U0003c668fó\U00106a05~¤¸s\x18\U000b6c57_ÕD\x18👵íp\U00013c19ñ\U00068c6aê\U000994fc\x92j\x11\x98юôq𱆫\x1aÃ~ÍgÐe\U000fb9e1Ç\x13ñí\x13𤇴2Ñ𫚨\U000fc48cü³Dp\U0001c277\x00E&\U00067c85ã?\x13\x97á$\x19¢\x11§\x9e\x01\x9fÉ°c\U0004958a\x16öqv\x1f\U000388ee+X¿\U00109b4eìi!b\x01Ö\x05e\x060\U000eb779\U000e5e10&¾\x1eÂ+Ç\x1b¨Ó\x91ÿ\U000a898e-Â¾\x11És\x11\U000a2357]ä\x01\U00047411j¨17\x17\U000a4f8e믽ç\U0005cded\x11\x07è\U000572a2\U00093890.\U0010b08d\U0005150c,bµ1îxÕ\U00038f05⟢\x0f¦I(\U0006edc5í\x06\U000be24d\U000da2a22HÈ\U0001cb31\x05NÞ\U0009cb33ûù^\U0003afe5\U0005ef14c\nT\x88dZ\U000bb6bdy8\U000baf7c\x9c\x07É·\x06\U000fd631\x7fQ~tY5\x7fw\x9fy\U000d553b\U00010e57\U000d212ae8\x13ák%k¥ý»aÞl\x88äì\x9bÙ\x8cÔW\U00087d08ý\U000981a4Öée¥µ\U000b8d9bâ©öC\x8f\U00087f22\x9f\x1dëþ\x85ð¥\U000b71e3\x1fñÅ]\x1d\U000d044e\U000e8ebc4¹Ó\U00092e64ÿÓH\U0005a970\x94H\U000fe256𘆖=¸ÌFÑ\U0009a001ª\U0005349f\x89Í\U000f4961~\U0004e468\U0008d507ym\x85ê\x87þ\\N8±Ý¼½\U000a3aef\x0b\U000d50e0¤𦰆¸\'Üqß\'¸¿\U0001e7c7v\'\x9d\U000d4539£\xa0Ì\x1e\x06\U000bc7f1ð.J\x84\x88\U000890bf¸ð\x13\U000d3623\'\U000c0d28\x015vvÞ¹*\\\x87\x83c\x1fð\x1d¿l\U00043a07\U000c5dcd¯\x1e\x1d\x07\x95\U000f7e4c\x18\x14¸ðû\x7f\tÏ\U00039feeõ¸Ã𘍫%\U000f57daúh\x8d5郬\U0009aeefO!³\x99\U0004c5044\U000d0cd5\xa0\x0eä5\U00075807«ùõö"\x1b3\x9a\x7f𑐓\x80vþÓm𣿃\x03òÜy\U0010c548\x12ôE\U00043f88\x9b\U000ed4a7ñÓÔ\U0005aa752\U000fa98f9\U0007c2f5\U000f383aK\U0006f9a0Â\x08lR𤙸}\x11ß\U000fb48aµ´è\U000c774dÅ\x9c1\U0009a5c4R\x90E\x90\x99dñ¥Ë®c\x92\x90Xp*G\U000aaa89\U000de6ad\x87x\x9fã\U000d5859\U0004ba79á\U000d5d15\U0005bdc3Ó¦*²\x8ci\x10\U000b558aÒ&\x99\x16RN\U00107c42Ý', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003866s
====================================================================================================
2025-09-18 23:55:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003586s
====================================================================================================
2025-09-18 23:55:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003824s
====================================================================================================
2025-09-18 23:55:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004274s
====================================================================================================
2025-09-18 23:55:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': ['\x17\U0008834d']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x17\U0008834d'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003859s
====================================================================================================
2025-09-18 23:55:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 32142}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 32142, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 32142}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003858s
====================================================================================================
2025-09-18 23:55:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ÞL\U00056b0a\x03\t\x8a+\U00042d24h®\U000ef6d4¡\x9f\x11Nø\U000798d0\U0005e83c\U0005e8b5à¾d\U0006f8a0r\U000959ccàÀùë', '\x0fÀ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ÞL\U00056b0a\x03\t\x8a+\U00042d24h®\U000ef6d4¡\x9f\x11Nø\U000798d0\U0005e83c\U0005e8b5à¾d\U0006f8a0r\U000959ccàÀùë', '\x0fÀ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['ÞL\U00056b0a\x03\t\x8a+\U00042d24h®\U000ef6d4¡\x9f\x11Nø\U000798d0\U0005e83c\U0005e8b5à¾d\U0006f8a0r\U000959ccàÀùë', '\x0fÀ']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003899s
====================================================================================================
2025-09-18 23:55:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004438s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003757s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['r\U0010732a\U000af427N¿\x91\xadÌ\x81\U000d5a68', 'wb']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['r\U0010732a\U000af427N¿\x91\xadÌ\x81\U000d5a68', 'wb']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['r\U0010732a\U000af427N¿\x91\xadÌ\x81\U000d5a68', 'wb'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003605s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': -1346}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -1346, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003567s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003594s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003614s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003635s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['N\x17\U0007a8ea41Q<\t', '', '£1', 'q\U0003635a\x1c\x90', ''], 'password': ['\x02¥(\U000fcdc5ð²ç·']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['N\x17\U0007a8ea41Q<\t', '', '£1', 'q\U0003635a\x1c\x90', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x02¥(\U000fcdc5ð²ç·'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003586s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00396s
====================================================================================================
2025-09-18 23:55:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00359s
====================================================================================================
2025-09-18 23:55:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -53, 'password': ['\x1f^î\x1e\nR\U0005877a$Z:\x80\x1c', 'T', '', '', 'å', '', '\x8e\x19', '\U000fcd00Ôµ\r\U0007b8e3瞦\U0007f661', '½\U000a46a2ò\xad6', '*ªe\x84\x07§\U000f8454ñ폺', '', '!E\x93¦']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -53, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x1f^î\x1e\nR\U0005877a$Z:\x80\x1c', 'T', '', '', 'å', '', '\x8e\x19', '\U000fcd00Ôµ\r\U0007b8e3瞦\U0007f661', '½\U000a46a2ò\xad6', '*ªe\x84\x07§\U000f8454ñ폺', '', '!E\x93¦'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00384s
====================================================================================================
2025-09-18 23:55:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': '²]\U000b7289<𫏌òP4Ù\x01SEH3é\x16T\U000316a6»>\x85¤𠪝ý\U00108e20\U000a0e9fQ\uf35a\x80ãx\U000558ee(\x03Gí/\x91f\x12é¡¢ä\x9e\x0e\U00073186º¬\x08\x9c\x07«\x00\U000ad01e8PeGÉ±\x11¶\U00069b4frc\x91\U000ba34f§©\nÚíB\x13/\x13^ðÎkÏøÈ(×¼Ï⪴äî\x12ግ\x899¥sßÄ3ìq\x0fH´\U000b836d\U000e06baÿ¥i\U001074a8\x07\x1eý\U000c12b2\U00036fa9\U00069363¬»\U0010fc98~\x80(\U0008091b\x1fú\U000486f3U\x82,뉁I\U00056703Á¶\U0005a098IÛ]\U000728fbçY.𣈆íç\U000d6f78ëê\U0009ea17\x84-\U000e0c7a®±ÒÜ\x16·ÇéÒî\U001022bed\x02\x01fI&¶\x91\x0bÝ\U00079b85i§\U0001a0daª4\x93\x10ëï\U000ed239©÷ÍÓ𩑿K\x898Þn+µÉ\x88D.þ\U0003a9f7é\U0008966fá\U000beaa2î,\x7fm\U0010e43fÑãÑóï¶\x94Þ\U000da6cfb\x94Y\x14\U000798fa\x87\x0bm\U00049109N\U0003ebe5Nꧭ\x96Ó¥\U00046de3À\U000d97e5Xv\nt-\U000e6572D\x17Ã\x0b\x95·\'Á\x85Áoþ*"\U0005f99f\U00096b9dPeL\U0004d472\x18\U000ac0c4\'z\U0007195eL\'¦¸\U000ab433\x9c\U000cb2c8\x13¢.dá匿\x973IM·WWOi\x8ds¸\U0007baec\x80Ø¥\x02\U000f12bf\x96Nô\x07\x96\U0008b79b*\U00031db2f\U0007018f\x98H\U00089a6f>Ñ\U000ee5e6\x80\x13:\'Öà\x97\U000a4673þ@<d\x9f\x98%±Á\x03r\U0010c52f3¡<\U0005e9be\x84\'\U000696ccó拇n3\U000ae8ef|¢1\x92\U000fc572𪣷\U000f285f{V#\x1eÞÎ\U00095113\U00069bb1𖹭ä\U000df483\U000669b4y0¸Q©\U000a0bc5è𧑪\x06»èæ\x11Ç\U0008f2c86\x92=\U001053d6\x96(p\U000a5066\x7f¥ê+r2¿𬟺0s|\U000788ea\x85\U000eaf25\U0006e7ca\x85ß\x1d\U0005d875ø\x93\x82Ù𮆋³\U000c90f9\x9c\x94U%×\x0b\x16q\U000372fdïe\U00055e16Óõ¿d\x14Þ\x0f7â\\¦§\U000569b4\r\U0003c61bêY\U00109761ëµjÉþÓ\U0005a8a3Õ°\x93\x91\U0009c38b\U00086be2\x8bã+Ü±+q\x96"\x82𠵙òò\U00045ff4¶\x99k\x04\x8e0 ÙÄ𝙆V\x176\U0004ba6d\x81\U000e7922èÜ\U00041449ª _\x99T±𤈃p𭰪wÙ\x13\x87\n\x0f\x18:\x83§\r⚇\U000a84d1x\x0féi\x82s|\x05ÙTFG\x16\x98aæý\U000b6b074z·Q\x1f\U00073170l\U000693a8^\U00109e1d\U000923e4KÝúv^5\x13Z¿êLÛ造\U00059259@ä\x03F\x83öS¥Ùç𧩏é\x1eß\\vÞ\U0005a6e2+\U00085d8e\U000809c7×ý{Ë\x9a\U00056eafï¶¡\x1c-A\U000cec95𐂆[½\U000d3050j¾*ªb\U0003b158\x84r\U000fb52aTEUp`}²\U000cb7b0bìÓ\x12\U000e894dÁ\U0004af30sïv\U0008c9dd£ñÅ\x07O\U00084dfdÔ\U0009aa0d?\x89\x80\x17\U00050a34䝼\x0f%\x1b\U000954ea\x9b\x009\x9d\x7fÝ\x9e\U000b8544w\U0005f4d9½\U00036c34f°ë}\U0004ede62!\U0005fb80+\t×\x14U\x9e;㉯\U00071a9e\x16N𧻝\U000c0617Ã×V\U000cd3ccqg\\p\x8fóA\x9d,6F\x04\uefe8\x95\r\U00060096\U000a1dffð¾\x87Ç&\xa0쥻ÂË\x17*:Ë"\U00014b6b$\x1dâ`Ãm\x14\x1aà\x17\x14\U000e0d6b&\x81Ç\x14Â\U000cf99ccæ\U0007f5bcD\U0003ee46><"©𢸖#ª\ràÏ>¨\U000a5954\x146$ñÉ\x9e8\U000f491c©\x8fÚÉ?\x8b\x1c7\U00091180Ê\U00010265H\x12/ïZû\U00107242r\x97O£|\U0008a6beb\ue14d\U000a29ee2|\'\x8a\x11\U0005c802\U00063693\x9d:À\U000bb34c\U0003d08c\U0005e488rÉ\x10V\x92H3Ù\U000870b0\x17\ue4fc\x9f¨°~µ%\U0001bd84\x1fù\x02\x02\x1f\U000b3ebbt\x0e\U000462ec\x9a{5\U000ec692¸ꀧ¬ꌓ?ä\x9b\U00045060§Ì\x17ªÜhS\U000e51aa\U000bf738,Ü\x0e懒|\U0004b5f946\U000fc8a1\xa0\x9c/É\U00088c75\nØuäl#x3þ¦I\x0fï\U0003fcdeá\U000d4fd1q¹\x87\x91𖣉\x03\x991;ÏS\x0c\x13Ý\U000a7c2e\uf44a\r\x12b\U0009b132{é\x90\x85iº\xad\x8b\U000f776aðq\x07\U000e9d25×:à\x93Ä8À\x11ªÅ*m/\x8b˦𑠋¢)𰯖î\x15Þ\U000bc89e@U\U0009efaf\U0009d292Ò\U000cd714ãÅ\x7få\x8f\x15ꀩóÀ\U00099dc8+"^y:Ñ+@\U000cec78;w\x9d\U0005c109¥\U0004d4be\x96\x86\x14W\U0006129b\x94^kE𬔺æ\U000a6bf5\x97á\xad\U0005da48gÍ\U0005e8d3\U0005d27cï¾o\x96½\x1aÙgø\x1eà\U0004f632º\U00066a0fúd\x02Ú¡ÛËõ,È\U000b0984\x83ð%%\x96¿\x82¡Ñ\x86\x93\U0004b95a\U00074b3dÜ½\U0007aa79Ñ/\x83\x85t\U000fe961Æ¨+0\U0009ee91P\U000f316fc<êú®*9Ú§\U0007a19aÕ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003925s
====================================================================================================
2025-09-18 23:55:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004205s
====================================================================================================
2025-09-18 23:55:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003986s
====================================================================================================
2025-09-18 23:55:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003563s
====================================================================================================
2025-09-18 23:55:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -15469}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -15469, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004182s
====================================================================================================
2025-09-18 23:55:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003896s
====================================================================================================
2025-09-18 23:55:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U0010165f|º\x8c?3k\U000b4422\x98W\x91\U000f3952$Wu\U0003a36eZéZ\x157§;\x1f\U0007249c\x9dHB\x1e\x1bm½\x06s\x83Ad\x18ý\U000558e41ÇqwNâw\x9e¤|\U000a3657Ì2\x05{ß\U0008f1ea\U0004b64bÐtL\U000c6463é\x10B¿/0\U000ef693\x86\U000824a7&_ü\r\x07eCtà\x93Ìâ\x10T\x9e\U000eaef54=\x05\U0007a5deÐHE\n\U0009c2bd\x93)\U000c8a17\x14\x86\U0001abd3\U0006ef29á\U000488638÷ÓoW𫣹\U000368d8ZKñ🚭U£DÈÃfäï\U000fd399\U00094b81\x02\U000d5678\x08\U0001951f\x0fË\r\x19\U00109fd7b\x99}ÆÑ.O.\U00040d0f\U000a4fdd.+NH\x82\U000c987c~à\U00052dc7Þ\x1a©åÐ}\n£à#ò¤\U000e20a8\x0e¥\U0004a7d6\x97¹Gç"l\x0f`\U00083ce0N/Ø\x00\U000dbfafu𥐁q>\U000f11b5¡\x90¤\x11\x18\x96\x7fByJ\U000d429f\x01mÅ\U000f374ev\U000a55e4\U00086b40#S®çÂ#Q𐰫\U000e95f7𧪘ØÍ+\U000ce20d\x88\U0007ce06éc\U000691ceKE0\x95(\x8fXé,¾\U0007909e*\x17\x96f½𪷲¯\U000ad1ffLe\x1dHëËõæ¿à\x89û\x1bÑ\x89\U000d9b11B1\xa0\x16\U00076bd6\U000af71dTSǾ\U0005243d\x8fÛWîv}ï;k\U000a6b31\U000e3149\U000c35dc\n\x8e\U0007e8655Ê}\x04¡¶ÿ0uQM¡\x99à¸\U0009a60d,\x17\U000e04c4Yâ\U000ca6f2´N\U000687cf\x97¢\x7f\x92o\'\x81ý[z\x08å\U00044709v;Ñ¢\U000e4dbbÌ;ÆqSeÇö\x85𢤽\U000d826e\U0006cdb0î\U00036e49𬬤#\x07v4\x19ÅHz\U000bd85b\U000de7a2\U000fc4cf\x8fÆ\x1a§d!pô,~Ö3\U000921bfN*\x97\x00\U000c16c0ôæÓ1üDRz\r\x00òN8¨\n\U00068c0f\U000a98b5|\x95º\x1fø¾ëù\U00050198\U0005e1c6¥\U00014e87Ýsç\U0004c30a\U000ec51b¸\x84"\U000158b7ked\x14\U000698d5ì\U0005c841罯j\x11i\x08\x1az/\x1d\U00052074\U00105687\x9f!\U000f59bcc\U00032caf\x1a\x1bTêû`\x8f]ö¼\x07\U0003d534JÍq\U0005064f´Nèú]¢°\U000e4425Øò\U0003b7ea\x90!\x80\U00050e22õ«\x00"OÄ¼𐚀ÄTñd\U000855f7óó0鈴=3eÌ.®n\U00010e3c&\x08/\U000340e4Ý\x84\x91ÕÇ.V/\U000ce50bwÃÈ\x8a\x14µ\\´ýs\xa0Ì\x90\U0008ccbf£\x06J\x01v3³sn\U0010ae9b\x87²3]Ln\U000cde52?j\x08ÜÊ\x9etv\x87ì\x0c\x03\x98 /\U001063d8ü<\U000b2bf5\x8eP\x10\U00042487\U0009f2c6&\x87\x04Ë\x84¸𬰋𤼶f\U000c95a8\\\x89\U000468c6\x8bê¢JÂ\U000e1d707F\U00080ed6ö\U000d35c5j\x06\n\U00096183𐼕"[\x08e\U0009789aósÇ|\x1b\U000b1248+<°¹û<\x83\U000ff3fe\x95ªi\x94\U000d410ad}È𬇭É}@\U000ed34b¦9¿\U000b10b5-î\U0009d88bG\U000abfc5\x02\x03ó}ä\x9cM歯\x98\U000c373c¹\x16±4ç\U00108be5q\U000b2c2f©\U000e7f33:\U0005434a¶\U000a7589äT\U000b8d2bp`\U0003426b\x0fäà\U000486ed\x81:Öû\x85\U000807cf\'Ú\x8dO\x0fYQ\x11f\U000762df\U000f9774N}åZ\U0001c652\U0006b917\U000d1ff8\x0c.n\x85óø\U000367d7\x8e\U000e12baXË`Ì\x88\U000140f1Ä\x9e,fMÜeëG\U0004ae1b}ÏF\U000c63be\U000b1a09\U000ffe93Ãº\U0007c8dd¤t_k\x1f\x13\U00060953ì\x97±\x87¹\x1d`\U00101017èÚü6\x04JJ\x12\x8b\U0010de2dòíõ\U0010e3bd\\i\U00039e93æ\x11·Û\x802å\U000a4ee8\U000c270f®«ó\x94Üq+û\U000f00e9³ìñáM\U000b789f°\U000e0f6câ\x1fý\x9d\U000e3b6e"\x18\x1d\x95W\U00061c22\x97Ç¾ìÀÑ¶\x89\U000b659dõÊ,³㖣7C|µ\x93M;³\x1b\x8c\x04{e\x17ÏÊù~#á+\U000a15a4×\U000b1c5c°\x18𫐞[=Û헻Ó\U000dcb74\x0c\U000941cfý\x1c~±\x87$\U001030b4\U000f589d𨛾Ö\x86¾\x83\U00101b90Á¸9c\x8f«\U00109818\x95p^ûÜ\U0005a348®Ô\x9b\U0005bafaR\x1e\U00086113ÅñÝ\U000e93e0Ý\x0cÅ:\n\U0001cd2eXÞ\x1f\U0007e3baÓ±Ê\U00055510\U0005880d\x01&\x06\x86ºéÿ\x04\x88\x7f𩵤\U000522bdÍ$~ÿ\x1fú\U000a4989\x90\U00044569J^\U000c9c5aý\U000c766f\U0006615aÛÃ\x88R{åW\U0005f2e1z\x81\x90CT\x91½\x15\U000336fcT¹\U000cbb07/\x9a\x9e§5\x1ey²EO-Äý\U00104136é\x8cw÷TÒ袋𩅦Ý\x0b\x81íÒÀ\U000b7985/°H\x14\U0005eec4%\U000bcb8a\x10JD\x90𮣫Æ\U000ea7d5øU\x89D\U000ec032🖥Ð\x1dhbÓ\x10\x1e\x98à°D𠏣à\U000a662a\x05Î\x7fâ\x16ìØ𬙗\U000c0746\x1eq·Ûv\U000ecefa\x12\U00051165\U000d093a\U000ef3cf\x90\x19Æ:\U000d4de3uD\x9f{ÀB¡\U000661c1£|\x94\x03𢫢]j\x08++¾\U000d0b25\U0005863evå\U000926e7>}h\'\x0f3\x06[\x88>\x1f\U0003142e\x1fÍ\n|úê¡𦃴蜀ARFq\U0005eb78\x18\U00059cb2¦ò\x84\x8d\x94\x97t\U000b8648\x1bÊ\x00$Þ»À\x93f\x07\x1e\x12Í_s\x9b\U000a68c5\U000e1653\x08\U000aff0f\r𢊢pÇ²\x8b|xs\t´\x83\x88\U000729b6ú\x97ß:<z\x89îÂõMsÛ_x\U000f4098\xadh\x98Ò`ËI)\U000ce32a¯\x15C8\U0007a540R¤Ü^|æ¨\x0bæ\x1a\U000cf989lK0)Vµ\U0010fb8c\x87X𤨄\U000d4aa8G\x91𭖊\U0001959aÞÚ\n\U0010e47fSå\U000ce1a7ÿ\x82\x7f\x9f¸ó\U000807c7\U000d8c26ñD\x0e\U000fce6b\U000a1c39g𰱿ñð[\x1a*clü\x90\x01)𰥿@kß¸\U000d471e\x1f\'<Hâ\x10ti©ìÔî\U00016dd7\x8dU\U00050725A\x84v\U000c1e90Õ\U000efc56\U000c234dF\x85\r\U0005981dsâ¢\x11î«C\U0009d420G\x91\x06\U000a0c4b\x1bC\U000a3778öE\U000aee65à\U000b6fc5\x8eØ(<j\x1aÒ3¡±𘆸\x91«h\x18\U000cccb5\U0009c75f\U000bce2d\x05f:ëÑ?Ä\U00047c94PaM·\U000a935fã\x03UUóÚ\x8e\x17ÒZL-X®ì\x1e\x99t\U00060b61\'\x92\U000b9e70äYÓ°æìí\t\x8035\x83nõ>\x9b\x96\U000f7813\U000cc72f÷?N`¼\U000416ccÉëd£)\U0001617d\x8f<Ìꠖ\U000b2aaf£ëðNO\U0007b2d5×\U000538f2\x04=\x96,tM)ÝQ·Pç\U00104eb3\U0003b87d)\x9c\x91\U000494b1\U0008e3a4Úc{J÷\U00063f93Q=V\U000991724\U000cd619¦\x1c/Û%n÷ü\\\x07\x87Wê|¡\xad\x9d𗡭\x91\x18\U000d9014\U000cde09~Y\x03\x0fâ\U000a6aeeK\U000eec17êõÏPò]iCÿª\x06\U000dfc36];\x89QmH\x13\nô\U00094050\U000590d5\U000bd6c1\U000df5964\U000654fb\t¾\U0001c6efîcI\U000cb995Kü\\ã\U000dcfbaÌ^\x89x@\x91ò\x96·Y\U000cfa54ë\x83YÙü²\x94𮥟\U0001184f\U0001fe103\x1bâM¸\U000827ef\x93ñ\x92\U000f5dbd<¿½a\U00098028ñ+𐋆æ\x0f\x17'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004084s
====================================================================================================
2025-09-18 23:55:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': -89}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -89, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004012s
====================================================================================================
2025-09-18 23:55:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004222s
====================================================================================================
2025-09-18 23:55:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 'é\U0007e614ó\x93\\\U00072a43£ßªß\U0008543e\x8b\x8ea±콆\U000fb008\U0001364fî\U0001b7ba𬭼\tÃ~\x0cí\U0007294f#M¡\U00019a43\U000898e2o(\U0009cde9×RÜÀDÎ4ºR2𓆵g\x1dv\\è\x97d\x86\x82ÿ\x03@H\x02<\U00107727\x81\U000a8f07@\x89î\x94\x8d\x8c\U0006f2e2B\U000ecfd0ì\x15\x9fÈÃ/\U000671e1\U000ba53f\x06\U000f9fd15ú\U000666ect\U000cbeed»\U00043ba3Ø\U000b2c0ei2T\x91Û\x0b\x04í¯Íª\x10w\U0009e7f88289^\U000191b9\U000a7008Ba\x8dy\U000637be\x10å~§\U0003bd95\x9c\U000fe354Á\x88\\\x88±L\U0006e586\U000b2b97徨)\x04M\U00046680Çf¦NS\U0006959b\U000e1165\U0004b1de¶䪑7üE\x8f\U0005eaddX \U00059b3av¾y\x8a\U00082af1 È\x9f\U0007d16f\U0010d422>q\x06\U000459cfÌ\x95\U000d6ca5\U000e4a86\U000dc7bbõ^\x93\x07\U000f9599\U000ef127©KCw}îW×pÈÿ\U00067776\U0008d7f0¥\x1b\U000d804d\nD\x18û~\x9f\x02¢\U0010f872\x0b\\¨\U000fb99d\U0009875eÍËÄªb¨´𖡔Ð\U0010b0cb\x14:ï\x91\x98\x00»ýß\x84\U000905777¸3åv×P*\xa0a\U000ed588\U000127be\U000b2a17\x8a"DÐ#\xa0\U000f27d6\U000ccf9b\x9b>\x94\x14aÏz}\U000759bc\U0003b92c\U000c86d2\U000c49cfu\U00034bcf\U0004903bË\U00100a3c4?¤\U000d7709âୃ/I®\x15g\x03bÜ\x8fw\x9c\ue448\U0010ec6cô%¾é\x87\x15\U000c29a0Èw\x12\x90&j\x00ækO\U00054488Âu¸\U00099ff8i\x936\x06&É\x0bÑªÛ\x12\x07N\U000863cbÝ%À¨ \U000d69e3:òÿ°=\x0fô¾H\x1e\U0008545bd0D\x8f\U000f27dc\U0003c73f\x88\U00013cb1oü2d-Í\x14\U000d2007;ø\U000ebd9a\n»zþ\U0004e223\x95\U00068933\x94\x04\U0009e98c"ç\U000a1d38QÇT\U000f794cëò\U000f90ff4¤é|Á¿\U00072c13§\U000c9ef0£þ\x87\x94ðX\x03ÕM[Û,då\x85\x1cý\U000411d2\x8f\xad~êGÂ{Z·𠠠å¶êIN\U000f110b{Ñí±%«\x96\x02v₹6\U0005b443À\x1f-\x82ÁCÜö\U0005a38fÖ\x83\x05÷\x93\x1dã\x12c£Ï\x9e&\nä\x1aN𑃚´lyH/\U00035d51sd𦳔\x9a\x83\U00071845G\x1eä-V\x9cpÀ\x9b\U000c9079×\x97\U0003a339\U000c74d7dmÜã\x8eô¼C¿èhkÈ\x91\x88@m\x18ÆÿÞ\x92s(ÑÁÐÁü\U0010c8df\x1fç{\x91q\U0003b90e/V!´§eÔ\U000e2537\U0003548cõe&\U00101c57ª\U00051175.i>\U000c9638f\x94E¸÷ÈÈ<\U0008bd83\U000dd765\U000b65d8\xad¸\U0006e26f*{\U0005fe8a\x0e\x86+¡\x95\x82\U0010627fÀ©aC\x18\n\x0b\x9c\x9dË>\U0010d657:«\x9dÌÊ\U0003e9f2ÿ¤%\x1f¬×O\U000b0449¨Fó\x9dâ}\x82\U00059539Q\x06\x1dj9¡\U0005ebcb𨗍\x11\U00055f1eòh\x01ã\x1f}5rù\U0010c734À\U0005e9e5]\x8b\U000f2129\x17¶\U000aa0d7æÝ\U000efeb7ï}áë\x9d@ÿ\nã¤h\x97\U00081bc4h\x17\U0006f73bãWæ\x11Ã6\x0e\x11?ÕZÓ\x15\x06\U000f70be\U00053602\x81t\U0006ac4a8\U0010981c[\x9c\U000d688a\x04J6\x1dk\x88\x045þ\U000b20bdQ\x8f7\x95\x89C\U000ef53b\U0010940a\U00109918\x9c\U000fab72ÿ,÷ÙC\x9d\x8a²\x1e)u\x92\U000b5179\x94\x8b¼Z\x03\x91rd\U000d2642\x05\x12ô\U0007db58\U0004256d\x94$\x1b\U000c1e63Ã\U0008db1b\x80\U000560917\xa0\x0buØß\U000146f7;"\x94±R\x83Ä\U000df718\U000bd8c9|_è\U0001621dÕ«\x12é\x1a\x1f`0峺X\x0e\U0006a802É{4\U00085654J\U0008582e\U000cdfab\U000aa655\U00097674ðÛÔÔ!\U0007fee3\U00071c83\U00012dc5\x1bv\x1d\U000ee444\x0fi\U000d2d4d¶\U0005828aÑ×ÉI(\x11\x84Jk\U0010ceccîÝ\x1dpGùÑ\x95\x008:O\x81ºr\x9c\U000f4d66\x85\x83\U00104a81\U00101105a𑐫싆sx\x87ÜÔ\U000458deÁm\U00070447`Ú\x19헴\U0003a764\U00037a69ûM}\U0009af13\x03!|Ñþ\x1a\U0004ec6cM³X\x16{𦾉\x9bÏ\U0005cca9\U00084b60BÐ\x9dq\U000e57e2Ú\x8f\x04\U000c0325\x02\x0c¢bKÛ°\U000feeac¤\U000524dfâ\U0010d415ÞÔ\x08è:k¯¨\x8bD\x8f:Ý\U000d9a79¬\U0004a23c\U000dee013.\U00079517Tg\U000924adýgúÖE]è\U000b0a0fs»N\U000e0bb0\t\U0004eebc\xadTq\U000d5ad4þ5Õg"\U0005e9e13\U00069231\x0ck\U0009082e§wÈ\x1cj\U000ed126\x1cZ\x0f\x08R¸D¹ÞzA\x05 éXO%\U00107675p\x02\x9e|·\x89ï\U000aa7e0\x8b\U000ca45fÃ\U001031f3𤽥\U000b95aa\x93\x03𣋠±¾1\x87\U00071571\x82eÑù$\r\'Ô\U000ef07d6\U000d272b2¸©𬯨\x8døQ\U0009147f\x1b\U00101acc\x9b¸\U00087c0d\x1b\x9dÃ1Ø\x04\x89\U000920e8\x03«áÿ\x0eå«\U00039828Áð\x88\x98´É\x08𨰧w\\)9\U00089550à¹»Äú`\U000d1b80ä;\U000ccfa7Mø\x80s%V\x1c\x06\x86\U0004a0f2\x9df\x17Fôb\U0004b601\x12Ô\'𧳻&ê\x99\x96b¦\\É\x80\x89\x95¡;\x07y\U000cb0f9¥\x17\x1f\U0003149b𗵔ö®)\x89\U00058042\U00100196è\U00098f5f\U000818b4â\U0005b930\x1b§\x0f\U000c8d27î±x\x19xL\x94¶\x89ô$\U000ae4ecÜrÀÛ\x84!¹ê\x88\xa0¹\U00032f3b\x01\x8b7+.\x91𨉣6\U00012f73\'\x81\x98\x16ðù\x1c\U00099a62VÅ\x1fꞂ4\x13Þµ\U0005c9bc¼F#\x16ÏðFd\x18IQ¼¡Ô\U000f109e\x0fæ\\sr»öYN\U0008b589\x0f\U0005109d\x0e\U0010c7e7\x1e\x8b\x80l[\U00041bf7:õ\U000e5638>\x87PhãS\x0e\x18\x9e:ë\U00043a83â\U000ca0c5Ñ¨×|þ\U000c2071P9séªô\x83\U00063aee藯\x0bª\x04uOå\U000e5596ÀX%Áó\U000b3db0\U0008c6dc\x9d]Â\x81%Ã࣮;lJRK\U0007394d\x03\x01\U000adf40\tÑª\x87Ý\x85\x9d~{Óþ¹\x94*µG\x10\U00041144íó\x93\x85\x9fÙP\nµ\U0003f00bu\x81¿WV\tf?rj¨Ì\x8aÒkL\x99\x92\x90Ø\U000c2658\U000c4a2f\x8ao\x8a°\x01\x9fP!\U000b821cFÙ\U0010ea07ôpî\U0007d810×Ý·\U0007e6c1\x7f\x15\U000bd2dfzB¼\U000dfbc9Àu\U0003cfef\x96\U0006455aèá\x1d¡\U00090b7d5ø¸\x19í\x90=\x88\x10£\x88m=fõ\U00096ad9\U0006ca48\U000b8f17-\x8fÅ¤\x0b\U000fcb09\x17Z2ªS\U00080cdcúÛª\U000e2c54ÆÂ\x01\U000ee830\x0eH\x90À\U0009df0aJÀ\x03𝒮Å£\U000b4965obÉh+2𤓀\U0005d54f\U0007b6e3 \U000784ff\x8b\U00097a8f¯Äµ\U000b458fJ\U000bc98b£ø5\x89\x96ê.짝dÒÏ\x8bc\U00036ab9\U000b42fe®'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 'é\U0007e614ó\x93\\\U00072a43£ßªß\U0008543e\x8b\x8ea±콆\U000fb008\U0001364fî\U0001b7ba𬭼\tÃ~\x0cí\U0007294f#M¡\U00019a43\U000898e2o(\U0009cde9×RÜÀDÎ4ºR2𓆵g\x1dv\\è\x97d\x86\x82ÿ\x03@H\x02<\U00107727\x81\U000a8f07@\x89î\x94\x8d\x8c\U0006f2e2B\U000ecfd0ì\x15\x9fÈÃ/\U000671e1\U000ba53f\x06\U000f9fd15ú\U000666ect\U000cbeed»\U00043ba3Ø\U000b2c0ei2T\x91Û\x0b\x04í¯Íª\x10w\U0009e7f88289^\U000191b9\U000a7008Ba\x8dy\U000637be\x10å~§\U0003bd95\x9c\U000fe354Á\x88\\\x88±L\U0006e586\U000b2b97徨)\x04M\U00046680Çf¦NS\U0006959b\U000e1165\U0004b1de¶䪑7üE\x8f\U0005eaddX \U00059b3av¾y\x8a\U00082af1 È\x9f\U0007d16f\U0010d422>q\x06\U000459cfÌ\x95\U000d6ca5\U000e4a86\U000dc7bbõ^\x93\x07\U000f9599\U000ef127©KCw}îW×pÈÿ\U00067776\U0008d7f0¥\x1b\U000d804d\nD\x18û~\x9f\x02¢\U0010f872\x0b\\¨\U000fb99d\U0009875eÍËÄªb¨´𖡔Ð\U0010b0cb\x14:ï\x91\x98\x00»ýß\x84\U000905777¸3åv×P*\xa0a\U000ed588\U000127be\U000b2a17\x8a"DÐ#\xa0\U000f27d6\U000ccf9b\x9b>\x94\x14aÏz}\U000759bc\U0003b92c\U000c86d2\U000c49cfu\U00034bcf\U0004903bË\U00100a3c4?¤\U000d7709âୃ/I®\x15g\x03bÜ\x8fw\x9c\ue448\U0010ec6cô%¾é\x87\x15\U000c29a0Èw\x12\x90&j\x00ækO\U00054488Âu¸\U00099ff8i\x936\x06&É\x0bÑªÛ\x12\x07N\U000863cbÝ%À¨ \U000d69e3:òÿ°=\x0fô¾H\x1e\U0008545bd0D\x8f\U000f27dc\U0003c73f\x88\U00013cb1oü2d-Í\x14\U000d2007;ø\U000ebd9a\n»zþ\U0004e223\x95\U00068933\x94\x04\U0009e98c"ç\U000a1d38QÇT\U000f794cëò\U000f90ff4¤é|Á¿\U00072c13§\U000c9ef0£þ\x87\x94ðX\x03ÕM[Û,då\x85\x1cý\U000411d2\x8f\xad~êGÂ{Z·𠠠å¶êIN\U000f110b{Ñí±%«\x96\x02v₹6\U0005b443À\x1f-\x82ÁCÜö\U0005a38fÖ\x83\x05÷\x93\x1dã\x12c£Ï\x9e&\nä\x1aN𑃚´lyH/\U00035d51sd𦳔\x9a\x83\U00071845G\x1eä-V\x9cpÀ\x9b\U000c9079×\x97\U0003a339\U000c74d7dmÜã\x8eô¼C¿èhkÈ\x91\x88@m\x18ÆÿÞ\x92s(ÑÁÐÁü\U0010c8df\x1fç{\x91q\U0003b90e/V!´§eÔ\U000e2537\U0003548cõe&\U00101c57ª\U00051175.i>\U000c9638f\x94E¸÷ÈÈ<\U0008bd83\U000dd765\U000b65d8\xad¸\U0006e26f*{\U0005fe8a\x0e\x86+¡\x95\x82\U0010627fÀ©aC\x18\n\x0b\x9c\x9dË>\U0010d657:«\x9dÌÊ\U0003e9f2ÿ¤%\x1f¬×O\U000b0449¨Fó\x9dâ}\x82\U00059539Q\x06\x1dj9¡\U0005ebcb𨗍\x11\U00055f1eòh\x01ã\x1f}5rù\U0010c734À\U0005e9e5]\x8b\U000f2129\x17¶\U000aa0d7æÝ\U000efeb7ï}áë\x9d@ÿ\nã¤h\x97\U00081bc4h\x17\U0006f73bãWæ\x11Ã6\x0e\x11?ÕZÓ\x15\x06\U000f70be\U00053602\x81t\U0006ac4a8\U0010981c[\x9c\U000d688a\x04J6\x1dk\x88\x045þ\U000b20bdQ\x8f7\x95\x89C\U000ef53b\U0010940a\U00109918\x9c\U000fab72ÿ,÷ÙC\x9d\x8a²\x1e)u\x92\U000b5179\x94\x8b¼Z\x03\x91rd\U000d2642\x05\x12ô\U0007db58\U0004256d\x94$\x1b\U000c1e63Ã\U0008db1b\x80\U000560917\xa0\x0buØß\U000146f7;"\x94±R\x83Ä\U000df718\U000bd8c9|_è\U0001621dÕ«\x12é\x1a\x1f`0峺X\x0e\U0006a802É{4\U00085654J\U0008582e\U000cdfab\U000aa655\U00097674ðÛÔÔ!\U0007fee3\U00071c83\U00012dc5\x1bv\x1d\U000ee444\x0fi\U000d2d4d¶\U0005828aÑ×ÉI(\x11\x84Jk\U0010ceccîÝ\x1dpGùÑ\x95\x008:O\x81ºr\x9c\U000f4d66\x85\x83\U00104a81\U00101105a𑐫싆sx\x87ÜÔ\U000458deÁm\U00070447`Ú\x19헴\U0003a764\U00037a69ûM}\U0009af13\x03!|Ñþ\x1a\U0004ec6cM³X\x16{𦾉\x9bÏ\U0005cca9\U00084b60BÐ\x9dq\U000e57e2Ú\x8f\x04\U000c0325\x02\x0c¢bKÛ°\U000feeac¤\U000524dfâ\U0010d415ÞÔ\x08è:k¯¨\x8bD\x8f:Ý\U000d9a79¬\U0004a23c\U000dee013.\U00079517Tg\U000924adýgúÖE]è\U000b0a0fs»N\U000e0bb0\t\U0004eebc\xadTq\U000d5ad4þ5Õg"\U0005e9e13\U00069231\x0ck\U0009082e§wÈ\x1cj\U000ed126\x1cZ\x0f\x08R¸D¹ÞzA\x05 éXO%\U00107675p\x02\x9e|·\x89ï\U000aa7e0\x8b\U000ca45fÃ\U001031f3𤽥\U000b95aa\x93\x03𣋠±¾1\x87\U00071571\x82eÑù$\r\'Ô\U000ef07d6\U000d272b2¸©𬯨\x8døQ\U0009147f\x1b\U00101acc\x9b¸\U00087c0d\x1b\x9dÃ1Ø\x04\x89\U000920e8\x03«áÿ\x0eå«\U00039828Áð\x88\x98´É\x08𨰧w\\)9\U00089550à¹»Äú`\U000d1b80ä;\U000ccfa7Mø\x80s%V\x1c\x06\x86\U0004a0f2\x9df\x17Fôb\U0004b601\x12Ô\'𧳻&ê\x99\x96b¦\\É\x80\x89\x95¡;\x07y\U000cb0f9¥\x17\x1f\U0003149b𗵔ö®)\x89\U00058042\U00100196è\U00098f5f\U000818b4â\U0005b930\x1b§\x0f\U000c8d27î±x\x19xL\x94¶\x89ô$\U000ae4ecÜrÀÛ\x84!¹ê\x88\xa0¹\U00032f3b\x01\x8b7+.\x91𨉣6\U00012f73\'\x81\x98\x16ðù\x1c\U00099a62VÅ\x1fꞂ4\x13Þµ\U0005c9bc¼F#\x16ÏðFd\x18IQ¼¡Ô\U000f109e\x0fæ\\sr»öYN\U0008b589\x0f\U0005109d\x0e\U0010c7e7\x1e\x8b\x80l[\U00041bf7:õ\U000e5638>\x87PhãS\x0e\x18\x9e:ë\U00043a83â\U000ca0c5Ñ¨×|þ\U000c2071P9séªô\x83\U00063aee藯\x0bª\x04uOå\U000e5596ÀX%Áó\U000b3db0\U0008c6dc\x9d]Â\x81%Ã࣮;lJRK\U0007394d\x03\x01\U000adf40\tÑª\x87Ý\x85\x9d~{Óþ¹\x94*µG\x10\U00041144íó\x93\x85\x9fÙP\nµ\U0003f00bu\x81¿WV\tf?rj¨Ì\x8aÒkL\x99\x92\x90Ø\U000c2658\U000c4a2f\x8ao\x8a°\x01\x9fP!\U000b821cFÙ\U0010ea07ôpî\U0007d810×Ý·\U0007e6c1\x7f\x15\U000bd2dfzB¼\U000dfbc9Àu\U0003cfef\x96\U0006455aèá\x1d¡\U00090b7d5ø¸\x19í\x90=\x88\x10£\x88m=fõ\U00096ad9\U0006ca48\U000b8f17-\x8fÅ¤\x0b\U000fcb09\x17Z2ªS\U00080cdcúÛª\U000e2c54ÆÂ\x01\U000ee830\x0eH\x90À\U0009df0aJÀ\x03𝒮Å£\U000b4965obÉh+2𤓀\U0005d54f\U0007b6e3 \U000784ff\x8b\U00097a8f¯Äµ\U000b458fJ\U000bc98b£ø5\x89\x96ê.짝dÒÏ\x8bc\U00036ab9\U000b42fe®'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003829s
====================================================================================================
2025-09-18 23:55:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003809s
====================================================================================================
2025-09-18 23:55:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '  '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003758s
====================================================================================================
2025-09-18 23:55:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003677s
====================================================================================================
2025-09-18 23:55:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004358s
====================================================================================================
2025-09-18 23:55:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['|\U0009976b\U0010ee25&ÎÀd|=\U00015d16Ý\r&\tÖ%b\x8biu4É']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['|\U0009976b\U0010ee25&ÎÀd|=\U00015d16Ý\r&\tÖ%b\x8biu4É'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004429s
====================================================================================================
2025-09-18 23:55:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x11\rÙ\x1f䨄¹'], 'password': ['l', '', '\U00105ac4', '5\x9fïK\x1e\U000e429f\U0010d3c4Ö\tp¡\U000e6496\x80', 'i\x7f\U0001e9a4#\U000bf419𛄏süD\x1d']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x11\rÙ\x1f䨄¹'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['l', '', '\U00105ac4', '5\x9fïK\x1e\U000e429f\U0010d3c4Ö\tp¡\U000e6496\x80', 'i\x7f\U0001e9a4#\U000bf419𛄏süD\x1d'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004128s
====================================================================================================
2025-09-18 23:55:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004095s
====================================================================================================
2025-09-18 23:55:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '\x18F+\U000422ba𦇮\x81O&°\U0010cf91', '', '', 'ÍÞ\x83', 'A¾\U00094ca1', "i\x10¦È𠮉Â°\x02\U000b5b1e\x7f8'"], 'password': -8710688287073889871}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '\x18F+\U000422ba𦇮\x81O&°\U0010cf91', '', '', 'ÍÞ\x83', 'A¾\U00094ca1', "i\x10¦È𠮉Â°\x02\U000b5b1e\x7f8'"], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -8710688287073889871, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003877s
====================================================================================================
2025-09-18 23:55:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': True}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003764s
====================================================================================================
2025-09-18 23:55:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 17245, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 17245, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003785s
====================================================================================================
2025-09-18 23:55:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 162337797}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 162337797, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003741s
====================================================================================================
2025-09-18 23:55:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 16455, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 16455, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00362s
====================================================================================================
2025-09-18 23:55:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': 77}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 77, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003652s
====================================================================================================
2025-09-18 23:55:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ê\U00108c02', '', 'à'], 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ê\U00108c02', '', 'à'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003574s
====================================================================================================
2025-09-18 23:55:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 27550}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 27550}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 27550, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003908s
====================================================================================================
2025-09-18 23:55:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -16163}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -16163, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -16163}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003512s
====================================================================================================
2025-09-18 23:55:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004026s
====================================================================================================
2025-09-18 23:55:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -11415, 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -11415, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004057s
====================================================================================================
2025-09-18 23:55:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': 12884}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 12884, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003845s
====================================================================================================
2025-09-18 23:55:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003762s
====================================================================================================
2025-09-18 23:55:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '\U0003e15f\U000a6029Óà=\xa0ñ\x9f\U000ee0eb\x93y4\U000512d2úr\x8câ\x15Ñ\x8eå£ð\x96IÝ\x10]üL\x971=\U0003ae6eÅ\x17Xx\U00050173\U00073a36nª\U0001a414\x97\x1d\U00067e3e\U0006b0314¼8=\x10\U000aa238\x1a\U000c4783åF\U000c38fe\x82ª\x00\x86å\x8a\x93\x7f\x02\x87\U00046c04\U000ca3c4\U000dd082f0ªÌ~\x1dSJÇî\U000794f9/\U00087acdó\U000a2a5cf9\x9f*\U000441a8\U000ae0f0ät \U0005bcfc\U0006244b\n\U000f7164mC¾6×\U000c4d73Ò¸\U00042fde\U000638a4\x84»û\x03R·\U000d443fß𧮯½Ñ\U000193e2\x19sNã\\𔙅\x8ee\x00\U000b91eb\x1b\x04GìO½🬯\U000d4a4alª\x06°𝝧\x117øü\x9e\U000f07c4\x02D\x82o\x86\U0006be1f\x81±¤\x93\x1f\U0004f9e0ÅÍ0\U000a26bcN\x10\U000f7fdaí\n°rÞ^\U001001e6p³qÉKx³À튼\U000f345fÎ\U00095a3fÑ\x16I=\r\U000b555b\x08\U0007ba02Á\U00098753¤\U000ad425ë\U0007d33b\x84KÜ\x83\U00047162\x7f\x9e&f\x1e\x9fl¸\x17ÓO\U000a1390¡ª\'Ð[Ð\x90\U000b757d\U000e5137\U0005687b\x10\U000f2790;\x1dÊl{\x9d¼ä\U00078d95©ë\U000cfddfXÛµhÚ1uT1bN\x7f\U00085666êÙu\x06¤»\x1f$\x83ãS\U00049480\x1cÚ\x03S𨯦\x0e\x0c:\x7f²\x02\n\x15Õ8>Î·Ã\U0007927f\x8beß\x1dwÛ¨¢\U000d42c3\\(5â¾äØ`Z\x1bP\x0c8²A÷\x02\x81Xù>t㏷6(4Y\xado\x95\U000a6279\x95ß\x8f8c\U0007f2410þ\U0001ddfc¤ÍTÄb\U0004d3f5Ègú\U00078dfb\t²\x00Å9\U000bed8eé"ÁÈ\r혓ÕÙ\U000ea58d`R\U000feb66W\U0003c28e\x19¦ÍØIÎK\x1fA¹º\x10A`K\U000ec060ø|\x1b\x85Ñ\U000e3581\U000f7500D\U000955d4u\x05»\U000c0576\x0f\x9a+nvç¸|±ãîJ\x02e\x1aCè¥®Ê\U000987e0\x0f\U00106535\U00101359\U000e5780U*\x17\U000b17e6\U000e3e63\x1aÅ\x86¼+\U000b3d97«Y\U0006e91d\x92K¹\U000e8f78\U0007dbc1ãj\x08\U0003f48b\t𤝎o\U0009d60e\'ꛍ\xa0\x117¯\U00083a58K\U000c23ac\U0008d405¢\x17𮗂\U000d8dc6Lü+\x97¨ÌSY.\x84ÊÛÉE\x9b\U000d32e6:\U000f9b59\x85𡯜Êibp!ãÚ\x02\U000a26c7ÚPä𑐢G\U00050df2섓\U00070631T·\U000587c0\U000444ba\x0cz\U000a6068∑Y\U0005a1a5<\x812;ÒI«\U00099db8)=ÝkH\U00075e27\U0009bf28¬Dz¼\x0cX\U000f0ad4Àl],¯y\U0003b5ae\x17ås*\U000326ab¹\U000487c6ïòéÉ[ú2\U0006f4ae.ød\x00¬\U000d5cfd\x8a\U0008fdb3\x91Æ\xadÉ\U000ece78\x96`öñwî\n𡨆\U0007df48D²\x97[\U000f4485"²\U000e39c8_¹ññk\x11j©\x92à`«\U00088673\U001018693y;\U0010bbd3ZmIº\x95Ý\x0b\x8b\x848¼\U0008423cyF\U0008ce7e\x10Vis\U000e06b5EåÑ쀝ß.¿\x80\x82\x81)\x9b3OU\x98\U0004f7b7Õd\U00072119[¬Æ\x14\x96\U000479f6Þ âñà\U000df9f7ÐXt4𪢮\x1eÓ\x13ìÒ\x83\U0010174b¬8nÇà\x98¿<tCÚ}Ä\U0005b863Ñ\U0009c12f4Øú\x86\U000c2ebe©Þ¬\x8b\x8cµ\U0008703c©Z\x07¯\x16û\U00013bd8\x03¹jz\x16\x87"\U0007c864uêm\x07t\x05î𐜎[H\U000971de#1\x1b\U000947f6=\x0c#R\x0f\x1e÷\U0004e75f\x03Ôny\xa0\x1a\x91𢠟¬,K\U000a878bq\x0e\x17𥊑»\U0004b7ab\\\x92iú\x00ÙÓv\x04\x0eÿ\U00019c0b\U00043c36=\xa0\U000901ea©\x82æ\x10\U000fad23Ïý\U0001164d:𖬩:yýlâ\U0010894c¯,¥\U0008ca59*\x8au\U000406faÀï;\x0c\x16\U000440ae©𪧆ïó©Ñ¨Ýç\x8eßæ\x81\x9f\U000ba562p\U000d6a5bE\xad\x86\x83¸7\U00035e34\U000b0c5bð*\x0e{\x8b𬜯Þz\x06\U000b988b=2\x8dºTóñÛ_\x1e㫄¿á\x1bÑ¦Ø\x11&e\x1d½u%\x9dìëí:û쥷8öK]Úø\x91úø\x08\U0003f44f,hÚ\U000e9a3cC.\x93\U000ab4d9ó\U0010cad1\x7f@AÎ\U00053b64S(È«\U000ada7a\U0010efc4Y.N\x00;\U000a3a78ª*£\U0001bf71"\U000772e4Ó¸𱅕¥E1M\U000e1d67\x9d\U00105ef8ÒM\U000911bcW¨\U00064cc0O\x83\x96#¬Tk\x17]ôH÷\U0001940aÞ¾\U000f60c2s.)¬+éZ.\x9b\x02w\U00080e7bÇ\U00048d1f$Ç?\x85\U000428136\U00079da9Ëî\\?\x84,\U000a099dÜK\x88M¤\U000c6a62iT\x93^\x9b\x0c©\x14\x04?6\U000a849fö\U000a5b4a³[\x92¦&öÊjD(T\x95\U000a03b1Í>\x88\U00056260\x88\x86y}_À>[\U000c7a1db¾Ü\x8aN\x99\U000d083659ü\x07\x1c3\U000560a1(u3x1\U0004587b~\x1cO\nø*\x98\U000f20a0p\x8d\x1cP\x82²y\U001052c3ÚÓ\U0004892b\xa0\x04\x1aDr\x875\x86ö¶\x86|e\x03ç\U0010fa39Ò.ÝxÉ*\xa0=õz\x91𨧪o?w\U000962f2\U000102fd¾\rIC\U00062532ÓH\x85\U00090c33V4k3ÖhôÊÑJO&¥\x08?\x90𧟛\xa0\x9d¥BÍK\x8cS\x02\x91a\ua82fÌ\U000afa32mY±S*Ó\x8b\U0010dabaÈ¨§Àý\x0b±2\x9f\U0010763a\U0008aa82\x90ÌÁ\U000d9e83\t\U000c01be)\xa0\U0009ee7c\x0cDC\x120\U00096b8f;\nÉo𬓻\n\x1d¸&Y\U0007e914@[\U000f547a\x19\x12ÿñhfµ\x8dt½\x96]\x99í\U000661d4\x05%\x08\n$½§Ì\U000d6c55\U0006ba31ÉßÎhR¤n\x15dØî\U000ed5e4\x00]\U0001e9a92\U00101b8aÖ\U000fd54e(\x07\\R¹âñG\U000f5c8d\U000df123D\x0f\x86ÂËÍ컥w\U0010ce51\x91Ííº¡\x86\U000c419bO<\r\x83\U000d8116ใ\x93\x1b~\x8c¹KÞ\U000e7435}_\U0009b65ay䠊0\x0fU/·^\x88¬\x98b\U00086a89\U000e2b30\x8eÍ\U000f3d00þ\x00\U000646cbz©Ë¶𘐡Óë\U000dd8acqù§¦\U000c5a96.j\U0006bc2d´R\x8d\x11\x1fä+)Øå\U000c5d46´½\x85\x06B\U00042dfe\x10\U00075442¾\U0009c806\x1e\U0001aa08¸\ue199\U0009fe4a±\x9eX©\U000151bcå¹Vì~\U0004f6f6EÕè\U000a594b\x1b禈\U000acdb0\U0004c359j\U000e0bdbU\U0003f672m\U000548b6y\U000a725f\x94Î\U0001ed58ñ,»§\x86\xad\U00055170º\x1f\x02~®\x99]\x81Èn\x08\x0c䨉Åa4Æþ\x94ý\U0008c842\U00077d21LAt𫐍\x90a\U000b43e6{¾¬Q\x05\x94ëª~xä1\U000446eagÝQþ\x90;\x98HCó\x9a\x06Õç\x95³\U0010c14e\U0009fd00ûx\U0008a783òRÈ@è\x89'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003881s
====================================================================================================
2025-09-18 23:55:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004074s
====================================================================================================
2025-09-18 23:55:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003682s
====================================================================================================
2025-09-18 23:55:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['§', '\x979k_', '', '', '', '', '³\x18蚐k']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['§', '\x979k_', '', '', '', '', '³\x18蚐k']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['§', '\x979k_', '', '', '', '', '³\x18蚐k'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003755s
====================================================================================================
2025-09-18 23:55:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['\U0004572f!ÞÞ', 'â鞐4àö\U00035e8a', '\x90\x92¦']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U0004572f!ÞÞ', 'â鞐4àö\U00035e8a', '\x90\x92¦'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004263s
====================================================================================================
2025-09-18 23:55:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': -2552}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -2552, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004424s
====================================================================================================
2025-09-18 23:55:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ð', 'å[¿', 'L\x80', '', '', 'v\U000df163I,\U000da963Ùq¢', '\U000b39a8\U0007fbcbqeá\U00032175Á\U0010a2b7Ôu¢', '𠙇´Hë\x19\U0004871e\U00041f62pÉÒL', '', '\U00086295塄튥}d¯\U0004a8e9\U00066e7a\x86¶¹\x0b°\U000f8282(𠟳Õ', ''], 'password': -124417840577630802853962947722561848649}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ð', 'å[¿', 'L\x80', '', '', 'v\U000df163I,\U000da963Ùq¢', '\U000b39a8\U0007fbcbqeá\U00032175Á\U0010a2b7Ôu¢', '𠙇´Hë\x19\U0004871e\U00041f62pÉÒL', '', '\U00086295塄튥}d¯\U0004a8e9\U00066e7a\x86¶¹\x0b°\U000f8282(𠟳Õ', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -124417840577630802853962947722561848649, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003585s
====================================================================================================
2025-09-18 23:55:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003956s
====================================================================================================
2025-09-18 23:55:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': 3981455168014549716}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 3981455168014549716, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.054366s
====================================================================================================
2025-09-18 23:55:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003909s
====================================================================================================
2025-09-18 23:55:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['\U000aed0b\U00061bb5', '·', 'z\U00073a3d»\U00090eb5\x86¸á', 'D@¤\U00042d2d', '²', '\x15\x92', '@', '\x11\U0007369d°|\x1d\U000e20f22', '7x\x02ÄF\U00042dccCP\x80.mò\U000c0ec9\U000cc89b[', '\n\U000d37ab¬\x10\U0008d8d3\U0009ed6f§¿¤\U000f0fd1\x95î', '\U000cc4b9n', '±']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U000aed0b\U00061bb5', '·', 'z\U00073a3d»\U00090eb5\x86¸á', 'D@¤\U00042d2d', '²', '\x15\x92', '@', '\x11\U0007369d°|\x1d\U000e20f22', '7x\x02ÄF\U00042dccCP\x80.mò\U000c0ec9\U000cc89b[', '\n\U000d37ab¬\x10\U0008d8d3\U0009ed6f§¿¤\U000f0fd1\x95î', '\U000cc4b9n', '±'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003739s
====================================================================================================
2025-09-18 23:55:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004221s
====================================================================================================
2025-09-18 23:55:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '../../etc/passwd'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004278s
====================================================================================================
2025-09-18 23:55:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['é©?\x03\U00067d2c', '+\x15']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['é©?\x03\U00067d2c', '+\x15'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003741s
====================================================================================================
2025-09-18 23:55:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003978s
====================================================================================================
2025-09-18 23:55:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '  '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004014s
====================================================================================================
2025-09-18 23:55:16 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 18578, 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 18578, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004228s
====================================================================================================
2025-09-18 23:55:16 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 31177, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 31177, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003984s
====================================================================================================
2025-09-18 23:55:16 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': -25616}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -25616, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003932s
====================================================================================================
2025-09-18 23:55:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 47, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 47, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004016s
====================================================================================================
2025-09-18 23:55:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U0001c4b8õq𡤨\x9a¦', 'j', '%GÉ', '·\xa0J\U000e440b\U000f3e1c=\x99\x91', 'åÞ\U000aedc0nü`\x0eå']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U0001c4b8õq𡤨\x9a¦', 'j', '%GÉ', '·\xa0J\U000e440b\U000f3e1c=\x99\x91', 'åÞ\U000aedc0nü`\x0eå'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['\U0001c4b8õq𡤨\x9a¦', 'j', '%GÉ', '·\xa0J\U000e440b\U000f3e1c=\x99\x91', 'åÞ\U000aedc0nü`\x0eå']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00405s
====================================================================================================
2025-09-18 23:55:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ûé\x08\U0003c2df\x9dè>:\\Ø\U000672a09\U00038e23\x9a\U00100296E\U000ac02fÑ\x8e\x17rìÿW\x12´1øRhNì6\x00o¬\U000c59ed9¼\x9dÁ\x01c\U00078d07B®Øz\x19\x8aa©\U00057ed8í\n>\x84Q\U0004ac7f\x9e\x9e\x14z\x11{³\x84¦\U000ebfea\x99z\U0007d38cë\U00082983F£¥ÎÊH\U000f9703÷|ª}÷õO\x19N+\x97\U0008021aú\U0008e687\U000375fc¢\x1a𑒧ðÉ\U0005462d\U000931a5\U000d1a6e£^\U000d7116]\U000fa431\U000d4585xµ\x17L\U00088fb6Ô𨌌^;»\n_\x08Òy\U000ac9b8P©ퟯ\x19\U000fd557óR\x98p\x9c+÷\x15þ\U0003f648\U000d3f4e¥ª\n/ö0\x06ä\tÍ\U0010c99aØv\x12Ð¢\U0008b7ff\x88\x85}Î\U000898f7ërH½\x1d\x81[\U000e3ea5\x83í²\x07🀔ìyw𧂲f¸ªt\x88ÿ\U00049b73||ÑÜí3ÿn\x80}9VTÜ\x88ÅI\x05(t\x91ä\x1f\U000ce247\U0003d274\U00061f20\x11\x086k&\x9fOÌ¶\U000bf9f4\x8a*§*\x8aê*Ò\x04\U0006fc20,J\U00107f0eÇF~\U000aeb25\x06Ú÷ç\U00081306\U00040767𑈾>\x1b\U000f9891U$\U000d7dda\U000b2d1dh\x9e\x03H\U000a6cea\x8d&Þ\nÈ\U00095dda\U0009cf67\x03!~ôi\x04a궆@d\x85\U00031b36\U000afdabÄ𒂷[\U0005c2de\x84ô{¹=𑇞ç¥Â©\x97 Fï\x08QJ\x1f¶Ë.\x1aQ\x10ë\x91¦z\U00093465Ýä õ\U001017ae\x03þ魞£\x9e½÷û\U000df567\x9f\x11\U0003c24a í\U000892e5𐧬ú\x8dO¢jg\x90\U000aea70\x82m\x9d¸§\x8dë-\x81\x0c¤GÞ\U000a3b09ë\x03\x0b0\x92N\U000b3e62\x08U?éux³\rähÍ)ßæi\x19v¶¬\x85®³\U0007ef45\x8e\x93\x94H!\x7f𪈸ü\x05\U00045a5cëB¶\x0f\U000aa52b+|VàÁ~\x03\U00064874\x18\x0f£ê¥À\x97\x82zÐ\x99LÉ\x802\x942_\U000c7a9f\U0010bc4bÓË¦\U000f6ff4ùI!ºÜ\U000ee9ee\x08VÒ\U00056610§\x11N$]B\U000b3c77\x8aR\x85m÷ê\x8cAøUIpñ\U000d7d8c\x8fÝë\x8bñ󠄛Ã\U000f501a&{\x7f\x1aå§rØwô\U000c0639J{\U000977b5èø\x05J6\U00043acd\x0e¡Ý¡\x9cF\'\x8c\x1c𪰯\x94Å\U000512c7OÑBt\x96F>ç§;\x0e;É¶Y𠊜Ѭ\x8dÀ;í~$\x81A¡ª\U000c5a41\x11ÿ}sk\x0c_Ýþ\U001066dc}\x08\x1d\x15d\x87Ç¸\U0010c485c7\x1a/0w\x11Y\x18𢟺ø\U0001f25d\x10%3ÕDbÖ#Æ\x1d^=\x16\U000126ddÈ¥Òß5\x10(ᗴM\x91Ù=\x7fÄ×\U000f0e80\x15\x9b\U000a9aaf´ðËÏ\x15\x9bï\U000737be𘏥¤»Ê\U0008eff6z,^@|jý\x18\U0005a334¦SX×\U000f4fa5N\U000def0a\U000d9c59\U00063829\U000eef18\U00092d92\U000590efÂÄsmÙ\U000146a6\x15\U000a27e0\U00048069\U0009812c𩮯gx¿1¯uÀ\U000fa119Ê\x95÷pô,\x03\x86\x05\x1an-\U000e0702\x8eº\r{ÁÖ\U00038671\U00036dc2\U000ecbba\U000cbee1iÂ\x1cq\U000a3f0a\U000a0506\x15b\U000d825c\x89Ö\x7f\U000d10b7둪\U0007960cê6\U000400eaýà\U000a1c04ï\U0006923e\x01>Û\U000e0d8cF\x9d[!<°\x97Êਵ\U000f96d92;¬T\U00045d6bÐ9\U00057059:匳x\x8d\U000d71d3\U0009360d\U000e5909í§𖩒º\x18¨\x85ÈwH\x01ì[\x05\U0001a4ef\x1c\x00\U000117d3-v\U000afc6e.Q}z\x89(Î\U00081cd7\U00045a2f\x01\U00039bf2¬\x05og5-8\U000c8245\x7f驡\U000ba8c6(¾¼\x7fõV\U000bee7cjQ\x10\U000e07e1W÷ÅÕy$\x00\x8a\uf3d2\U000df4a2X-,\U00072682\x1c\U000fe2dc\x83\U0007f2acôýq\x06Ë\x8cD³\U000c7843.\U0008f0a3»\x0c\x00T\x97\x89¼C#á_\x07\U0009a394\x06n²Gô\U00077e50𣖛\U00056200\x8bÊ\U0009a843\x9e6\x8d>2MÇ%\U00039bac®d\U0009e34ew\x87í¤C\x8b\x84\U0004549f\x98¿\x90ú\x1c\x079²ÙÜ\x1eWZ\x93\x02\U000dcb66h\x88\U000b7d08\x91é7ÛpGâ\t¦â\x0eK\U000194fb\U00081fcbûòú!\U000d45a5,\U000e9ed3\x99\U000846f6Ðb¤¡j\x16\x9aÏÙ&zè°\x0f\x83\U00060dd1\'\x7f\U000fd0e3Û\U0003bd54\U0009d414x\U00056973þ\U0003a168ÇùÅ3Fêdh\xa0l,\U0006c6530¢Gj\U00036265Üio\U00065d3eë\U00053e8a«þÌT¦×Ì£ð\x8fÞwÕ\U00066d9a\U0006a3c1\U000f8819{tui!Ã\x82\x81éZæ¸%Z¶âï\tÅ¨\x19%\x08Qé²\U00085d70õn\x01\x80\U000e5d97fßÄ\x96î.ª·Ð\U000996f4\x1fò¼\U00013b32\x0eÛáÚ£¤ÒxÌú/RÖ𧥉N<\x8a\x94j4>袎\U0010f43d\U000f3444a;\U000b6389NÒ\U000d4b28º\U000b0308:µÏyXÆv\U000ec405\U0009ed39\\\U000e1da7\U000d2f15\x14f#ÊÎM\x17rËW䌙\x10\U000eab0b\x82¸\U000a1460¹òÎ\U0010be51·V\x16¥Ã\x86B¢\x11Õ\U000cf27a\x03Á§\x00pòåÞ\\»LÞ\U000b5a64\U00094ae6\x9cNÖ\x96萉¨j?Æ\x01\x12ð4ìÐÂr\U000eca37N¶F\x10f9𤔼Ø\U000eb552Q\x1e\U000f50d6\U0003e388«\U0006260a\U000666c8血\x99b\x15O\uf8f2\x1a\U0005334c\U000fe04a\x17gb\x94AI\U000ce683ù\x90«Jê\rÅ\x0f\x9d8\x8f\U000ee8601¶x\x1a\x14ý\U000791f8\x93\x8d¢\U000fd094+\x1b\x9a®/¬"\U000acd34e\U00108b81\x91\x95\x1c½@\U00053769îÓ >\U000bef75æ¨J\x08\x08\x00\x92\x93`a\x95\U000565c3\U000840a4He\x90õ2¥AÙ\U0004aa3b蒴y0v/\U00045a87\U00075f15ìcÑ\U000c5399\x8aY}YU3¶\x96t\U000566c3#\x8b¹@Y\U00046b27ð\x86\U00107707×\uef418ó.¹\U0010a083s[r§\U000f3409øÂ\x86i\U0001626aÄ\U0003cae9A\tFøiJß\U00046aedª\x8e©\x7f\U00035ff4`Y\x9c\U000c8797\U000caa9dz\U00094fe1\x9f\x08\x82,\tM\x08\x0f@\U00011792\tØÑnØ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004078s
====================================================================================================
2025-09-18 23:55:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', 'ñ\U00039f74\U0005edb5\x0f{\U000fe9ca\x82Ü\x17\x94Ú·𗯡', '\x0b\U00105462vù@', '\U00054325', 'þ\U000a7bfaû', '!ô~@\x10\U000f038c$'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', 'ñ\U00039f74\U0005edb5\x0f{\U000fe9ca\x82Ü\x17\x94Ú·𗯡', '\x0b\U00105462vù@', '\U00054325', 'þ\U000a7bfaû', '!ô~@\x10\U000f038c$'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003628s
====================================================================================================
2025-09-18 23:55:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -28, 'password': 'õ\x98sl\xadrØ\U0005e5d1\U000e99edre\x8c\x87\U000b30d9\U000e5e93ñ\U000f96b1\U00055553Ï\U00084822\x0e\U0010fb7d\U0007b0c4\x1b?\U001081b5[\U000360abO\x9eM«\U0009c878oÒz\x86Ü9ê\xa0À\x00Uyªù\x8b\x05PØ$¬u\x90äI\x99\U000543f6\U000c46cf>\U000dd8a0á\U00106f54 \x0c0Z\U0005cee2\x02á-\U00063752¢\xa0w\x9bØ.-æ\x8f\U000def2a¿BQ\x96k\x04Ë\U0001610cÉÖÀ\x0býæ<\x1fz\x81\U000e9e31y\U000d7b07\U0007baa9ù\U0007b04f\x007\U00106968¾6\x9d\x91´÷¹°à\x8a\x88vµöÍ;B\x83d¢=êG\x16\x01ð\x18\U00092334\x10Å\x83\xadÁFÁ\x19ÌlW$|Ô\x8f\x85\x89*Ïê\x13lß\x9a\x0f¸EJ¨\U000ce750Ç£\U00038dccjÁ(\U0001bf29Õº𩩎\x11b=)¨&\x8b\x87èø𫡪ð\U0006975f\x1a;𮏳\U000abe0fúâõñ"𗲶9\U000bf1ad\U000f6036\U0006b0a8@d\x15\U00076cb5ã»\x1bª_ò\x12\x1e\x9cöCa\U0004575f¡_£¾\x18\x92¶D\x17¦p\U000d6420Ñ¡hÕ¶\x8d\x8f\x05´\U0006d923Õ\x8e;\n\U000df9b3\x8cgé\x12ZÎ#A\U000c3060¦¬£\U00043695ãaz멠\U0007f883Dç\U0008ef42ñÝ\U000b9f0a\x87\x97Þ𣀔\x9c\x0f)¶¶ìì\x88=--\x10·\U0003cad7h_à\x92\x08>é\U00058655\U000652beT\x92\x8aéu\U000d33f1\U0008472cp\x15Ró\x05f\xad\x88:\x13\x9a*\U000d6c26\x8c/µ_Y¡L#\x9cp³Á¿\x9aø½»Ç¡k0\x042鼎 ²\x0eÅåp\x99\U000b50fe+¯ë\x91³\t낿Fd\x1b-mÕ\U000548bf\U00032c59\U000a14d3\x95\rþ\x98\x8dæ\U0005d853VÈÊ\U000b9f7f鸓Î\x87\x14§÷m\x8c\x9a\x17\U000731eb^-oÂ\x9a\x83\x98ÝO\x05¼\x99z\U000409fdø\x9fÔ䤡\U00107e2b\U00014677:==å\x19û¾\x0eK\x90^\x91¼\U0008f94d챆Æa\x142\x8eñL\U0010626d\U000e843dïR\x04\U000a3eddû\U00044065r\x92/à\x1b\U00036d78õa\U00040dc298\x9eV\x9e\x819^\U000c219a\x9a\x0b\x13v±f\xadÔD\x9baV\x85ÂÝ\U00014c52\x13\x89ZÝ\U0010c828´\x14üÜ\x1c\x18\rK!Û°¿\x12L\U0005b898\x82y\x92ÄÃA\x1då\x0b\U000fdb86\x1a\U0003582düx¡Ý\\/£Êþ\U00041b31\x1f%@Èæ\U000e9f8fq×÷\x97I°\U00105d24A\U000f5bdd\x97»è\x82©¬`Û#V\U0004bcc8\uf4f3\U0009ac74ú\U00039100È\x14zz¡k\xa0z¢\xad\x91{层\U000b7af2\U00077cbb\U000b38c2\U000eaed4\U000a2558ìÊVPö\U000a52cf=\x0c&\x9a\U0005b782vþ\U0008c632]\n\x1c\U000834e2\x92\x99\x88"ü\U000e0b6f4\U0003d4a8Ç£,Ú\U000643ea>\U00107190\x9f\U0005d24c\U000baf33ÒãÑ£\U00040f0b!㡏âK\U0010c8a0w\U0005ee98f\xa0p\x127%óY\x16(J\x06\U000f3723\x90Y\xa0\x90\x03B\U000e395c\x81擊}\x00\x88Ë_M)¥\U00069e61B\x87r\U000aa3d4`8?\U000bb6e1\U000b8231ßÖÃÙ¶ü\n+H\U0009a3cf\U000d9ba5\xad(\x1f¬\x16\x1f?)\x1c`\U0007dbeb\U0008d477\U000cf219\x0f\x04\x16ë-\x1f\x17¤ÿ\td|\U000313aa\U00048b62\U0007536a\U000e4e6dóK@bK´îíaÆ\U00072dc6íåû\x0bKÐ\x8b/ï>Ö¦OÍÁÉåxh\U0005c0baYcX\x99¶\x08\U000eac77~?\U0009c13d\x9c\x0cA\x15\x99\U0009c417쵻æ\x84\U0008b984þÈ\U000db07c¸\x7fè\x9f\U00099da1\x0e\x81\U000d7e88·a\x86ó\U0004adcf\U000d4a95L\x8e\U0009c908áx@c\U000bedbbSÕ\u0eff\t\U000f370ao\x9f.Ã\x89\x18*f𨖷\x97â\U000ac2d6^\x96p¹\x95v\x12\x87YDèuÎ\U0008bea1P\x17î\x94\U000e46dfÃÖeÞhqÇ\x11¯\U000534c7\x9b\U0007315að\x89\x9c\x85|®e\\zû\uf276\U00074cb4\U0010c91aµ)\U0001e3f5\U000bdfbfÏvÎ¸¥\x0ft\U000ca5d4eYº\U000d955f:\x87\x1c\U000eee44«Æº\x1b7,n\x1c©\'Æ\x9eÎÑP_0\x82k×P\U001036da\x18\x16\U000dec86䇶\U000f998f\U000316a8»Ê\U00011eff\x15i\x9dÚ\U00098732\U00094810b\x14\x9f/¬"\x88\x9d\x05\U0009278c\U00092248Ô¯ò𥡪𣹁ãqáúLI±¡\x88\x85\U00014fb1¨´\x8cCC}.\x87vÜæÐ:퓅Ò\U000d4ff6\x00\x13\x00\x90\x15\x12m\x16\x84Ûx¨æ]\x00»Å\x15Q\U0002fd23Êy\x8f\U00047a2a¬h\x9f\x00µ\U000464af²\x8c\x80 h:b\U000c7d9d\x07U\x8f-ªÇ©tíÑêüÔ\U000e58a2óL\x9aì\x18»d\U000bc229îôÑ}\x1e`\x80\U0005436d\x10\x15©³\U000b954f\U00068876\x9e\U000cfcf1h¬\x84\U000cdf09\U000f9140p;\x8d\x0c\U000b36b9Æ>\x12)[\x942É\U000b59e8§ÕDf\U000e906f\x82\U000139f5'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -28, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004058s
====================================================================================================
2025-09-18 23:55:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['©', '', '\x0f'], 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['©', '', '\x0f'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003483s
====================================================================================================
2025-09-18 23:55:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003957s
====================================================================================================
2025-09-18 23:55:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¿N\U0005dbf9\x9e¼\U000a3781\U00079801Q', '', '4«;', '±', 'ëp¤¯\U0001cc26w\x03}\x11', '', 'ä\U0005ac9cW=¡Tp>Ä}Ý\x04'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¿N\U0005dbf9\x9e¼\U000a3781\U00079801Q', '', '4«;', '±', 'ëp¤¯\U0001cc26w\x03}\x11', '', 'ä\U0005ac9cW=¡Tp>Ä}Ý\x04'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00395s
====================================================================================================
2025-09-18 23:55:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['òN¯\U000f943c¡ú\U00093322µ:']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['òN¯\U000f943c¡ú\U00093322µ:'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004109s
====================================================================================================
2025-09-18 23:55:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 8959, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 8959, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003647s
====================================================================================================
2025-09-18 23:55:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003978s
====================================================================================================
2025-09-18 23:55:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 86, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 86, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00351s
====================================================================================================
2025-09-18 23:55:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['-\U000c9851G\x98\x15t\U000c9f36\U00013e87WÈ\U000c389e9\U000eb8ab³5\x91\x99', '', '', 'Á°a( ', '3𗑃!\x99_', 'b', 'ôÜ', '±\U00040af5', '\U00074bdb\x058g\x8d', '\x92Ìü', '²Å\x8d', '', '', 'QQ\x8fj:pi', 'ü×\x94¼\x980x\U000bdf1fb', 'ý', '²\x05ß\U0009eed3', 'ñ', '', '\U000eaa0b\xa0ÄÖ', '´'], 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['-\U000c9851G\x98\x15t\U000c9f36\U00013e87WÈ\U000c389e9\U000eb8ab³5\x91\x99', '', '', 'Á°a( ', '3𗑃!\x99_', 'b', 'ôÜ', '±\U00040af5', '\U00074bdb\x058g\x8d', '\x92Ìü', '²Å\x8d', '', '', 'QQ\x8fj:pi', 'ü×\x94¼\x980x\U000bdf1fb', 'ý', '²\x05ß\U0009eed3', 'ñ', '', '\U000eaa0b\xa0ÄÖ', '´'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003607s
====================================================================================================
2025-09-18 23:55:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['\x06,\x8c\x83', ' Æ\U000656ebT', 'Û', '\x17v³ MVyDá/Ì\U0010a582õ\x01', 'w\x00¨\U000bd584', '\x1eG']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['\x06,\x8c\x83', ' Æ\U000656ebT', 'Û', '\x17v³ MVyDá/Ì\U0010a582õ\x01', 'w\x00¨\U000bd584', '\x1eG']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x06,\x8c\x83', ' Æ\U000656ebT', 'Û', '\x17v³ MVyDá/Ì\U0010a582õ\x01', 'w\x00¨\U000bd584', '\x1eG'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003736s
====================================================================================================
2025-09-18 23:55:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003705s
====================================================================================================
2025-09-18 23:55:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 13164, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 13164, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004057s
====================================================================================================
2025-09-18 23:55:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': 70}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 70, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00406s
====================================================================================================
2025-09-18 23:55:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': True}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003757s
====================================================================================================
2025-09-18 23:55:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003621s
====================================================================================================
2025-09-18 23:55:22 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x9e,L \x97\U000cd146ÒO\U00107b31«è×\U00064be7]ö\xa0\U000f56c5uÀÁa6SÈ\U00073db9]ìLp1\U000502c8\x8debh\x96\U000cd573O\x9fz¶\x1ftu¼Ý兀øé¨\U000bdab7\x82Ø\U000a6b10ö\x94\x9a\x03&\U00097ce7\x08:\t\x9f\x04\U000d1d6b.\x1aà++*ì_\x9b\x05\U0001e9f9\U0010d87bôÒ ³¬X-\U0008e197B\U000ef002\x8c\U00087a6f\x19ð\x05\U0004c4a7ï¼FV\U000cae82}\x88È\\VË4\U00075ea2\x87\x14ÈÄ\x03\U0006b0c4\'õ\U0008284fn?½×\x0eW\x8e\x11Y½\x89÷ucQ!\U0006cf0a^ú\x93Cø\rÀ\x1d\x848_\U000eae0f¶𩟌𫈙\x83\U00013c54\U0001600b\U0003c471P\x7fæ\x95ÒyE>õ/\U00080bf7yl\U000caeac\U000c95b5ß~\U000ca353\x1f\x11\x10\x1a\U0010beda2 \xa0×ev8\U000418c5\U000bf451\x9d\x9b|\x87\x19²K\U00107101¾Z\U00079f82\U000b0b6bÚ[½Ï\x1fR9pWÈ\t©ìkY\U0002f3dfòß{\x8a\x96𩯔H0\U00043dfe-\U00097fda\U00085fc8\x9420\U00058530ÙÜO^\U00050fd3\x06¹🈙\U0007edc0Ä\x9e\U0010195ba\x10å¥\x9f\x12ª\U000f1358&|Òè\x93u\x7fÈ\x93\U000614a5Ae\U000f163c¹$B\x99\U000dbadc÷\U00041c68\U000da786#c\U0010b7b0\U00108bd8\x1e\U00109300\U001025e4\x8e\xa0§Û\U000f5104;Ú\U0004dee7¼(\U000f8e95\x98;\x9br\x00øR\x01\U000b9472"¨º÷\U000ec132S\ny\U000d65c4\x17úÂ\U000d14bc¥ÒÞGHE\x178M¥d§ë\'\r½\x0e\x00á«9k\U00045a5bÞåjY\U00066809펍;~Ò\x85ú\U000d143b\x0fdèdY)\U000e9d04È\x08ÊØ\U000bb5e2î»Ø4\x02\x1a\x05\x9a\x0f\x81Æ©\x07q\x16{+\x9ax𤬙\U000ace8a\U0002f565;\x999\U0007d046D¢+W~M\x91C\U0009c5e5\x01²°ä°ÑÄÿ\U000b8baa\U000a6c6c«GÊ,\x87\U001007dd\x14p{\x93\U00056f0a¸+\x1dS\x16;\x83\xadåU\U000ef063ÓEíÛ\x00Ýo\U0008d447\U0005ef8a\x9b\x9d7S×\x92\U00077b55\x0eÔc\x075©¸è\U000cb9faÜ\U000965e9)NÊ\x9dì;>`"\U00053a88ÿ\U00068a16^}0«-ÖÖX&¦\x03\x1cÙ×\x15Û\x02\x8d\x8a𫏉8¬_\x15ß\xadS´\x15³Düÿ\U000ce21b\x0f>𝐠M\U000403d2\x0e𪱶\x15¾\x80ïr{\U0004b16d憂\x82)\U0005c3409õ]M\x80Êð¦X±\U000e60ae\U00031687\x07Ï듶\x9fu¾\x80I\xadæV\x07\U0008f0558±~ì!«\x02ÿ(\x19.\x1dt[o\x7fúb\U00083de6\x90\x8c𤹮A\x83\x1f\U000b5e71\xadâWb5ÉBãº\U00091f6cG\U000a3a9b¥𭲨\x83\U00090f59¢\U000a36efé\x93\U0001a92eÁ~\U00067f2cõ\x95&\U0008aabb\x8aj-Huö}\U0007234e¹G@ÔÇ\U0009cf51-;ÕëOW럼¢@\x0cN©\U0010511f*Ý%òoß\x83y\x15E¦\x7f\U00073ef6?v\U0009c3fe\U0008d7ce¥u\xadÈ3Â¸â𡛲\U000e1571Ã\x18餖\U0010d035?\x8e\U000c5422M©\U00103fe2y-¯\x7fÚ\x9b\x16\U000d0c16\U000dc647ö\U000930b4\x8d\x94Öm\U000cc8da\U000ff97fÞNxB𗗔\U00072a15òº¡\U00060c0eg\x92\x87Â\x07P𢷩c4c.õ\x7f>ÿ5ÛûþY/÷\U0008b382\x95mxDß,î\\aç\x1cX𔕻ÀDµ\U000dfd75w𑊓\x06*\U0010f790RI÷·â\U000c6e87ß\n\x18.´\xa0C5^GÎZ"®\U00096709©¼n\U000bbcd2.\t\U00060990Æl\x9c.\U0001c3f8\x10Ú\x99%\x8a\U0009210dᖠjQ\x84ô\U00033600\xad\U000a2e08¥[\U000df7f3\x92%0ò#}/w¼\x9cC鏸\x08ö|{§\x7f\x98\U000a85f6\x86\x99\x86¯Ü\x98zeÌ\x9d;¿𠦜\U0006dd49¥»|\x02Ê\U0004a7d3⃯.Q\U00062bf4bHX`\x15ô\U00013457\U000a9ed4d\xa0§¸𡒽k{\U000444d0xcÊk\U000f00e3ó\x95ðdû\x06³òãf\x181\x9fòñ]\n\U0008fe77Ì]áÏM\U0001fe4fÉ\x1ck\x9b©°\n(\U00050a44Ä\U000d2932\x11´Õ\U00080635öÙv\x99\U00086718\x0f÷å\U000a472b_\x87[\x87>ê^\x02\U0004358e\x85x\x93\U000e30c4#¶¶äª~\U000d10c4I>\x8eÐ¾X\x99UîÒÔ°¬\U00058adb\U000fcc90\U000d7bc6æ£@\U000ed767à\x99\x9ax«¬J©ÁL\x9d=þ\U0004f24a°:¨Àg y\x7fCµPè9NEo5?\U000828b9\x00\rq&ÖÖ\U0002ee6e\x91\U000ffc8d[Ùß¢Ì¥.𘀭î\U0003156a\x8a\U000df431pºn\x19ÔÄ\x7f\U0003ae80\U000425d9Í+\x1a0\x07Bæ~>é@\U000cb5d6EÂk\x8a\x8d\x1780ï𤸏/\x93\U00056373°\x0b\x83\U00054bb1\x15\U000b6f7aéÄoD\U00056375|\U000da1e2y4³Ý\x1dq!\x187(\x03\x8e\U000cbb3c\x1b\x80&kõàâé\x13s§\U0009dc75"\U000f0cda\x9c\U0001c665+Ñ\x8fHáÅ3E\x12\U000c447bÜ#4°Àk½Ó\U000851c8Tø\U000e5e1bî\x86ìÉõ3𘕃\x9c¢\U0003354a\x00®ó¿\x82fã²N½î¹\U001005bd\x1c\x89\U000dc744Y\x05\xa0µÓY 9I¼\x02î\x97±4¥caÇÛé§\U000b9de0Û(ª\U000da310\x02æ\x0b\U0010121c2Ñ?\x0f\U000352d6¯\U0009cd1b\U000151d0\U0010c6efs\x94Ëo\U00063a9bñ\x8bt\U000ca3d2\U0009f3cd\'Ì¾\U00097e42\U00059297|\U0007c3ca½\x0b\U00012cebõ¶\x11ã\x8aVt\xa0»\U0005b25c\x8f~ï\x9dÏ\x0e\x84ÁÐ\U000afb01âê\U000d45d5¶mù\x9b7\U0002fda4,¨\U000b8d06WÎkL·\U000c74e2Y4\xa0\x96Ù𗗿\U00038a35\U000766edù¶IU(Íáûë<\x0b.\x88½⣑~뿑P}\x9dE°´ènº\'`g]\U000a6051¦ã\nr<v\U0006e0c5\U000fc0eb¹\U0007965a\x7f \U0010eb29y÷Ø¼\U0003579c\x0fé¾@(\x9fêý\r\x951\U000367de×Óúìe9⼲gµ\U00019701·ö\U00015844Ø\x9d\U000f7ed8®\x91\x1e\x8f\x87)\x1bºP0\x89\tIb\x95ÅÏKÒOý«·\U000f8e45Ô\x0b\x8c\U000fd9a2±¥GGÜ\x0eÆ\x03䶤?[/s\x83S\U00041ffeõ\x06ð×@¦Ò2b@\x18÷"\U000ecda93[ÖÉG\U00054a33o¢Qÿ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003615s
====================================================================================================
2025-09-18 23:55:23 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['H{iz|H`\x9aqJ¶\U00095658\U000774aba', 'Ù', '°.\x08\U000fd124\x1d\x89\U0002fbf6\x03', 'ÄÝe', '\x9döl', 'y', 'ßY', 'QA\U00098056\x0f\x15@', '', 'ñN\U000fc194Ð¥A', '\x9d\x07\x1c', '7#', '\U000f611d¢\U00032fc8Öú!x[[Y\x0b+\x97\x97\xa0×ûG', '\U00093c7a', 'ßG\U000742a7', '2\x08\x11¶6F\x116wß\U0004dcc0ãè枡0', '\x11', 'w³\U00055af9\xadW𮓮\U001035d0J\x1e', 'D\x8b', '\U000bfa7f÷\x85±'], 'password': '\x1a"õ\U000583beD\x12¶J\U000c0238GÓ\r¯Ø=³\x06\U0001196b%\x0fô\x1d¶Mo\x8céÛ.Øz¼³àsJB\x0c\x87\x99$&ÑtW\U0003625c\U0007e9fd\U000a42cdß¥Ú\xad\x14¾\x01@q8«\x04q\U00040860𮮠/\U000496d91\U001068989\x81f\x86À·D\x0e{ä¥\x84p\x08\U000fcfe0ôV@É\U0004a0fa\x7f-\U00092982ª^G\x7fb"µsVóÐ\x12줫ëø"\U000384b88\nÃ\U0003f6cfÖÇ\U0009bd53\U000faf25Nª\U000dec05.\x98\x81뉪Å\x85\U00093666É\x8f\x17÷ß\x8f\U000a1ec1ª±𦒉¦í\\Æ\U00036a22í칧å\U000fadf3V¦\U000d8de5õ\x0bËá\x10³:\xa0@ öÃ\x87\x1c\U000be406\U0007ca6f\U00058b35ÂG<\x05\xa0\U000d0d46K^ >&y\rÃ9\U00072e11R\\r76\U0008b35c\x8a\x02\U00064347º\x18äq\x15\x00\x9dÏx"AG³\U00048eb5Å\uef5do\U0006cabeÃå\U000b6b2a\U0005ac59(T_Q^\x04»⬃\xadV¼³Ð0\U0001d2d0ÍS|Gn奐)\U00067b3a¹Up«!¾\x06\U000d7188ô\U00047ddcÀ<hÔ`\U0005465b:\U0004be29GÔ\x95.a^ÐþBj\x1aðHG&MÆQ\x88H\U00054578\x9f\x83ÂÂ\U000702a42 ª~\x008ø¯C\x14D\x0e\xad¼\x18!A\x0f\U000d287a\U000b675f!9h3:>\xa03\x98°lÆßê:\x97)WQ𤍢7\x06¸\U000ffe97\x10\U000826e5PêÕ\x16\x14\x7fW\U00048606Æ~?Z1\x03\x94矶úq]^\x83jºÛJbd\x88êà1\U0008e380Z3𤥲P¶¸»\U000f52beQ\U00011845\U0010d445ìç\U00097d1a\x0e\U000671a0OfÂá\U000fe431Ã\U0004f74e¶<¼\x87🁬\U000ec58b\U000aab72 ,þõ¤Ì\x9cýXó\U0007b8552喁O\x019\U000ba806\x07\U000dd482Uè®\xad\U000dc703Ç^\x9eû\U00044d26±\x91wDuÍp\x18\x00?³?\x96\x02ÌQÿ\U000ef31c\U000d1092\U00061228\x87𨌧\U000f6afd}僫¯ü\x1a\x9b\U0008a769s\U00072af7\x1d\U0003b5aaÝ\x812Ñ\U000d0717\U0010fa4c\x0f\x82\U000e4bcaì𢑄\x13ªc𠍍ÙinW\U00045347\x95.ß𑄟\U00039713\U000988b7¡&ÂJ\U000474d6\x01\x150káÉA\x8eö>5\U000f0acd\x0f\x12DBQ\x96\U000ada5d\x18SSé\U000feb2a\U000847e8\x80\U0007c80c!\x88O\U0001a8c6~Ë¡\U000ef985â9\U000564b5tU¢iLYq\nÂa\x01£%\x90I·þÆ\x08¾´;ÔC\nÿÿ\x99In\U0001ab07zSÜ\U000159f3\x1aL\U0007d976\U000f5100\U00090579n\x14S\x8c\U000cf9c8\x10\x13\x85\x8a\U0008771d7ò\x9eÉ\x95\x9a[¾ß*U\x0e¬\x18Ù\x9a\U0007db43ú7¤\U000bf026Åä\U00068f9drSÌ¦÷ä\U000d9f70\U0009ff3e\U000f7c9a\U000a4f17\x8cÁê\U000a7ace\x1cÏ\x01\x03J?𩮦r\U0008f3b30Êrcù\U000cd07d)7\xa0\U0008e4deEðñ¹Å\x16eÀ\U000ba23f*×É4¤쓴©YZsÎ𣖷ýÞ¶u6\x85\x08\xa0\x07\x19QÓå6\U0004d666Z\U001076ad7\x8b\x06%C\U000abc1cÌÒK\U000c1756\x99XÅ\U00037e2d\x99\x18W\x11\x8c𮍊5GÓ\tQI\U00070698ñÔÂóÊKy\U0009f207𑊒\U000c210a\x887¸GþÞ\x12\x8c\U000d080dv[§¹bà8\'\U000c6b06C\x1ai\U000c567f\x1e\x07¦z\x82\xad_\x17\x85\U000b0b5b&Õ\x7f-\x93!áëÒ¤\x93Rº\x0eª\U000d5c80;Òa\U000cc287¸\x99ºp\U0004c069\U000a3374Bàw/m\x1fÕ\x915Ô\U00084693\'\U00039b6c\x16\x85\U000ea63d\x02\x99\x90\x9b\U00071ff5|yÛ^µjd\U000631ee\U000a311fî{鍊\x18.\x9c4I\x11÷\x13}\x92q¯$\x01\U00033af6啋\x99«^ðh.\U000dbb4eÓ\'\U00046d6bÞn\x06{c\x96\U000535c7Þ\x82ôÅs\U0008daed\U000f6264b\x06\x0e\x96§𠈉¨ßÁ\x0b\'k\U000e9528q\U000c6074ò\x8fÕÁ\x95\x18Xj铋9t\x8c\tÄí\x00\x1c·Úï¿\x8c\U0008352f¤öÜz\U0007a960¢ÛÓrÂ¨0𫪮Æ\\[\U000a1ed0 \U00091d63B\U0009e230@MÇÜ𩴶¼\x90\x1e*\U0005670a@\x04¿\U0005df48ßËÝ\x0e¨釚\x9b$ÄÈ\x8eS\U0008322a\x809t ñ\x90á-µÊ@(\U0008df19n\U0005e09cÃ\x01\U00074850¾T^\x9a¯uÚ×$\x8c\U000c7722\x11\x86i\U00076ecfWÐ.\xad\x86H\U0010237e\x85\x0c\x00\x19P\U0005a0df\x0bÌ\U0009209f\x82â\x95\x8e\x91\x05²É{\U0006a191`®\U0003b293\U000fb2a1\x94\U000f1162\U000b25f7\U000a0625¼tü\x98saì¯\x9f\U0009befd¸\U000de64e,ë\U000c22d1\U00109a0f\x00\U0006c995Jè\x82\\\U00086c20eWØø3\x9fÊæ\x8bà\U0009c524I\x92\U00054bff\U000ef5cd¼3Ó\x15\U000de766¬ã\U0006708e\xad\U00045a7cfì\x97Ä1\x01y\U000a991f\x0b~\x86r𱄮©\U00019368\U000f7e29\x8bþ\x9c\x8c\U00043f9adõ\U000dd57d\x8b;輎Y4¥\U000fb6df«-.ßÊ\U000ae2f8\x15xã\U0003cb68Ì%\U000d42c8øᇃd鵶/J\U000ec4c8\x0e@\x84\x0f\U0008dc59¬¾\U000ff1abÍø\U000681bfÚ\x8dËÚÇ\x1cð\x82½\x18~\U000125f5U\U000bf6d5¤=ö[8\\¤Å\U00057fdb\U000345f4À\x8c6ÙmTÐ\U000602b2\x16\x12á\r}\x9d«a"//ùï¹ð«\x00¢tõ\x0c\x9d𦰕@\U000ae621\U000ecaba\U00079c1b¸¬Ó9\x1f\U0004d0a4Ù±f\x11m@$\x91\x02`\U000e1e9c¬uî"\x16÷\x84\\±Ú\n.\U00077560\U0007847b\x88æ®¶\x07Ç\U000412efÄ\x15Àû7_0Õ½¶4&üÔÜJ\x8e×A\U000df1c5ì*Ý½?¥z\U00054252V\x0e><j\x82\x10ô\x84\x83\rF*B_l\U00091fb6Ç°\xad\x93÷§\x04U\x00\U0007d678\x01½\x8c&\x0e¡lÇ#àÞðW\U0009a783zÕMP1\U000e17dbÉ\U0004195c\x1eT} ýÃZ!\U00078a8f\U000b967e²\U000fb627\x8dËÔ}\U00039b35\x7fÔ\U00091bb3\x15¼\x83àó\U00063383°ï\U0009afd8¡0`e\U000a335cÊp\U00064901\x16 Òüd\x9e}'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['H{iz|H`\x9aqJ¶\U00095658\U000774aba', 'Ù', '°.\x08\U000fd124\x1d\x89\U0002fbf6\x03', 'ÄÝe', '\x9döl', 'y', 'ßY', 'QA\U00098056\x0f\x15@', '', 'ñN\U000fc194Ð¥A', '\x9d\x07\x1c', '7#', '\U000f611d¢\U00032fc8Öú!x[[Y\x0b+\x97\x97\xa0×ûG', '\U00093c7a', 'ßG\U000742a7', '2\x08\x11¶6F\x116wß\U0004dcc0ãè枡0', '\x11', 'w³\U00055af9\xadW𮓮\U001035d0J\x1e', 'D\x8b', '\U000bfa7f÷\x85±'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003579s
====================================================================================================
2025-09-18 23:55:23 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 23104, 'password': '\x8e¬\xadfÒ\x07ÔSjT\x87OC\U0010e943\x9a\U000abdbeuDB \U00104299\U00106c39\U0003a8a2\x9b𮂂2¤ú\n\U000375bf\x9e\x02\U000d7d44\U000507a8-\x1b𠾜\x1b\U000800bdÝÜ9ç\U000efad0è\x99\U00094300g\U000d15b6\x1f;âD\x15\U00061950ñ¦XåE𨼀\x0b\x8e3\U0005d3ec8^\x8d´é\x1aä\U000ddda3ÒÙ\x0c\U0005aab6|\x89Ì\U000ef381$\x9fK>akÝ\U000900e2\U00069b57%\x15𝈺\xadK°Úý\U000e9343\U00082ec6`V\x02qÛm\U00074abeó\U0004021fü½𬼵𱆯å8ø,쑨\U000fbcb1Y𛆅\x9ej\U0009ff66\r|²´6!+\x85V\x0f¼a𪘙mZ\U00109a94soyÎó\U000fd8e1\x93좃2<\x03\x8a\x13\x05Í\x84\U00101277\x11\U0009880dz\U0001a3a2.\xad\x92µäO\U00085d5b«Å\x1f1\x9dò\U001094a7\x95¬\x96\U000a81635\U000d4fcb\U0001a21f\x96\x88\U0008937dk\U000d06afÏ\U000bcef5\U0007b710\x93\xad\U0008fecf\'çuB땭\U00088fc0\x87S\U000b7d15\xad\'\x82\x18\x95TË¼Ú\x1b\x9a\U0010947c\U000d5b75ã\U000414c3Ñ¦îFßV\x81U©%\x04\x1d\x83\U0006ba6e¸N´2\x95\U0006c02ew4.\U000994a6i\x8e\U000869dc\U000c9cb3\U0009ffcf\U000926fc\x98MUÛ¼ú¢m^¨\U000198a7\U00048d1d;\U000c833f\rUq\U00095480\U0007306f\x82æË^á\x05c\U000c3d6c¿\U00033e4cÖG«\x89"Å\U0008d187\x11WµõKÔ\x8c\x04+\U00069ef4\U000a19de-\x98å\x1cGý}抬u6ß¤𰱽\x90\U000d04d6`4Ó\x959`B;\x19\U000c8137ß\U000f1e17ú\U000a29d9:\U000e1c55\U00101de1Ê@¯YÖ=\U000d5816s\x92\U000f8d0b1\x0bq@GÊ!A\U0008da10au\x85\x89×@»>+\x10\x14\U0008e58aÁ\U0004ae16\U0004376fV\U00034391v\U000d116bÅ\x00\x9aÄýw\x08\U000d9ad0\x0f²\U000a75ce\U000de7c9¶°³\x11\U000320b1¯N\r\x81%îîÜÉDT"\\\U00100244è\x83f\U0007df4b³\U000b9245NÒ«\x0e\U000a8fdfÂ\x92ô\x95\x12\U00072cb1U)\x89\x9f\x12Í\U000fb5c4\U0006aff4Ékz>\x16\x94u?J\U00061d14·,%\x0cB\x0e\U0003a7b2¤w\x1c\U000c2153&Ó\U000f4d39Ý\x13O³\x82Ê\U00011f47\U00086cf1J*~\U000eeef2\x18Ý<I\U00094b08C\x97558a\x7f5î"\U0003698f±ð+\x91𗛷\U000c38adb\U00040585\x063m\x84ê)\\\U00046d5cބ\U0001664aw\x93íú\\\U0004aa17*T\x00\U000cb613Ç\U000f8978=\x11\U00055534\U0003969a\U000edb2f¦\x93µ\x91Dû\x8e\x18\U000ea719\U000a2c53\U000a84e6¢\x05\x86\U000381bd\U000758b1Ä\U00042fa30!\U000b8a0e\U0001b9d9\U0004b319\x94,p4𡗮µà\U0006de4fåk\x18\U000b79a2#B\U0003c0f0C\x8cÏ䬌[w\xad\U000ab44bN\x04·\x879¨\x03x\x03S\U00039b4fX\U001069f3\x9e\U0008da5b\x94v\U000d2373\x953\x05¯\U0004dbe4¯\U000b9eaa\U0003e232\U00033acbÃ\U000fb946 \x16V^\U0003486f𱁜\U0010223a\'Ed\U000bcdafT\U000dcded«{á¥ñ\U000ef0cf£¥\U000945eb¥W\x90\U00068a49\U000847ef¾´\'S\U000cc6e4ó\x83t\U000f53c6\x0f7É\U00046c2e\x9a&¬Æ\U00109499ÝV\U000890a0\x8ef=×\x16±\x08Gáä\x9aÆ/\x00\U000bfe85\U00073bcf¨5\U00054e93E³µ_y\U00046f03bÁP\t:Ö_\x10ê©D<â`\U0003f6b4I¹+¿\U000b7771\U00037a07\U000ded00\x88½𩠍}\U000b728e£\U0009d4346ä·-Á\U000552efù\U00079a8e\x19\U00041d3d\U000bfa65\x05\x91`Ga\x87\x89\x10T\U000632d7\U00085735\U00015910\x0f T\U00078ecf\x1c\U00040b60\U000e2872𡹛ó\U000de316ªÐC«\x12\U00076333ûm\U00102b6d\x9f>\xad\x1b\x06-Ûö\x90ýuÏ\U0009dabe÷Ñ\x1d\U0004c72dy\U000927ef\U0007af6eP\U00093e89\U000d3a05´\U000c690d®ÿ6`Î⋑\U000dca49\x93\U000bfea0\x12\U000ab4f8ÃgF\x85¶y×\x9a\x88õÏoEÈÎ&ò\x12\U0004200ce\U000ca6f3W\xad\U000338d8@¦E𨟓ôG\tNâÄì¡=2\U000411d5¿ùïþ\x95\x80YqZÜæÍ,\x03\x95î\x92\x95𣙬Z[\U0010d3a2þâiÄu)\x8d\x9c¢j6\U0009044cp\x92\U0002f0c0 º\x1f¢\U0010edc8ü\x19Ù\U000e166a\x12H¥;\x9dÃ¶~hⶆº\U0008db56\U0010949aÈ\U000972fbÏ\U0003e332Fc\x1eH\x91\x8fú\x1c\x06Ún>G\U0006e75c1\x8cA\U000f53cfn\U0007afbbe5\U00047fcbþðÕ7좿À\U000438cbJ¸Bîï\U000a4dc6\U000b8ded_£Ê§ö\x0b÷>\U00088243W¹$îrLG\U000e72abâ\U000c51c9\U0006323fNùã\U0009186c÷6ÉÅ,\x19\x9fózo\U000c2c98ë;\x10«\x940D¯[rMú¾vÖ!m\x7f\x1f.~틣Z엡\U000f9ec4\x9aÇ\xa0\x9fK\U000baecb±b\x0c&è\U000fce0e\x17\x82t\U000913b1ö\x90a\\É\U000a909a\x8a\U00050ee0\x17\'ºâ~ëA\x17M\U0006ed14\U00088218\x16åB\x92\U0005114b¿Xàðg\U000aa16a\U000ceba5\U000ea164\U000f2459\r\U00075d53\x94ôà\x8f\t,Ñ\U000bd57c÷⊖rGÆ@\x1a#}@\U0003cad8~t³\U000774a3Y\U000f7a39\xa0"È𣏰\U00099bac®¯`=\U0009a999"\x1aH¨ô\U00093340¶6;\U000b79a3¼U\U000ee82a\U000f6d50\x14\x19|ö໑É2\x9d\U000ebc13\U0004d5e1\x15@\U000a038c\x00\U00103a5eæê\U0004896baå\x07ÚiÀÁ\\\U001010f7m»Ð\U000c7b13¶mL샣é\x918F^y𬺉\U0010cfca\x07é\x04\x08\xad\U00048167\U000d365c\x1em.둗Pâ\x90¶I\x95ô?\U000a5f39\U0005e336Ð\x02±Åt\U0003f8a1Û'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 23104, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00375s
====================================================================================================
2025-09-18 23:55:23 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': 15}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 15, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003512s
====================================================================================================
2025-09-18 23:55:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': -7823}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -7823, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003618s
====================================================================================================
2025-09-18 23:55:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x91\x96ò\x16', '\x02\U000c9fb8', 'f'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x91\x96ò\x16', '\x02\U000c9fb8', 'f'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003698s
====================================================================================================
2025-09-18 23:55:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003634s
====================================================================================================
2025-09-18 23:55:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003814s
====================================================================================================
2025-09-18 23:55:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U0003717b½', 'A\U0005ca11hoT\U000eb82f𠎍\n\U0002ec42´ØÙ\U000bdca3\x18', '\U00061292\U0006d3c3', '', '\U00066428É¿\x91eï', '', '8\U0004b53d', '(\U000c30fd\x92\x89¯', '`', '\x05ÆcU\x7fj\x9b\U000e03e1\x80\x9a¯ç', '\U00069bf8\U0001eb49\x1d\x8dòÉ\x89\U000699a2Ô\U00037949ë\x9e\x15', 'WPc\x1e¬', '×\x91»\x1cÏ', 'C\x80¿,'], 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U0003717b½', 'A\U0005ca11hoT\U000eb82f𠎍\n\U0002ec42´ØÙ\U000bdca3\x18', '\U00061292\U0006d3c3', '', '\U00066428É¿\x91eï', '', '8\U0004b53d', '(\U000c30fd\x92\x89¯', '`', '\x05ÆcU\x7fj\x9b\U000e03e1\x80\x9a¯ç', '\U00069bf8\U0001eb49\x1d\x8dòÉ\x89\U000699a2Ô\U00037949ë\x9e\x15', 'WPc\x1e¬', '×\x91»\x1cÏ', 'C\x80¿,'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003799s
====================================================================================================
2025-09-18 23:55:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Û·z\U00049be4;7\x87\x05\x8bn29\U000c788d{Ì7\x88¢ï\x96½\U0008df4c¼\U00032cd8fc\U000a4750Ú!\U0006a8c9¼0\U00033fe7;\U000f9d7fqàû\U00093bd3âB\U000f6dedÐÞf¨}ù\x9f\U00045f02¡\x16𠠅°8\x1aãᡳc\U000de57e\x8c^{©\U00033391¦³6z]Ã\U0010816f\x90ã\U0006f76dêÀi\\å\U00084964\U00066485üì\U000d0e9eO+é\x18\U00037036}\U000bbce3\x82\x80ñ\U00036a2b\U0006f2b9\x04_\x97\'\U0009566f\x15Æ\U000cb7a8ÓX\x8ap\x17\x91앎\x8f\U000d4232h\U0006545eµ\U000f8dc1\x14\x17È\x8a\U000ea5a5¬µ\x15®\x04\U00094de5\U000a0e90¢\x0b{»\U00056ceb\x95\U0001e03aw\U000845cd£\x0c\U0010e3a8Îµþ\x93\U000153e1+\x00¼\U000d78a5"\x11\x8b\x99ÓV\U00035bf1\x9b~óÙ\x8b\U00092aa7\x18\x18\U0010b03c\U000f16ffV\x93K\x0e¿$\U0008cb6e𤈘¨\U0005ca49°EOM¥H\U0008e472a$\U00093aac𝅓\x12\U000ce586\x8a\x98*\x00\x14a\x0c\no,𭕣\U0010eb7d\x03\U000364fdªÐ¶,Ì\x97\x83\x14¨\x1d\x9bó1Á\U000b193fê\x19\x9b\x8d]\x1a\x96â𫊿\U000762ab\x82𱉛¶|±%8po\U0009fb7fÄÄH땛=\xadü\U000f0551U\U00072c50\U000eb11bÿ(\x8d\x89+\x81v\x12.¯\x00ñ?\U000f0ea8\U00072b65\x88\U0009129c%Éñ\U0010e790\x88\U000cfa6c·+ﵮÀs\U00107d91\x0f\U000c614c\x1c\U00089a38Øx.£\U00019441¬\U0006f905\U0004bedew\U000c79a2\x0fìæ\t\x19\x05\x01Ê\U00042c3f³æõ\x88\x9f¼m\x9f|¿b¼\U00106b07\x05¸\U000b70473\U00071854G\x9cÎ\x9c¬Ö¤b𦅐芵\x8c\x9b¬¤}n𱀨\U0005f899Ì©\x88A\x81\x19\U00072eafÈ\U00050de8\U00109f0e\\Ôî\x12«\x0båÜêÄ¯Ñ\x07\x1dv.\U0007ba89\U0004d45a\\\U000ea350í\x82\xa0þò¤¹·HK\x01𘚙\x1cX\x18\U000cbb38Yí\x01*Q³ÂR0µB¾\U000d4887µ\U000dfd0c\x8b\U000db1aat\U000ca264y\U000d8432z[ÍÜ锚\U00092a59\U001072a6[\U000e62c4\x929\x00ÒP¸3s\t?\x83\x86ågÒòüh\U000af674ãé\x8b7Ð¶\U000ec058Ð\x0e>\x9b3×\U000acdb6\n\x1c\x9b\x8b$fPÔ\U000c2fb3s¶£\U000bea83\U000caf3b\x8bôIÿ&\x88Å\U000f73be%\U00016353\U0004101a\U00101c43l\x93\x9e\U000bb566ú\x18\x18r\x87X¿\U000ba2b6\U0009a52f\x16\x97\x99\x83\x9e\x15¦\U00034df9\x01\U00060d8e\U000f60ae랏\x90\x08\x13\x88\x1d\x89\x14\U000c3881ó-𐪃\x17R)Ïî´%ë\x8aú\U0003184a\x97\x8eÏ\U000463db\U0009453d\x92\x8c½¡&ùÇhÀ\U0010f0a1\x1c\x8a\x8f\U000cf1c9\U000b7308¡.ÇfZ\x9d𫮏9a\U000ed769d\x89³\x1aý9\\Ã°\x89÷\x9e\x13°v"|Á½Äá¢\x07!\x02E\x80«\x19ç\U000c116b\x03¤W\U0009a8ec\U00075a1fn𤸩\U0010162c\x9d¹\x04\U0001093d¨\U000d0ae6íg\U000baa639yÒ2Ð\U00015ed2Wõ\x99\x98Ç\x89\x1e6𧆃Èµ\x84\U0005c48bEw\x15\x8bÛ锨\U000d5ec6\xa0\x87Ø\U0006ef58\x8d\x91Õ·\x06\x7f\U0003e11f,Ñ\U000fb3ba\u20f7¸*¸°Ëû\U00070606\U000e220bb]\U000d2d97\x8e\x81P´\x9a©\U000d3543t\U00037fa9\x8b\n\x96Y\x88J\x00ù\x13\U000ae1eazZ&ÿ\U00072f24~Y¿«[\x15𠻪\U0001c22e\x9bq\x16ë:"}z$)ð\x96\x8d½R\U0008cf58\x96ÀÉ\x84\x1a\U0008cabd¬}Ju\\\U000c6361üØë2\U000140891\U000a3d58uÀÀ\x91\x00\U0008c5f3\U000b51a0l\x18sÏ\x85\U0005c3b2pãGp\x8b³\x9e\x02.\x93ø\U000ac7f2¶J;\x0cÌ\U000e32c2C\x9aµ \U00013a74\x92\x85\x9a\x8d\x91\x01𧐑¬x\U000c593eÏ5ê\U000eeeec¯뙽\U000d83b3\x04®\'¢WTX\x979n\U00108cc9û᳇\U000a73a62\U0010d7471m\x1cþ@\x1dD ÷,¶\x04\U0003e938\x91Ü\x84\x87æ\U000a3c12\x80\U000674c69ò\U000893a8d¦½/\x8e,\x9b𦀑S«ÿ\U001033d2\U00090fdd©𪌺\x7fç¯\t\U000750c0\U00096e89E\x17\xadêÁ\U00084d1a\x14Sò¹\U000720c4\x10\U000642e9MÅ\x9d\U000352fc\U000bd798\U000b855a }\U0005025b\x13Ö²I)¥\x12\U0001262alz\U001083d9\U0007feca¶ñ\U000ded74\x1d\U0001b382KìÖÝz\U00059551\'Á¤\tIlØcß<.\U000fce96\U001052bb¬Û\U000a47d2\U00049bc5P\U000e2466¯Dâ¤M5\U00059046;FÝ4\U000e852c\r\x0b<Qò4ù\\\x06\x14\U0008fe2cÀ>\U00069668\x05.Þ\U0010ec96\x8d\x92黢\x9býy\x153W1\x89F.\x190𥟿\x96\U0006a1d7Ý\U00104461\U0005c2d7\x00©Ýç\U000b5921½:\x98\U0010c7f1\U0010e1b7¼ä\x12úÄb𠄁úMà\x88!\x96æH\x911×\U0006a21dÒTº\x8a\U00032bb6Q\U0003e901[ý\r\x12\x1dt\U0010d436\U0006a2d1?\x1c\U00081ed3xW\U00049f53K:\U000aed952\U00080d54À\x9cb\U00016719± Åæ-¬\x1b\thÆ±\U0004c8d7§', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003671s
====================================================================================================
2025-09-18 23:55:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004242s
====================================================================================================
2025-09-18 23:55:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004045s
====================================================================================================
2025-09-18 23:55:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': 'c\U000a0768ÚHL\U0009ba72È²½v¹ZMºí×𧏬«\U000e77b6D}tÖîÍFT\x96Îê\U0005dcabð𠮗\x16\x9aÛoz\x11\x81<w"\x8c}\x81\U000ea280𐦢\uf2a8U\x99\x1b\x01\x88\x1en\x07\x81\U0005b890𬲛á\U00059ec8\U000c4644Þ5«g£Í£ïAÙ\x01\U00059524Ý\U00090e89o\x16\x1a\U0005f927 \x853𤦁\x1d\x01\U00096730Ï\U000ee4e7Ðµ·ÚµR\x9e\U000d023c\x8a¯æ酆\U00098860v)0\x88\x12ë×Ô\x93\U000e7933ñûlc-Ä¼\x89\x92äl\x03\U0009e414ì\x92oB\U000e30d2á\U001016c7÷´;1h\tð¤\U000e8ed7±r\x9d#\U000541bfT𨏭\x84\x1c³[\U000d340f_~\x94\U000ee0b7ÌV\x17J2\U000f417f\U000521d1£®\U00048658¾ØªZ!*Þ\U000aedbaÿ\x8fu©+¤涯\x02°¦¡î¿\x8fõVg\x8b\U000a9216\xad\U000d16c9\x86Eã´\n\x0eÃ\x82\x16\r\t«§|ÿQ\U000f6c09Æ\U000ccbc4\U000ac0cd\tî+k\U0004870f\x81\x05R1¬\x03¾\xa0n\U0003fe71Û+\U000bc260¤õn5\U00043b57\x9dWpÜ\x0eÅ¬ì\x1f\x87ªM0Ûí÷\t}sA\x01\x8cE\x88p\U00062aee\x1b\x13B\x8e´\U00108b45\x8aj\U0007393f\x18\x1b\x82à\x17占\U0001d1f1¶\x8aòé\x075Á\x86ÒEçõ\x7ftó\U000c307c\x81?\x9a\x19q\U0003797eÜ|ï%\x96\x88\x9eÞ¯æá\U000f52ea\x8f\x95ô\U00071f2b\U000426bc\x12Ó#\x92É4\U0001ce90𦽪\U000a217a,\U00054339\U00080873\U0003baef¸´ï:\x16c\U00039665Ë=æ\x9e\U000501b8c厛.ä~\U000134c6>𤠵¦\x94¶)äD\x9byÜ7\x96𬗽\U000a2178Ùp䨞1Î\U000a50f7\x91\x02\U0004db06[\x17\x9f\x1a𩦘\U00037ca3\x7f Or\U000eb628\U0001a36f\x8f\U000dd203y·`ÛH\x15Ýãs\x88\x9f\U000199e5ÏIò\x06ö\U00098f7bX\x16sx:\x02\x86ñW\x08±\U00054a68h§è=ê\U000b40a5\x06\x1ao\x08\x9c\x8b𐘭Vaä\x9bd]øsÁæåC\x85}\x07\x15\x95\U000d46b4å.𐐄|\x9c\x8ePj\U00085114\\\x81¤\x85\U000f737f·\x92c/+\U00059e5aE\U0007a474\U0007dac9ç¨\U0006083eA\x89R7\x90\U0001cbc7\U000997eaÊ\x13ã\U00061746éZK1\x07\x14º\U000932aa¾\U000d0edce\U000e8542{¾\x85£¿\x1dsÍ\U000f703bµú\x11\xadÝ¼q©ßC\x99\x02\U000de1f8-\U000d8c9f$]\x89\'\x12Ñ\x1d\ue48a\U00097aad°«\x9a×©jg\U0006ef31ª)\x9e\U000ceaa0\U0005a2dd-\U0005544c¼*\x07¬¢Ï8cº\U000ef1ccª\U000143b2jH\U000b7405üð©²H\x81\x8bý"\U000a6c94äï\x17¦\x1c\x86öËðÜº\U00035b82\x11ñÑ\x7fÉ\x95𬬴ù\x9b\U000332d0º\x1eñH\U00088ddd𬖌aJ\U000db6b7¥j𭸾\x1eqé\U000a53bc\U000efd64oÖlµÙ\U00062d76\x99^\U0005666f\x80\U0006542f\x0bÒ\x8d{v7\x0cã\x8d\U000917a6ãÞ\U00108f62R\U000f697a\U00013a4d\x87JîWü³®ÄÔÙ\x85\x88\x00\x1cyÊÿ\U000794b3¤Kè𫗗\U00069b08\U000609d0\U000e63d2kè\x9aAüÒýjªD]|u¢\U0007f51f\x96Y\U0008f77e\x9f\x8cÓ\x86÷a\U000a90b5/%ß^È+\U000b1375\x1d\U0007b0af\x97N\U000bcee3\x98 D\U001012bb\U000dc681Ë¡MA7p£;p\r𰇞Q2\U0004976d-g¼É«\x17ËG\U0006e70a\x10ùi\x13\x9b÷ñ\x84\U000e8ef2]L´\t\U000f2246\x96·¯\U000ed519\x8eÄÎw\r\x92\U000b3143ÈNS\U00018e0a\x00zþ\x17\U000f732c\U00032a93똊\U00076433NòØÚ\U000b5457\U0004bcfdnì6D\x9f=ã\x92,\x0e\U000cee2cÚ{M\U000a22ab\x88:\U000c6116𢐛\x91\x9fC\U00105334G\x18N\x1as\x87@§É2\x08÷¾rfh\U0007d025æmù\x98\x94Ò¦,\x1fß^=!\x9dÌ\x13\U000f1a63&\U000f89c3K\U000e3d7c\x1eu\U000d7efbE¬^\x90\U000ef7ac\U00010d3a¥\x1e\U0010b0e9ZZ¾X\x9dRç\x18f\U000d8476\U000da294\U000335fb\x12\U000ba70c¬\x9c\U00014d4a𢴤7Y´\x91Ê}âê\x1aRð\U000bb611esQ6^4Ú\U00040b24 d®yÀ\t|°}=\x0e\x08@\x8f\U00015268콤\U000c185eOs¹\x83þ\U0003f7a1VY¬\x88ºËC\U000ec5b8Â\U0001ad83JÍ\x91\\`·\x17\U00031dab\xa0\U0006f465\U000ca122£ZâWt}P\x0b]»°h\U00013447\U00097d0f|E0\U000d86c1æJð/ÉÊ𣯣h¨𝕤æ\U000518eeò\U000a56e3\U0004ac0eWÉ§r\x1b"lQYùÆiÂPÍâ\U000e08d4\x1b»\x13\x11\xadß^E\x8b!ç¥Ý\x1dÕ÷\U000c2904(ZC\U0006bb3e\x95¢\U00084644ª\U0001c66e\x1eSù\x84\U0008c725\U00106eb0\xa03\x0eÃ\x0e\x92\U0009a41eË(@\x10\x07-Éö\U000ebfb2ÿ\x03³𑣋ðM\U000746df[\x917\U000a77c4\U0007de37\U00089560\U000fe18f<ôS\U00101921ªº\x0e\nx\x1d\rÓ\x8a¸c\x01T\U0006c8f9\x93\U00109c22Ðå𫬕X\U00062b5b\U00040804p~ÎF!\x07uÑ\U000ab3d70Ù\x1eÈF+Ò\x1a)\U00014264£ºhwV_½ÕyGc\x81~\x8eõᩚ\U0008bab6[áý\U0006a7a5¾\U000db0ce\x10î<¢Õx®#ÝÜ÷µ©*)\U00076ed5\x9fT\U00070e2aà&\U00085a37\U00107f70a𩄷\U000c16c6Ú\'\x1b\U000dc1e3\x0e©\xa0E\U00053250\U000e3b29\x87\U000d4873\U000377d7\t\U00032bda»\U0010c33d\n\xad\U0001ed89É\U0005db152iÁ(µ\U00083370,R\x1eÖ\x9c\U000b15bdM\x1c\U000e99ecþôÕ|ÇèY|\U000bfc22\x91Wh\x83\xadýn´𘥒ÁN\U00085f33F5\x0bëÁ\U000a6d15\x1e¹×V\x05'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004609s
====================================================================================================
2025-09-18 23:55:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004256s
====================================================================================================
2025-09-18 23:55:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004696s
====================================================================================================
2025-09-18 23:55:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['±\U000781ac\U000f67cb\U0009de4e\x9c\x7fh5\x08\x90ñµ\U000e21d3gFò', '\U000f97fd'], 'password': 88}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['±\U000781ac\U000f67cb\U0009de4e\x9c\x7fh5\x08\x90ñµ\U000e21d3gFò', '\U000f97fd'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 88, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004117s
====================================================================================================
2025-09-18 23:55:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['0𧱑B4W~', '', 'O\U00088c0d2', 'u\U000a5069\U000c58f6r\x19\x9a\x022\rE\U000c4f53h'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['0𧱑B4W~', '', 'O\U00088c0d2', 'u\U000a5069\U000c58f6r\x19\x9a\x022\rE\U000c4f53h'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003842s
====================================================================================================
2025-09-18 23:55:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00679s
====================================================================================================
2025-09-18 23:55:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': -29110}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': -29110}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -29110, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.008858s
====================================================================================================
2025-09-18 23:55:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ý¿\x04¿', 'Ê#i@2', '\U00078abbä\U00064849\x90\x93÷', '\U0006a48c\x90\U000459a9²Øµ\x89òo \x13\x8a7à\U00098634', '', '\U0005ea2c', '.ë\r', 'ÒC&s¤\U000ffc8bòÊ]Õà{<}¨CÒ', '\U0010624eÉ\x8aþË', 'ÖK', 'ÀÔhÀ\x8c', '', '', 'j\x87\x90\x89\n\U000e4eb2M=;ñ)\\èpº\U00107b45WO¯R', '/\x92A', 'ä\x02ï?!Ez\x84\U0002fbaa²À/\x1b\U0004e2cc-\U00092c79bbz', 'yG𦔯\x8c;'], 'password': ['Õ\U0009d366Ü\U000f81db«%¦x', '\U0003485e', 'Ê\U000f4223', '\U000e8d36\x90', '\x85y\U000bf31d\x88', '\U000583c1\x95', '\x86Î\U00016088Ù2KC', 'c0¸\U0001926c@', '\U000bfa9d', 'WÇ\x1b\U000f1c41']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ý¿\x04¿', 'Ê#i@2', '\U00078abbä\U00064849\x90\x93÷', '\U0006a48c\x90\U000459a9²Øµ\x89òo \x13\x8a7à\U00098634', '', '\U0005ea2c', '.ë\r', 'ÒC&s¤\U000ffc8bòÊ]Õà{<}¨CÒ', '\U0010624eÉ\x8aþË', 'ÖK', 'ÀÔhÀ\x8c', '', '', 'j\x87\x90\x89\n\U000e4eb2M=;ñ)\\èpº\U00107b45WO¯R', '/\x92A', 'ä\x02ï?!Ez\x84\U0002fbaa²À/\x1b\U0004e2cc-\U00092c79bbz', 'yG𦔯\x8c;'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['Õ\U0009d366Ü\U000f81db«%¦x', '\U0003485e', 'Ê\U000f4223', '\U000e8d36\x90', '\x85y\U000bf31d\x88', '\U000583c1\x95', '\x86Î\U00016088Ù2KC', 'c0¸\U0001926c@', '\U000bfa9d', 'WÇ\x1b\U000f1c41'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004116s
====================================================================================================
2025-09-18 23:55:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '   '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004186s
====================================================================================================
2025-09-18 23:55:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'ûî\U0004a6481\U000a8efbꈣÙUnÿû\U00034e79ë\U000cb164é\U000f7670\x86\x03\U000ce728\U0001e68c\U000f6355\x8aÓ\x0b¿£\'õ§\U0002fae4)\ne\x0b\x124S5\U000e1247\U000f2c63\x1a?\x88\U00056169\U000893c0\x9d\U0003499fðF햯1ªs\x00ÕÝ\x85Ìº\xa0H^ù\x8blp\x8e\U00085deb*uòÑ\U000b2e2cFio\U001011bf\x91\x1b\r\U000c5381Õ)\xa0\x03Ç\x1c¨D\U000d5c10µöv\U000b10c2\x87삝Ï`ø\x85\U000cb40f+\U000ef99cx\U0006e0dcoçE\U000403c4Ý\x10\U0008d9a0ë8\x8cÅå\U0008b83aå\x7f\U000e90a4\U000a95d8\U000fee86\U000a8bf8\x89\x94]«(ë\x04\U0003adeeã+ñ\x92\x94\'wÞ\x1cF\x13\x81\x91\x07æw\x0b\x97\U0006fe4e\U000430b8Ð\U0003e695\U000e5eaf\x18\tRHA\U000f8eb5\x92F\x88\x1e=4\U0007e15eð×\x9f\U000f748fº{\U0008c447\U000a7acfT\U00106580\U001032f6\x0cÿ¿Ø\x86³\U000d41faL°È\U0007c750~\\\x12(¿\U000c1732a\ue7d0\U000ff7be!\x0c\\ò\x11TJy*\U0001db68í\x05\x08\x9a\x88\U000a02b9\U000740a2\U000912d9\U000ca27b\x04\U00087b41\U0001947d\U000d9fedë§Ñf\x92\x9c\x95ø\U00097ca6\U00032ab8\x99\x80Qvø\U000357c0\x15\U000b2eaaDyÞ𢓣_x\U0008a14b\x8c𤱩kÒ¬ñ2¨\U000869fd\x1f\x9d\U000fbd13\U00084a2azÚº\x9b\U000c9df0i\U00089720\'\'凐𒄱\x8dÕ;\x8b\U0003e29d\U000d49ac\x16\U000c7f79a½\U000c0e5fÜ©\x83\U00108c0bj\x81JÞ\U000d78f3\x0e𡉶\U0006f89a𢩝^<¦\U000fb3dft\x03\x8d/¢\U000600baÂ)\U0006fcaa\U00039e52y¨æ\x03\x83ñDpÆ\U0008530c\U0008f1f3à4\U000123dac@á\x8fYIÔ\U000557c9àè+?𤖎¿\U0001cd4c\x88Ü\x98\U000cff7d\x99Wè\U00088019\x84Bf:\U000be25dÅ𢏸JÄ:ë\x07qC灞_«𤝗\x8fJ\x1cª¬ #l[49\U001066a86\U000d85bd\U000ee6e5ºçú\x9c\U0006ed51&\x00\U000d8a6f§\x9cÔ-?\x99©xÚ\x18\U000803daçæ³Ëó¾\x94\x05â\x95Ì´dÒ\U000895e3Ô6\x85ÏcÛ\x01\x81Ye\x96\x05\U0009cce9\x11Ñ\x00N\U000e2606\x90ÃIÁÚÃ\U0004bb652âyÐ\U000d0e17\U0010aae8\xa0\U000ac340\x91\U0006934e®¢På)\U001057a9\U000b6857â\x8eÑw\U000c094f\U0005001f\U00041640\U0005c306ú.Â\x9bÏ¯e*¡ò]êç\U00038b31ÄM¬h\x98Ñ"\U00070c07ÐÃh$=\x19§SC:\x8a²\x9e\x0cÚõÊ.dKP\U000be2ff\x1f-\x12(\x07×\U000f21ea\x03\U000e12a9c5\x8câ\x1e\U0010bb10\U00039c3b²\x0e\x1b¬9Q\U000e2407\U00034627`Àñyº[ñò\x15N\U0001a422\U0008f6d1!9ÛB\U000c44fbðÀ$\U0008bafcö®k\x1c\x98\U000d4da76iK¿\x12»\U000ffbf7»9\U0010d717\x80\U0010b5f1\x91DrÓKM\U0001b89dH\x18\U000a6d1d³c\x1cmlC±õ&¿ꎧh>\x93%ÙÚÿ\U0007ab5bbVÉ1n÷\U0010038a\x9a¾§k\x88÷aÝæ\U000481ee\U000f5f18\x92\U0003d456Y\x98A\x95V\x8fC¡\U0003872e¾z\x8a\x0e6r\x94Ä1DìÒwâÀ\x0ct«\r\x1båè·Y>\U0007b8d8\x15\x0e\uf86cpÄä\x1fâ\U000fdc82Ð\x86b4½A𰰬\x80z¾\x1e\U000b09a4y\x15Ø\U000a85f3\x90\x15\U0007a8d1\x94+ûIM\U00058c6c¸æ°\x958W\U00093099\U00038005\U0010bcf8ÏÕª\U000a4a38Íb\U000dc1c3E²\U00075bc5*\U000f90c9¨¢Ê\U00069427\x06Ü\x15â\U000f7837I\x18\x9d\U000e4b21\U0010828f\x8bÌ0Ë\x16}\x0cÿí:\\ê\x85J/´ýh±²\U000edb67Ýºl<\U0010a91c®\x0fAãÅg1IÚ𣺔çCB\x8b\U00054c2f\x84ÃðE¦\x8aÎÇ.𤹐ê>\x17𣨿\x1eP躆ñ\U000b0c48"gÑ|Ç=\U000430b7Õ\U0008d108H6aúÄÇÂÛ\x9d½?ª4ÿ`𑋸[\x8f\U0003279cÝc«\x1c\U0009adafÂ\x8f<`b0È\\\U00043b44\x7f\x13j\U000d1f66\U0005e63d\U001089c9@\U000b8061(n$³¶\x87~f+\x94\U0001c997{r\U00039515b¡£Ë> \x83|\x97\U0010fd0a\U00035ed8\U00059692\U001044697\x03!V<~\x02e\x84ñ\r\x99ÒY\U000a453a*\U000c7bf9Ö\x16ØBé\U000e8271Ì\U00100990\x08 \x83\U000f51d9\U000cd9d9\U000a0579[\U000c7b3c\x8cIÉÅ閽\U000e7033\x17\U000a9398\x18N\x86¾\x8fä**ùÄT\U000e2249\U00106d90\x03l\x18𥪄Öè𩘪\U0004c354\x8c0ë\x0c8¿\U00094cdb\x8cíGX\xa0@\x84%gë\x8d泆\x0f\xa0i\x8b\x93]\U000f6d40\x99\U000155ab\x05þÚ\x91ªU×\x83ã\x05ÄÃü9 \x8f\x90\x13\U000e9d5c\U00038eb1PÒnÂ\U000f1be8\U000d0556l<\U000d4014\U000d1c2aÛ(¾!#\U00048980\U00066d60\x18y!Ü_\U00043130\U000925d8ýù½N𦖣V§^\x1dÓW\U000dac2fÄ\no\x1b®W \x13\U000b927fÄ®a(f\rV\x0f𡩯h\xa0\x8dRÿÛ{¶ô\x8c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004159s
====================================================================================================
2025-09-18 23:55:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004019s
====================================================================================================
2025-09-18 23:55:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -609551753, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -609551753, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004311s
====================================================================================================
2025-09-18 23:55:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004376s
====================================================================================================
2025-09-18 23:55:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [' \x84', '咈\x91|\U00105161¦\tûV\x99i\U00104b73', '\U00011ab6'], 'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [' \x84', '咈\x91|\U00105161¦\tûV\x99i\U00104b73', '\U00011ab6'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004739s
====================================================================================================
2025-09-18 23:55:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "<script>alert('xss')</script>"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004076s
====================================================================================================
2025-09-18 23:55:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¦XãzáæzSy\U0010db29~', 'Þ', '=\U00045b41\U000d5db3T\x04', 'Vj¨𬳤¯\x88\x9a\x06ûû', '', '°', 'Eû¸Fo']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¦XãzáæzSy\U0010db29~', 'Þ', '=\U00045b41\U000d5db3T\x04', 'Vj¨𬳤¯\x88\x9a\x06ûû', '', '°', 'Eû¸Fo'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['¦XãzáæzSy\U0010db29~', 'Þ', '=\U00045b41\U000d5db3T\x04', 'Vj¨𬳤¯\x88\x9a\x06ûû', '', '°', 'Eû¸Fo']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004151s
====================================================================================================
2025-09-18 23:55:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': '\x90½\U0008cdc9°X\t\U00081136S_\U000af1db\x02ÔØ#\x13\x9eñ\U000a7e4ett\x13&*\x04L\x93é\r\x01ôÁ턊qy\U0006acfc\U000b53ac\U000f0e5dåÄ4\U00090238\U0001c591𡵬&\x8cÖç\U0006644a=\x8fÖ\x96\x1dcQ¬®`\U0010f3ca0Òø¦\U000beb62x\x91ÑNT²)L\x16\x0fº\x89¸þ\x9c·f\x95\x85D\U0004b1d6[Ì\x94\U000af2ca\x17¼Ò¾Uy\x89_zªÝNæ²n\U0006014d`\U000fbe7eZ\U00019e53½øÎ\U0007f5b60È\x16\x01è\U000953dd{\U000b265aÁ\U00096f5b-ÔQ\x19\U000dab11ß\U000c957dì]6\U000da0f6ì¥\x88\x12\x01î©×\U000d9bd9\ue133\x99ó\U00051ab4<õ\x00\U00034128¯\U000a72abé¿\U000f74b1%%\U000712b6Ú\x97¢\U0001c0de(ò\U00057cc4¨q|Â\x0b?©𧑽\U00053827Ýèl\U000f9e85#«\x15𨄎!QhqêfðÑ\x9d»\U00039272\U000e7176\xadQn:\x05\U0003eaa6ꍇ\x08U@\U000f3782\x94\x0c\U000da0cd\x13}V𪏙𒔎²\x84VØ²\U0005e3dbû𢼬I\U00081cc8\U000a02bbÊåÂ³GÈ»\U000bee32\U00086b3d|\U0010ac87Î\U00093308H¡\x85/½\U0006d3ca±\x9d\x02-l[Êý\x94=ñ\x81ÊÙ\U0008f789>\U000cbb59\U000d2dce\x7f\x89Þµ\x0f𧧭\U000abb34ÂÁ\x1e]\x07_åÈ\U00072338s\U000f5128¿\U00065959QÏLp¾\U000ceb22\x84§;8\U00051f699\U00103f72\U00076e1d\x83¦\U0006b3f8Û\x959v\x1b\U000b81095f*\x9a\x1eÈR¯·\x96\U00055352Ö\x04fðÉe\x9e#{V<\U000825f9ø\U000743b7\U0004d16cçÙ¾\U000e2534\U000e7522ÀQõüO\x99\U000ec4994B\U0009091eY\x18\U000f552c¨À\x88BI\x1bÌ\x8bä\x1eáâü\U000e84c7¸𫍹\xa0\U000353c2𨁥\x81\x0e$𭰃\x93°6\U0001477dñÖTÊ\U0010af23\U0009b4d3!\U0010a7e6\x9c\U0003414d²´^\U0003ee3d\U000d952f\x16Þ\xa0Í\x8dD{\x88\U0009f180lt\x19¸\x8e\\Y°{E?¾.\x8cÿeiY;\U0007752a_\rÒg®K\x17\U0003b1bfÑ¡hÜ\x08#ÖOa\x06Ó¦ÛXkò8©Vã4¥\U000cacdd5\x96g\U0008969aUß\x17Q\x1d.ü¨\U000643ef+\x18_\U000a34beÐ\x90\x961\x9e\x11\x0bË\x08Ó;Ô\U00101293\x81\U000fcb66\x8fÅ\x92\x1bÇV祯\U00107acf\U000cba82l矇>\x1f¤\x98\U000ec68c¢´{ýºRà躣^\x08\x99c\x88\x19\x9eÕ ;\x03\x1f\x16\x9ex\x19\x1b0\x84R?Sjê\x0c<ã¤Å\U000e22b6á:\x01\U00089c1c\U0001bd07)_ºÔ{Û3ÍÔ"\x03\x19»\x8f\x95H\\\x80\U0006a36e\x7fA*\U0007b478ñ¦襤½\x1fø^\U0004f2a1𤟉\x1d\x13\x96®³\x84\U000316207\U00045a41ëø\x0c\x96^Õö\x15/\x139ê\x1aÙemõ(@\x82 ÿ\U00052a6ex\x88bNW6~·ÿ\U00013660\x12å-m>¿\x02¨\U000b226bäw\U0003a39b^K\x92ï\x05Eü\U000aef93\U0007cd55ªç\x1f\x82f_\U00040c87Õò¿:\U000bcfeføï\xad\U000b6856窡î<u@\x03Í¿\x150·\x13\xa0¹\x9eºV·skø\U00067ccf{\U000a6fac\x0f\U000adb98\x95\U00092c7aßO¥\x0fü(\U000c63dbT\U00041f61àI9\x8aDº\U00090a31\x8crüi𪞌S(\x94\U000c05b7¶|\x88KujßÏ\x85 끵\U000651ac{𘒜\x9f\U000c4b08º\x1dUÄr÷I+Ê\x08Ð\U0003a354\U000a43e5Í\r²\x83Í\U00055562Þ`Ç\U00031be6\U00106517\U000a6c8eÎ\x9a\U000ff301\x03\U00073ba4\x14\U0005e42f\x1f]\x0b·\U000f331c÷\x0e\U0007c659æ*ê\x8dµÚ_õC\U000a3ce2\x8d\x1ayùt6\x11{\U000cb5fa\U0006e085\x98"®\x84,\U0003f59d±}4\U000c0c37RÚ\x92Ê\x82\x80a\U000ff95f/ºF\x92¨]|\U000d1736\U00068399ýõD\xadÎ÷\U000844d6Ãn\x06xÓËF½Ê/þ\U0006957a\'\x17Í\U0006d201Ý¬Ë\x12³f«\U000119d9×\U00066d11\r\x0c\u1976ÆL\x90XG°}Êæi¼\U0001405a\U000d78b9\x8376,\x05\U000dc82e\x1c×-\U00092a0f\U000ea7bc\x05±Å\x895\x92~4\U00032878¬ó\U00075000x\x18Ñ\U000b80ba\U0006c185𮧳\x89{ü,\x87N\x85\uf49aÙ»\x9cõ\x9eÓö¡\x07ï\x8dyË×\x8cu\x0fì[\x8c\x02𣝅\U000dbd27\x1a!n\x9cä×뵄°\x92½þ\U0008b903Ö\U000336e5𬴗Þ\x9a\x16L¨\x01à^\x84E®êf\U0004d983j{\U000d8c27«¯\xadýÁ\x1b\U0008cd54%¨\U000fdfdefñ¯L/v%\x83yPå²iø\U001079b9±Qk\x1d\x10ò=éï%\x15$\x8c>L\U00091843\x93²Ç\U0008064c\U00059239=\x1d¼\x17S\x1c\U000a29e6𮔧Õ\U0001e6b6ýX\x8f\x12ù×\x85\x92çÏ\x86:Û7拉NYl\x8f\x1c\xa0\x8f\U0004c274\U000bb304#𝖃Ç\U000b1f64í\U000bc393/ÂV\U000ceb2fñ\x19È>×BR¼\x93ÿ\x18&\U00065522YßO\x8c\U00060cd9\U0006b356\x8a\x0f¶\x9a\U0010812bUB\U000f930a×Y\U000d751beÔ\x97\U00082ed3ò\U000f1d2c\U0006407a\x9d\x15Æ\U000fa3cd\x11\U00034b10uf\\Ù\x04\x8a𢑭\U00044995h&¼Á\U0006236e¸§F%°𠷶Ù?\U000b7669\U00066108\U00058d42\x8aÈn\xadñ\uf0f2±\x1c°µ\x1b\x0e\x97hFÑ%\U000c0e95+\U00072a3f\x91\U000d5b36O[9:½\U00108193æÌ\x05\x11\x1f³\U000862e1-\x1c\x10·g\x19fì\x90è\U0008ae0cÎ\x99¸´;qä\U000a8820áÊòU\U000c66bdÉ\U0004a601HÎ\U00041f7aoyq¸¯!¡p\x07µ¦\'pO.+\x9cDà\U000d062dÕõè³\x9a}ýOY\x87\U000d6458\U000bccdfl}J7y¦\U0005992b¸Ö¤\U00049439\U00077e81X.ÔI#\x15zK\x16¡ö\U000735a3{\U0010148d\x9d_\U000b0028¾\U00015449¾\U000367ff®â!(\x13\U000f9dbb\x11\x83À\x83L*®\U0003c287ì£ò\x89\x8bB\U000cceceÐË\U00035ca4l÷\U00038dd2 \U000cd01a\x17¨\U000aaa2b\x97zWóZ0×ÖµJ\x06\x1f\x9b\U0007fd2a\U000b0c34ö·q^qà\U000b2efcl\U000e7d22Hð\x16rM×\x1e`ö\U000c940b\x11<Ç:\x82\x17à\x1f·+6\'<|\x0fF\x7f\U000efadb¦®_\U000d79a3\xad\x92á\x1a\x0bB§øp\x1fr\U000c9733\U000c7dd1DhÁ´\x9f\x03\U000a0fb9ßÚ\xa0\U00082291\x92U\x18i𰖇𠟌)\x84\x83\tÕ\U0009d1b0ûd\U000f00af\U0009d297Ra\U000bc1f0\U00055b74+9µ\U000db2d9N\x10\U00093f6fèüf\U00098754á3\x87TGÏ\U0001dca7\U000cbc68U\x0c\U00046aea'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004209s
====================================================================================================
2025-09-18 23:55:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003654s
====================================================================================================
2025-09-18 23:55:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003741s
====================================================================================================
2025-09-18 23:55:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004323s
====================================================================================================
2025-09-18 23:55:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 36, 'password': -2976}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 36, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -2976, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004166s
====================================================================================================
2025-09-18 23:55:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\\\U000e03a0©x\x85E\U000797e4¦\xadª\x93\U000116ba\x08\x8cµ_\x8dÖ\x8c\U00051f93Þ6@yGÌ)OÊ\x8c\x8a\U000c47d7\U00100b62\x84\U000c8b1dj@à\x81Þ\U0008cf45\x99óÙ\U000369a5\x1a\x1a\x8e\U000359ce\U00053dcb1£\xad¿ØZH\U000547dcÙ\U000a4f1a&ç\x85\x96X`5\x91\x18\U000bea331\U000bb2eb\x95\U0010e96a\x1dÚ읅hLt";H¦ËK\x08x\U000483d55N·ÙS\x84\U000e217e\x11\U00068602\U00032662\x11\x82w\x99ÒpA\U000bc499\x89üº𑱠°\U00051f12%\x95úô|¬á\x17\x7fÕ8\x8d\U000d565c¤À\x88\U0003f22c\x07gbÎ\x8a\U0003cc4b\U00053fa2ØdÍ屓zã\x9d°\U0010b29c±Kû´\x97´\x11TGC\U000b2cf0\x91j5·Ï\U000e8b0dÂ\x955+s&GØ\U000e6b96\U00061144.\U000dc30e6¾\U0001a128\x08\x05ü𭬖\x9cõòÉ.?Ì\x04Ó_Ö8\x8a°È\x10\x8fm\x11\U000b0a14ó³2\x96Pôb7\x93Ñû|\x86\x92.Ú\x1e1\U0001fd71\U0008bd06\U0006a025Ì\x03\x8amä\x15¡~\U000f4d7c\x04æb\U000d70fe\U000f92b1Ã\x0c·\x16/¬T\U000e6b13U\x0c;r\U0003691dëf\x8aª\x16Æó¶¹\x02dÖ\x1d\xa0\U000557a7ëôùtX\x02\U0009ff46𦜁\U000c6442\U000dbc1f¶<TྜfDº\x9e\x03\x88áíõ\x17\x1b\U000a5c3a\x05ñ\U0003d2b5o\U0009f179\U0004daee\xad#\U000930f3ô\x96ã~¤\U000ea623ª\U0003a498\ue390c8\x8fºvß\U000dbd2d\U0009b48dt\x81OV\U000615bd𦿈2_\U00107fdbD,\n\xad2\x08%\U000160cb©\x1f\x9bÇ·\U00081c99\x85å\U0007d9fb]\x05·ý\U000d201fAùl\x95¢Ã\x0f\U0005cf8e£$0.©ä5B\U000e1a62c\U000aefe6\U000e4aff\U000feafdÍ\U000684feð\U000e93aa\x99Úh]¦ñm\U000abeae\x91\x88ü\U00085084𪀫\U000e863aµ7\x90\x02ೲש\x01\U000c626f\r°°;\U0004247câ\x88\x9b𱉹x\U0004983d\x93\x0ek\x165bá\U000e695f𨙘Ï\x02\U0008a428Åõöü𣓥LC\x95ST\U00059362a\x07 \U000856c4>\x13ÕEC3〿h\x01Üô\x071\U000f87db!\\¶Û\x08ä\x0f3\U0002f3b8»\U000c1dd5Æ\x02\U000d488c`»\x8e£Ù\x1e\U00108ca6\U000d1795\x8c\x1b-\U000a3f14±\x88ý$\x8a3\x87\x95¯\U000557a7\U00061c19\xad\U000e0af7y\U000e121d\U0006d0aa\x1a\U000c2d3fÄ¬\U000b39cb\x15-\x03_6\x8e\x05\x16\U0001a770ò\x9b\U0004261cÑ\x0cn\U0010f06cey\x7f=%\x82K«C6Ù¤-[=O¸ÜÁª\x04Æ\t\x8câäßW·?þV²\U000cab5fC𢗋«é\x90\x81rf\x9a\x8eî\U00099ec7\U00038be7Ñ\x0f\U000626a1ÈFOæè\x11r\x04Ûx\x89¹5\U0006be05\U000d4b63/\U00064eb2±\\ÓÔp¢Ã«N\U0010d2fe.,ÐÂᡂ$Ò\x18\'©7\x84R\U00019feerâ\U000d58be-,\x94R\U0010e5b1Fy\U0005a583®µZºx\U0003677e釞9\U00109fa7j\U000f9eda\xa0äö,\U000cce7fï"F\x83¯\U00064332\x18𠊵U\x1d½\nèt~\U00109af9.\U0004fcea\x1cQ£K\U0009d297ç^ 𠷬\U00083625Ç\x8c\U00090b8d\U000cafe5\U000524c1\U000fbdb1\U0001e3b1\U000f4293ýÔ\x02ìç\x8c\U0006136e\x03\U00108d05\x06B\U00010d7d\x13í°\x9f£\x95à96ìú.Ð\xadÓs6\x10{áCzc\x8d\U000d08f7±\x0f\U00075005\x8d\x8a\U000892bf\U000b9066j¬\x92\x9eÁÑ{¡\U000ad5c1\x17Üꫧß°\U000b095aË6\x07\x86H®¹È4VÇ\nVz\U000a59a2h¢he7\U000fe284\x0b\x05Ôæ¦áá\x9esÀh𡵺Ö\x8d\x91S&\U000bb55c\x8b\U000cb2b4ÙréRµ\U000c8e47\x13\nÃ¶²=ù6҂\U000d2695\U00096a45â\U000f5c6bçª\x1eç\x9bÓ7\U000a8eff>\x12\x0f"ð\\\U000a0bb5\x03±\U0005c892\x1a\U0005278f\U00012e14(\x0b\x8c³\x9bÎ\U000b557cµþ¯(\x94\x0e탶\U00011ea5éî>\x95ê\x16#ðtx𩠐y>rÝÁÝÔ\U00072bbb,9\x15&𪑦§B:ÓT\x92\x00\U000d4c66u6Æ7*\'\U000ac97b&\xado\x8d$`×\U00012cd4’\U00090433ß\U000f9e4e\'Q¸ü8\x0f]\x9a&\U0006945dr\U000192f6q×zì\U000e5ec7\U000850e3ÄMÃ\U000e5999¹\x8bS¢º\x03\'%¼\x9d\U00092374\U000a6401K\U001095f2\U000f206a \U00054172ÿ\x9e\U0008ec5e\U000a7bcb(F\x12dw\x12Ó\U0008cd5bGÝ\x04Z\x1fª\U00107e7b\x1cXü\U00065ead\x1c\U000e1a68eó\U000a4329k\x9eÎXêS\x04ªÈN:\U000b25d3¾\x97\x87k\x86dÕÓj\U0008f7a2N-\U000ff892xª\x00ÅÑ\x837\x08ø=G熏üÈæ¢\xad\U000aa110¹næmï¯\U000114dcSe\U000b04ae\x140\U0010d45f\U00103c12È\x87m\x03ð\x1e\x8f\U0003ed59ð\x81Ã\U000968e9^B\x11\U000bf797jô\x00\x95¾z\x9d\x8b¶´÷\U000fae63Q\x15ó\U000c9861\x163\x14QÄ:1 \x0fÏ^tü=F/G\U000a758c\U00036580\x8d\U00092f8f\x1d\U000f6fe5\U00091143\U000a5604H\U0006b629fU_Þa°ý\n\U00049f38ÄO\U000390d2#\x8aÒ<\U000977a3\n\x8f\x06ÿB~ö{\U0001a710\U00057e80:!*µò@\x1e\x99\x06ËÍ\tä\x11Í\x80$\x18\U000ff0b3l¯\x87å⪿wû¬\U000ff6e4¶\x06\U000df37ad\x82wâÇ\U0003703cÄÀ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003799s
====================================================================================================
2025-09-18 23:55:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['\U000f7655¾N¦z¸Ii\U000c5f25\U00100676 \n\x80×#»_', 'å]¬ÿ\U00095b35Gôñ𱉲Q\x07\U000a908a/_\x93\x9bÜ\U00013d2c', '', 'Í¡\U000713dd\x00\x93\x81!a\U000cb432á%\x00\x1b~', '', '', '\x1e1NR\U000e1407\xa0\U0009aefa÷\x18\U000ad746\r>á§·\x155&n\x03¥\x17l2\U00031e5d', '8I', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U000f7655¾N¦z¸Ii\U000c5f25\U00100676 \n\x80×#»_', 'å]¬ÿ\U00095b35Gôñ𱉲Q\x07\U000a908a/_\x93\x9bÜ\U00013d2c', '', 'Í¡\U000713dd\x00\x93\x81!a\U000cb432á%\x00\x1b~', '', '', '\x1e1NR\U000e1407\xa0\U0009aefa÷\x18\U000ad746\r>á§·\x155&n\x03¥\x17l2\U00031e5d', '8I', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004168s
====================================================================================================
2025-09-18 23:55:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003691s
====================================================================================================
2025-09-18 23:55:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': 71}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 71, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003747s
====================================================================================================
2025-09-18 23:55:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '\U00033175\U0004cdd1\x1c\x84𪣼<à𘠒L\xad[\x9bÁ°\U00090b57\U0008af72¤Þ0\U000aa3dfå¿NÖ.\x0e\x01³/²&\U0003538fð{#$\U00094dd4\U00070691\U000df07f\x90I¥\x905\x98𘤮\U000bde21\x8f:ÇÙÕ\x0698ú𢨠\x17E6\x9cèë¬\U0007b530{â\rî\U0003922b\x02a\x97Sä\x7fð¹°%\U000e1c23z÷;R\x84\U00057879Uãé°Ø\x83\U0004d068ÿ²]\x93\U000a9594\uf019\x91𞋱𒂋XGF\tùÙ\x85\U00089bf0H7y¼쑩{\x88l\U0001aad3Ûz\x98\U000ebeed\U0006e23d\U000fe11c\U000df6e0WÇ\x00&sGüQ\U00090156\x0b"P\nsçSºÄ¼x\x99\U0006ab0e𘡚e\x95Ý÷\x7fZä%ðü攪ä𩓷\U000d6c78ÕëᗦyY\x8bZ\U0010253d¸\U000f2a0d\x05\x8eÏ°\U000653c9H=\U000acf69,Èû¡²r\x9cÜò¡OÞ\U000358d6\\\x9a¥S\x833_\x05\x98\U00045dc4:\x9c\xa0\x14ÿ\U000e604c1¦\U00038244ÀJïF\xad\r\x05ô´\U000e379c\x9e\x85\x9d\U000baf15\U00040cecólNE¾ª÷\U0010c986nn{\U000dc37fÍ\U00091e17~\U000ef63ba2_𪝳\U0004fe55\U0006d0bc\U0001640cXz\x10[\U000a6ddcå𰖥𰀗\U0003c7f5\x99R\U0002fd8d\U000929fc\x84\x96Û9ìÔE<4\x14Y\x83W\U000f8196@îB\x10ÈÒ\U00034781\U000be4a4WZ[\x17Ã\x89?iPº¦\x83\x1b\U00047937\U000ed451𘫾0ñÓ\U000fccd9Ü£ð\U000bce18^\U000baff1\x1c\U0009c84dà\U000efc25§\U00088a77\x12\U00045e3b\x96\U00015b65\x84\U0004d4b5\U000d65d4á\U000c236a#\U000d9eb10Ðº\x86°Ä\x1c\U000c48cfH9\U0003e5643A7\U000e2c9b\U000f86f0¡Ì&\U000ed81c\x82K\x19äê🫖ûl7\x8f\U000353e4\x17h\x0fþ\U0007713a\U000bcdf1T\U000ea456\U000f4977\U000b2e8e§Ò\U0002ee98è4áæ>Cꂗ\U0004ff3cv\x01rzIùá\U0008a870岩\x82\U0008828eD]\U00041e57ðÂ\x183Õ\U000f801e)ëñ\U000ced86\x17É\x02\U00056d85\'\x82\x14õd\x8aT\x0bÄ\U000f609eÎn¼?tÕ\U00053df7 ÏW/ÁõS\U0004d3b4\x81w\U0004b044\U00108cb2Ñ\U0003f38f\x19\U000a0d8c𡟍+\U000dc2f8\x15\U000408d7Õ3\x8ahðÔ\x1c\x03\U00052ddb0½ý\x16🥝w×ÿ\U000a1121Û\x8a\x18\x1aa\U0005dad3;ÿÓ\x01Qh\x0e?£O®\n%n\U0005f8a7ùWe\U000d420f\x8dÜ\U000b2d48\x8d$\U0004a2c9cÚa|Íã¬á9°ÿ\x16\U00049ccb³wLª\U0008aab0\x8f\U00051a37)\x91\x8d\U0004401f<\U0006b1abÏq\U0007ce3fÊ>`°3f\x0eÆ%:¹\x9f\U0003f35e\x8aÐ}·¢\x8f\x880#]\U0010d493³ä\x94\x11Â\'3Ò\t/öÑ\x06À\U00060279éÃîDÜ\U000e1bd4𐬳\U00087c2f(mg\x9dU~Ú\x90O𡊳\U000e40ba|Õ\x12 ê\U0004d9a3\x05L@é/\x8dHw(òwÂ\x85½¾\x9c\U000997d9\x80Ø!\x82¬Ä\x92\U000da76b\U000b31f2·_Ã°돾\U000f65a0£Pç³\U000edd0c\x98\x08T\x00YeÛ\x1b#Bl\x81¢K,\U000d972e\U0005e0b0d\x97Ýò\x11í\U000f05615 R\U00081a48\x03Z¯Ad!𝠞øþB\x9a÷q¶5j\x14a\x07\x89Ý\U0007fbcaûÞ8m\xa0\U000829fd7°\x8ar¯2\x18Y\x0cÀ\xad\xadÀotjÍêzÂ\\ô\x1aQÑ&\x8aß0âß¹Þâ\\l@\U000fa4da½Dï\x1d\\\x0c𬅶Wÿ\U0006569dv\x15+;𢤐\x92[\U00084c91\x84úr\U00104b87Ö¹\U00035b58\r\U0010b92dl\x92\U000b3076\x14Gß§\U0004dd24\U000e7de6j\U00050369Q\x07/$𬚿r>&±>O\x059ð\x90\U000e9119Ò¹¤>\x1bÝ\x15ÒÎ\U0006a10f\x1fÞóþ\U00084a88ô:\U00037624ዤ(Í\U000645dc\'o×Ì\x8d\U000c7403\x96W\xa0O\U0003811c3\x1c\x06溙\x1eo\x16t\x9fÓu\x19hb£P\U00063482Á\U000bd4b2ð\U000c4bf7\x94VÃxdQ\U00077d7cXZ)찪¢ø{¶Q\x9d¾\U00011f42dæ\x03\U0006c4cboË𡢦\x00£\x1c\U000e896d\x8d³¢ne\U0006e78fm=9\x0f+!_¦𝖆Ñ\x0c¡Zå\x983Ú\n\U000a7117\x86Ã\x85\U00108dd4m\U000c23b6\U0010db0fD\x9atÍ\x91×e(Ï"扬ÖË\U000f3065\x9fù(\U0010e69fW\x11N\U00033ba3×}4}\n\U00091ee0^\U0010ee95\x98×\x0b£\x10¡a_ú\x9d\U0002f60eØ`É$>\x81´\U000f8f34ã0Qy\x1b\x02\U0009da4b-(\\湏\x12\U0007a12f\U000d9aca\U00045b7e\x10:\x98ç\U000ad329U\x11ⴋá\x93,\U000c0610n\x94\x0e\x05¾öû§\U000fedf6\U000eeea7%M\x97$1\U000b0b33b\U000c5c85*z\x90°\x82ý\U000158fbG#\x16𰹼\U00105f26\U0010d17a\x16¤\U00042cb7\U000da0fcUHtÓ\x80\x03zÊ\U000e0422¨må\x1a\U0005bdce𧹄Qº&_\U00080bfbu\x06\U00016cc3\x15Z\U000b1775\x06\x1eº\x9f\x0f\U000dd7869&Â;öý1ü\x7f\x7f\U000b6b5c\x0e\x99øï.í6g\x9bÂ\x12æ\U000b899dÐ\U000e3f8c\U000421eeë&0\U0010be42~\U0006c7f9\xa01néÛ\x15\x82Î^ÛXUöP\U000fdcfaX\U000b8f42`rü÷\x8d\x13®\U000be4ee@í\x92ÿf\x07Y¸\x03Ê\x85\x8c·\x15𠞆\x8dç«\x9cL~À\U0002f76dØ\U000a065fNzdgè\U000a1e02,\x80ëE\x89\x81𰾱¨\U000d65f72:\x18¨\U00091dd0\x1c#\U000d5eb4!zAý\U00031fb4Ú\x8d\x12\U0007294aP|ã\x1fcI\uebbd\x7f¯\x1e¿©\x8e-\U000aebd49Æ}ñ\rþ\x0b³\U000d45f5\x1bä±\x1bLo\x98\U000c81f8\U000d4cda\U000dd9e3\x02\x90÷e\U00104a9a¾7𧊮\U0009c550Ö\x16\x18ò\U00091d46\x8dQ\x16úû\U0010e6b7>eµØ\U00102934$.\U00095a8eÉ¸ªÓ¨\x14\x88íô~Kóm\x90\nu\U000ef0f7\x99À\U00045710û\U0008d235¤\x8a÷e\x1cÔ[½@r6\U000ca805\U000389d3\U0008dd86Í\\ë¨C\x02\x84\x90\U00050719SIXí-\x90ñ\x9a}ñô\x96ÙJ&Ì}\U0006390e¾à\x99+õ\tò\x90\U0009101e·Çó\x9e\x9eg\x92Yeú¤\x9e£\U0005dc72Tú\x01ü©»?\U0003cff07ûÅ\U00074000:\x85§<°Ú\x10Ê\x1a^á3b\U0008608f®á\x1f\U00106b16º\x8d\U000c4783V\U00072a24µÐH\x17\U000c6ae0\U00036650×[\U0010199e\x17ö\x13\U00069999ÿõyuÀøï,\U00055ae0r¾Læ\U00091478\U000b9713×Ì\x81hðø\U000c9467Ã@RX"x\U000e99b5GDßI\x145\x13\x06@\x9c\xad\U000b4e79ÅiÊºÕ`\U000ed17a\U000bf8094\U000bdb6c Y\x82â\U00076eb7\U000b12a4Üü\U00095683𖬤\U0001bdd4 ÒÕÕ\x9d¾\x84-\x08\x9d\U000652c3ZÜ\U0005a1bdpð\x11\U000c670e7èÞ\U000f0282\x8d¬\x1e\U000c3ccc\x0fK\x7f\x113\x12³À𔑋>\U000fc18dzÔXî#\U000559fa¯ä\x05Ä\U000f987a\x1c\x1b\U0009bea7\'\U000d49d0𠜔\x85*\x9b¸\x1a\U00100801\tl\U000347ef\x06Ïß\x90Ù\x10\U000a5498\x83\x89CÍÇ,\x10ºì~\x9bò\x87@rÜ·\x1eq]ß\x06\U000ae605⧐@琜\U000a702dº犙¸&\U00093552z\x9f@ÆÍj\U00016fef\U0006a3d9\U000a50f2¦\x01\x99t¹áÃ\x8e\U0010a811O\U000ec19fK'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003798s
====================================================================================================
2025-09-18 23:55:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '(Ò©\x86\x91𒍨\t2×\x15è\x8b+\U0005f51b\x02\x1eñ\x81\x92%t4\U00078f9d\x8b\x80¾ÿB4-\x80ºQ\U000d297a\ued04\U000c5ff3o\U000faf04<\x1d*\U000face5\U00065cfd\U0010eb49Dû½𰺊w\U00092395eB\x1b\n\U0009cb0c\x00Óf\x87B\x0eÿo\U00069769\U000f6dbf\r\\\U0010a4b5X\U00051b12\n;J\x89_65.È6P\x82SÃ¯g!R[ÊXø\x8d³\x88\x9b\x97x\x17Fç¹·Z·ID𭀿犤\x9b턄Çð\U00045b1e3üJQ@mìe\U000a32bb\U000f49a1/\x0c\xad\x14)M\x8e\x17\x8d·¶õ\U000c8254\x86\x97´\x90I\x997\x87\U00072249¹4\U000bcd97«\x84µ,ÄÏ8\x14\U00058259Ê_$%dù\U0001b422\U000b6b53\x00U/\x19²Ã\U00090a76\x9b\U000abcdf´æ4XO\U0003a234\U000a6d24\U000d47b4\x06\x9b\U000c1d13\x03\U0001432a\U0003c954L#Ú\t\x85+\U00066a60\x87\x01\x81\x1485\U000e18a5Ç\U0007c227\U000d31a0j\U0007b1c0\U000f04de÷ª\x9c\x04/®8±=\U000ecd19íå`[.æ\x17i\x82\U0003e865þ0)\x02Ï`Lì%!\U0010f664\x90>8ðâÇZ\x9bþL\x94ð\U00070936\x80m\x82]vX\U000e54fc\U000e5f40\U00040036B\x15\x82\x98t:\x07\U000a155b\x7f<ÄH,Và\U00085dbbÚ\U0005c4e1p¨\x1f\U000aa4d5h\x9cÚ\x00\U0008f3d3\U000f4738\U000bf8f6\x11\U000f6782òr\tì\U000ca2e4È!\x94\x0cf«\U00010fd3ÕÂ\x1d`\U000f355d\x9fY\x180¢\U0009bd92\x9b\x82åª_\x12\x03\U0009f339[@@\U000bbc81𫅓\x90\x0fïÝ:ÕQ\x8c\x80ZGG\x0e\U000acc8deó+ì"\U000cbeceÅ\x9aÁ\x11\x86\'\U000c0df4åÔ\U000aaecf\x92\U00035ce9\xa0uWc´á¤\U00010528\x9aa\x05\U000aaf04u\x13\x89茛\x18\x85êVm𨅈Çéÿ\U000fa645\x86\U00071cc4Æ\x1d$Aås¯\U0008eb6d^\x9ap¹Â\xa0"\U000117a62v\xa0~Ú欯\x1bP\U000313aeI\x1cí\x9d\x1c\U000d8c20!\U000f410dÇ&u\x83\x1f>@\x1f\x92\x9f\x0c³\x85P:\x14\U000325fd\nú÷y\x1c\U00016ea0Cë<\U0003922bå\ns\U000e8ce7\x04\x97\x8a\x9a)h\tL\x08ÚZnÉ\x06\x7fôu\x0eá\\\U0007d5f1Q\U000794bb=¬·§³Ὄ-Ð\n\U000a092c\x02\x82-\U000c1847\x13>\U00102e5b*ÂÔp¤c\U0006773f\U000a1729Â\x1b\x15ìm¥\U00069161\x88\x0b\U000b0e3f鞵\x16>\U0008c68a\U000e99b2\x06\x7fÛ/\U00098022\U0006675d\x84I\x17\U000f535cË\x90F\U000fa04e\U0005e4e2\x99Ijí\U0005bc28\x04÷&\U00105595\U0010ceffE\x92²\x9a?\'mwSD\U0004f572@\x97\x98ÕEs\U00049553³\x1dÉGÔ¥U`¶d\x9aÒzÕÑÛ\x99üsÝôâ\U000c692a¢|¬Z\U0001ddd2\x0e80\x17Æ\rÿç帲\x9d¡ý\x10\x93\U00042083í{¶\U0003b8e3\x00\U000ede1e%}\U000a28db\x89Î\x90\x11\U000b4d460\x9d\U00035c5d!Ö\x01\x93{ö9\x88\r\U000b8a81\U000686a4\U0001befbØD\r\U00087b3f£}\U000f492e¢\U001016a2\x1c|¼><Ü,L\x8c𝆊\x17òÐ\U000e977c{\x83\U0003a123õÕÝ\x96C\x16qT\x157ý\x9dMx\x91mrðÂ\U0010fb14£JÕ\U00037975Ú\U0001557b\U000d3bdcZ¤ä\x1bJ¿ñÇ®\x85ºg¬𨦡\U00109cd7\x12\x8a#\U0006a41e\U000d88d2\U00096027\x9dï𬼖l\U000ff3ca\x1b\x02EÝI\U00079bfb¬Ü7\x01U\x83X\U000f8c52\x17ÊTå\U000dd106\U00049bf5dd)%\x01è\tNù\U00109764S\x8a4(·¬\x83>\x9f\r×*5*5æ×𣉙gxâÙ\U000f7400\x9f\x85\x07\U000ec38b\x9aplºÜ\x9f\U0009dbd0\U00065ddd\x94²¬\U00071753JT\x9b&èÿ\x15)ÐJ\x06b\U0006b99bØ\x11\x91Ô@á²\U000366d8?QL\x12\U000ff634,:\x18%\U0003b87b)\U000ba7e4{\x7fÑ\x07¡\x1f\U00088148ag®£q{I\U00086f77ôv=*¼\x93B\x15\x86\x7f\x81\x08I\x08\x9bn@\U000579ed\x03\U0006345fb\U0006f527\x02\x85±䳙c\U000ef540Y𘀈\U000945df@\x1bÍ<g\x0b\x13?\U00109c92·\n.\x99𭮢¾\U0007df8dïªK\x96ÿ¶\U000bd233P\U000f6b60\x10qX\U000d959dÜ\x8c\U00051f51\U000412ae\U0007272a%P\x00\U00093ce0Î\x9f\x08\x9d\U00060e52\x07\U000a5448\U000c98fdØh£ÿ\U00067858¤Û\x82\x0e&¤\U0010851f\x15\U000b4c07Mä:\x81K\x12ü𬏩\x883@É\x15\x03\x1b\U000ad178Â\U0010d366Î¹\'Ä~\x1d퀻\U001018baQ7\x1b𥰤\U000cf7d5®û\x0có\x8d\U0005bce9ê\x86\U0009f4df¾«\x17ÏõC\x82~%\U0005b680i8¯du\U000682aeH¨zs\U0004956b±×\x0c\x93\x02\U000dd6fcmÊU\x1aåÈè\U0008c7b4{\U0009c318\x84àµ^#\x9c\x95G|\x12\x8f\U000fa196W\x13-🝤óÏBW\x85\x15\x00ok~\x87«𪩍Ñ\x12\x95B\U000c80feT\x8f', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003823s
====================================================================================================
2025-09-18 23:55:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003758s
====================================================================================================
2025-09-18 23:55:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '1¹\x14¢\U000443b2\U000e9736õË¯»\U0003d590\x99gü𮡘\U001091f1\U0010d4d0é¼\x1a\U00057869𒃌xÆ\x96\U00077d12<\nö\x9ciÂ§\U00064f88Ñxü\U0009f7c2Îñ5Ã«z\U00078b77\U000b7cdaþ\x97¹ä\x9bÜ\r\tAÙ\x97\x8b\x1b\x87«\U00013d9e\x1e;Êú\x12íÐ\x8dª¦²5\x80Ï\U0008204et\x08Þá\x96<\U00089083?«\x15ë6¯Ó\U000fa02f\U000542b9t\U000ca602¹\U000bfbe1Ñ\U0006c731ᕠky\U000d5aa3Ë¿óT]Bb»\x1f\x00z\U0008dccb½\x8d_!¬a\x86·\x8fã\x07÷\U000ceb49Ú\r\x06Í\U000a5ec5¢Â?÷Ñ\U000a15f1\r¦\U00064bdc;w\x06ZúzSjó\U000f3975¼\x00¡\x845#5\x17\U00035c2f\x19\x04\U0010213a~tµôq\\ëç\x92éº \U0006070d\t,\nZ\x9a*ÝwÙ·X)\x87#9\x9d\x13Fí\U00062f87\U000f2893\U00058478KÅ\x82Ii\x9dæ\x8eE\x92\x7fGP\U000dc5e7\U000aece8 \U0001e9ba𘁳×ø\x92þ¯ëLå\x97)\x93P8*{\U0010a933\U0001b33b?ghÜþtr\U00041c2cþì\t,0𢜊ÌïXd\x01ᨫã\x10X仢4¤«\x86\'\x078t¹ö£\x125¾焒\x83©\U000afdd6×hD³¤\x00©õ©ñ"\x00p\U000e36b0H¼HÆ9XÕÏñ\x9eù\U0005a7e0\x9c\'궀Hðz\U000edf56Ü¨\U0009938c\U0005624fV¨ñ£a\x17\x96k·d\t³õ¼\x99d{Gâ\x1dà9\U000a2b2c¤(æR1j\'ð\U000313e5\U0004c091Ð_×ÿ;\t"[[\x13\U00078604\x89縣2\x0fuÒ¨rð~çg\x84§Íª_HX\U0008c04e\x88\x0eâDcÖ\x01¥îÌO\x01\U0008bf69Â\x89Ö\x12NU÷9W¨á\x98qs\x85Þ!\noÈIárù\x1e×\n%\U00088492\x00\x1cJü^@Y\U000adc47¦¸À\U000da8f9\x94\x15j\x19\x7f@\U000d6762`ÕiNCÎ\U00048b37eÙIA\x04b \x91N\x1fö\x9dàú\x89\x86BB\U0003fd1du\x1f\x10Þë®\x1cEâ¡\U0001b489jµ\U0010a98b\U000a9ff4\x00\x95+rÛh\x9a\x08B\xa0\x1d¯h\x8c\x84𦔩G\U000b0e4dnB탽\U000ebd3d\x0fÛãÆk\U000be917\U000db857GÚ\x1c^þ\x18é\x0f\U000776e9\U000407d9®ÌôÄ\U0009dcb6\U00050a9fäÓ\U000a313d\x92\x10\x8bÍyòÖ\x02ë\U00060bb0탂\x05±\x07Ð𰰃ü\x97\x8a+\U0009098f\x14£|¢¸·\'\U00084397\x05\x8a\U000616dc\x1eÑP\x93\x1doB\r\U000853ac¹M`\U000833d7\U0005571c\'\x87l!Cw\xa0\U000e7c40us\U0004fe1dÓ\x92\x9fû\U000a0f0c\U000d53ca\x82%)fì\x0bzî\U000f7a4e¬\x10À\x0e\'9L\U00094a56\x15Á mÞY\x88Û\U0001151eó\x8b\x94\x9a\x841iT6\U000fe867Ý\x84Ø\U00015e34qêã\x01õz\U0003ac6eé´=OËÒÜå«1ÞQ.Í\x9c\x8bÓâ¢±`y\x18\U0005d823턳`Ã\U000c5043\U000e5a56ÌI\x0b7\U000b21a2ä\U000df9bbhqÄmè\x88 \U000f62c2\x15Ã¶¾&4²\U000eb532?j\x1c\x1cD𣲳\rôix_\xa0í}P\x19Þ\x9au4\x99ë\x0e÷¶\U00081e97\U000ef541\U000a84ab\n\x8d\'Ô\râ`\x9e»\U000a3ac0\U000bd809Y.õuR\x89ÏY\x17\\e¿\U0009d66e1\x03\U000a3993õ;§\U0004f099ÿ\x02áÁº\U000ec028¦\x1c`Â\x80°è\U00083cd2\x92³º\x8e\x1b2×\U0009451b\U0009eeda\x8d¢-»J°\x9e\U00107577\U000ebe8dýÕ\U0006eea7bfjûË\r\x91ܸ \xa0ª\U0003352e\x9d\x05\U000654deVµ\x8dn\x9b\x828´\U00077e35¤\x86\U0008fdda\x1f𣟴?𖣟à\U00109da2z)a#\U000413cep\t\U000d870e\x064D\U000be9e8Té𦶐]5Æ\xa0\x12\U000e26d0𱃹\xa0#<\x12\U0002f0c9²¬ë\x1d\x9a\r\x1a\U0009d4f1¡z\x1af\x0c\x86óúO¾òä\U00052942M\x0b¿\x17=\x0bªë\U00040911Â®®\U000cb815C\U00034247\U000a67a9Ö\x9exýá¸\x80\x93믞þDôµ\U000c53cb$\U00097a57\x1e\x0f\x18\x11Ë\x8c\x87¥i}øy\x08ï\x0e·\U00045509_ûí-$÷Å9Ï%e®2\x01\U000d7499ë\U001062c76\U00061280\xad"g6æ¦T\x8c\U00096375¯\x1fË\x91¢´|\U000f9312È»í\U000349ce\x8d¸¶áµÃ GÍÑÓ\x97!¶|Õ`\U000a33b9\U0005c459Bj\x08\x01¯\U00097a66´\U00054127\U0005db68¨MQ\U000c91a0Z\U000354adk\U00102ebc`\x03\U000d9fbb\U000473c8K\x0fM%¼\U000c4b14\x11\x95.áù\x12q\U000f92d0Áa\U0005c6e5àG³\U000701f9G\x9a\U000ba3a0 \x95Ç»\'ëÍ\U00066df0!\x92ᰰ\x82\x1d\x96YßO\x82\U0008648cf?¾(\x8bdÈ\U000d2091á籓\x1e\x94\x7fA\U000ea28bÊ.Ü°¿,⻚/<\x13P\x08H\x07\U000fc24a&CÉ(¬\x9d4ü\U000536f1DOÂFl𰌀ñY\U0006bdc9\x19\x97\t\x15å\x99\x9a錿¡Î\x04\U0010265dÖ\x9cX£\x02\'²\x11\x82Øi\U000e1feeD\x9aíÛO\U000eb96f\x15\U0005ffdfZ&¢GÁ,\U00053007ÿÖcu_[z\U000ed307O%\x90\U000923cc\x98\x97ZT\x9c\x0frö6PüÚ\x93Ï\U000327ee\U0008d2cd=Mð\U00065841t¢Y÷\x9d\x13ì\x7fb}xyÙQ\x80\U0008745cûò¯\U00104471íô©¨8\U000f87bd\U00088b78?ªù¢öVx©\U000ab179F\U0006f013EkÂk\x8e\U000a66b1Ë\x9dò\U000e8c9f9BÌú\U000863cf(\x18ð\U0010e617®÷WÜ`2\U0006cc52ÒÉ\x96ÿô\U000eabbbÁØ\U000f791e_í\x19\U00037761\U000f8e05\x13û\U000e168b\U0006343a\rV3{}í\U000e295d\x1b\x0fâ\U0001c55bqn²\x88p\x9d\U00074cb2\x89\x96$t\x0bm\x1f\U000da718?\U000cc0a7±\x96æ\x8bû\x9ff\U00090f1b\x9e\U0001994f_\x07f^^_\U000c0cd1\U000ae92b𗢡'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004255s
====================================================================================================
2025-09-18 23:55:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003807s
====================================================================================================
2025-09-18 23:55:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003842s
====================================================================================================
2025-09-18 23:55:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004159s
====================================================================================================
2025-09-18 23:55:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -79, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -79, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003851s
====================================================================================================
2025-09-18 23:55:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003534s
====================================================================================================
2025-09-18 23:55:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '../../etc/passwd'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004169s
====================================================================================================
2025-09-18 23:55:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003875s
====================================================================================================
2025-09-18 23:55:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003935s
====================================================================================================
2025-09-18 23:55:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 116}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 116, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 116}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003646s
====================================================================================================
2025-09-18 23:55:35 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': '5\x8e\x9b:QÉ#úc\U000f3838f\x9a¢\U000b9e15Ì\U000cec07ïù\x16¾\U000ff52e\x1c±òýd®5÷𢩥H½öRú\x154\x8fU«³Æº\U0007afa7\x99ZmÂIó\x98\x92\U00034510àk\x10\U0006fdb4@¿Éj\x1e|ì\x94\U000c4320ÑKë\x16\U0001e741\x0b\x17⻤º\x02\x9c¯hu´LÉ[q»8\x9e¡p\U00057b3cB]\x18\x99j{ç\U000f61782\x80ü`\U000c6b0c)嶗%&èf.À\U000bcf50w\U000f0b84ùCÊ\U00091fd3\U0010b778\U00040a7c\U0005f64fÕaÃ\x11\x8a𭽪û¾\U0007c5c0=Ø\x95Ðy\x81\x8bÎ\x96$ï\x13¨\x0b\x94I\U0005034euG\x84\U000fd1bb²\x0e\U000e364f\U000927d2\x1f\x0fäÍ\x0ffáH\x10í\'[¦À4 Õ(ÐÌ\U00039395Ͱä\x8b\x02\U000f5f38\U000af33dÀ§8$\r\U000c9c84FÚ\U000b6f3e\\\U000e5145\x18\'\x87C\U000839afßâlåK\U000c8abdýB\x0cÐ\U00048473v\U000d82c1\U001068b8í\x9f1h\x8aï¥\x7fcê³\U0006e219\U00036235A\U000344b5é\U0001aa54s\x04\x9d\U000ab32a\U000ebf6cÚÌ\U0010143cYm\U001061a4B\x9fìì\x11i\U0002fc36È\U0010f078\x8eC\U000af4a5áÀ¾mc9>V\x05`¡ý·m\U000843e4\U0010b1bcY\U000be18cÖVÁ\x07¼y\U000cb464\U0006ffa6ïJ><\U000f02701\\\U00107cf6\U000b8975&Å²â\x83\U000a2cd9\U00080ebex\x0cO\U0010ef5a\U000df974¥须Êóm¢Úù§\x85Ù\U000800ebw¨F[wnØ¸\U00099266𦌃\x98Ã\U000445c6\U00079534~\U0003a6aa\U0009d2b9\U000bb664\x02þj/³G\U00047cce¥Ä\U000d04dcg.\x92C*\r\x13\x108Îï\U000f2027\x8d\U000d1eee\U000525d4\U00063842+?\U000ce833!n🌷¿ÿ\x9b\x9eòK1ÊÍE\U00019de3è\x87b\U000db65a¶𪝯\U0008e23a\x851[î®އ\U0010f155\U000df156Z%Ï\U00091128\x8a\U0010ec92\x14\x84\U000df599\x1dx\x1c\x91ù\U0006a051×ñTD\x8f&ÛÛz\x91\x0fs©´G)\x7f\U00106ef8Î\\\x18\U0010d123Dx\x7f\x161\x12\U0006280b\x8d\x14𬝮´G\U00058027ë¶\x90²@ÅEÈ\U000cf41c»"´ôJ\U000667b2\x1c\x8e\U000bdf36\U00082f2bS¼£\x93píT\x18\U000ee835\U000fa548\x1b\U000371c8EË\x8eÜ\x0f¸§Û\U000f4d56\U000a30adQ]\x1cÓ{Å\U00093e24/®÷½n\x9bð\U000c413a\U000f69625¨\U000edab7\x1fê¬ Ñ\U000817d3X¶º\U000f674a,\x81\U00066e6aé\t\U0006cbc6h «k©\x9f\x12Ð\U00038cc9\U00086a19óÛu¤*$\x1e\'ÅS\x99\U000e5632\x90\U000b536al\x9a©pf\x9bE<klÈÂ`k\U0009dbafï*\x7fhÿÏ%V`×\xad\x97\U0008f32f3\U000cf994\U000d0f23\x0b¡Í¯\x14\x8c¢\U000872eaÍ3íú\U00109dedÀ\U00094557\x8dû©\U0001db5d\U0009450a^Û¤H\x1e.÷¥G\U000ea4cd\x0bk\x9fñQ±©\x10ûÁ,ÜÖñ\U00036b85fÜÚ4f¯%Æ]ÐÆ¿tëY]Í\x0eqçË\x89üv\x1d C\x1b\x08¡æd\U00051f98\U0006aba6\x01ÊÚ+\x8a\x8ceTç\U000d37e0\U00083b08@ªA¤=u¹\U000863ea\U000f6532;Gc´S+\r*r0Ñl\U0009984e\x97¨ÜÀ\x0b\U000a55d4\x9fJW\x1c\x95D&2\x1d\x16*\x01\U0008b90bÓÀñ®F\x93K§ý\U000db0f5\U000dfc08þ\U000ad362¼\n°y\x00à\U0010f1d3²\U000a1375q5û\U000e76f0\x07%\U0010358c\U0007ed3bu\x90\nð\x91Ê\x8a\U000bbaa1\nµ\U00062ad6.sC0\x9c\x94F\U000cc96boú\U000d4e89t\x01_Ùý𑌻ò\x1aÙ\x0f\x1câU¶啯n\x83\x9b\U000319beÄã\x06<©¸ÄÕc\U000b347b\U0009db5f\U000ae455\x83\x97¤¾ÃÊ\xadçÌÞ$¯^g\x9b\U00086aef\U0004c21bçß\U000b2672\U0010d848qÙú}\U00093174Ö\x9a]ß\U000f96e7v\U0001b501Q\x1cÈìeCg\x95\x89\U00040febG¥:ì\U00041d9c\'*\x89R¥\U001025313\x07(Áq\U000693cb´F\x90¹\U001046b3»\x1fØÞ\x16\x96ck\xa0½K𤕨¡ÈP\x9b\uf8b0Ã¯ÆG½Û´L#\x07H=\rz\U000b68a1\U000423dd\x9dV_\x84"Ý"\tü\U000fa5c5\U000d2e1aE\U000acf93º\U00035ca2SWèÏxnJ\x19\U0007eee3\x8c¹¦ä1M\U0010af41\U000e9aedÉËÐ\x7f(\x8f\U0010ff4eßÃ\x981\n\U0004d7bcÀZ\x90ÉRµÄ\n槗\U00039b10\x92\U000849ec0\U000ab559\U0006d2df䄒\U00089720e\x13pESÌ²É\x03\U0007a1ecû]Ôºjõ\x7fü\U0010fe90¾ûÚ\U000ce187\x820¬ùÝ\uf6d3\x1b|\U00086d135Ó\x0eFxéaÛL/ª𮤡\x8d\x8e\U0009ff76"\x81\U000c26b1\U0007bd90ÄÊ\x1bax\x8aøZ\U0008f4b9â\x1eC\U0010ce31¸Kí\U000d70bb¹µÁ\x98àÜ\U000e3622iy\x96Ô\U00073d84ãW£\U000b29dbHåT\U000f229d\x0cï韭\U000437f3\x8e¡_ª\U000feacaõ+@Þ\x0e\U000ae4ee,èo\x1ea\x94>\x93ðÿ¢`\U000f8eccªã\U000f4e7f墀\x81\r+µô=ùr\x98\U000a2715H\x17.¡)\U00107926\x17õlÙÇ\x8a0-\x038¥\U000b3319¥j𨐑l\U0010ac46¶\U0001274b¨\x9dM\U0006c03bæÁ^íí5\U000a9578ó,\x98\U000a8f77Ä\U0006c943\U000dfdd8(\U000b1538\x8b}\x9eÒ\U000534d5\x80\x0e\U000dff7fã\x9d·\x84\U000fc2fe\x00\x07®5\x81VD\x7f·\x18çp¿\x15Nzk\U0009024eÕ𭋹¿\x87®\x03â\x89VI\x05\x1b\x0e\x1c\x1da\\éëô!\U000cb9c5wÇ\x02|\U000f6274\U00084693ç\x04¬?\x02áT\x80Z¡\xa0\U0006679a\x9e\U0008ba9fò!\U0005403cð\xa0Éùïtì\U000e6758¶sþ¨\x0f\x19´\U0006f4f9\x95w÷ÝÀ\U0007b4f5\U000d5791¤É\x0e³\U000e4d4c쫸𢅛n\x97ÊÝá\U000c664b𤪍R\U0010d7b3\x17\U0005b6b4§\x9fᵚ\x1d?AU\x03m¸\x8b\U0005b957\x80{\x19{\x8eª\x917/\U0003a742\x1a\x87\U000516c8ÈÀ\U000a478e+uj\x02\x8c6O\U0003f3e9Ã\'X#_ÿä4b\x88\U00013f64å𧯻!𰖨Ð\x8ffî\U0003eb4bv¨4óüO)\x85(\U00078999·\U000f65db¡\U000331e8\x04¢𓎼O\U000d6b1e:\x94\x90\x9a\U000601ddÙø\U00010df9\U0009f891Ò²\x93\U000d69acj\x95Må\xa0Ù\U00100d99¸ÓÉ\U000e8dad\x066\x86(\U0003147f\U000c231b"\U000a6c92eã\U0003d35b\x19§S^\x0c/\x1f¸Â$\x0c_\U000cf965\x13®«[\U0005a588:\U00089ab1\U0005de3e\x8eU\U00059fcdh\U0003eff0\x18\U00095d5e\x8d\U000b411b¼X0\U0001c7c0\U00033ab6(þ\x8aoÿ\x0eO\x8f\x11\x8cb\x86P§3*p\U0007a87b\x94<ö\U000a1ab8a\U00037faeI$\x830{\'\xa0E\U00089eca\\ð)롌\x11ÕÀ`©$«·\U00098216à\U00071d2d\x83òâ\U0003ed01\x0f\nS«ÇêaÐ\U00061fefä\U00099018*\U0004474e\x02eö¿´\x1a\U00104d0bH¾õ\U00057e70\x06Ç\n×\U000b53e2\U00067ee1ÈÙ2\x91(q\U000c4c00\x1aÊ\x1cZ\U000e038a\x82\U000a02d3î³\U0004203f<\x1e뫍\tæ3\x1dÈ`Î)xG0\x079*\x1f¤;\x13\x18'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003973s
====================================================================================================
2025-09-18 23:55:35 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 29229}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 29229, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003735s
====================================================================================================
2025-09-18 23:55:36 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '¿E(ÕÁr\x0cIk\x82àp\U00014103\x9c\U0008e688ß\x82F9\U000d26d0\U0008e79f£âyS;5èõÕ\x9eW\U000b8513`X\x0eÔEÒ0\x82ý¬\x14ªÂ\x1a\U0006d154䪫\x97땵\U000ea275\x11ÐôF\U000f326fÈ\U000911a7ï\x97\x99zÂÊ\U000c3532\x00L9YÞþê𩓸öÿ[úf#\x80\x9a%\x0c\x13"{k\x13p_£\x0bÓ\x9a=\x9aî𑱛OÄ\x1d\U0008a9b5\U000a991fÎOú\x88\x9d©\x8a\U000ede8a%𣫮X6\U000c6715\U000d2699¸6\x9a\U000159ff\x0e\x9f熃I\U000a3133c\U000503d8\U0005ac67ñô<Øá\x95-m\U00035caf>cb\x89\U00089805È¥$\x1c0¤±\U000a9010\x82\x94ÌêK\U000e3cf8Ò\U000fe01eë\U000cbbd3\U00072fb2 Á}L|«x𢱆Ê;-\U0003df96\U0010dd14\U000d0474æ\U0007c0d7無®-^Ö44\x9d#\x01\x83\x04\tJ\x8a\x9f\x1f\x01\U000d539dë\U000ad7c5q\U0006e014\U000393a4y#Ãá:\U0009ec2aæ\x1c\x07\U00105a3a.6A£\U00014274K\x03µ¥¾\U00095f0dÞÉ¾\x8d\U00035f7d\U00092778e\x85\U000a1506\x9dÄÇ;_\x17Xæå"`p\U00014978àNk\U000b1338Ç\U000199f7\x01å\U000a2fef\x9b\x8a¯\x1c\x85\x8cíRS\U001077eaI\U000ebde6\U00043d8b\U000d6beepf¶2t\U0001af89w\x00ïaà앚\x05þ2ã\U00096b53\x81\U000c1afc}\x18\x148Á\x19\x9e\U00051a9f\x7f\x8f#Ûß\x0e)\x8e£Ï\x9cÂ\U000525a7\x05ÓôÃGµ\U0004f56fvKëí𢒇鑞f\U0009b639»\x11Ð\x06\x03\x93¿\x8a ;Ã[\x8a\U00013c23U\x97x Iå|\x19\U000c5960B$³)*\x81\x1aþÂ\x08\x96\x92\x84\U000f489af\x8bB\x12\U000e99b5\x18\U0001cfef\xad±\U000a976f\xa0\U000f4c48\\\x80[>⻪{è\U000a6caf\U000bca8e\U000db5d5\U000b1609q\U000b7374Ù]EØü<²\x1aö\x1f\x8a\U000f636b\tº\x99\x84\x13\U000b4305IØ[°Z¨\x1a\x90mG\U000ec1f6 K\U000ea110\x98MO\x1b°YÍ\x14\x15m\n\U00068ad1 ¼ÃP0ÜÓ\U0001c2f2\U00064663¼.¿W\x8b\x96\x1e(\x18\x07\x14\x15Ò\x8e\'H\x1b(\x06÷`\U0009b8f2A炭\x8fA\U00056693\U000be666²\U000b3b16\U0010a0cf)à÷óÙMU\x7f\x96!XÀ\U00085ea2[\U00038c83\x88\x05XÒ\U000aa06bÏRY_\x0c0\U0006dd4e\U0008991a\x81eÖ{[\x98Ç\x8d\x1eçÜR\x7f\x9e\x00ñ\U000b2a281Bqï1\U00105051Ð \x81ec\U000f1fbb&\x0eýú\x8c\U000aab1c\U00070eceøU\x85s\x11ÿÄ#\x08;\x87\U000eb59aÀó\x19âæꍠb[\x97©ó\x11\U000c0527Wß\U0006bab2\x81õÅqÕ\xadÏ\U00051e5d\x1cÓÓÓ¦xIB\U0007c826\U000752679\x05\x1ameêª´û\U0001549d\U000f35430_¤ìÌ¢~ \x1c\U00047abbún\U00071ab7"²\U000ad437.\x17\U0004a808\nê\x8d:°\U00078f58?$¸\U0007a077\x9e\x0e\x922\U000b602e\x81\U000b47c6Ù\x0e)5¢Jq\x0c7°Ùm\x08¢Ì\x8b\U000e7073Ì?\U000fa94d±íH\x0e\U00036be6\x18\U0006d7f3T·\x83K;\x11\U000e7deaZ\U0004b391}\x05|\U0004e9d6%FCHY¼\U00091e92piÔbÄP\U0003d4b3{$\x1f\x89v\U000b76e3úA&\x19\U00074102ÉX\U0005773d\U0009729c·<\x86\x8b\x90\x89\x89噕W\U000a377bp\U000df974Ò³«Âj×yë\U000c0fa5\x0fÚÉo½Aøda\x85òò.)\U000ac429Í\n\x0bPÎ3\xa0𠧄»])Ï\U000fb2aað\x9b\U00074843O\U000bc5ae$O\U0010fefd\U000a9b92\\᭢uÀ!\U000bf4b3\U00080d23µ𭉱K×ð\U001022cb\U00039cfa\x05\x12:À¬\x98ÏÿÃÅÀÙ䔔ÈÍ\x1bè\x85\x8e\U0010371b©Ûc\x84\x0f\x9d\x9a\x18B\x01\x05¿ª8ü\U000cc9cfN\x04\U000588a0õiÂ×\x8eP\U0010c0a8\x16ºEJ91\U000ffe63(É¡\u0df5\U00077a8cèf\x11Î\x0e\x05+þ\x00¦\x81\U000d09fb\x82\U000b2445êIÎ\U000c55df\x0f\x91áã\U000d6587샭jJ#\U000f4ab5\x98£g\x19k\U00093b2d\x02<]8\x08X\x04ÐX9\x8c\x8f\xa0hÑÌö\x84\U000dde43Øéº\U00064ee2±\U000fba0cr\U00044500}_dÄ\x8c%\x9bS\U000cfd2aá𛱉þ\U00040f6a\x85\x82á¨¼\x87:\x10]\x8dBÔ\U00050e40¬ÕÐ\x14×\xad9Í\x84¾\x9býø\x1f^j\x01\U000cc2c3wÛìâ_J\x0c\x85\U000737e3Ù¯[\x0c\x04\U000c85fe\U000ab1ee\U000673a7=\U00092f09À²𣿂\U000f3efd*\x8cG&\U000b0395aU\x14´\x9c\x8ca³auí\x10\x1b𬥸\U000849bc¬dÞ\x96t\U000d70f6Ueë\x1f\U0007a223\x82\x11²¯F\U000d961fÜ\x8cF·W«$\x8a\xa0¡\x8a\U0001c6d5\U0010784b\x1a´{§Ü\U000e8264xiÚ ì4qEKWåÿ\x19²\n\x17\x91Tµ!\U0010fcd3\U00105a7eú\U000d8e0aAÙ\U0009e2fd\x1dõ\x8eö©\x0eÊ5}7p;§R\'ä\x9aªý\x7f¸\U000e7570k¼\U00053836Bù\U0003517eÙ]92&É*\x83\x86Y»\U000d9a62\x85Ú\U000ecb18l>\x87\r§R\\\U0004d3bb;M\x00fM×tª\x8d¼hc&\U000ad75e\U000a19dc\x1e\U000f8791\x16¿\x91£\x83g¼\rHÆÎ\U000dc32f´\U000ed4b5\U000f9899\U00045d1dkR\U0010ba6b*²(wÅ\x0bÕz\U00082010\U000d37e5qÇÄ5¤\U00087801\x9c\x07zo\U000e0079ýB\U000a26eb\U000f689b\x8a\U00093e4f\x8bü\U0009911a\x98õ\x1dcù\U000b27b4®d\U000a2f8d~\x17õL[RAþ\U0009b258\\Í\x9d¦²\x1bÊ?Ú\U000509c8ËÔ\U00085ebd\x10\U000cc4e5ÿÖmÚ\x02°\x9e\U000612d5£\U000fa2cb½Ê\U000dd1e4\U00107061á}\x82E¦#ØÂ\xadª\x07¬\x8bo]£\U000e485fA\x0fxO.±cÁ\U000b7ffb²\U0003fbf5¯𩭇Ju\U000630b7\x974Ãì\U0001c418\U000442cd\x8bÈt\U00053eba²\U000143ef\x88\x96\U0008a91a\U000a97a8íÏ\x1cë\x0fø\U000a16cc\x99zëýE\x10\x85\U0009945a\U00095ba4\x18(\x16\x19v𡺑õ!\x8b\ue7c9\U000a5a10/\x8cÚ\U000c3334\x949ÓÁYS8Á\x94·³ûôÏÜ\U0006a02c\U0009e8ad\U000f9a2bG¦°Ò\x96\U000837b7?\U000d57feM\xa0\U000b9b85\x96?û\U0005c9fd\x88}E>\x88\tY\U000b9601ò\U00077263p\x07\x14êL\U00101fa3\U000116ef\U000661bf\x86Äó\x8aÇ\U0007f69fÊ\x96R\U00092d8f,åÑ\U00100d73\U000c0e92\U000942d3\U000c2d54𨒂\xadZèõ,\x0cG0\U00084ee2\U0010835d\x05\U00077eae¢\x83á\U0001c11f\U00081032Ç⭩x&õ󠆣\r\U000d1fb1\U0008d0f2ð×s\U000a4081Uyú\x88\x98\x16\U001030d6\x145\x19N\U00047ac3+\U0005a134L\x02z🎝\U0008160b\x04a½\U000f426f\x87Ñ\x1bx{~Ó¡\U000b14f8d\U00090e88\x87\x96\U000e73ba\x91𒑘\U00087ee0\t\x054ÄIú\U000e8d78ç*\U000991bb,è üÿTÝÃÛN\U0003dd45 Í¸\x00%í\U0001f8f2\x9dNR\U000f7ac8\x00Ú\U0003a08e\xadP\U0009a9b4¹𗻣𣮴\U0006bfbeK\x15í\x9c\x84q\U0008c64a\x9bW\x92\x80M浀,\x19\U000ebf55ý\x8e\U0006434e\x1dDg\U000c96eb\U0005be84Ý𝈁\x81\U000452dc%𗑀\x07:®?Dyu\U00105423îÁ\r\x98Õ\xadHj©åÄº\U000c4498\xa0E\t\x99kDµãè\U00103ce4Ù³-Å\x0fÒ\xa0\U000fab84µ+;ËÚï\x91z¦Î\x13ß\U000fc383µ\U000ff30d\U000f8fbb\x9f\U0008b1bdÙ¹\x7fÏ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003567s
====================================================================================================
2025-09-18 23:55:36 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U000ef790÷\U000df2dfl\x17\x9d\U0010bb40Ä"ºÜ\x90ç\U00091d61\U000190c0\U000e5392\\ç\x96~𢚾Í8\x03ø\x8dÄÍL\U000b8f41Â¢D\x18|\U00091cffö\xa0\U0004dc60\U000a663e\U000f112fêÌn£æ\U00035af2\t\U00053403\x9cW»U§µ\x94\x17ekKEbÜ\x89\x8b\x10C\x8a\U0004ce75\U0005e924\x1f\x8dóD\x85\U000b0563dÒÆö\U000bf8f9\U000f2cff(\U000a5867\U000c97bf9ÜGW»\x82¥À_ÕÊÖ\x16)úðz$:\U000bb4a4©Ø\rn\x16Dâ\U00097ea8ð\U0008fbb0\U000c1592Jíe\U000167e4S\U00101219³£Þp¼\'Ì\U000d73e6õöý\x92\x91\x8e𐭒vY\x03L𨢠\x14\U000b3b44´\x80´qjå\U000b84f9𤇩àU½\U00052ea6\x94ëJBNf\U00084339a\x89\x97\U0007ae84\x89\U000833d8\x99\U0009859e\x9fÜá\U0003a644\U000c8bd4\x86喆è\U0008732c\x1c§À\U000bd2e85È\x7f{\U001002ec\x98.\x9aÝ½\x88\x17\x91$\x8d\U000ea8fa\x18\U000c5666𥲭\x07Ú\x9c\x124𝖃\U0006b716±튒2U\U001034c5\U0003773fÐ±H\U000907c3ØÏH\x83j\U0003aa63\x0b\x87ãÞ#¡Ó³«¢q\U000a8a2a\ue7ce\U000bb598\x84ÝÁ\x11g𡠧\x0fäKd\x00\x8b\x84V뼠\U0001504as\x92\x9a\U0010aaafp¸!ýDK`º\U00075457\U0004522eÈ\U00082a50î\x15\U000683bd¼Õj\U000dcb5aEMÖ{àZ귌ç\U000fb2efhá\x10\x95\U000cdb92\U000ed2e7\x7f\U000b7140Ì\U00076f37\x94\x7f"\U0001df75apà\x05Æ\x0blñp«\x16Sn\U00071178\U000ecf0bÔ\xa0©\x97(¥ª;\x1b\U000c0982¿uE\x96°\U000b8464\x16\U000ae2d6eàZÅq\U000798a1ïãvd\U00078638Óo\x1do\x02fÐ\x88vnìÌ\x8e\x88\x9a\x8fàÙ\x01Õ gÖoqN\U000e8756\U0007072a\U000479d4s\U000e7ef2\x84v¼\x88î¤3)"ÞF\x04Q(\U00034340¾\t5\x83bZ\x8bÄ\U0009fdae\U000fbc78\x88W\U00098223𫔾\U0003dffd\U000e9553\U00089f0b\x7fÄAX^ë~𗕱\x97þ\x9f®\x11g\x05\U0007fe4f0ã\x91-뻯mð±\U0007c181þ±\U000b620bà\U0010df40\x90\x85\x9d\U0005c87a\x02ê÷\x0b\U00055d0e\x0e葲Ú\x87\U00084d70\x0e\x08\x8a\U0007a605\x9a\U0007c646ã\x8a𤟡ü_\rr\U000158e2\n\x1c\x10\U00058ef8·«\x17\x9e\x12Í\x84\U0002f78e-nó\\\U0004534e6\U0003d653\x91T\xadyëüw\U0002fc45ÚÑå\\míxÑ\U000c9607𡉝Ê%\x05ÒÃ\U00016bb6ç\x05\U000a7710\U000b0832\U0006a465|\x82À¹\x86¶\U00070f62ßÕß\U000ab1b6\x9a\x9d\U0007bd67øiÛ~7i\x8c\U000f571dlÕ.®m\x03$\'k\x11\x059\x97\x02\tN\x96\x02ÆÊÀ\U000db49a\x82dG\x0e\x0cE\x7f¿\U000b7c7eÄ\U000d0377^\n\U00093a21¤¢\x9b?9á\x9bpuäæj\r\x1aú\U0009762c\x97q\x04$\x1f\x9b\x18è\x13\te\x94\U000d6213:\U0008edfe$\U0006b680Ê\x08öê\U000375643¡É\x82\x1fi\U000d6a4b\x1e\U00101162\U00087e9a"¬(e\x97\x99\x07Æô`\U000c0c08\x0f\x01@UÙ\x02§\U000c0a6b(-\n\U0007b1aeN\U0006769f\U001078db\x13r⩝®ûy\x95\U00032798þ(ô\x13\U000b5948\x19\U000cafa5\U0001de7b\U0004747ei°\U000ee82e\x8bë䕲Ü¦µË%\x18\U000f183e\x02ß<\x11\x1eÙBÕ\x80tÙ\x13\U000668e8\x9fH£¢\x97ä\x8a\x0cEn\U00050b8d\U000615c2\U000a8dd1ì(𧭚Ï\x9dÖ\x9b·SÂ\x13ÓªW\x05:Òms\U000e3d82\U00075585³\U0009ff36\U000195dfáö)\U00085a6d\x1ep\x18ö©\x9a\U0008de7c\x86\U000da9e6!\xa0\U000fb45dÓÀ{{í4ð\x88\U00015607Æ\x0ez🄙\x8cP\U000165e8\x87cú\x91r\U000e146f¾)·êV+®pë\U000ae6ab챔\x0fl\U0007454b!¼\U00086c19Ö\x90\'D\x8cU\x83\x08\x0cÀ\U000d1fafE𢐶\x11\x93í\x9bESÑg²|\x028\U000546fd,\x96¿\U000d30c1V\U000e9b16\x0cwr\x98Ô\U0009b278\U00047304\U0004c513\x0f\U000999bd\U000cdd98òï\U00035b7c\U000d3ca3\U0005c8ceý\x12Íý«\x96\x95üU\U000fae1c§½yCéH?é\U00089df0V×0\x9ee\U000f997f\x14W넟\U0005abdf9ªÎ\x0c\U0008a51a\x8e\U0006d13f\U00042bf4\U000f87d5\U000eaf35\x961\x15\x05ä\U0003754f÷\x17\U00061d24tVô\x95bÔÝ\x0c\x91Ò÷Ã¯\U00039b3a\U000807e6ºM\xad\U000f278cNÁM×¹𨢒v\U0006b90fÃl\x95\U000c6570𒒰\x99Á,G\nhwLÙw\U000aaf98\x12ç\U0008a7df\x8d\x15>\x99$6Û\U000a329e\U00082755Q\U0003d34aÓq\x9fB𫂸\ne\U000ce2f3N^ÿ\U00090f28\x9d\U000ced40bÚ´ú\x1d!\x82\U00085f89 ¥\x1bA\x03爫|\x91\U00047e06a½\x1e{>\x83È\x12².S&\U000cfe81v\U001043efL[\x935-Rø\x9c\x9c)\U0005b885![Õb~o\U000f7e6bþ¨\U000f639d\x80.\x03\U000fe79eþ\U000548a1\U00064e07\x90*«B¾ÚPû\U00064fbe\x8aQ\x08Þ\x9cj\U00056ce6V\x8f\U0007d349"\U000eb289\x91\U000f92a5\U000ff340\U000cebb3\U000f8c49A\U00096d1b\x8c\x8cà\r¥xL%\U000c8377𔕫Vù\U000d54df\U000cacd0£ô\U000b8e68\x82UÒÞ\U000c6663ÀÒ\x80\U000f0e3d\U000fb413\U000a93c2ç\x8c§\x94ß𘖖\x04H`u\x04ü\x96\x1e(¦:¸|\U000870a0\x89Ùæ𒃥±\U00078540\x8e\U00049545bý\x13w\U000f0202çg\U000978ee¾Òmp\U000cfb00¤btL\x86芇\x80\x8a\x84U\U0009e80f\x1b𭐼tÜô\U000c56f0s\rT zꙁàsyÑ嵖\U0010eca7òtÉª\U000f9d61\x12µK\U000978b6¶³S8já\U00064f39\U000b150anN\U0010f12e\U00041252\U000fc5e8\x94Ñ쪹\x12ñWL±\x1dq¦GÐ¿:Í\U000bbdfe\x82°\x04ï\x10\U0002eefb\x10}\x9d,Êª\U00048d86\x8e\x80\x82Ìº\x9f£\U000c1e97\x14\x8c\x11]\x87Z,8ü\U0004c3d3³\x04\U000ed8ceMd\x88\x03Ù\U000620ddÙ½\U0009f8f3\x1cÌ\x08÷Ç0\U00101180?W\U000ef01e\x89\x0e\x11K%£\U0006013fû\U000318f3©\U00074a7bØ𢣃"g¡g\U000f3f54ê\U0005aed1\x1a\U000a855d\U0003b64b¯K\u09cfäN\x0c\U0001dd43æUf\U0007d58e#õ\x85Ü\U000d6ba9\x8e\U000c5b1aÛ\U0004c2f6\x0c\x98\r"X\U00053a14Ðyy¼gçó\U000b22c0{\x98n¹\U000ed7ce;ea\U0003cc5d½ìÏÌÏ\U0004399böo\x9fO\x92\x8aêô\U000d9402²\U000d3357\x9f\U000a7e9a\U000c47a2\x81ÙHA\'\U00089be2~𦡶\U000841fd\U00045634ì¡:ÝTìô2u¼Ý\x1e&\U0001989c½ï¼\x02@%Ý𘜙qi\U0004a4c4ßÒ\x84\x86ï\U000c11483\x85¾þ\x08\U00050b33?µ\U0006fa83"ó~|?\U000cd706ß\U0005f06b\U0004166aËÂE®\x1a\x16)Z_\x8cT«\U00033c3c\U00034684À¨\x134\x10\U000b122ab\U000e9fe0I\x99t\nxðø¡𨝰Òø£.3úi\x82\U0007b230î\x8c¶mj\xad8=º\x83Ö𘫺¸°A\U0004670b', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004007s
====================================================================================================
2025-09-18 23:55:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ü\U00042798þ\U00102c08}\x112\x12Ã\x17\U000561bdî\x8e¼\x9câ]»g¸9Ì\x19Ë\x14\x83\U000905abÛ\x92¦:ÿ愹¡ü|\x85\U00092abf\x08\x86\x02\x0cÑ\U00081ad0\U00064f6f¨ÒuC\x9a\x99«rb¤\x13\x13\U000d087d\U00102107Àº\x90L\U000a0abd\U000a03ce\U000af3b7\x8f\U000556afÆØ\U000f756f\x075¢ û\x80*>!&³Ëà\x0b\U00067e2d¸L\x12\x94\U00078a22GÍCÝ\U0006e81b\x8b\x1d\U0008e48d.\U0007d6f5ÈÁ-\x8c%t\U00041276\x02¶Î\x115÷\U0001be42£\U00037fb5Í\U00104f8dì6\x81t\x08U\U0009b4de\U0007d928ã\x99\U000f3979ÒÙ\U00074b7f×mÕ\rò\U00077f84\x0f\U0004e11a먂殑ý^y\x06\x87$wÖ\U00067bf3=\U000bd766\U000b99faÙOg\x9bh\U000fe1aat\U00050327É\x01\U0007ffd8\U0008a0d5?;o©\U000912fc\U0009bf81\U0008e12e\U000fc5afäüs«½¶\U00044b95Ç6tX5[ú]\U000f085cshr\U0009fe0dü@y\U0001417axB!\x8e\x03Uèþ×\x92A=\U00089a6c0Òüjý¥\U000fa730¦L\x02\U000a2ade\U00064064\U000b8dad\U000a031aº\x84ô¿aó\U00086fc0`ï)\xad2&ÿ\x9d\U00051e68\x90»gÀå\U0003af68\U000da1dbè®\x03v¡\x0fÛ\U000e17afÎ\x00;J\x8b\U00076672«kk\U00102b6a\U000e6da7Fe\x06\x92\x93Lk\uea1bq\x88×V\x8a¢\x1cà𬑟e\U000b99df\x81J¯¥å\x8b\U0003baefJoD\U000a7589ü\U00050c01\U000f04c1\x1a\x0eâ=\U00087f3f\x00\x89ï¬\U000bd15a\x8eEb,|r|\U000cc23f\x0f\x8a\U00075c85\U000da22a¨ð\x8c\x10\x96\x86j\x80¨ÿ\x90\U0009b7b2&\U001094a7µ\x85\x0fÚ\x81´¬-º\xadm\x93÷\U0004e741Ë°gk\x04\U00064f14µ¸¡\x8a\x01f»Õst2¯\x7f\x89h7/"\U0006e871Ü\U00072f35¨ò\U0010c52c^ú\x1cß\x92r\x8f¹=é瞔Âì\x98>ûÑ\x88)I\x9d\x00\U000957ba\x9fw\U000d7ec0\x94\x98ª\uef0e\U0009e3b4þÐ\U000c76ef©ÐÒ6\x85×\U000f2e5cH級\U0001aa46R@\U00081a5cO\x97X\x9f°\nà\x00nQ\U000a68a1?K\U00061ed0\x16~÷\U0009cf89\U000747f1\U000bee93É#\U000f20f3\x13\x04ÈÍ\U000f97f2\U000c01a8\U0005c99dj\U0001d1f8ýM\xa0¨\U0009ba8f¦\x1c\x07\U00108f0cXøñ\U000ff751G咨\x88\xadÊ\U0005344e\x14\x01MLw##\x9f쇂³¯s\x0cµò£#\U000dc80d\x8c𨃽ÈÉõ\x95i\U00072292Ø«Æ\U000b4a54R¦(ÂM\U00076b84M\x04½kD\x97-}»¼Ã6û\x9cV\U0002fda5½×\U000581e1\x95ÿµ½\U000dba8a\x06!°¦v°Ä_Ý\xa0\U000ce2e6q𝢵\rà\uefb0\r\U0008c7b5¦\U0004727aÀ\x96\x14\U0006747c×-\U000ec0bd}]É\xadS[\U00034f3b\U000847e3k\x9a¥¨\x7f\U000d43eeäó=C\U00105d23\U000a63cb\\½q+\U000e5791ð²7\U000864e2\xa0P\x1a\x04ü\x91\x84_<{\x81Á\U000ccdc9¸£\U0003c609\x0c\U000de1a6-©ã\U000c45ef-\U0010d338\U000dd029\x97y\x85\U000d73897Ö\x96\x9a\x0c\x1e\U0003cb9e\x95ë🧩ç¥瓷\U0006dd8aÇ\U0002ec50\U00096adcÙX\U0010f021p\x13Ü\U000f876d\U000929b1x\U000b4f23뫶\U000bee2cIåÆ©ád\x94¹\x04¨zª\U000643e0B\U001046fb\x1a9\U00034ae0\U000575baþoïkß\U0004f951\U000a40ae¯\ní\U000aa0b7\U00093d7c\x86>\x0b\x8dªÙ»y¢ÇÏC𘌚\U000cfa25¨\U000fe05euÙ\U000af331M\U00057132¥,èy\x9a²÷%~\U000e6434*\x87Ýá\U000f89bf/cO\\\U000f8cf3È^]*·\x02ꢭ\x06\x17\x94\x04®ðÑ¾´³\U0005a2f2\U000d5164)\x08\x06âqû\x13bC ,\U000b05d8Hþ§z\x9f\U000794d7.\U0007cb1c6\x10»Ef\t\x95¢\x0e\U000522f4\x11¦8\r\x94\U000aaa5ad\U0003a8ae%\x08\x80;à𗛴ö²z\uef97Î+ãÿ¯\U00055833¼O\U000c5d9b\x90\x90Jì3\x14\U000f3bedNzÑ`\x9fCô\U0005f5f9é(Ê¿³7ü\U0006cc2aÖK½7ìV\x17s\x06\U00093399\x00\x0f\U000680e0\U00058428𠻵\U000d20ad¥+\U000361e3KKözÓ&,#\x80ç\x82\U0004adbb|\x8cG«0\x93-¯Á\x8dÍ6)\U000f63028\x10Dú×\x14\x9c$^ÿ¨ù,\U000baef9«\U0009b65aæ=<q\U0004fc0eþ£êv®(÷\x07\x08\U0010547e\x82\U000e9551ùäxÀ\x12\x1eÅ¤\x8f\x83î\x1fDY\U000d555aú½\x85𬚱\U00092c8fñ&\x9cb§\x92\U000e1668{§Üâ©\x81u\x89\n\r\U000ce2d3Q¶^RPÁhh4¶¨öv°\U00106cac\U000a469d«\x88÷\x85ÌÇæ\U0003da7aõ;:É7\U000743da\U000a6d10¹\x07\U000fc281\U000c8907\x12îÂæ\U000ef49c¤\xad\x9eOU\x0cv\x12Kyj\U0007d8e4k\x0cÝ\x17\x10ãôÙÙ\x13\U00085038Ô),÷l6\x80\U000c36c1\U000518ae\x18Ì\U00105395\x93S\x1a\x85\U000d065cF¢\U0005ee06!\x10\x85AsP\\\U0006898f¢±JÔßô\U000eb7a6\x0fzóê\U000c861e(\U0005bf61\x8cy\x03ø\x1ab\x95=¨(ÂxN\\\U0009365b\U000b068c½\x18uZÈÇÂU\U000f5974íÁË;ÐuË~ÚiÖ7Ï°û \x03a¢Êl\U0007f384.£\U0008b0b3t\t½h\x81\U00037a57xÂ°\U000cf7aeV\x02\x15\U000d4380iúäP³𢌀¡«IQp~X좆îÑà\x84sGÂsîY𠁸\x1dvÂáw\U0008564c\x84æ\x1cÝ\x90\U000a7ba4KõÕ-þ(\U0010ee90\x8c\x9dÃÛVD\x82\x0b¸\x0e©\x04ó\U000de91a\x9a\U000ac521¢äHâð\x002\x90±"\x15V%\x08\U0009eb0b?É\x94dÃpÅi|#m3,\U0007b5d3¸\x1fap×|ë\x05BZD\U000aa242ñ\x07û9ä\x03#mª\x8d"Ø\U00039413Eø\x1b\x94=\U0005c216\x9e71¶-\xa0-\U000804a2\U0007f42b(ê\U000f51acÚßN¶\U000e32e0', 'password': ['\x03\x0bG\x13íÉV\x03', '7', '', 'Ô\x9c', '', 'w¨', 'v\x95\x8c-\U000cb3669îÀ닷@»']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x03\x0bG\x13íÉV\x03', '7', '', 'Ô\x9c', '', 'w¨', 'v\x95\x8c-\U000cb3669îÀ닷@»'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003572s
====================================================================================================
2025-09-18 23:55:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -51, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -51, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003738s
====================================================================================================
2025-09-18 23:55:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -8752970937295124166, 'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -8752970937295124166, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003574s
====================================================================================================
2025-09-18 23:55:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 28815, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 28815, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003668s
====================================================================================================
2025-09-18 23:55:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['\\\rDucÕ\U000eddff11+\U0005b02c', 'G\U0006856ax<\x13\x98', 'º', 'L\x90Ê¨']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['\\\rDucÕ\U000eddff11+\U0005b02c', 'G\U0006856ax<\x13\x98', 'º', 'L\x90Ê¨']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\\\rDucÕ\U000eddff11+\U0005b02c', 'G\U0006856ax<\x13\x98', 'º', 'L\x90Ê¨'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003599s
====================================================================================================
2025-09-18 23:55:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003938s
====================================================================================================
2025-09-18 23:55:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -1653460006444540257, 'password': '\x94c𫌽d\x88üÐ\U0001ec64)\x85\U00105288f8Çtñ\U000e400fâ\U00097f8bÞ%\x15¿\U00063fcb\U000e8f1a\U00084dbbÇ-Lô©¢ᔪ»ÈÑ\x911Í¥p<\x7f\x9f\tæ-\U00085ad9\x91P\x8e\x1d\x00¢$Ó\x05ã\tzê\U00104838\x9dad)\x01𐍞𐃘\x82\x8cj\U0004c09fS\U000e74ef"¤\U00084042SS\ní]Ó\U0006f0a3øÿ\xadå\U000f9d96\U00011784\U0004fcfb\U0001e977¬êY\x00\U0005c2bd\x10\x04\\xº\U0003d270h\x84©Y#\U00092d49ü\U0003492dTºù\U0004d1b3A𥣶\x9c\x9c-\U000471d1\x08g\x0eá#=\U0006a80b\x80\x08ß\x90\'\U00046317â\U0003ff7c\x14\U0006f55bÆ\x8dÿXç%ñô¢À\x1dä\U0008ec50ê&@\U000a0659몪÷\xa0Å\U0004b1e4\U000fe61fh\x1b\x07ã\x9cI\x93\x0cÀ½\x8fµ\x9a±\x00·2á}5\U00057b5aËv\U000d5c37\U0007e2c1\U000bbb65\U0006bf3f\x90É\x03\x82Z\U000eb26f\U000aa8bf`MO¿\x94\U0003ea27ÚÛè\x85\U0004e55e\x8f¢û52\\ò\U000d7d6d¶¾ó\U000eb917\U000946ab\U000c00f5PÚ\U00014a2dàMè\x01\U00048811\U0007efaf\x99ûe±\U000f5d06Ð¥ûÊM𡋭LyÚ\x8a\x9bFÔ\U000fab63¦𖠽\x979áùJ\x83Ï\x1b½·Ç\x17Y#á\U0005a391Ú\U000d1a4d\x05ì\x8bYL~â\x10H\x85þ\x0cè*|\x1b#G°såÄvÜö\x15\U00086866\x95\x1d\x9d|î<\x94\x9b%ï\U000f0124\x7fï\U000c2473\U000bc694IU£ªß(\x9f\U00084596g\x8bú{\U000dbede\x80\x13\x9d\U000ef03e\U000f1644\U000e767e;d\U000a4106øLKF£\U0001bac9x\U0003e991\x0b\x94ç\x8c\x1b {\x80:"\U00085bc9¡õ\U000c236a¯Õ"C\x0b\x0f\U000a8464\U0009c43e\U0006dbb4\U001008d8Ym\x08ý\n\x8f¹\'¢¯\'\x8b¥¶W\U000d6ee5\x1e\U0010ad49»¥\U000fe779Ô{콞\U000483b7\x8b\x1dÝ×\U000f1d3f\U000aefea𗬨Uè\x8e\U000afbfad@\x01\x10\U000eefee𰅇Ú¯ÛB%w\x0b§\x13\x9b\x1b Ç@Ô\U00094b35q\U00049589Õ²Kë¢\U00062e6a\x84\U00089fa1Is÷·í\U000e5d57³¦\x1cÍ\U0008f4d3p\x03õ\U00068aa3¡þ\U000952cd\U00036890Ç\x0f\U000aa0aaÌ\U000472b7\ua8ddwþ\x19ìÜ\x91ó\U000dd7cc\x9c\U0005e33a\x8b\x9b¹?H¤±íü\U000e904eòÛ\U000853c9\tÆ\x1f\U0007cc96.Ó\x11v\U000e9352}\U00032763\U000394e2\U00109513¯W]Òó¤\xad\U0010dd09\x82\U0007696cñ\x11«뽉\U00105058\U0004631f\U00050847\U0008a8a9Ø\U0003713f\U0005f3c9Ñ\x84ÁCß°~\x87@\U0009c3b3ô«\U000190ef`?Ü¥K\x85]\U0003eac57è\U0003ddfd¦8\x03°\x06Ñ\U0008a1de\U00075db1\U000b9356𰙩\U000ff83d\x8e\x82!®\U0004556aÐdóÝÃ\U00051f840\x18ÐEÈ\U000fedce2\U000a9b49\x8e\U0009da2eÄE+\x88\xad\U000b96e3\x86\x07¥\x98伻\U00075b1f\x80\U00037f6c£\x01FN·Y¬\x83}𢪈M\x8dJ¾Jõ\x01\x85K\x9d\x83Ë±¬\x9b-\U000fec2e\U000c5178\U000a37ffG\U0009ef84õ>\x0eÚºÏµû\x8eä\U0001546d\U000bbd9dü\x03\x82\U00047ed1\x97\U00031eb7ÆVô\U00076190\U000b3ce2Õ\x9b(QM{\x9d\r\x19î¬\U000e881fÚ\x9b®\x99°\U0007fd25\n𔘡㰳=\x17\U0009f829gl\U000e6267í\tX4@\U000ab2d2Í\U0007091eÈÜ\U00096b15\x83\U000e8dd3\x02qf9۞±G²\U000bba50\U000cdd64\U000b5663{Ãõ\x02\x85Ä\x9aÙ\U000c35cb?uá^¸³~ýÈ-DÖ`\x84;Ôt\x98\x912\x9ajA\U00093f51gÊf\U0007d162\x9dë\x80\x92\x8b\x9eGÝ)\U0005b636¨j\x83|\x1e3\U0006d6b7?² 𗖥_T\x11MoWùc\x8a£I?{\x18N\U0008747fPª\x05\U0006a83b¸\x9eæC¡Hï\U00104575\U000b9557èQ;\x92\x9b\x0c>\xad¸ª®\U0001a09c\x1b\U00106dd0\U000f3ff8Ö\U000319f5ÎWÜ\x86ã\U000a57b2\U0003561f`¸(\U0006624e_\x94𘥜\U000a8248\U0009b976\x1c\U00057043\U0004f159ý\U0005fe95<ḃu£ó\U000a6c18\U0008f28a\r¾1ñ󠄊\x89ùN\x1f\U000b720bÉ\U0004ef03þÌ\x86l%TÿªK´²&5"Y)7\x13\U0003c3fbu6QËIõÏ.𐨸³@\U000f5c085\U00098c82ø©n\xa0ä\U0004b0d9厚\U0006ed1bç\U000b8504\U0006f42bÄuu\U0001fdbe\uedfdñá\x16\x9e*jA\U0004a826È\x9fØ\x86\U0004c444½𱌓\x0fR(3Þ;\x0c\U000f970b!\U00068650\U00104b97³^¥\U00013cc6M<\U00073401ç=𓉽ë\x91rR´úG\x9f\U000199eb\U00016be6\U00099158B³\U0008d7ce¦ø\x96\U000dc4f7ëÂrÚ\x99\U0010398b=Âq»ò6\\\x0bÆcæòÝJ\x91ìÁâ\x8cXmâ:×B\U000f9442\U00083260\x9azùKer\x98\U000e64bb\U000e5226\x0e·\x15\U000dfdcf\x00\x83\U00056150\x97ó\x18🞓\U0001184cÒ>ª\x98Ð\t@¸z_𗧀ß\x8c\x9eâ퇭\x19áì\x01$Ç=NûZ\x9e\x13ÞMX\x90ß{ÖÃÚ_\x0eþ\x99(\U0006184c+\x8dYÖ\U000640e3\x8bÝq\x83Xø\x95\x0f5\U0010151aòꔾ:𬠹¸µ𩵦ZÈ£\x15\n¸\U0004fc85\x83â\\\x1f\ue8ab\U000d1342\x89}Ë³\x83\x9dÕ\x8c\uefb6\x0e\x06¡\x10hÁÈc¯å\U00053d0dï\U000b67b6ÊÿÌ\U000432ff\x86Q\x85Ë\x17\U000f796d_!\U0009eba1»\U00098467\x80#P³'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -1653460006444540257, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004038s
====================================================================================================
2025-09-18 23:55:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U0001657d<', '²垉\x8b', '', '', '¬xI', '¢', '\U000a95bazo\U000d3b80', 'Å', 'þ\x12\xad\x86\U0010a1b9%\U000543e1\U000cfa6a\x8bî\x1fðÒ`~½К', 'ú\x04\U00062511\x07Ô6', '\x1c'], 'password': -2706}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U0001657d<', '²垉\x8b', '', '', '¬xI', '¢', '\U000a95bazo\U000d3b80', 'Å', 'þ\x12\xad\x86\U0010a1b9%\U000543e1\U000cfa6a\x8bî\x1fðÒ`~½К', 'ú\x04\U00062511\x07Ô6', '\x1c'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -2706, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003643s
====================================================================================================
2025-09-18 23:55:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '𗒅w𘠱\x97!ÒÓ\x03³\U000e6c79´\x0f½!\x91P\x99ö\U000f9511G\x947f\x133\U000f5fe6Û\U000a268f\x8fÁ\x19@\U000a3001,]dÊ>ìU_\U000151a1f\U0003671e<Ö¤\x83÷Ê¬\x8c\x14\x86¼È\x0e\x90áa\x1b\U00065e7dÃjGäÅ^Ã¨1ÑÒ\x15\x95Ë\x8d46qé\U0004eac7\x19Ë\U000d49c4\U00041726ÿµE±\U00090b22ïµØ\x8d\x83n\x07»ñæ\x9a·\xadäC¬\x91÷1\x1cc \x01[ñ\x99%w\U000d06d9\U00083fa3A\x9b\x83>\U00044823\x8e\x19₭Uù\U000d233a\x7f༳\x8a¥\x98\U000786bd\U000ce00cDÕóI\U000b60e9\U0010b550ç¨I¡\x93¾T%NR\U000c7bfeã\x91®½\x97\x13\U000ee794\uf5d8xs\x03\U0009e9d1÷\x00\U000772aav\U0009b82b5.\\D£\x1aÂ¾eC;𰽈ö,(Â\U000d7cee\x0eH\U000856bfOk_\x16\U0009312defu Á½\\6þ\x98\x84ß/e\x9b18\x0bu\U00107a6c\U0001a475\n\x08ý)\U000ff1a6ç\x92\t£\U000aada5\U00056992ý桯\U00099dd07c\U0003d3a0t\U00082c39ÚçéNTZ\U000aff00Ë\xadÀFþ洄\U000a8b4f¨\x84¨|0$¯\U0003a03dI9+&j\U00095b9eï|\U0010cbe0cÝ\x87\x8b\U001006c3n´\x9cò\U000bd70dèã\x9c&¨l\U00050fae\'¸j¤\U000c0e35qB|f\x03b£Ié2\x8ay<§\U00072830+\x12öEm\x87\x8c\U000fb6aa\U0001a532\x8f\U000d8b1a\n쁳\x075ÔV×ö\U0009eb03s\x14\x98s7m\U000a9a44=Ckké\x8c\'Â\x1d#M\x13jV§g©Gㆦ\x0f[\x0fh#Ú\U000de691È\rg»\x9d@+´}\x86´\\Æ\x88á×\x14@B«\U000c83aeüñ縇+\x9em\x8bP\U000ba528&\U00041d75(\U0010ed9aê\x8fV,n\U000bb6f5\U00080604\U00043db8\x87Ò»\U0003f947\U0004deef\x8e\x8fl\x9dª}íÁZÑ\U0009e8e0èIU\U00041f75𨆌¹\U000e2285a\x01SR\x10\x80rÌ\U00075106±"\U000529aeÏ\rÕ\x14Zí\U000bd10f\x8b^\U0010ee6e𫡋\x87켫\U0010fc4a~\x86Å\U00107c331\U000e1e24\x83IÝd½熜UZHú\U000b8d52Nå²pË²±\U000d7536\U00102112Íᒔ\U00070d28Ä\x10W/\x8b펔\U0010d605\U0010a623\U0007d16eÞ":m=\x9f>\x08\U00052492m\x92疱&\\🨡\x93^\x87Å¤è9\x94\x17\x15¯éÌ±\xa0ö\U000839c2ú\x97\U000ed754S\x87\x9cØ\x12\x11ç°ÍUË>3ª\x98\x93;z\U000bba4f<\x04Ôe\U0004f452\x96\U000f752fj\U000e3915Ð\U000de7a2©|lí6g\x81A^\U0001a2cbúê\U0003ecfe\U0005d75cⷡgq\x18«=\x9f:\U000ad8c0¯\U000a998fí\x04\x0f\U000c9522Î\x85<>¼¿ë碗M\x146AtW«\U00061e42\x14Åî.J\x15ð÷Å\U000e1ae5\x9f\x97é\U00038dc5,g\U000e8cb5%\x19|w\x1d~\U00016ee6²\x95ÐÅ\U0005ac9ds=¥+\U000e2a9e\U00032804Ð5Éo\x96uõÁ\nÛó\x01e\U0001aa08\x0fQꁧûnF\\\x8c_\U000f4134\x9cõ\x1a𥚐\x9bòu\U00079f15´vG\x81õë\x08J\x96úâ\U000bb451$?r\x8f𒐦6ù\U0006d2ac\U00019de4훍\x95\U000ec822"T𓆼k\x1bè¿\xadÔTï\x95"±\U0003ca3a\x95/d0Î\x06ëÃO\x17(p\U0008e07a\U0004c870\U0003bc3c𣕃¤\U00108158T𦐨D\U0007e022ÆO\U00087084\U0006536eN,n\U000905b7â\x11\U000b5d89\U0003e777¦\U000fb8af\U0003d1ce±äí\x0e.û«\U000611065ã\x1c𮈊\U000ae52eç\x0b𫝀\x94Ä\U00087c8c\U000fa3c8i¹®XúÂ\x7f\x17õº¢µÙa\x16\U000b3a1d×\x93[~¬æ\U0009ef76ûÁ×\x18ýÔ\x14,\x8e\U0003aeb1𤅊\x04ç\U000fa213ï\x92>\x85z\x87ê\x08ph\x1fØ\x94È®s\U00082590ï\U0004c8e2¹\U000d1307u\x08ÉZ\U000f4fd10X\x03\x07\x898Ý\x0f2ð[ù𡑀\x0c³\U00098504QÛcE¾Kí\x02WÉJæ!𧥓蛯\U000c6939îç\x06*Þ\x8f\x15𬏱\x95\x9aí³Êf\x96\U001034ec\U000d4619ê\x91\x05Nír°\U000c2de6.\U000cdb79,\U0007804b+É\x11<\x00\x80{úª\x07\U000d39a5é\U000643a4\x98\x96N聺KFÊo\U000ac1ac^\U000c6e6c°ðæ\x02\x11\U0010440a®\x9b¢~Á\'\U000641f1"\U0003a1aa\U000a895a¹\x05m\U000bc810@¹QÔýI½4\x06\U0008fd81%q´#£ö«~\U000ebc41\x06Tå\U00056ef0Â\U000f2442ã\x07m\x92 \U00055642¤\x1eY4{\U00100e70D\U000cae99\x9ac\x0c¼!\x91\U000920e0\U0001147f\x02êeª\U000d3258\x16æ\x1fT\U000584c2Ͻ\x92ÅpN\U000ad236\U000ae6d3,L\x11\U00100a4e8\x91|ð\U00076563úâ+ocÇ-\U000a8255\U000cdacd}\x08¦\x18=\x9c\U00090f03𥵖\U000d110c\U0004bcf6ìÞ^\U000d9627\x18w\U00041fd9\x13°﮻KÒ\x9c&\x8bO\x15±\x96í\r>:C¼¥â\x8aÕ[\U0010f436\x8a\U0003e348\x92\U0007c8ceÔ\x93°𫔟j«ørË𗒩\x9aó\x82\U0010a20bó\U000bece4&®£\x06Á\x15\x99Ñ\U000e1dc1bÖ\U0009226c\x13\x8cÿ\x10\x85z\x1a\U000f35f5î\U0009e789\U000bfc72M\U000bb209\U000139354å\U000e4172\x08h\U0006f4e2\U000c57c3!Ü8§£M\\\U000bbf4c\U000fa3d3\U000e4954(🀕°J\U00096969ðM\x9bUÄ²°¤dòc6)\U0005764cZ倏\t>R5È\U000b6dd7\U000752b6𢉭\x1b`-AE\tRB»\U000efb3aE!$\x83¾â', 'password': -38}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -38, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00387s
====================================================================================================
2025-09-18 23:55:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '', 'Ú', '±¤\x8a\U0001fc99\U000d50fdaP¸\U0010ab7a¦i'], 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '', 'Ú', '±¤\x8a\U0001fc99\U000d50fdaP¸\U0010ab7a¦i'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003844s
====================================================================================================
2025-09-18 23:55:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 93197589496298220346621532324420930926, 'password': 1126967255}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 93197589496298220346621532324420930926, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 1126967255, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003477s
====================================================================================================
2025-09-18 23:55:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['!ô\x86', '', '', '\U00078769ê\x0eÅ\U0007222b\U000d49d8×-F\x06a\U000efc0f\U0008259aï\U00061e62', '4\tÄÝ\U000945a01', '=\\´\U00057d8a\U000f510aãV', '>\x82', '', '!\U00062cbe\\', 'ê\x05É', '', 'H', 'ò', 'òØé*厚ãV|\x80', 'ñ', '\U000b5212x\U00047ddf']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['!ô\x86', '', '', '\U00078769ê\x0eÅ\U0007222b\U000d49d8×-F\x06a\U000efc0f\U0008259aï\U00061e62', '4\tÄÝ\U000945a01', '=\\´\U00057d8a\U000f510aãV', '>\x82', '', '!\U00062cbe\\', 'ê\x05É', '', 'H', 'ò', 'òØé*厚ãV|\x80', 'ñ', '\U000b5212x\U00047ddf'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003851s
====================================================================================================
2025-09-18 23:55:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003657s
====================================================================================================
2025-09-18 23:55:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 11125}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 11125}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 11125, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003713s
====================================================================================================
2025-09-18 23:55:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 370}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 370, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 370}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003691s
====================================================================================================
2025-09-18 23:55:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ò\x14ë\x15\U0005bcae\x90\U000e3d60|#\x8d@qÁ+¡\x8aa1»', '¡\x04%\x0b\x92\x90\U000a35b4Q', '', '8T\x8fµÄ𣔝VÂx?\x1elÙJåâ\x9d', '8×\x86', 'ýY¶', '\U000ef34f\U0007ab9c', '|\U000f43eb'], 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ò\x14ë\x15\U0005bcae\x90\U000e3d60|#\x8d@qÁ+¡\x8aa1»', '¡\x04%\x0b\x92\x90\U000a35b4Q', '', '8T\x8fµÄ𣔝VÂx?\x1elÙJåâ\x9d', '8×\x86', 'ýY¶', '\U000ef34f\U0007ab9c', '|\U000f43eb'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003884s
====================================================================================================
2025-09-18 23:55:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003919s
====================================================================================================
2025-09-18 23:55:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004092s
====================================================================================================
2025-09-18 23:55:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['£\x1c}', '\x9cã\U0008a13c±ºxP\U00079a39Í¶TÚo', '', "ç\x0bÆ\x00'Ò`'\xa02Ìª¸\x90÷"], 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['£\x1c}', '\x9cã\U0008a13c±ºxP\U00079a39Í¶TÚo', '', "ç\x0bÆ\x00'Ò`'\xa02Ìª¸\x90÷"], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00374s
====================================================================================================
2025-09-18 23:55:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003869s
====================================================================================================
2025-09-18 23:55:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'u¹\x15ã\U0003c7eeT\x1fD\U0003adbd\x94ª\U000d420d\x9a\x1dt\U00046ce7\x11\x02û¸2Àîe\'\U000ead5b¬¾³R¾\U00102c5f\U000d466aZ敽\U000b67db^3èî\x00Ù\x8d\x8b랣\x17A&bq\U0010496cO\x12\x89?v8\x9e\x00\x19Q6\U000b6327Û]\xa0\x10ÕØu\U000f64efVoò¶§óÌ¹@\x96Ù\x80lÝ3ì3\x98\x12jçkw?\U000f0d68:\U0008599aRkYB|\x08\U00096809&r\U00032e3f¥\U00031706?\U0006ddb1\x97|õÄz\U000d565a¯áÝø\U0007d79c¡\U000dd03e\nB\ue7a1@\U000bc420\U0005d4ea\x9a÷3\U000f287c¿\U000f2f63f\x9e¼»+¯°²ñ\U0001dd00\U000c9d38\x7f먃bJøR9\U00039fbb¾\xad\x08L\x1aâÅ¦\x99ö\U0001a17f·\x8döoe\x03è{\U0010eeaa\x08ó©\x94Ñ/\x03ë\U000b4e48\x8c\x19ÁS\x8aT\U00104991¬a\U000da035éö\x0b\U00036a67xÓ¸¯ç\x15\n"ÂáX\x18\x07\x9b𦍓\x81}BÇ𣛹Û\x16\U000c2d4bA\x18Z\U000525e9¤}Êq\U000ec9b1¯\U000bcbdc\x91\U000d85a3\U000d4d25\x14\U00057e7d\U00084d6aX\x07jä¿\U000e1a0e\U0010d9e9àOòó\x9aZ\U00090699Þ\x84´Ç¤𥫐»\U000b380c.\U000baf3cyÑÛÔ\x0c\x95\U000796bf^åÛ£ÛÞl\x99Ë𥁽il\x9c\x7f£\x81n®9È\U0002f4d5çb}É;õ±\x10\U000e1559𡆼\x85FöTï\'<1\x13.÷\x85x^\U000a39c2î\x19k~/!\x07Xý5W\x91_ø\U0003a469I\U000a79b41,\tû\U000acdff·<Ô\x84\x97\U0007d18f\U000ee24e\U0006bb4f/+Ì9\U0007f68e\x8eÚÐ(ë¯Äì\U000993db\x0e\x9c\x13W¸N¥\x12§El´\U0008e133\'!\U0010c20cà\U000bda386¬k}É-\U0009c669\n\U000d1ab1D\x1b)÷\x87\'aêÔ\U000f7dce\xa0Þ\U000937bbÐ·⮙$°\U000bf9bc\x98æú\x18\U00058a59\x0eÀm\x12\x88Ê\x86¡\x1bñ\U0007eab6õ⏘ø\x1aÀfÑ\U000af57d\x1dÎOOC\x06j\U000ecd80\tEÌÉ¯凼\U000b2890Ñ\U000deca8\x88\U000dde95Údªqvp¨¸\x95D\x01Xêý\U0003c1c1y筃ÕÙÅÌ À@ÎÉeiI\U0009aad8Ù\U000a3695oÀ»%~;Â\U00058472\x9c\U000e9664\U0003386eîiQ\U00041df6\x8cêú\x82\x92æ\x1d\U000198fc¨t\xad\U000e035e\x1d+,\U0002f6c0Só𗋎\x86\x1a´Cé¯{Zhú\U0008b27a\x9a"\x07J\U00055e93ÚòU:É𣿳§ª,\x8eÞá\U000efd6d\x1eN\U0005cafe\U00014faf,\x8ceÇìÎ\U00043b3bk\x8e\U0006169f\x18ज़\x01×©\U000b8fe8¤7𐅌s«i-#\x1c\U000d84e9>\U000b678c\x01âïù\x18\x18ç\U000a86caÌfq&\'ùÐjÎ\x9e^\x81»\U000126c2\x87cÌ\x04O\U00083180\x0c𦚙\x8f\U000de331\U0005eb55Z\ts³3\U0005e18e\U0004e2eaºÆ𦝳¨\U00035259\U00100516Â邞ÆV\U0010f2f96ÕòQìäðeI´\x93\U0004617a\x937\x1cÎ\U000e557aØV¾îXT|ÎÃ&¨|2\U00093ba3ê\x16G\x0f(2\x84\x0c\x0e\U000c679c\U0005b080lð𫩵ô7;\x10´\x91ð\x0eawv\U0010100e\x99ë\x80>\U00087665\U000958b4u\x8bè\x93+h\U00074185V@\x12/;\x0e?Ô\U000aaeb1\x93Ô\U000493836ï\x11\x02°\U000ddd050«\x1eü¥¯¿Z7\U000edbf2·ß\U000efeac⫎Q8ß\x16G ÷b\x7fÇÈ\U00105c10\'\U000c159azÓË§E\U0003e5bc\x1a=\x93b\x91\x9bÑ\x96\x19±\U0003d6de\U000a2213x\x14U\x9aôø\U000d0f60\U000888eb\U00104be0¦kÔ0iG+t\x0eÚM𘨀\x9bì[\U000ff44d\U000ace90§¹U\x83Ðµ\x01\x0e2\x87\U000caa7a\x17\x07þ\x97ß[ã¹\x15R:k\U0006bdd1I\U000940a3\U00070a42]ñÎî\x01òËíYñÑ\U0007a089|èu±\x1bÄ\x0cùD\x06\U000fe5a6Ó\u0eebì\x83Ê\U0004ec84\U000c0ea4\U0010d8ae¬è\x84ñ\x17_\U0010c25bU\x9b\x10P!\U00074224\U000beabdn\x8d\U0007e620¬𒌻勨W@\x1bª\U000bbed4\U000de7d3\U000f9edf¤<b2Vµá\x8dCU9\U000a1a50;´dÃño\x02\x1c\U000f9a6eq6\U0009c9d6\x83I8¾\x14ÂªE¼_(e\x86\U0003e0c9h\x84\U00050bddm\U000c620a\x08£0û{\U00100b51É\U0004befd|\x97Úy*\x90\U0010162eïh\U000157adLF¥ÍÎÇ𦽩ÁîLRfIM\x8b\x1f\U00071395f®\U000577bf\U000e6a2d)©@ö·\rç𖫖Y\tt_\U000ba71e\U000fbdde\x8aDÑù\U0003ff17\U000ebf0bPï¡ÀîÈø\x19\U0010564c\U0006bdf5ë\x91«£\U0010688c°\x10\U0009ebba\U0001cea7ÕEÝf\x12𭈱w\r\x89Ú\x84\x8b_\U000861fbl\x83»\U0010c172p¸Q\U000b701bG\x99²\x02\x12¹\U00060b0bù\x11Q\x0cM¨\U000c10e75\U000c5710nÏd\x9bôt\U000ee3cc\x8a\x01WF\xa0Ú\x7f\U000acf73\U000fe897\U0010d34bZî\x14d\x89ï\x12\U00055f14,\x9câ´^\x04\x10𦸵\U0003acd8eY\x8cµs帚[í\U000c60b7\x85Ò\U0006f67f\x03𨡆uà\U0004795fÕjkÜ,\x05ØZr\U000ab4e7¯\U0005f0578«\x17®\x08³\U0009ea352ûD\U00014daa\U000470d1\x87Ñ\x8a\U0001901e\U000eaad9\U000f5d4f\U000b1cfa>\rìÍ\x0eh𗬰𧯔aÄî櫿X²0´\U00045c9cÇ\x9a\U00071aebཅﹾ÷õ\U0009644b¬9¿/\x8b¡\x7føïh\x9c\x87𣬰;\x89®\r¸\U000efff2PF\x9f\x8f𥙬qOüù\x1aö\U00046bff', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003582s
====================================================================================================
2025-09-18 23:55:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003919s
====================================================================================================
2025-09-18 23:55:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003936s
====================================================================================================
2025-09-18 23:55:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004042s
====================================================================================================
2025-09-18 23:55:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U000f9943:ñ', 'þ𥋦Åó{1', 'ØT𤔸', 'Ì\nä\U0008e3d4¸S`\x87Û$𡼉', '\x01Û¢¡', '¼\x95', '\x99', 'Np\x1a', '', 'Qò', '\x88Ö\U000a5574', 'NÏ\x8b\x17', '\x9be', '\x89 ú\x9d\x9bFD', 'Ë', '', 'b\x84', '\U0010f5cc\x9fÅO'], 'password': ['k', '¼²\x1a\x06', '.\x04', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U000f9943:ñ', 'þ𥋦Åó{1', 'ØT𤔸', 'Ì\nä\U0008e3d4¸S`\x87Û$𡼉', '\x01Û¢¡', '¼\x95', '\x99', 'Np\x1a', '', 'Qò', '\x88Ö\U000a5574', 'NÏ\x8b\x17', '\x9be', '\x89 ú\x9d\x9bFD', 'Ë', '', 'b\x84', '\U0010f5cc\x9fÅO'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['k', '¼²\x1a\x06', '.\x04', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00377s
====================================================================================================
2025-09-18 23:55:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004095s
====================================================================================================
2025-09-18 23:55:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004741s
====================================================================================================
2025-09-18 23:55:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00378s
====================================================================================================
2025-09-18 23:55:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 72, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 72, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003962s
====================================================================================================
2025-09-18 23:55:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 74, 'password': 'ìzx_æw\U000a5a5e\n~z\x81Äº\U0007a60a𫗕6\U000b3694\U000b501f¨mÎ\x95\x9e\x92ÔÙ]\U00088141dv4ð]«\U000a58f8lm7\x0bô\'¹\U00085359Mj\x0c\x17RÄö\U00035f9bãxr\U000876b7QSÔ\x13¥\U00016340\'\x83[\U000ef7deó\U000732c9ª²Ê\U000bf49e×\x92cC\x0fÅV\x8bË\U000a5845\U00108985{ü\U0006b2d1⹇z\x00\n´0âB<\x1b¬öT×\x05.\U00053677\U000b513d¶\xadf$\U0004c664\U00094f05%\U000ee152ñÐ%V\U000e99bdÿ\U000e7daf1\x98\x00\U000ab9b8\x98®\U000b620dz\U0004e456Ñå;#îÈ\U0010ac4d°§\U000e18ef\x9b@ÉÝᐩ[;\U000a5b40|\U00070964Ø\x15\U000e14be\x18\'\x1b\U000dc6b6¼/#R\x1bÌ\'\U000f7526Ý\U000fadf6ï\x11\U0007305b\U00080684\x9edmzÁ%ã\x12\xad\x8c蝈ï\x9e\U0003ca97ò\U000f755d\x9bMÉ\x07è\x0b2¥\x8a¯À5¨䤿\x9b¾>1+F\x8d\x08PãQ\'*£7¿\x83\U0009d0c3\U0010dc64Õõ\x1fC\xad¶×·&Ýs®©\x02\U0009e688\U000e00c2\x7f¤ªø\U0007fc77\U00034bf6Ëa>\x1aòñ\\¤Õ\U000c6cf1Ö\x07Ë<\U0006c0bbÑÎ»\U000384b8\U000a94ef"%0\U000d1855¬\U0001c740\U000b7cfb`³Ê/Ù\x89´¬\x88ò&\U000e13cf¶\x12¸pä\x81\x82p&\x07;\'\x8eG\x9fÙ\x04𥿬o\x06\x9d\x01Ê\xad\x1c\U000d67feኅ\x04,Ma\x8b\x07_\x92á\U0003a6d2¡O½Î»\U0002fc0b|\x1b\U00076f47\U0005a3f4\x9d+\U00081866ù\x844=túû¼\U0004c60c\x81=\U00061d4e÷å9PÐe;«\U00013863\x88\U0005c2acZ\x8d¯\U0003e07d𫥬½&ë\x8d\x15Á\x0cbÝ\x99¿\x15\xad\U0007f46e\U00093b00\U000bae8d\U0009c8e5*\x14Ö\x15\U000cba50¤tü\x94Z\x1e\x84,C^\U000a7142\U0009645e¼\x97\x96Ï\x19Üv$ú,Êà\x9aZ\x91\x96ú\x88ôi\U000bfea9\U000432d7\U00086733`¼\xa0\\0ë}n\U000b9048\x9dLÖ\x0bÎ/Å\xa0Ü{\x04;*øm\x18\x10\x87\U000fc2e3\x86\x85ù^\x04?\x88ñ𝇙Î@\U00094fad·Åç|\U0008eefdÎ\x97Ã\x85´\U000575d7\U001039e5?ï憧±à\U0007fbe7¼J¸Û¼\x98óHô\x984¶|\U00047632b\n\x98c\U000daf5dO¨\xa0²I3\x80\x0c_\x1fè\x0e\x07B{À*á\x04»\U0003cb2d\x9d\U000327fb~𫏶É\U0009c9a8¶\U0009dd9fNÝ¨\x90¿[\U000a916a\x02\x98\xa0\U000c54cd\U000bf909`\x18Ãkð\U000e28ab\x8e\x9eq\U00082088\x88\U0001ea5b\U000c3074\x86ã\x89å)\U00085748\x10\tG\x89ÎúY4|\U000c834f<\x8eSØÕ¦\U00089dd1»D\U00074942\x92/Ç¼\U00051159\U000d4c95øöF\U0003143beè¸Ð«Ý𢼯\U000d0f59\U0006d3fb𧧕p\x15,Ó\x88\x1d½\U00104231À\U0006fe7fã\U000f5ed4\x0f\'yáI\U00059f73¯F\x91àÎq𤢇l,ôt:b\x01¨\x8b\u0e3dB@\U000d78cc\x02¢鏃[\U000ac13bêC\x94\x01ú\x11\U0008039a¢\x15Ý\U000435f3\U000e9d14c\x84\x8aB\x08\x05ù\x89\t\U00094f70\x13\x86ã\U000e021f\U0007bad9\U0009f7e2WÙ\U000c5775ç\U000994bc\U000cb2c0³º¸ÈÞõ\U0006b6a0Ð£\U0007ce97C\U00057c91Å-¬Þ\xa0\U000ed18agÑ\U000fa924\x1d\x9a\x0b\x01\U0005e6b5L@!.ìíUa\x13Éò»¢}Á\x1aùò\U000e7d79I\x98÷ñ\x89vP\x9b\x0c¥?\x8b-Å°!\U000c8aff\U000df1a6蟛»\U0009af33â°ß\U0006549aÖö\x94z^a\U000cd34e.\x08ftã\U0005b232\U00039670Zkù|\x83æ\U0005181fl£7ÞÔ\U000a1a6e풤(\U000d5a2d\x8f\x17\x16\'Úº\x97§Ê\x0e\x11ô\U0010897a®1z\U0008a7caÄ1,\x83\x1bþ?z\x07\U0005671c-`\U000944efÜr\U00078af2\r\x03𫏍·Ë\U0010d5c1¦Æ\x1d\U00043b6e\x1b\x1fm\U000db922Ì\x9f𣽽\U0010dbcaË\x8c\U00088191\x13\\ô\x12³-\U0006b70fò\x04\x96\x8as\x8cü\U00013933Ï¦\x15\U0006da91\x01Ù\x02+\x02ÎU \x90ï\U0008cdf7\x8cr\U00077b4e\x04xM\U000c4699\U00085d26Å\x16\x7f2\x86,Ó\x80ºi~}¬P¸¼¢\U000157b69í¢\x9f\x11ë\n6\U000e7eccojãÈúèÝ\x1f\x93\x17K.$\U0008cd59d½¹ªr\U00074fdd\U00098ea1N\'0(\U00061f44f+𥦂𐘦#\x01\x9f\x84úÊ£pÍ\x88\x90\U0001af98&"\x03\U0004b20b\x9b\U00048fc0æõ¶!\U000df9fbd\x04ù\x95\U0010397c¥\x93N¼¬\n\x11Þ~3§b:WÊ\x98\U000ef08eð°~\U00061648\U0008d4c9Õ\x005\x91ª\x9fé*\n¨O\x93\x06\U00015b1fbi\U000388d6\U0008f9cfíÎ\x9bgî\U000a00ab\xa0A\\)Ò𓂄Þ\x05\x05Cz2\x1a\U00037a71\x086i\U000dbe17\U000548caºZyÄ\U0004bb9e(ø\',\U000712aaûÍ\x05Ü\xa0Á\x13á,s\x8a\ræú\x08©\x17\x08胤\x8f\x87fê,Ó\U000aab06\x01\U0005acfaZ\U0006f8b0\x19\x86\U000449c3døPL\U000a8af3\U000d7761ÞÏ|g\x16\U00100053\x144(\x9eá𦧘¾\x08=\x16;A>\U000b05bfQÞᑊ:Á\U000bd484\U000b6cc4\U0005b7ada³>\U000fdad85\U000e1ae9jÈ \nýñ\n²\x12{\x05\U000e3340®§E]\U0009efbbðÆ_°\x0f\x90n#\xa0\x94\U00093893\U0004ea9f¼ë\x9eO0ÇèuÕ&\U0006fa54\x02\U000ffc26à\x03÷T4\U000f48f6ôt\x86Fg\U0008fed5÷ø\x90èÃ\x0f\x93\U000696ecpÜ\U000a2572ö·G\x1coB\x8eØºzú%\U000dd70bk顶\U000ed3ca\x9d\x93rÙ:Ý«¡\U0010d428øZ%¨R)\x8d\x19rÁ¸y'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 74, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003878s
====================================================================================================
2025-09-18 23:55:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '\uffffÄ\U00054624\U00059297é*\x82ÖWo"¶', 'ÝÓ\U000e3afb\U00076322\U000a65efB\x14', '\x03©\U0009f37cÜç\x08(', '*C､JÌ\x9e±\x81'], 'password': 17}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '\uffffÄ\U00054624\U00059297é*\x82ÖWo"¶', 'ÝÓ\U000e3afb\U00076322\U000a65efB\x14', '\x03©\U0009f37cÜç\x08(', '*C､JÌ\x9e±\x81'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 17, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003819s
====================================================================================================
2025-09-18 23:55:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004199s
====================================================================================================
2025-09-18 23:55:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '\x85ó\x92\U00096856Øpû¢𩤚UYú|𫽝\U00054ffeÞÛ¦`s\U000d5d51Y½üÞëáÂQpüBð¯\U0006f4b0v\U0006c80c¦ç\U0001bd11c_mïÔ\U000873c7\x9dl\U00079ba6\U000342fd\x00\U000ef649\U0006e97e6¯?\U000c4797\x8d×\U00042e1c\x87âL\x05\x90\U0008e5ee\x80P.\U000d421d\U000f5010N\x82\U000ca9ed\U000ac60e\U0003621d\x15\U000acf2dQ\x17?\U000466d0ꑛ\U00089232\x8bÇLî¥°ù\x12\x90U\x8d\x85\x9bum\x1eÂë\x81\U000da285\x08á}¢~\x08Ó\x81aúÏr/+_>\x7f¢!.-\tç\U000bc08a\U000a943a;\x92\x93A«ÌU\x9dÂ\U000938c2Ç\x14^\x0b샨\U00041031E|\U000d874eë<FÑ}gø\U0004120fV!¤½\U000e12d7$\U0004d5d4%d\x11ÌáxÒ¸,d\U000fa86b\x93M@V<u\x81\U000fdc8cQDSb\x98n\x14\x02\U000b0363! Å\U000750e7n\U00062bc6\U000927cf\x11¿Ø\x04xD\x80züÆH\x18\U000c1c98Ç\x9b1Ãw\U000afa33¸¬\U0007befeÔ\x89C\x8c\x8bÚXC%\U0007de6d)c×«·\t«\U000f1211ñ\U0001bd03KÊx¬2Ç\U000b5242ØçüE\x86>ñP\x00õ\U0003db66\U000e6c2eßÄ\x97a$#ýÜ8ë\x12E\x18\U00083b63뼡\U00071ea4ËOÎ]îM\U000770db\U000b841d\U000b43a3¢\x07¥æg³\x91j\x14@\U000938d6\U000f32f4\U000b4258@ä\U000ae860t.\x0c\U0010f424×\x1f×/Yüô$GÓ¶\x82\U00014f07\U0008187c\U000ebf3c~Ï\x12þÞÎÔ\x9dÈ\x8c>¯D2\U000c3f5c\x1eµè\U000c0205Ü\U00087377\x1f\x8b\x1a\U000e9b44\x08𦎼ùHF`z¶aËZÜö\x82\x84º/o\U000b89cb\x05PTD0\x1f\U000b42a4\x99\U0008cb56\x9b\x06|3\x13\x1d\x88𡜄Ñ\x84\x1c\'\U000709ecZ>\x87\x9fT\x00ð=\'Óº\x8b\x867ô\x1dÔ\x11\U000b362aC\x82p¨\x95?W\t`\x9dm\x15\x81\x8f\x98ûó\U000156ac\U00018f59.\x0b\x95Tþo\x80~û\x8a\x7fwhSÆ\x9d\x12\x0b¢\x914Ð\x8eÔ\U000f2156ª·\x83í\U000f953d쑜O2CÊ¥\x04\U000b4cd3\x0crU\x0e\U000508fb\U00096179e\x94\x1e\x98*\x1b>EÀ\U0010d5bc%\x82\x18\x95>0Ó\t\U0003d51cÓJIê¥«\x083ûÊÄN\U0008f452â¬\x00ÞÖ\nýÕ\x95\U00072136\x85TÄ\xadË\x9f\U00046ea7ßà\U00098bceâ\U000c6127Ïì{\U00091b10\U000fce8b\x84»Ã\x0e9\U0009ad90i\x8dÖµô\U0005fef7\U000cb234)6\U000753cb\x9aó·pÀ¶A\U0010c238\U00060b91¥º\U0005a927\U00087481\x1ct\x9fW\x93e¾þz\x98h\x8a\x8b¾ÚH\U00047f9f쉟\U000e3f5d$ß)\U00019781CöF\x0b$f#5Ê\U00043e12\x1bÛm\x8b§öä\U000d7ca9·fÝ\x91ò½ÿ.ð\U00101593\x96¾Ö¸Ü´¹0F\x07£\x0e\x0c\x82XÙêzØn\x03»Ø\nÏ6l\xad\U000596f3V¡2\U00108349ýa×\x9d¯\U000e2e23Ca\U000b911a\U00059629ôÛM¾²°\x83ë\x99,Ø\x83~pÂ\U000399c9\x05\U0008b7c4È+\x93&í\U000f8247µÒv*dO.Äú\x9b\U000af172R\U00060910\x0b\U000c2ebeA¥é\U0001576bË"\U000cb77aå;w\x08ý\U00046376t´J\x1c\U000d0ae5\U000d4488\x8fçJÀß\x9aÿ\x84\U000b4ce2´ð\x99\x06ú{`\x8e\x07lùU\U0007edf9\x19¢eG\x84¨\U00082ca3Ü\U000e39a9¬F¹d\x99\x11\x08\x1db*\U000e595c𤌫¦\x89à0R\x9bÀg\x94𥹰\x84Dú\U000ed277\U0010cabd¿×\U000161d8\U000b6d0a\U000f7ba4ÇÆ\U00092f7e\U000d4cc5\U000afea5\x1aäQmì𖬨𢰉øgßýàGÎ\U0003a395\U00013e7e\U0005b0b2=ö\x1ejìß¶\x8a\U000b788f\x00\x94ºëö%\U000b3bb5æ\U00051c60\xa0]në3!\x01ò\U000a4e55\U00080679Ó\x81òS\x8bw\U00046babaJ\U00081d42V\x17§\x99\U000f0c5d®í\x00\x98\x11mHiöÄkÑ🥖/Qèr_\rᥕ\U00070deeØ\t{£õ(J\x11óユ´\x15Cé\x03\x9d𩼝¡Ò\U000f5c5aoeòFfe\U0007f561G;\x9a\x91\U000fa855d:𣛈\x8d!$;Ö\U000641a6&\U000e4bca¢ðD\U0009b0d2宗Øµ>¨+ÿ\U00093452è\U000c9d3a\U0003527a\U0008581añ¸\U00068f17c\U000ab207\x89\x16\U000358e3\x9a\x97L\x02èø\x92£>åÃô¬\U000c7a66©\U000449d1j\x11TØ\x92Z+Ê\x9e\U00039ebb⭝ÏwM\U000bd7ffxMén\x82¾u\U00067f44k=\x7f\U0008b8c4Ç\x83}vJ\nd\x8d\x92ÌrÃ\x15\x92\x99ë2\t\x89ÝäÍ\x973\U000c718d\U000f3176\x8b\U000f458c\x8bã𡙳ªÅ@\U000ea0e6\x83ïe\x10m\U000ea96dPqL\U000b2b38*]\x8b\x96\x05¦þB\U000f3948\x89\U0001a3ff\x02𡘡Æ$.ôfã§\U00106f4a°\U000d9638¯\U000673d0\xad\x89\U000b7b73í\U000eccd9\U000bdf5b\U000f43c6Y\x13d\U000756e3cðÁ\t@~\U000939d4S\x81\x9c_\U000d7c2fv$ûvzÀ÷C\x1e\'Ò\x03\x07@q\U000cd371\x91\x18ÿLEOr\x84v\U000b796e\x1f\x9do\x9cí¨\x10:\x17Lx\xadv«\x82Ò\U00080affø\x99\U00096878Ô8Bz\r©\x08î\x15%\x93\x8b\U000c92d8!A\U000fd404"\U000952e6톗nWå\x9b𬺙\U00031e83\x84Ké\x89\U00051ff2\x12Us\U00083be9\x94Á¶\U0006f15dºÎ\x85\x8c7\x11\U0009e0c1\U0005767aâ\x80\U00079b03ð\x8c𣄸êÖ3iÖBf?v\x9f]\x1a\U000ace00\x96\U00056245\x12\x1b¨ê\U0005139ai\ue28dÇßå6-Zù\U000e037e?\U00079350uv\x131^Gg\x85â\U000f04ab8ß\U00061bbc8J\x80Ù\U00076651-\x15ØdÎ\x11\U00081d50\x159*X¹\x15?hÄ=\U0007b379´+µê\U0009acc7¿\U000dd054ð𗵧@±\x97\x19\U000d4c4cuÿÁbí¦\U000c0f82¸Üc\U0007e963\U000a2501\U000c6b74yß\U00072063t\U000b56cd\x07\U000e4bebXÀ3\x89\x82\x17ïKN®\U000a7cb3\U0005d034£\x05÷\U000d6c16\x92¿\U0007fd7a>\x85à\x8f\U000b325c\x90Û©Ä\U000bd945\x0cÑþ\U000f1d0f\x80Å\x05\x02 \U000f8a9a;*q¶Ö#\U0006e7b6ò𡼦x°\U000d9402\x1c\x12\x06=ß¾l\x0f·\U000da54f\x19\x07K¯Ñ\x8c\U00052abc\U00058841ô\x13|"*𥋒b\U0003ebf3W\U000e37d0ñÒu\x94D$\x85\x0e´\x9a\x88\x99°h\U00094822Î,7°\'\xad\x16nx]p¯³ë\U0003806c0\x87x"\x06ÿ\x1e\U000e92f3¸ìધ\U000caf17\x9fk_\U0009ecf3\x15*)i¬M@}\x90O¹믽Îµª\U0008ab4cñBi¯@k\x04\U00018dc3\U00076f95t\U0001bf30\U000d866c\x99!\U000bd12f\x1e¸\U000c134a\U0008e32ch4\x93\x12¯Â\U000db41e\U000ed4b1tä\x10ÓÐ\x89\x11n_\x9bÛ\x02(\U000e4e71>\x81PC\x8e\U0006b36d¡ËOñÚ½\x9aÐ\x0f_i[Bm\U000e180a¦\x15¿F\x16\U00074ae6|Ómb\x9a\U000c6138nt\x0b\U00087076$¸%Ó>\U00080db6{\x98\U000ab60aÖ\U00096385ÂÄ\U00034a9a\x98\x97Á\x19E\U000eb4edé_bÙ\x1e\U0008dd5aÓºu§!#Y×S$·\x80æn\x87\U00093c56\x83\x8es'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '\x85ó\x92\U00096856Øpû¢𩤚UYú|𫽝\U00054ffeÞÛ¦`s\U000d5d51Y½üÞëáÂQpüBð¯\U0006f4b0v\U0006c80c¦ç\U0001bd11c_mïÔ\U000873c7\x9dl\U00079ba6\U000342fd\x00\U000ef649\U0006e97e6¯?\U000c4797\x8d×\U00042e1c\x87âL\x05\x90\U0008e5ee\x80P.\U000d421d\U000f5010N\x82\U000ca9ed\U000ac60e\U0003621d\x15\U000acf2dQ\x17?\U000466d0ꑛ\U00089232\x8bÇLî¥°ù\x12\x90U\x8d\x85\x9bum\x1eÂë\x81\U000da285\x08á}¢~\x08Ó\x81aúÏr/+_>\x7f¢!.-\tç\U000bc08a\U000a943a;\x92\x93A«ÌU\x9dÂ\U000938c2Ç\x14^\x0b샨\U00041031E|\U000d874eë<FÑ}gø\U0004120fV!¤½\U000e12d7$\U0004d5d4%d\x11ÌáxÒ¸,d\U000fa86b\x93M@V<u\x81\U000fdc8cQDSb\x98n\x14\x02\U000b0363! Å\U000750e7n\U00062bc6\U000927cf\x11¿Ø\x04xD\x80züÆH\x18\U000c1c98Ç\x9b1Ãw\U000afa33¸¬\U0007befeÔ\x89C\x8c\x8bÚXC%\U0007de6d)c×«·\t«\U000f1211ñ\U0001bd03KÊx¬2Ç\U000b5242ØçüE\x86>ñP\x00õ\U0003db66\U000e6c2eßÄ\x97a$#ýÜ8ë\x12E\x18\U00083b63뼡\U00071ea4ËOÎ]îM\U000770db\U000b841d\U000b43a3¢\x07¥æg³\x91j\x14@\U000938d6\U000f32f4\U000b4258@ä\U000ae860t.\x0c\U0010f424×\x1f×/Yüô$GÓ¶\x82\U00014f07\U0008187c\U000ebf3c~Ï\x12þÞÎÔ\x9dÈ\x8c>¯D2\U000c3f5c\x1eµè\U000c0205Ü\U00087377\x1f\x8b\x1a\U000e9b44\x08𦎼ùHF`z¶aËZÜö\x82\x84º/o\U000b89cb\x05PTD0\x1f\U000b42a4\x99\U0008cb56\x9b\x06|3\x13\x1d\x88𡜄Ñ\x84\x1c\'\U000709ecZ>\x87\x9fT\x00ð=\'Óº\x8b\x867ô\x1dÔ\x11\U000b362aC\x82p¨\x95?W\t`\x9dm\x15\x81\x8f\x98ûó\U000156ac\U00018f59.\x0b\x95Tþo\x80~û\x8a\x7fwhSÆ\x9d\x12\x0b¢\x914Ð\x8eÔ\U000f2156ª·\x83í\U000f953d쑜O2CÊ¥\x04\U000b4cd3\x0crU\x0e\U000508fb\U00096179e\x94\x1e\x98*\x1b>EÀ\U0010d5bc%\x82\x18\x95>0Ó\t\U0003d51cÓJIê¥«\x083ûÊÄN\U0008f452â¬\x00ÞÖ\nýÕ\x95\U00072136\x85TÄ\xadË\x9f\U00046ea7ßà\U00098bceâ\U000c6127Ïì{\U00091b10\U000fce8b\x84»Ã\x0e9\U0009ad90i\x8dÖµô\U0005fef7\U000cb234)6\U000753cb\x9aó·pÀ¶A\U0010c238\U00060b91¥º\U0005a927\U00087481\x1ct\x9fW\x93e¾þz\x98h\x8a\x8b¾ÚH\U00047f9f쉟\U000e3f5d$ß)\U00019781CöF\x0b$f#5Ê\U00043e12\x1bÛm\x8b§öä\U000d7ca9·fÝ\x91ò½ÿ.ð\U00101593\x96¾Ö¸Ü´¹0F\x07£\x0e\x0c\x82XÙêzØn\x03»Ø\nÏ6l\xad\U000596f3V¡2\U00108349ýa×\x9d¯\U000e2e23Ca\U000b911a\U00059629ôÛM¾²°\x83ë\x99,Ø\x83~pÂ\U000399c9\x05\U0008b7c4È+\x93&í\U000f8247µÒv*dO.Äú\x9b\U000af172R\U00060910\x0b\U000c2ebeA¥é\U0001576bË"\U000cb77aå;w\x08ý\U00046376t´J\x1c\U000d0ae5\U000d4488\x8fçJÀß\x9aÿ\x84\U000b4ce2´ð\x99\x06ú{`\x8e\x07lùU\U0007edf9\x19¢eG\x84¨\U00082ca3Ü\U000e39a9¬F¹d\x99\x11\x08\x1db*\U000e595c𤌫¦\x89à0R\x9bÀg\x94𥹰\x84Dú\U000ed277\U0010cabd¿×\U000161d8\U000b6d0a\U000f7ba4ÇÆ\U00092f7e\U000d4cc5\U000afea5\x1aäQmì𖬨𢰉øgßýàGÎ\U0003a395\U00013e7e\U0005b0b2=ö\x1ejìß¶\x8a\U000b788f\x00\x94ºëö%\U000b3bb5æ\U00051c60\xa0]në3!\x01ò\U000a4e55\U00080679Ó\x81òS\x8bw\U00046babaJ\U00081d42V\x17§\x99\U000f0c5d®í\x00\x98\x11mHiöÄkÑ🥖/Qèr_\rᥕ\U00070deeØ\t{£õ(J\x11óユ´\x15Cé\x03\x9d𩼝¡Ò\U000f5c5aoeòFfe\U0007f561G;\x9a\x91\U000fa855d:𣛈\x8d!$;Ö\U000641a6&\U000e4bca¢ðD\U0009b0d2宗Øµ>¨+ÿ\U00093452è\U000c9d3a\U0003527a\U0008581añ¸\U00068f17c\U000ab207\x89\x16\U000358e3\x9a\x97L\x02èø\x92£>åÃô¬\U000c7a66©\U000449d1j\x11TØ\x92Z+Ê\x9e\U00039ebb⭝ÏwM\U000bd7ffxMén\x82¾u\U00067f44k=\x7f\U0008b8c4Ç\x83}vJ\nd\x8d\x92ÌrÃ\x15\x92\x99ë2\t\x89ÝäÍ\x973\U000c718d\U000f3176\x8b\U000f458c\x8bã𡙳ªÅ@\U000ea0e6\x83ïe\x10m\U000ea96dPqL\U000b2b38*]\x8b\x96\x05¦þB\U000f3948\x89\U0001a3ff\x02𡘡Æ$.ôfã§\U00106f4a°\U000d9638¯\U000673d0\xad\x89\U000b7b73í\U000eccd9\U000bdf5b\U000f43c6Y\x13d\U000756e3cðÁ\t@~\U000939d4S\x81\x9c_\U000d7c2fv$ûvzÀ÷C\x1e\'Ò\x03\x07@q\U000cd371\x91\x18ÿLEOr\x84v\U000b796e\x1f\x9do\x9cí¨\x10:\x17Lx\xadv«\x82Ò\U00080affø\x99\U00096878Ô8Bz\r©\x08î\x15%\x93\x8b\U000c92d8!A\U000fd404"\U000952e6톗nWå\x9b𬺙\U00031e83\x84Ké\x89\U00051ff2\x12Us\U00083be9\x94Á¶\U0006f15dºÎ\x85\x8c7\x11\U0009e0c1\U0005767aâ\x80\U00079b03ð\x8c𣄸êÖ3iÖBf?v\x9f]\x1a\U000ace00\x96\U00056245\x12\x1b¨ê\U0005139ai\ue28dÇßå6-Zù\U000e037e?\U00079350uv\x131^Gg\x85â\U000f04ab8ß\U00061bbc8J\x80Ù\U00076651-\x15ØdÎ\x11\U00081d50\x159*X¹\x15?hÄ=\U0007b379´+µê\U0009acc7¿\U000dd054ð𗵧@±\x97\x19\U000d4c4cuÿÁbí¦\U000c0f82¸Üc\U0007e963\U000a2501\U000c6b74yß\U00072063t\U000b56cd\x07\U000e4bebXÀ3\x89\x82\x17ïKN®\U000a7cb3\U0005d034£\x05÷\U000d6c16\x92¿\U0007fd7a>\x85à\x8f\U000b325c\x90Û©Ä\U000bd945\x0cÑþ\U000f1d0f\x80Å\x05\x02 \U000f8a9a;*q¶Ö#\U0006e7b6ò𡼦x°\U000d9402\x1c\x12\x06=ß¾l\x0f·\U000da54f\x19\x07K¯Ñ\x8c\U00052abc\U00058841ô\x13|"*𥋒b\U0003ebf3W\U000e37d0ñÒu\x94D$\x85\x0e´\x9a\x88\x99°h\U00094822Î,7°\'\xad\x16nx]p¯³ë\U0003806c0\x87x"\x06ÿ\x1e\U000e92f3¸ìધ\U000caf17\x9fk_\U0009ecf3\x15*)i¬M@}\x90O¹믽Îµª\U0008ab4cñBi¯@k\x04\U00018dc3\U00076f95t\U0001bf30\U000d866c\x99!\U000bd12f\x1e¸\U000c134a\U0008e32ch4\x93\x12¯Â\U000db41e\U000ed4b1tä\x10ÓÐ\x89\x11n_\x9bÛ\x02(\U000e4e71>\x81PC\x8e\U0006b36d¡ËOñÚ½\x9aÐ\x0f_i[Bm\U000e180a¦\x15¿F\x16\U00074ae6|Ómb\x9a\U000c6138nt\x0b\U00087076$¸%Ó>\U00080db6{\x98\U000ab60aÖ\U00096385ÂÄ\U00034a9a\x98\x97Á\x19E\U000eb4edé_bÙ\x1e\U0008dd5aÓºu§!#Y×S$·\x80æn\x87\U00093c56\x83\x8es'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.0042s
====================================================================================================
2025-09-18 23:55:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003834s
====================================================================================================
2025-09-18 23:55:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '³8\x83\U000e3bf3\U0006e6fb\x83\U000a69e3m\x15\x8c\U00095b82ð\x02j[îXï\U0003ff70\U0008aa3f≎\U0006a6b7Ôx].9Ð\x0b\U000c352d¯;\U0002fba4\x86\x1b¡1;±xÀC\U0004c128¡[ÒÙ\U000b6784VUîÝ\U00105578\xa0d\xad\x92\x80\x1eÚ\U00103b16\U00061658𣝥z\U000ad1fa5~\U00083d37\U0009237cûàÉ,97ðQÖ\U0003bd59"\xa0Ú\x1bx8»ÄJRv.\x9b4\U000daf32\x8d=ä^1𐂙\U0001cbebFÎ\U0005d6efG\x0b¤·\U0010794e\U000c769c\x8aé5\x92\U000b89ed·m\U000a09ee¬kÈ\U00050e9a\U000ce9e9\U00061424\x94é1³q\x94\x9aÌ(áø\U0008cff4ZQ#\x13\U000a327c6Ô\x14\x00o\x19-\x88\x11¸Ê,Zw\U000477f0\x89áÝú\x9b\x89\U000583e0ô\x01\U000fe4e1\U000737e4S\U0007f933ýI÷ô\U0005fe0c\x12ÿ¯\x17ù\U0006bc09áîÎþC\U000f4557\x1c¯2\x8b~\x8eç\U000c45f5ÛÄ=ñÚ\U000192d9ËôW\x0fÓ\U0004ab6a328\x89\U00050838\x8a|$,\x9cEè\U0001601aß\x04ïÛ²Ê\U000f2dd79\x0b%\U000958de\U000cf818\nâ\x7f\U0008646c\U0010a0ac¤a\x05¨Ê\U0009b39cz\x10𭡎\U000f7369\x92\x0e𢲢\U0006f21b\U000fcac3\x055å¬\x11\U000e4ead\x03SÙåP\r¼Ï*\x0c̏<\x0b\x07¢UÔ.Õûøöy\U000741e8e🕆Z\x83T.Ⱄâ°¾𩾠£\x08øô³Ñ[\x8b\x15Ãÿ7\U00104d84\x17c\x9e\U0001ff32e\x86b\x8e\U0003a130\U00054781Üz+\x01Ø[\U000167f6³\U000466b5\\T$\x1dyÿ\U000c52c9§e\x88¢3\x12Ãü\U00052355\U0008366aä}×\x11\x7f\x82èl¬í§\x85\U000ec14b\U00105d0c\U000968f9Í縍n\U0008555bBî¾\U000b5279\U000448776Ç¥\U00081009?ã\x0692\U000ac9f8ÅwÓ2\x11\U000bfbde\t뻏\x91\U0009a9dc~\x02\x8b\U000c7897w=g\x0b\U000d0a87à¹\uf399\u2452\U00082a5a=£V¬\x15\U000cb0f3\x94\U0008ccb5\x99Ï\U000e6dcd\x12¥\x17ü\U000b1c28£\x17^\U000d80c5ÑL\x80S}\U000370a7\x9fx´í,ÅD\U000db0bev\U0004e645\x95\U000c2bcb\x05\x85ü仐æ\U00031b8e×\U001070eaÏ\U000dedc4Ù3½ÔùU. {\x13êí°\x13\U00083d7f\rL\x1cÉ¹d¡\x96\x0b-a\x1a\x886\x7fbÔ²r\U000b5a23eO\x06\U00043880Xä·è\x95t5<\x9a\x02\U000ce542Ã=o\U000af888Qj\x07\x9aÈ\U000d943e\xad\\\x8a{è\x9bZ\'\x11"e\U00103bd5\x91\x93\x03\x84y£\U0010ea76<\U000fe025\U000f43b52òÎ\U000cd87aI\x82§"Ó\U0005fca1\x0fU(h仼Õy»!Ô\x06O®Î_°Î*W\x8e\x0f´\U00013f6a\x19t\U00040062\x99\U000c16d7\U00037b50\x08\U0009c722¬¿(\x82\U000fa4edtD3Ôú𨸤ª,\U000adaf5\x97\U001030c7Ó\U000f892dj~Ò턥\x82NÌ¢ýÕþ𡷑\x04\x04\x02\x11ò¡®h\x81·\rK*\x81\x93\x0e\x992\U0007cfd8ü\x02~\xa0í\U000dcf95\x8b@·Ü9\U000cb79côEaR\x9fÿ\x92\x81kåp\x0b:\U000606ba#L/>ä«\x81Ø²\x9f\x95\U00068ea7\x9aU\x8e\x87³Ýû\U00033591;\U000494c2\U00095976\x199ï2\U0005f771Ç\x85\x91/1G[Z\x00\U000cd6d3\U000972f6\x1dìÇöQ\U000a2c4b\U000a5897ú\U00052865\U0005eabeF\U000b22a34Í>Âß\x93Æv𒐘6\x0bü\U000f8e1dg²§r\x91¯Í\x97ÑµÒ\x83Õ9\x11º¼ÎMU9\x18x\U000b7f1623´v¦\U0006bd9cë\U00047378¿ï~\x81`È\\Ûwt·1\U000e60f3%4ÊúÝ\U0010037a`\x9a\U000c892dHGÏ¬(Ò\U00080061¸û\x07\U000b83eeÏM¥úTk\x91\U000d8167\U000f6064~\U0007588eZ\x94\U0008162d(𡷓ç\x99U𪖝4<\U00066bcaKl\U000d8e6f\x87\U00073c3b?¬¹\U000c31c5ä\U000f77c0é\x08饛©9\U000ec2dfy·q\xadúm¾Ø×ùQ\U000878dd\U000e3724l\xad"\x0fFCbîåß°T\U000bdd5b◸\U0005782f\U000cc572\x1d\x1b虄\x12Ï=\U0009385c\U00065e39ê\x13y\U0001a697·Îs[\U000e6043\U000c70a1Äº\x1eÚ >\x8c\U0004bed8$\x14\x96\x97\r\U0005cd88§5g¯µ§´¡\U0004535cZ\U000f0d40\U000f306c¦(\U00073856¦\U001069ebY²Æ\U000f8c82\U000f478dï\t¶a\r𑢨\U0010af5a\U000cfeb5𗚽\x8fð\U000658e2\x9fÿÓY\U000e4f37Ý¯ÙN×\x1aè\U0005bb38QëuÂöÛq¹\x92F\x9f¤¯\U0010a348\x9a\x8fD\x05\U00093ca1\U0009cc55\x129\x1c*©\x9e\U00109a46\U000d47e0Ø7Ú·i\x8d\x93u\x8f\U00075b15\x9cÓ±\x0b¼f\U000347a7\U000e8df1\U000c63d7\U000d3a80\U0010ff2e\U00019de2eÔ\U0009cdf4#}¡Ä\U000147d5V/U1\U000c988d¯\U000b3343A\x9el>\x91\U000e08fbM¹Â¶\x07v\'\U0004cbd6Ë\x8aibï%¿\x8cò®´Y\x1a7M\U0003bd19È\U0005cf477`\x7fK\x7f\x02ñ\U000ac2b5\x80\x8b㶤]𥸧\x12\U000cab44𧏔\x05j\U00104976áç\x96\xad\x9c\U000fb98e\U00087f0cÒ5ù\U000f512a¼X\x16\xadV\xa0\x1b\U000d0cf0X\x8eè\U000a8296©\x9b\x87䜬ﷂ^rër\U000fa26c«e', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004174s
====================================================================================================
2025-09-18 23:55:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ' '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00347s
====================================================================================================
2025-09-18 23:55:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '1Æ\xa0\U00096784\x00_\U0010b926-»\xadIoWöº²=È±D)\U000bd16eÄ§°c0¾ìQß\x14ý\U000ddea9y𠜜j놑\x08\U00093c55B\U0007ebe1\x7fF45\x00\x1bå½þ\U0006484d\U000e240d\x89Õûâ¢\x10\U000ac341°\U000a97c8\U000c59a2\x98\U00014353\x859®Ñ\x10B¸`N®\U00010771\U000b7e59\U00093e61\U0001a3a0쵽@Ö\x14\x1cM®\x12>\U000436e0\U000d9416\x06怂\'Õ`õ`\x0eâ\U00073d32\U000e34360\x9eP\U00099f0b¤Äk\x0f\U000bd013¡Åô¶úÐåÀl¨\U00065f50\n\U000d3f49\U0005b7d5À䓟»4ó\x9a\U00039fb1\U000e3714\U001056e8_\x01\x14÷𥞧\x9b\U000f0242\U00082d23\U000c3dd1\x0eñÓ\x9dÿÛÚ[ è\U00056ad8¾M¤\x10ÀË\x83\U0002f47eÒY8\U00071f11Ò\x82\x12/ZZ´µs\U000ca2a1q\U0007e6d3Î/dó2øË\x9dr\U000e90e8\xa0YØï\x11±\x00\x1bEð\x85Â£\x97yáë\x89lDÕ\x16?±va\U000ceaed\x7fÓ\t\x88𢃬\x04\x1a\x17úqg½ú\x10\U000818f7c)®¨ª\x9e\U001070e5§?Ý\x08Ú\U000b008d\x01\x7fñ÷$\U0004c533SíB\x06\x01\x8cò}\U00091bd8\U0007cab63Í\U000f556cQ\U000474b7\x8cø\U00084b90\x1b©\U00039fa1\x84\x82å-\U000876ee\U0004e3bcz]\U000844efgÓ\x1d#\x81\x12Á\U000e1d96 \x16\U00055f4fzL\x9cØ\U000f6bd6Éõ0\U000bfac3\U000fb4de\x1b\U00096c02ô\U0003f5ba\x0f\x1d\x13p5e\x11xÁL\x93\U00089f82/AE\x1d\U000a35c1[J\x18"𡤽Û\x1fÉ\x1d+U\x0f¤-鼛\x98\x80 䐵\t;\U000a94124\'\x14@\U00109a98æ\x11\x86\t<\U000e57af\n\x1c·]\U00066b391SE\U000b26bbú\x9f\U00077918*BvvxR\ue62d¹\U0005947e\x97@\U0001ffb0\x87è\x99\U00094e6d×÷\x12öA9EÈÙ𰒾\U000dfe31³\U0009dc24ñ\x0fÙ-Z#\U0006c849\U00063a24\x93\U000c6068\x1cÝ\U0001fdfa«q\x86\U000bb3ea\U000c64c9û!銦\x88¢¿\rûð##Í\xad ZY\x8c綅ª\t\x9b\x83Ðh츜¦ª\x07|1\U000a11ae\U000ed132\x8b~\x8cÛôE\U000135d3É\U0006ce93×\U0009245d\x82×\x1döV{\U0009db24Q𗘡Ã\U00087ccfx+ïòÍ\x8dUL&\x96Á\x9c\U000aa8c6\U00079616\x0c+]y\x9dG\x10q\U000ed858\U000d4f38wæª\U00064626Í𥡼ÎÌ\x06±\x9b\x9c\x9a\x91hù\U000e40df¡\x91\x7f\U000a90e7\U00075d8a\U000b3693F\U000da4a2cü\xad¦u[\U0007a93eIf^\x17^½NÈ\x001ò\U0003d77bß©u𠜖MÇÉ÷à\tuv\x99°\U000a5d77\x1b\x99æ\U0007bef8\x96Þ\U000b0abfè¼\x15\x1dÒö\U0010fc32\x9d\x1eâ5zòÏÅ{\x85nO´Xayeø\x10T\U001025fa+\x01Û\x19\x16\U00075fbfs\x1c皐\x91\x9aÛÒ\x98f\x93ë댻\x84GX\x06à¸\U0003edeaÄ\x9b·\U000defa2"\U000c144b\U000fbe47\x98C¤\x00©\U000386d6\U0005ce92(M\x94cö·d퐪\U00033f19ÏdEÄ\x062\x9e\x13\U0010ce03±\x86Ò>\U000b425c³\x1f\x82õUë\x98#\U000df264i\x15\U000adb33B.\U0004d5eci\x99ÀÒÏ9ê\'\x86ð\x11G\x07\U0005e374\U000f76e6:Á{\U000a6c9b\x1aÎè%\x91ªAØ?ÿ×·ý\x95V\U000f3c455\x12\x92\x14Z\rrÂ\U00039233L«mÿU\x1fuq\x95\U000c1473\x88\x86s\U00079c35$Ì\U000c8295xÀèäÂÑMÜ\x8b\U000beb4dh\x8cÉó\x08\U0008671f\x03W\U000dd9f77\U000e89a6\x02~许\U00079b08)\U000decd2µ\x02<æ¨\U00040a22],·ë\x1a\U0006efca\U00053031©\x9eÅ\U000bff4c]B\xad𪭨Ü-"\x93\x94\U000c1e08Z³\U00066fdba-\U0007ea13$BýÉ9\x9fn¹\U00049ecf\U000a5aaan\x8f9\U000dfd98Û\U00089c56FCÁ\U000d41df\U00034d63"\x875?7n\x00¢º\x7f\x9cQá\U00034a32\U000fb9c1Eqb\U0008c264´aÏÆj1bt\x1aç\xa0¹°¢*\x00\U000debce±\x84\x84ü\x17\x11Ë<*\U000b30c6\U00065361\x18H±\x04\U0009b82bAx\U000fdceeÃ\U00066794 ¹û\x88ý;\x85k\x99\x1e\x19¬\x9bî\x83\U0008f1cf]2®tQcûè\x17ÛJw.Ñ\U000b1f64\U0006adde+ÏeØ\x1a;QGNuE\x16\x03\U000f7539jJõD\U000b4756Dê\U000af738㸀6ä\U000e7b82\x8b\x84S5nÕ\U0005ec23\x19Ä´ó\U0008fafe(W\U000759dfí\x14-\U000899acÂ\U0005b91c¾\U000e62bf\x8fQ\x87Ý\x1a\U00042f77!\U0002ecb6\U0008d820\U0007d70fí4lúZ-;\x0b¨n_\x88¢\x82¦¸Ï£\U000723f7\U00072d6eÁ\x0e´\x92ù\U00086124Ñ\x13?𥙍l\U000e4c13¶\U000ea677ïÃ¤§\U000be388¹T𒋤OCq\x15Åç\x02³¢\x83\U00079226\U00089c3d\U000eb899\x05k\x13Öy¨\x1b\U0001ac01B\x1c:µ\x02×\x0f²+1Ó\x8d\x8a§8\xadwD\U000e7ddaÏ4¯|¢¡\U000feb18¹d\x96%\x9a\U000c8627¹F§ü\U00078dd2n\rE\U000ce5ad\x82jø\x17\xad𘌚&\x84â8>\U0008c6c4i\x1f\U00104558DÌ\U000196cf\U000bdb8e#\U000c3640\x9cz&\U000f9da4¥Z\x9a\x86KÇ\x9b\U00093545\x83Þ3RHcrô\U00082fe7𒃀\x8c\'¶È%Sc\U0010d0c0,³¥\U000e587fK\x02\x06¥¤-à\U000d34d8\U0009e52a\tûYxើM\U0010cb47õ\x0fê?\U00081740\U000780c9\x05we>Ü\U000c879cÞ\U000128e0gÞd\x81±\U000a91feûíìZ\x8b¨\x8e£É\U000b594c\U0003e1eeëûã\x1dv\x0c\U00031847*\x98\U000c4f5d³\U000d9713Þ\x95å\x06)µì\U000ed513²sîKæô\U000a1ae8\x18Ó£\U0001fe07x¤\x8a\x15.-®\U00103c4b_'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003638s
====================================================================================================
2025-09-18 23:55:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ' '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003954s
====================================================================================================
2025-09-18 23:55:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['\U000709e6', '\U000571e7', '\x8c\x9f8(D«', '\U0010d44e\U000e04e4\U000e57a9\x8d\x9e', '×\x14oe?¢ïNs', 'Ì', '\U000f6b47üa\x02â7å\U00089f6d']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U000709e6', '\U000571e7', '\x8c\x9f8(D«', '\U0010d44e\U000e04e4\U000e57a9\x8d\x9e', '×\x14oe?¢ïNs', 'Ì', '\U000f6b47üa\x02â7å\U00089f6d'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003806s
====================================================================================================
2025-09-18 23:55:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '    '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004117s
====================================================================================================
2025-09-18 23:55:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004004s
====================================================================================================
2025-09-18 23:55:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ñ±\U00016276\U00068dac'], 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ñ±\U00016276\U00068dac'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003701s
====================================================================================================
2025-09-18 23:55:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004102s
====================================================================================================
2025-09-18 23:55:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 'ÐF7\U0009ff03Ö\x14\U000b6f8bíÞï\x00éÞ¡\U000de05d\x91\x88K\U000bc02dËé¡\x9a\x1c\x0bþûÂOÀ^\U0010a311\x1f\x90\U0007a1fff\U0007db8f£¨d·\U00102c08·YL\x0f}Jÿ\x9dO\x908\x99lã¿\U0005aa07ó𧭭Xð\U000552af¼ÿì/\x04\U000dabb2Â\U00060ba6\x91Q\U0005895a²í\x84\U0007c715\U0004f38bèEp\U00091d51c/\x02e\U00054e8a÷\x03$\x12𪕊\U000689ce\x0f\x82/óÌ\U0007f2baÎõ\x0b\x06\x89\U000811faÝ¼\'\U000522322,Rø\x9a\U0010e1cb \U0005f55dïî9qq)\x8fl\U0005def1£\x06ôØ\r&_\U0008dd13\x99\U0003b1f8Úw!/Ê¹\U000713c7\U00076e69\U00093a7f\tKÝ\x14vX\U0001afd7ú\x18¯u\x92IárGièÊkS\U000f2f02ß¼\x9a\U000fc0f1Îy\x84¹\U000d70b7-\x0b{q\U0005ec6a^\x84Ä4h\x95\U00067c83\U0001ded1Úa\U0009dd26É\U00058b22\x8cøÝ8!í+\U00099305ûb^ü\U000c1b24\U0009a81cAºwêÇ`\U000a988aã\U000b64b2\U0005bd71𨄶\U0004cbce°Ñ¸¬\t±\U0004b516\U0004f565𫻝\x94ÿ\x0f8O\U0005f979E}¦bN2𬒯\x9c\U000166d0úUà#\U00064d44\U000f8019\U0010e2e4ù\x87i¶\x8cMà롱9\U0009e689\'>\U00036560\x99ô}><\x0f\U000ed476\U000b19b3+f\x19ór\x0fà¶öT1\uf728¾\x1d\x1f°Æ\x85\x1a\U0010adf0\\D¤𒄆\x15ôßyK?{QÜÕþ\U00050b36eú\x00y\U000632cbí\U000e555f)ÈÚ\x87ý~±J\U00093c7dÆe\U00044daf\x9d·\U00069625t©\U000fca25\U0006f75aEÈ¥a\x18ß\x19\rÂ@<B\x05\x9f\U00058b37\x8d\x86\x169ï𢩗kÀ`\x99ÿ$ÒU Äé\x87s¹\x0c\x91\x85\U000d5575]4ÄB\x0f¿\x01i\x08?\x13+\x90ÓÁ\x12\U000cd259GS¤\U00040766\x1f¦Vå\x92\x81\U0005a7d6\x04\U000da37e芳È嬉4Ù$ÝQ#|%÷ø\x01´Ø"dÓ\x15¯êæ¡·¸¹\x01§Ç\ró\U000655ce\x1fÚ§\U00096773\U00090583\x8c_L$Ù\xad\U0003d72eî?\x8fI\U0008c51e簟\x14\x91ÿ\x0e\x0e\x8b\x8cµ¢½\U000d003b]Ý\x17d\x03*\x88XRÐÝ:\x8d¢M ¨\U00019f63 ²öñ`\U000e6d96t=Ëvù\x1e\x17»¨Öí\x87+Ì\U0009722dQ\U0007bec5sòýQÙ\x10\x0e\x1a·uCá\x17\x8c¨³_i\U000f399c\U000ed2c8sqû±ñr\x98\x15𥂸¸\U000a73c0o\x08𬯜@z\U000e120d\nÞõ\x9c\x8b!\U000e737f\U0009ab17\U00080fbdì°\x0b켹r\U00056cb4\x83\x05¬ýS\U000f2054\U000e5828𘑗Â\x11\x1a±Ð%B_H²)\x7f\U0009800fÖf\U000bd8a4×úE·bMñ\x9d^𮑕Ü\U0008705cJ៖\U000cc5f3ÒTWë\U0001c356M\U000cebeeS\x07\U000325d6\U0003cc3eµ{: \x16¡¨\x15É\r\x84\U0004d9ec,sé\x93\U000b39a1Éã\U000d0b1bÒL¸\U00108b06U\x05\x94𨛘\x14P\x8aÍ\U00041b3d4³Ò\U0010e3c7-\x97\x99ó¥\x7f \U000be355¯\'\U000748dfÅ\r\U000c0d20`×ã¸¹ñ=L\U0006bfa7\x01í\U00043726\U0007dc96\U0006eb36ð¬N𢂭l\x10p\U00106bd6Ù\U000fa1a5Ê\x9f\x93r\x18\x12ò\U000426c1ô¶4+\x94\U0010007f\x9fÒ\U000d7f4a\U000b5cc8\x97k\r\x80¦éÙÁ\x0c\U0007b81fµt\U000b8828µ(\U000e1d8e\x1aY\U000d7ebfµÌ\x1cò¢\U000c70103\U000ce759Ë῁\x04\x1e𠼐\x10\x01\U0010f3e4¶M𞴟wí\U000d9036x½}𫺜°\U00083337.£vù\U0008b6cbåÉ\U000b4e9c"õ\U000f0469\x06+}\U0004e268\x0bÄTÆ\x11\x9e\U00016d4e\U00097347Ê\x82\x93\x19\U00088861\x02í𒓥!\U000630df\x8aÚ\x91ýî\n*]m¦J¡\x88\x8ai\x1c\x1bð뵖ÖPýÝñ\U0008f5a0#ke\U000aa6a9\U0004deaej¦\U000df9e9\x19\U00018da1e6诵ìß\x0c\x19\U00098198ir\U0005c586\x04P\U0010c03fBh\x1f;h&X\U0004ac64©Â\x1ea\U00101daf|P!\U000d642b¬lCÄjC𤖖\x1axÙÝ1\x05yÝeô\x1f$#\U0004f341À\x93¥\tXg±\x820\U000c47d0\nª\U0004da59µ\x1fãK0\rN«\x84 \x14û\U0007ff8ak\x9a\U000b4392kÝO\xad\U0008ac31±y\U00086a36E\x95\x0e\U0007de65Ï¹\x04§\U0009e3ee\U000594e4\x9füÑ¾m\U0006db3d{R«\x9bé¡ä~\x1cHÎHo\x1dsu\U000ab067\U0001c029\U00053c21\U0008b151\x1e\U000fc621f\U0003e2f6\U000b9478,åD\U000cb6fb\U000607b4ÎS`mÈÞVÓ¡Å\x9dÜ9;l\U0007927f\U00042ee3\x82\x8aºÏ¨\U000a842f\U0010e7a9\U000163a3\x1f¤\U000c5213¶$Å°6/î⋌\U000afe02vÝ¹\U000d31ef÷%Ût£\x8fm\U000c76aaÆ\x91\x91\U000edd70Ì\x11C§8±\x80\U00057ff2\U000365ab\x82#Ø|ý¶\U0007bcd6½\U0007c704Ãæ\x19\x7f9F]xúwù¡\U00062ed8qᤑ\x02\x9f\x94¦!Za\x07hñËCÙ\U000db60cì\x90/𤵮\x96\x10ð\U000f9347𝌒K\x82"\x87洖I¡!ì\U0005b9d3úÏ\U00013e03À\U000a6e79\x1e÷𨧡¦u.\U00071cdc\U0006e6b2bÎÕ\rv\U000686c2\x90Æ\U000eab76ç¶Ó±J\x19錩\U000e061cÀôsì\x16\x16M¸j\x10XÎ\x08\x0cᜳ:¥ﱅä(d(\U000a3fec\r\U00046d08{æ\U000b973fÉýÇÍ\x9e\x93ÛÈÌ`¾^𨚚\x9b°\x83\U000664d6E\U000751d1\x03\x10\U0010bb81\x1ds\x99u\x19µÑ𗀴\'\U0004c60d좼¹\U000e0dfe-z\U00060f2d\U00061878\x80*\U000394be\U000cdb22\x1d\x8bô\x84𦳳\U00062c22\x8fiGùá\U00106bfdvu¤ÝÄ\U000fb76eä\x91:>\U00092f19W\x1d\x11wv¼ùñ\U000d50c5\x94E\U000afce8\x80Ñ\x1a\'ëNz\U0009d3f2\x9aMì6ÞZÍ\x19\x84\x8f\x1f\U0010d9e8𭮦\U0001c9b0b\U000c1b01y\U000db904O\x8fê¢\x9e\U000d5aa2\U0006bc2c\x97!\x88Ö\rÁ𩃐\x08\U000e54db\U0007a279l\x91\U00033b93\x0få\U0001f2a1\x81\x1b3õ>\x1dÁ\U000f99e2\U000ba3fdU}v\U000a463eÜG\U000edca63𗼇(𰟺Ft\x95\x15¤dM\x83\U001030b0À²¢Ío$[±,ß\x8d\U00072ea7Á\U000ea1c5è=5àù\U0005fa6aOM¤\xa0¾ÊT\U000d293b\x8do±\x87añ\x7fG\U0007e6bf\x12\x8e\U00073f5e¹þ\x14Ïç\x96\U00039a78\U000a4084욼WÚ²#\u0de1\U000e494fÉ)è\U0009c840\x1c6\x9bö\x06\U0009debdOí\U00096d5fï¨ÍÈÀêA\U0005baa4\U00048be1Ü\U00101d9c\x8d¯\U000e6a62üK7¨𤨪¸æ\rªxxÃ©\U00048519P\U000c7d3a¼Þ¸D[\U000b63d7H\x08ææQU\x9d`\x81\U0007b68c\x1ct0f\U0007a0311¶\x01ö6Úº¸çQ[\U00062ccdJ\x84\U00078dbd<»\x810\x86|Æv~g\U000c4357P\U00078633\U00033f3cÃ騰\x1c\\®\x8dó1\x87H\U000abec7Ò\x9a\x89@G\U00015c5c\U0009372fÙ𖨋\U000c4b17ÎnÀ\x02i\x1d\U000de8f4\U0008abc7\U000351fa\U000e16a9|~&lNq\U000aadd88\U000bd4e2ç\x12BÈ\x00¸\U0004840eÔ^»x\x81\x05j\U0004f014øÄñS-¬\r𝓖»\x96G\x9f\U0005d382\t\x16\U00042321\x15®áÜ\x0eé\U0009ec2c\U0003b789¸y\ràÄ\U0007bfc4\U0007875d\x0eg\x18\U00042489\x02¬\U0001bf70\U0001bb55?À\U00070eba\U00079e62!ÿó+ß𑆡\U0001aad6𨥓øäJ¯\x8dö\x8d\ue37cWqI\U000ec1b3X\x92ú%G\U000cfbde\x99ü'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 'ÐF7\U0009ff03Ö\x14\U000b6f8bíÞï\x00éÞ¡\U000de05d\x91\x88K\U000bc02dËé¡\x9a\x1c\x0bþûÂOÀ^\U0010a311\x1f\x90\U0007a1fff\U0007db8f£¨d·\U00102c08·YL\x0f}Jÿ\x9dO\x908\x99lã¿\U0005aa07ó𧭭Xð\U000552af¼ÿì/\x04\U000dabb2Â\U00060ba6\x91Q\U0005895a²í\x84\U0007c715\U0004f38bèEp\U00091d51c/\x02e\U00054e8a÷\x03$\x12𪕊\U000689ce\x0f\x82/óÌ\U0007f2baÎõ\x0b\x06\x89\U000811faÝ¼\'\U000522322,Rø\x9a\U0010e1cb \U0005f55dïî9qq)\x8fl\U0005def1£\x06ôØ\r&_\U0008dd13\x99\U0003b1f8Úw!/Ê¹\U000713c7\U00076e69\U00093a7f\tKÝ\x14vX\U0001afd7ú\x18¯u\x92IárGièÊkS\U000f2f02ß¼\x9a\U000fc0f1Îy\x84¹\U000d70b7-\x0b{q\U0005ec6a^\x84Ä4h\x95\U00067c83\U0001ded1Úa\U0009dd26É\U00058b22\x8cøÝ8!í+\U00099305ûb^ü\U000c1b24\U0009a81cAºwêÇ`\U000a988aã\U000b64b2\U0005bd71𨄶\U0004cbce°Ñ¸¬\t±\U0004b516\U0004f565𫻝\x94ÿ\x0f8O\U0005f979E}¦bN2𬒯\x9c\U000166d0úUà#\U00064d44\U000f8019\U0010e2e4ù\x87i¶\x8cMà롱9\U0009e689\'>\U00036560\x99ô}><\x0f\U000ed476\U000b19b3+f\x19ór\x0fà¶öT1\uf728¾\x1d\x1f°Æ\x85\x1a\U0010adf0\\D¤𒄆\x15ôßyK?{QÜÕþ\U00050b36eú\x00y\U000632cbí\U000e555f)ÈÚ\x87ý~±J\U00093c7dÆe\U00044daf\x9d·\U00069625t©\U000fca25\U0006f75aEÈ¥a\x18ß\x19\rÂ@<B\x05\x9f\U00058b37\x8d\x86\x169ï𢩗kÀ`\x99ÿ$ÒU Äé\x87s¹\x0c\x91\x85\U000d5575]4ÄB\x0f¿\x01i\x08?\x13+\x90ÓÁ\x12\U000cd259GS¤\U00040766\x1f¦Vå\x92\x81\U0005a7d6\x04\U000da37e芳È嬉4Ù$ÝQ#|%÷ø\x01´Ø"dÓ\x15¯êæ¡·¸¹\x01§Ç\ró\U000655ce\x1fÚ§\U00096773\U00090583\x8c_L$Ù\xad\U0003d72eî?\x8fI\U0008c51e簟\x14\x91ÿ\x0e\x0e\x8b\x8cµ¢½\U000d003b]Ý\x17d\x03*\x88XRÐÝ:\x8d¢M ¨\U00019f63 ²öñ`\U000e6d96t=Ëvù\x1e\x17»¨Öí\x87+Ì\U0009722dQ\U0007bec5sòýQÙ\x10\x0e\x1a·uCá\x17\x8c¨³_i\U000f399c\U000ed2c8sqû±ñr\x98\x15𥂸¸\U000a73c0o\x08𬯜@z\U000e120d\nÞõ\x9c\x8b!\U000e737f\U0009ab17\U00080fbdì°\x0b켹r\U00056cb4\x83\x05¬ýS\U000f2054\U000e5828𘑗Â\x11\x1a±Ð%B_H²)\x7f\U0009800fÖf\U000bd8a4×úE·bMñ\x9d^𮑕Ü\U0008705cJ៖\U000cc5f3ÒTWë\U0001c356M\U000cebeeS\x07\U000325d6\U0003cc3eµ{: \x16¡¨\x15É\r\x84\U0004d9ec,sé\x93\U000b39a1Éã\U000d0b1bÒL¸\U00108b06U\x05\x94𨛘\x14P\x8aÍ\U00041b3d4³Ò\U0010e3c7-\x97\x99ó¥\x7f \U000be355¯\'\U000748dfÅ\r\U000c0d20`×ã¸¹ñ=L\U0006bfa7\x01í\U00043726\U0007dc96\U0006eb36ð¬N𢂭l\x10p\U00106bd6Ù\U000fa1a5Ê\x9f\x93r\x18\x12ò\U000426c1ô¶4+\x94\U0010007f\x9fÒ\U000d7f4a\U000b5cc8\x97k\r\x80¦éÙÁ\x0c\U0007b81fµt\U000b8828µ(\U000e1d8e\x1aY\U000d7ebfµÌ\x1cò¢\U000c70103\U000ce759Ë῁\x04\x1e𠼐\x10\x01\U0010f3e4¶M𞴟wí\U000d9036x½}𫺜°\U00083337.£vù\U0008b6cbåÉ\U000b4e9c"õ\U000f0469\x06+}\U0004e268\x0bÄTÆ\x11\x9e\U00016d4e\U00097347Ê\x82\x93\x19\U00088861\x02í𒓥!\U000630df\x8aÚ\x91ýî\n*]m¦J¡\x88\x8ai\x1c\x1bð뵖ÖPýÝñ\U0008f5a0#ke\U000aa6a9\U0004deaej¦\U000df9e9\x19\U00018da1e6诵ìß\x0c\x19\U00098198ir\U0005c586\x04P\U0010c03fBh\x1f;h&X\U0004ac64©Â\x1ea\U00101daf|P!\U000d642b¬lCÄjC𤖖\x1axÙÝ1\x05yÝeô\x1f$#\U0004f341À\x93¥\tXg±\x820\U000c47d0\nª\U0004da59µ\x1fãK0\rN«\x84 \x14û\U0007ff8ak\x9a\U000b4392kÝO\xad\U0008ac31±y\U00086a36E\x95\x0e\U0007de65Ï¹\x04§\U0009e3ee\U000594e4\x9füÑ¾m\U0006db3d{R«\x9bé¡ä~\x1cHÎHo\x1dsu\U000ab067\U0001c029\U00053c21\U0008b151\x1e\U000fc621f\U0003e2f6\U000b9478,åD\U000cb6fb\U000607b4ÎS`mÈÞVÓ¡Å\x9dÜ9;l\U0007927f\U00042ee3\x82\x8aºÏ¨\U000a842f\U0010e7a9\U000163a3\x1f¤\U000c5213¶$Å°6/î⋌\U000afe02vÝ¹\U000d31ef÷%Ût£\x8fm\U000c76aaÆ\x91\x91\U000edd70Ì\x11C§8±\x80\U00057ff2\U000365ab\x82#Ø|ý¶\U0007bcd6½\U0007c704Ãæ\x19\x7f9F]xúwù¡\U00062ed8qᤑ\x02\x9f\x94¦!Za\x07hñËCÙ\U000db60cì\x90/𤵮\x96\x10ð\U000f9347𝌒K\x82"\x87洖I¡!ì\U0005b9d3úÏ\U00013e03À\U000a6e79\x1e÷𨧡¦u.\U00071cdc\U0006e6b2bÎÕ\rv\U000686c2\x90Æ\U000eab76ç¶Ó±J\x19錩\U000e061cÀôsì\x16\x16M¸j\x10XÎ\x08\x0cᜳ:¥ﱅä(d(\U000a3fec\r\U00046d08{æ\U000b973fÉýÇÍ\x9e\x93ÛÈÌ`¾^𨚚\x9b°\x83\U000664d6E\U000751d1\x03\x10\U0010bb81\x1ds\x99u\x19µÑ𗀴\'\U0004c60d좼¹\U000e0dfe-z\U00060f2d\U00061878\x80*\U000394be\U000cdb22\x1d\x8bô\x84𦳳\U00062c22\x8fiGùá\U00106bfdvu¤ÝÄ\U000fb76eä\x91:>\U00092f19W\x1d\x11wv¼ùñ\U000d50c5\x94E\U000afce8\x80Ñ\x1a\'ëNz\U0009d3f2\x9aMì6ÞZÍ\x19\x84\x8f\x1f\U0010d9e8𭮦\U0001c9b0b\U000c1b01y\U000db904O\x8fê¢\x9e\U000d5aa2\U0006bc2c\x97!\x88Ö\rÁ𩃐\x08\U000e54db\U0007a279l\x91\U00033b93\x0få\U0001f2a1\x81\x1b3õ>\x1dÁ\U000f99e2\U000ba3fdU}v\U000a463eÜG\U000edca63𗼇(𰟺Ft\x95\x15¤dM\x83\U001030b0À²¢Ío$[±,ß\x8d\U00072ea7Á\U000ea1c5è=5àù\U0005fa6aOM¤\xa0¾ÊT\U000d293b\x8do±\x87añ\x7fG\U0007e6bf\x12\x8e\U00073f5e¹þ\x14Ïç\x96\U00039a78\U000a4084욼WÚ²#\u0de1\U000e494fÉ)è\U0009c840\x1c6\x9bö\x06\U0009debdOí\U00096d5fï¨ÍÈÀêA\U0005baa4\U00048be1Ü\U00101d9c\x8d¯\U000e6a62üK7¨𤨪¸æ\rªxxÃ©\U00048519P\U000c7d3a¼Þ¸D[\U000b63d7H\x08ææQU\x9d`\x81\U0007b68c\x1ct0f\U0007a0311¶\x01ö6Úº¸çQ[\U00062ccdJ\x84\U00078dbd<»\x810\x86|Æv~g\U000c4357P\U00078633\U00033f3cÃ騰\x1c\\®\x8dó1\x87H\U000abec7Ò\x9a\x89@G\U00015c5c\U0009372fÙ𖨋\U000c4b17ÎnÀ\x02i\x1d\U000de8f4\U0008abc7\U000351fa\U000e16a9|~&lNq\U000aadd88\U000bd4e2ç\x12BÈ\x00¸\U0004840eÔ^»x\x81\x05j\U0004f014øÄñS-¬\r𝓖»\x96G\x9f\U0005d382\t\x16\U00042321\x15®áÜ\x0eé\U0009ec2c\U0003b789¸y\ràÄ\U0007bfc4\U0007875d\x0eg\x18\U00042489\x02¬\U0001bf70\U0001bb55?À\U00070eba\U00079e62!ÿó+ß𑆡\U0001aad6𨥓øäJ¯\x8dö\x8d\ue37cWqI\U000ec1b3X\x92ú%G\U000cfbde\x99ü'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003759s
====================================================================================================
2025-09-18 23:55:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003517s
====================================================================================================
2025-09-18 23:55:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "<script>alert('xss')</script>"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003466s
====================================================================================================
2025-09-18 23:55:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['¼', '\U00102dc3`', '´\U0007a82a𤉌\x97H\xa0D', '(', '\U0001a52a\x14O^\U000a79ce\x0e\U000aa44c¶', '', 'H/', 'ën\U0008b8c2\U0001b666"\U000cb586ÎÖVA\U0004ac0a', '²·¬\U0010c344·#¨\t=¬\x9e×', '', '5', '¶\x93ëç\U0010bf6dP', '\n', 'u±\U00084562¥X«\x8b¸𬓾\x87\U000afd05¨Ç', '\U00081b40[Ö5\U000fbd07¬T\U0006c880', ';Á\U000dc1ac%\x17£oÖ\x19\x10ß¤\U000f0a49Öꚦ\U000313b3a\U0007d66c\x9fV', '\r\U000dfb5b\U000c16f5\x88\U000967eeຌ÷Iq']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['¼', '\U00102dc3`', '´\U0007a82a𤉌\x97H\xa0D', '(', '\U0001a52a\x14O^\U000a79ce\x0e\U000aa44c¶', '', 'H/', 'ën\U0008b8c2\U0001b666"\U000cb586ÎÖVA\U0004ac0a', '²·¬\U0010c344·#¨\t=¬\x9e×', '', '5', '¶\x93ëç\U0010bf6dP', '\n', 'u±\U00084562¥X«\x8b¸𬓾\x87\U000afd05¨Ç', '\U00081b40[Ö5\U000fbd07¬T\U0006c880', ';Á\U000dc1ac%\x17£oÖ\x19\x10ß¤\U000f0a49Öꚦ\U000313b3a\U0007d66c\x9fV', '\r\U000dfb5b\U000c16f5\x88\U000967eeຌ÷Iq'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003631s
====================================================================================================
2025-09-18 23:55:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': ['\U00048ef7ó', '', '\\±\U000b910c', ' 🞮Ý\x8a\x06\x19', '±\x14t\x1c5º\x87%\U00062f10', '\U00054d4cì\U00085531\x8f¡é', '\x93\U000bea59ªó', '³\x13\x8b\U0009d8a1\x87', '', '\x86}7&µ\U000322deº{\U00041b0d\x9d\U000a83c86+f']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00048ef7ó', '', '\\±\U000b910c', ' 🞮Ý\x8a\x06\x19', '±\x14t\x1c5º\x87%\U00062f10', '\U00054d4cì\U00085531\x8f¡é', '\x93\U000bea59ªó', '³\x13\x8b\U0009d8a1\x87', '', '\x86}7&µ\U000322deº{\U00041b0d\x9d\U000a83c86+f'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003576s
====================================================================================================
2025-09-18 23:55:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 10766, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 10766, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004041s
====================================================================================================
2025-09-18 23:55:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U000b8414', ''], 'password': '\U000748ea\x0bR\x17\x85Ë\U0008c658侢m\U000d5048\U0003c310à囜ꚰ¦\U000b76f3\x15t\U000e146a\x05\U0009dacf\x98\x06¼¿\xa0\x04õ\U000b0884\U0007f90b=:dÏIsð\U0010e09dû\x86x3\x99\U000b6cd4èH\U000a5c30\U0010313d¹á\x97\x9f¥.\x04&-¼j\U000141af\tü-´JuÅú𰘖\x1d\U000556ad\x84\x12XØ\U000335d4w¡-\U0005db30{\x80\x81n/\U000df9c2Y\U000deccb\x9c\U00048ce9\U000add05\U0003238b_\U000d0c9aàÈ¬\x0c\x06-Ön🨜\x86ü\U000b50bb\U0004c397\x18\U00097c050îw\x06\x08=©nd\x91𐀤\x90ÜÎT\U000cf8e7Ù\x10ÂQ¢)`2\U000def68\ue5f37dádJ¥¨¬ý\n\U0004f641£%\U0003442dö\x16ý°}BÒ;Ô¿#\x8f·\U00105983Ñ³[èlÿ\x97\x89\x1d\x94\U0004992c¦ÇnO\U000b4e2a\x1bg\x16.Bé\xa0\U00107864c\U000eee4aG\U000d6e43§n\U0010178bW\x89Ჯ\x15p\x8c\U000958bb+ÌÍçö¹\x81\U000a276d\U000748c9\x8bÐÉ\x80#\x88\x8b\x926ïkø\U000c2a22\U00095415ÆýÉ7Ë\r\x17\x16&þy\U000ef05a\U000f1904\U000bb293FfM\x07wâ𫃳UúÄ\U000adb1d\U0006b0f1\x1d8öö\x95\x18\U000e81716wk=Kº\U000428beùá\U0004cc4f\U000c1705\\¦Ã\U00048bacQ\x82-D¥\x8fc\U00093641ó9滐z±\U0007aeb2!\U000fbfe8¶n6𰰗\x85\x95\U000e68f0G\x10ꑥR\U000d2195J\U0009b279Oß𬗙\U00062764\U000f6a5cjoX\U000bd582!±Ã(\U0006d59f®[\x91ß\x11Gí-Zi`Ä\x8d\U000b924c\x85(\x13PÞ\U0007b141%¢\x08ⷂ\U00037cd9\U000d8af9\x0e\x1a\x8aW\x0eü\x02k\ue1ca\U000bd3d5\U000aae07÷\x00õì¼\U000d7500f\U0003c49b,𘇨ï\U0007e06aÏº\U00089270\x98÷Ò»\U000eafb9ÙÒwIJ\U000de252\U0010f615%𑫋Ã鄒惷\U000f1ad7øC\U000d10eba\U00087106íA\x7f¿\x17J\x1b\U00089c8e\U0001a4f5ùö\U00065687\U000bf07a\U0008eb8a\x05F3\U000f84d8\U00047d8cÅ𨁡\x00\U0006ee27\U000bbbd0+:\U00081d7d4àú\x9e¥\x13|¯\U000edf27vb\U000da0f3\x1b\U0010d8c6:µìO§ºöK\U000e668e«Ý_\U000a5550Y\x04+H¬\U000d1bcb\x9d\x83\x13¨;\xadsN\U000f9fa2¥\U0006f491\U00093f68\U000ef45e\x0fÀ\U00036365Ô4\x04ë\\勝\U000b8bf4\x01Þ¥ÀX/¨\U00037e9eðQ\x9eò\x1a\U0005c53d¸«\x9d\n\t5\x93\U0006d3f4P\x08\x1bµ\x03\x1d\x81\x0c\U00073ffai\riu\U0005737c𗷞\U00069495\x97\U000be894\x9byg¯U\U000404ad\x97e@\x90ì\U000c4bc5¶Ì\x9aÅa\x19Iòò\U000cda46墩\x97\x05Â:ÑµÈX[\U000e53cd\x89²\x1f²\U00066f6b"ä¤\x80Þ&\x17\x03D\U000fbdacº\U0008ae0b\x83]Ù\U000e0365^g\U00063f3e9\x1a\U0004dbd7\U00094a865Ð\x1f£¨\xa0\x8b\xadભ\x83\U000fd60f¬U\x83²Ásb*\x13î´¾\x95½+\xa0½\x8b\U00031b7cßn¤\x91\x16¢\U000649b4ð`É+,#\U0006f888ï?\U00015389À\U000ca3a7\U00095aadP\x11¦.ª\U000a8d89¿Ïÿ\U00062d3eóþ\x1a\x02[\U0007eb08Oä\rªNí·L\x1c\U000d4800\U0007dad8ü\x1c\x0bÔ\x1e\x9e\U000810a9Ü¶{\U0008d8a5¶£\x06C¯\U00056b78^þ\x15*¶)Ë\uef09\U000e9062e\x1eyÜ\U00014ce9ᄻ\x8bT슸+\U00088d86\x87È¬\tð{\x01\U0009644b=\U00012c87`.!Òµ³Ùý±Û\'Èsâ\U000bc7da_\U00037843r\x93\U0010e609üH×錙à%ó\U0010004c®%èk/@Ú\U0007bec5\x8bÝ:M\U000614ef\U000a1aa5/\U000d79af\xa0\x98Ãa𢄡k\U00083a3d5\'U\U00065c94𗉳\x9fùCõæª¥\U00041503\x9eªw\U0005af01=\x87(D\x00W%¿¶o\x94+g\U000cb4c2¡ÖÔ££Ö\x0eË\x01\x83\r\U00102d63\U00073a4d큰((6\x12û\U000a1350\U0006058a¸\x81T0öæ\x18}\x8fÛ\U000638a9ß\x84½X4^\U000e91bb-E\x86\x99\U000e9c26\x7f𑐩^\x9c\x8aóP\x88h<L\x10b*ìH\x91\x0b¯~××[X>µ\x05÷\U00040ff9E_@£Kb!Ê4Ú]¾\\\x1a\U00103ff6\U00053b71\x8f\U000e9cfc𮚥<þ\U000cc8efE\U0010cddbÌK\x90\U000b886cÜÌ贩*7æÑRá+\U000fa7e9Ò`\U0001404a\U000ef41a\\.Ê\U00101a9f\x87[ð²À\'\x0b\x01â\xa0Î\U00035086\U000b26575¾(𦆒\U0007b2f2É\U000b47cdãñ>;\x13\x1a𑶨µJうZÄs\x97\U0005b0bb¦\U000fca1d\x05\U000c4807c\x90\U0010ff52V\x8a\x8c£𡨁,\x16_\x92\U0003eb6d\x83ÞÔ¼ﱓ\x02µ\x99¢èK8Û÷*\x98\x97æ-\U00064e9dz\x85\x9b \r\x83\U0005b714\x1e\x11c\U00037959𰾀°¹ÿ¶\U000f518e÷î´\U000d52d9\x97\U0001c88e §\x1aÜö\x0c"\U000c911c|aÑ¾\\\x80\U0004ae6b·\U0007f426¿«'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U000b8414', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003653s
====================================================================================================
2025-09-18 23:55:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 13}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 13, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003863s
====================================================================================================
2025-09-18 23:55:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 123}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 123, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003896s
====================================================================================================
2025-09-18 23:55:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '', '(ðW\U000dfe10X', '\U00092461BrÛ𗤦\x86ÓÈh\x82õÈ\x9b\x8a', 'cù\U00052968\x93Ó', '\U000bb80e퓉Dk', '\x81ÁÇ', '\U000e4b01'], 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '', '(ðW\U000dfe10X', '\U00092461BrÛ𗤦\x86ÓÈh\x82õÈ\x9b\x8a', 'cù\U00052968\x93Ó', '\U000bb80e퓉Dk', '\x81ÁÇ', '\U000e4b01'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00368s
====================================================================================================
2025-09-18 23:55:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '  '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00355s
====================================================================================================
2025-09-18 23:55:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Z\x92\U0006d410\x8aÉ1P\U000d9be1&\x876V`\x87\U0001e214vM\x99ö\x1a\U0006f911ßoiÕ³\t\x91\x9c\x89T#\x7f\x06ó>\U000e5173\x96iÍ\x97\x07V\x08\x10\x1e\x1b\x85\U0010c881[\x97Tw¾\U0006e398ä÷ú\x0f\U000fb42dãÀÙ¯\x99\x1d\U0008c68aßMØñ»:æ¢e\x99a¡á\U0007336eu\x99BêaL¥ÝI<óè]\U000cd9c5\x96³l\x03SÕ绥ÉÔþ\x81\U000d8c70ß·¦\U00086b71Ø¨#\x95ü\x8c|\U000b90bdv²\x1bZ»\U000cd353^b\x08\U0010fc3fw¤𰣇;\U000d4fd6»\U000b89ddW·!¬\nòX\U000b360aÁt¹\U000ffdcdëë\U000a4dcf4\U000a71d3\U000f9ca9ÄÈ¨jÈñ\x9b\x8e½#\U000dfa14\x87\U000b30ad\x83â\U000fca63\x8d¨\U000725b4D}Fê\x17\U0003c00bQ\U0007b4a8+ \x19ÉG\U0010b752\U000add5b\U0009bf4d\U000e044fO\x8d\U0006c94aT¼Aî©[6Ñ\x05úú\x12\U0004d600©\x06ÄØ\x97.7\U000ddec3\x9a»þ=)¹\U000a9c3d3\x81/Üû\U000a4859Ã\x1fÑ\x05\x10\U0007bf097k\U000e2ed0\x89B]\U00099550TÓiñt\x84\x9c»ùÊÙd\x90\U000ad814\x1fk\x8bÐ∂¾\x90[þ𦩌\x9cv\x0f¼\x842\xad\x0e\x83g\x889Äòì\U00034545oñÏûö\x13&\x1dgy\x9e\x93/]k\x1e\x0fãÇH\x93!\x9dí\x16\x1bH\x04£\x9c\x86\\\xad--𪴜\x90\x02\x8c\U00064557\x92eF\U000470a1\x81õ\x1d\x86\x97vó𱋃-\U00052862DúÈ\U000629cf%\x83\x1b\U00104261÷\x81xÖãJ\x9f\x11\x0en \x9e\U000feb29\U000ef252\x02Õ\U00060ded\x12H_𧢖Ã\r<µ=55½\x83ÁO\U0001ae92ºu¾S×\U0004e348F\x88:4¸1\U000e6d44c¾2\U000e80d25𪧬\xa0\r\x12Ð\x01û\U000b2b4e(ê\x8f½Ç×\x9a\U000b22cb¹Fw\U000cb002Ç\x08î\x9c3mé\U0007c784\x17´â\U000f2314Y½t\U000f9fbf_;\x83\x03~YØg\x1b\x1aÌۗ\U0007210fF\U00077ef5\U00059733\U00038720eÔ\x8b«\U0003b144zæ$8+\U0007d5b13,\U000fd00f\U000946e0ÒG\U000c8dd6\x8e8ÝO\U0008b3aaª½\x1b8\x99ð\x07}\U0004ae18¯(\n\U000b7745h\x13\x9a\x0cw\U00086731<\x05ÙØ1\x1e²ú¾õÙÈ\\üåÍg;\xa0\x05òp?x\U0001ab74Q7Ü\u2fe6¢º\U000554c9Ê6Íy\U00015885ñ~µÁ\U000fa23f\U00055bbef\U000c3426V·8¾m\U000968ebç\xad\x81\x917ý𝕚9f×b2\x9eê\x02\U000fc32cçÈðQßÊho\U000a693c}JÍ\x94\U000c94b2\x9b\U000f822e4\U00055463©\U000bdf73[\'&\x00\U000876f1\\\x89ì\x02s=𱀟\x9f®\x15\x90\xa0£\x89Ê\U00104a2bj©\x1d\x9b\x12(ð𐂛\x0be\U000b89a3\U000a07b1\U00054d41\U0007b4bc\U00037dde𦋋껴\U00087f39M\U000b7ad9ù@[\U0006ceb3¬Ð_^ \U000dafa4[kïËé\x14)G\xa0Tz¥\x9a\x10K𘣡\x0b\U000c555a9\x1d5\U000afd06\U0008f46d\x9d«$\U000af686\x87𠘝x\U0001ad8fíx\x8f\U00056cb3\U000b6cb42©G\U000b1910jK\x86\xa0Í\x04KR\U00107ffb%\x11°Åî\x82/\x18\xad\U000c9b763®\x8d\U000df8f8Øü\x01yG\U00090d61\U000aeb685á\x9c\U00049578û%å\U000c2c5c\x8f\x8f\U0007cbce\x92\U000510d1K·\x1cÖ\U000fdbf8I𐼺)º»ß\xad*\U000ca041»벭\U0009bb11\U0003f6d1\x92ýÄ\U00062014Ô\U00088280X\\®4\x855\U0008ba53\U00090ce5q\U00034867âÎ\U00038e71u\U0009c175³\U0005fe00\x89|\x8c\x03gq\U001054b1yË\U0005d9f1¦㥶\U000e4dc6\x06q\U000af769â·\U00071cad{Y\x11\U00104d72\U00069997Í½¢\rêP%Ã\x96\U000f6c07\x81nHÊ=ñ\x1d\U00035ea0©\x15Ã(2\x9c\U00052048\nÉ\x1e©/\U000aa046é\x83\x0cÙ\r2Iyb6\x1f\x10Z\U0008e2c8\x07ê\x93F\x8c\U000bafb3ïÒB\U000f07c1cª\x94\U0005d7a5\x1b·}Pì\x89\x00Ek¯\U00107610}ä\x97s\x07\U0007f6e0w\x9eé\U000cd8f2>\U0004f172Ñr×\U0010c088§\U0005f099KÙÉT\U000916bb𣄟ñ𤮶ë\U00092f88v\U00076b52\x94E\x9cÖ\U00106517\U000b7680𗮃\x0ch\x80\U0002ec0dë\x82\U000a0b5eË]§\x87ÿ\tØ³𰿈ïi»\x0b\U000697edº¾ö\x17\xa0\x80t\x88å\x03¥u\U00100320a,sÑPÐÙ\U000e4e20þô!\'\x8d\x1e\x8cf_\U0008d673\U0008b231?\U000e4386\U0004c0dc´\U000113f7Á¨\U0001a1b5+:@,¸ÊöÝH\U000654a0ê\x0cK¸UwÈ\'\x97Óö%ý\x1a\t\U000420dc\U00088712\U0009e2b3»`ö䕣4\U0004719c䭍ë×\U000e8944\x96|þ\U000424aaû\x18×\x81ÿûg6ü¢¥Â\U0001a424\x0c\U00068b31\U000ab4dd\U000761dbàíFe\U000bdce2,g\U000d2fb9½éuyÈ\x13=\U000dbdd5¥u#7d\'nW\U00041f78·h\x07Ïç\x92\x12©\U0001988aÎ¼\x12\U0005df09÷\U00073210\x981{\U000c69c7\x88\U00043304\x14¾\U00097d47Oi¸¦9å\x89<\U00066611\U0009ab92\xad\U0009e967Ý½\x0e?"x7lO𥈧©r\U000aaeb0Wñ×Û$cN\U000fde50J®r¥\x00Íbb\U00069004\U00087f67E©C_¬z"z\x03Ù\U0003e974\x1a𛂠XÍ\x19\x1c \x0e\x00g\U000713ed\x0e\x8c\x16â#\U0004532d\x90', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003918s
====================================================================================================
2025-09-18 23:55:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 29762, 'password': ['\U000d537eË¹~zr', '\U00053c5cÝº\U00010c5a', '\U000126a4\U000ead25¾.¶\U00091ee0ðó\x96\x89y=¶', '\U00076d0d', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 29762, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U000d537eË¹~zr', '\U00053c5cÝº\U00010c5a', '\U000126a4\U000ead25¾.¶\U00091ee0ðó\x96\x89y=¶', '\U00076d0d', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004331s
====================================================================================================
2025-09-18 23:55:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -11716, 'password': -3865}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -11716, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -3865, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003922s
====================================================================================================
2025-09-18 23:55:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00386s
====================================================================================================
2025-09-18 23:55:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -1783}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -1783, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003507s
====================================================================================================
2025-09-18 23:55:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003529s
====================================================================================================
2025-09-18 23:55:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -30753, 'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -30753, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003744s
====================================================================================================
2025-09-18 23:55:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\tå8\x08x\x0f<\U00039857ðé/L\x9a`êáË\U000fd48bBir\x1a_Þ=¤\x05\U0003ed84\x8d¶i\x89\x9b\x9c\'\x9f\x11,æei´#²$\nýfÂt;?\x12j:øo-¾\U000e02b8_\U0010e7cf\U000ca11bÙaæw\xada\U000e7d1e\x13qy\U000f7f40¨\x15E²Ë\U00077f1dù\U0009838f\U00073428X(¤d¿\x93\x91\x1c;䩶俢Ø\U0008c10eI\U0006460aâä\x05\x04Ðµ"å\x07\U0009eb91O\x15ZÝK\U0006b981\U000f4e07^𣝛ÿ£§àî\x81\x12"\'\x8a\x81üó\x10^\U00074767\x94_Ó\x946\x9a\U000bb8f5\U000efd98\U000b0227\U000dbe3f #>U𮌴)\r\U000d8782è🄞k\U000e0913\U0006184e7\x12Ï:7\U000f8c48Õ\x1dE\U00086c5cz\U0008e770\x98\x14Þ«\x98(î\x98áÓL\U000aefed簰#_á\U0005e8ebÞ1\x15;hÚ\x13Ç©\x0f]Ï>5\x15\U0004bdc8\x19\x90ynØ¨@\x9cg5r\x1fR\U00057d75\U0006e23b¡\U0010ac26iwÁ\U000c42c2jÿñ\U000e178bv\x16ûí\x00Br)û\x10°¥dÜ𠹗\U0009e7ed\x19\x8eÉ|\U0009ea27µH\U000c58f1AEé!l[e\U000ae282\U000ae9a0Z\U00041fd4A¾P9\U000bc1b8µ§\x19R\U000afcb5{Ö\x0c\x0ce0¸\x8a\U000cc524\U000fddc2Ô\x0b\U00068076e\x85\U0004372a\x10Û\x8dîúÄÃN˅\U00037921L𰙲U\U000bc6ca¹\U0005731e\x9e\U000c192f#ðÑ©\U00091ce6\t\U000d69e1\xad\U000a509f\U000dc3ea\x01\U000b524e\x14µ\U000e9787\x99\x12\x88ye53\U0001dac9Õ\U000a6eb2\x1b\x9cz\U0002fc31\U0005d490`\U000a4e54è\uee1e¶öØ\U0009192ex7Ü2\U0001a8baå\x08\x82ð@\x18`QÛ¡\x86x\x91\x92w¨\x93\x9då\U000d5c89\U0004f2ac\x88\U0005a192|Õ!\U000d2dba©\U000acbbb\x9f\U00093f81\U00101919NõÚ\U0009f9d8zñ´FÆ\x08ñqüÃð°\\2¯|MÃ\U00085077QÚÑ¤\U0010c232\x954\U000aaf8a\U000356f2ãÑ\U00089d2eõ\x12\U0004f9f3y¥þ\x8fFÔþ\x95\x99ÿÒ\x14\x02¬õâ\x04>æ\x970~\U00012d92\x86ê+^]\U0007526dÎØ\U00040b0dpfuæ\x83>>MI\x0e𖡿#åp\U00043faa\x92\x0fñbU©~4Gv²\x00\U0008b769\x07\x9deª\U00033de9\U000d1e50\x18ETa¤=ð\xa0j\x8eQ\x1a\x97D\U00013d86¬Þ\U0009de59Ñ"\U000cfe4fì´-\U000b5ac9Ä\U0006541c\U000d44a9`\x13ïØõ\x8c\x15❪\x98×ÀQ_\U0006e81eê\U000f4d7c\x8d\x8c½Î\xa0\U0006c4eb¡蜺¢v\x9aéh\x13𗆝\x10\U0005ba0câá×î闢øc\x8dW\x95𧒧\U0006ef47p6\U00072919M\U00099aa5(\U00079b0ec\x16𤖞Ð\rkÑ\U00084798Û7\x01\x94\U000d5f38\x9aH\U000b6f57µy\U000f2ae67¸\x907f*<\U0004a028H\x9b.\x02,\x82\U000ccf740\x94m\U0001d50c3\U000cc5cdÈ\x85Í\U0009a740\u07bcOÀr\x90«\x8a^êÑ¦\x07UH㆟c\x14½w\U000f195d´:a²v\x0fgî°T\x91V\U000d3292\x93¸\U0006db10:F\U0010bee7鳓\U000c70b7\U000bb23a£\x87\U000b4fd2§C\tÎõÏ÷\U000d028b\U000ffd68ÆS,\U00067cd1o\U000d7934\U000aedc2`\'\x98\x85õ\U000bd3b7\U0010f628¦\x9d)\U000e0a1e&𬬪Y¾È:\x03Io\x9c=\U00055a88ì\'\U00076057¤:ðzIB\x1dî\x1b\U00012f59,\U000e3393ÛN%þ\U0003a6ce\x80\U0007cb06Üé\x0c\x16ß¯\x96\U000f6b5f¿â\U00094404¤\x15ÚåT\U00034468\U0004b341ª=\x8bö𭹤p9Wé*Ì\U00087452\U0010c27a\U00039bbfª¡¡¡à2\x03¹\x9d\U0005c3f0\x9aÓßÍ\U000eba23\U00042b4eÃoº\x83\x96\U0004adf9\U000fcb62ùÃ\U000926c7\U00068a36¥i\x16¨\U000ad513`b\x10\U00068b82\U000fbc56ÙIW8¾\U000718b6õ®×1\x1f\x03\x9býd\U000cd917\U0010edfeX\n\U0007064fÓ}uaKAyã\x0b\U000c8a7c\x9c?¡\x84o\xadÂÝ\t\t;\U000867b0÷ÓhL;ö\U000a28d7e\U0003aa59üyK;a!\U000d72f5øt\x94\U0005847d\U0004a233)ê\U00051b379Ýú\U00073ab7p\U00098830\U0001bf70\x8eÃ\xa0\x1c\x93\U000febd5\U000c1651â\U000853e1\x83£ÆÆ¦\x04k\x90î¤0Ì\x1b\U00078c49z§\U00092757q\x14v\U000daa40㊻\U0004cbd3à\U000d7954\U0008df69\x0bµ\x070섺¯E\x9f×TS@:\x96bS🁔ì£Ù¡6+Þ.I\U000ab5beò0\nr\x02Ჰ°Û\xa0\x19T¾\U0007864a\U0007db4f[O\x13R é \U00015ec0[µ¤\U000eec84\x11Dõ\x11\U000576da\xa0w\x90gN]\U0002fa87ÔVá\x1cébAs\U0010d654\U0010a3df3T|\x9b³\xad\x83qóù&làW\U0007cb5f@p§+=㨖Ü\U000ed919£Rdòu;¯\U000f062c\U000b64ed8Á£7J 0\U0007b538\x16\x89)\U00037020\U000e05c7#þ\x8bᑇ\x0c£8(¹®µÄ\x8a6æ𰦉\x8c¯P\x08áÑ\U000c4283`Ñ\x13¯\x9a\xad\U00081385\U0004ff28!ý\U000f9054\x9f\x90\x063ÜN\x1aê\ue03fe\x89\x19\U000a3f18\x14Ñ\x9eFÊ\x8f𧳢~ß\rÆmóJ\U000855aa\x82·üX,Ýr²\x83\U000f3c3c-zØ\U000e4f6eÿÍ¡#\x8eA\U000473f1\x96þh¡\xa0𘰃ó\x02R\x9c\U000a3604\U000af4c2Q(\U000d3270±_y\x11¹ü\U0010ac90Ðò\x11m\U00108f02\x18\xa0Ñ\U000b363dÎ¾þ\U0010103f\x86\U0008d26dï² \U000b2e19\U0010f635\U00051b0eø\U00019ec5&¶Ü¡¢:Ý"\x9füꓹ\x970'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '\tå8\x08x\x0f<\U00039857ðé/L\x9a`êáË\U000fd48bBir\x1a_Þ=¤\x05\U0003ed84\x8d¶i\x89\x9b\x9c\'\x9f\x11,æei´#²$\nýfÂt;?\x12j:øo-¾\U000e02b8_\U0010e7cf\U000ca11bÙaæw\xada\U000e7d1e\x13qy\U000f7f40¨\x15E²Ë\U00077f1dù\U0009838f\U00073428X(¤d¿\x93\x91\x1c;䩶俢Ø\U0008c10eI\U0006460aâä\x05\x04Ðµ"å\x07\U0009eb91O\x15ZÝK\U0006b981\U000f4e07^𣝛ÿ£§àî\x81\x12"\'\x8a\x81üó\x10^\U00074767\x94_Ó\x946\x9a\U000bb8f5\U000efd98\U000b0227\U000dbe3f #>U𮌴)\r\U000d8782è🄞k\U000e0913\U0006184e7\x12Ï:7\U000f8c48Õ\x1dE\U00086c5cz\U0008e770\x98\x14Þ«\x98(î\x98áÓL\U000aefed簰#_á\U0005e8ebÞ1\x15;hÚ\x13Ç©\x0f]Ï>5\x15\U0004bdc8\x19\x90ynØ¨@\x9cg5r\x1fR\U00057d75\U0006e23b¡\U0010ac26iwÁ\U000c42c2jÿñ\U000e178bv\x16ûí\x00Br)û\x10°¥dÜ𠹗\U0009e7ed\x19\x8eÉ|\U0009ea27µH\U000c58f1AEé!l[e\U000ae282\U000ae9a0Z\U00041fd4A¾P9\U000bc1b8µ§\x19R\U000afcb5{Ö\x0c\x0ce0¸\x8a\U000cc524\U000fddc2Ô\x0b\U00068076e\x85\U0004372a\x10Û\x8dîúÄÃN˅\U00037921L𰙲U\U000bc6ca¹\U0005731e\x9e\U000c192f#ðÑ©\U00091ce6\t\U000d69e1\xad\U000a509f\U000dc3ea\x01\U000b524e\x14µ\U000e9787\x99\x12\x88ye53\U0001dac9Õ\U000a6eb2\x1b\x9cz\U0002fc31\U0005d490`\U000a4e54è\uee1e¶öØ\U0009192ex7Ü2\U0001a8baå\x08\x82ð@\x18`QÛ¡\x86x\x91\x92w¨\x93\x9då\U000d5c89\U0004f2ac\x88\U0005a192|Õ!\U000d2dba©\U000acbbb\x9f\U00093f81\U00101919NõÚ\U0009f9d8zñ´FÆ\x08ñqüÃð°\\2¯|MÃ\U00085077QÚÑ¤\U0010c232\x954\U000aaf8a\U000356f2ãÑ\U00089d2eõ\x12\U0004f9f3y¥þ\x8fFÔþ\x95\x99ÿÒ\x14\x02¬õâ\x04>æ\x970~\U00012d92\x86ê+^]\U0007526dÎØ\U00040b0dpfuæ\x83>>MI\x0e𖡿#åp\U00043faa\x92\x0fñbU©~4Gv²\x00\U0008b769\x07\x9deª\U00033de9\U000d1e50\x18ETa¤=ð\xa0j\x8eQ\x1a\x97D\U00013d86¬Þ\U0009de59Ñ"\U000cfe4fì´-\U000b5ac9Ä\U0006541c\U000d44a9`\x13ïØõ\x8c\x15❪\x98×ÀQ_\U0006e81eê\U000f4d7c\x8d\x8c½Î\xa0\U0006c4eb¡蜺¢v\x9aéh\x13𗆝\x10\U0005ba0câá×î闢øc\x8dW\x95𧒧\U0006ef47p6\U00072919M\U00099aa5(\U00079b0ec\x16𤖞Ð\rkÑ\U00084798Û7\x01\x94\U000d5f38\x9aH\U000b6f57µy\U000f2ae67¸\x907f*<\U0004a028H\x9b.\x02,\x82\U000ccf740\x94m\U0001d50c3\U000cc5cdÈ\x85Í\U0009a740\u07bcOÀr\x90«\x8a^êÑ¦\x07UH㆟c\x14½w\U000f195d´:a²v\x0fgî°T\x91V\U000d3292\x93¸\U0006db10:F\U0010bee7鳓\U000c70b7\U000bb23a£\x87\U000b4fd2§C\tÎõÏ÷\U000d028b\U000ffd68ÆS,\U00067cd1o\U000d7934\U000aedc2`\'\x98\x85õ\U000bd3b7\U0010f628¦\x9d)\U000e0a1e&𬬪Y¾È:\x03Io\x9c=\U00055a88ì\'\U00076057¤:ðzIB\x1dî\x1b\U00012f59,\U000e3393ÛN%þ\U0003a6ce\x80\U0007cb06Üé\x0c\x16ß¯\x96\U000f6b5f¿â\U00094404¤\x15ÚåT\U00034468\U0004b341ª=\x8bö𭹤p9Wé*Ì\U00087452\U0010c27a\U00039bbfª¡¡¡à2\x03¹\x9d\U0005c3f0\x9aÓßÍ\U000eba23\U00042b4eÃoº\x83\x96\U0004adf9\U000fcb62ùÃ\U000926c7\U00068a36¥i\x16¨\U000ad513`b\x10\U00068b82\U000fbc56ÙIW8¾\U000718b6õ®×1\x1f\x03\x9býd\U000cd917\U0010edfeX\n\U0007064fÓ}uaKAyã\x0b\U000c8a7c\x9c?¡\x84o\xadÂÝ\t\t;\U000867b0÷ÓhL;ö\U000a28d7e\U0003aa59üyK;a!\U000d72f5øt\x94\U0005847d\U0004a233)ê\U00051b379Ýú\U00073ab7p\U00098830\U0001bf70\x8eÃ\xa0\x1c\x93\U000febd5\U000c1651â\U000853e1\x83£ÆÆ¦\x04k\x90î¤0Ì\x1b\U00078c49z§\U00092757q\x14v\U000daa40㊻\U0004cbd3à\U000d7954\U0008df69\x0bµ\x070섺¯E\x9f×TS@:\x96bS🁔ì£Ù¡6+Þ.I\U000ab5beò0\nr\x02Ჰ°Û\xa0\x19T¾\U0007864a\U0007db4f[O\x13R é \U00015ec0[µ¤\U000eec84\x11Dõ\x11\U000576da\xa0w\x90gN]\U0002fa87ÔVá\x1cébAs\U0010d654\U0010a3df3T|\x9b³\xad\x83qóù&làW\U0007cb5f@p§+=㨖Ü\U000ed919£Rdòu;¯\U000f062c\U000b64ed8Á£7J 0\U0007b538\x16\x89)\U00037020\U000e05c7#þ\x8bᑇ\x0c£8(¹®µÄ\x8a6æ𰦉\x8c¯P\x08áÑ\U000c4283`Ñ\x13¯\x9a\xad\U00081385\U0004ff28!ý\U000f9054\x9f\x90\x063ÜN\x1aê\ue03fe\x89\x19\U000a3f18\x14Ñ\x9eFÊ\x8f𧳢~ß\rÆmóJ\U000855aa\x82·üX,Ýr²\x83\U000f3c3c-zØ\U000e4f6eÿÍ¡#\x8eA\U000473f1\x96þh¡\xa0𘰃ó\x02R\x9c\U000a3604\U000af4c2Q(\U000d3270±_y\x11¹ü\U0010ac90Ðò\x11m\U00108f02\x18\xa0Ñ\U000b363dÎ¾þ\U0010103f\x86\U0008d26dï² \U000b2e19\U0010f635\U00051b0eø\U00019ec5&¶Ü¡¢:Ý"\x9füꓹ\x970'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.101985s
====================================================================================================
2025-09-18 23:55:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003776s
====================================================================================================
2025-09-18 23:55:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00399s
====================================================================================================
2025-09-18 23:55:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003827s
====================================================================================================
2025-09-18 23:55:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '    '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003647s
====================================================================================================
2025-09-18 23:55:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 76, 'password': ['\x01', '-ì\U000b1dd0\U000abbb1iz', '', '\t\x1b<', '', 'ëCjQ^\U000d79ffM\U000d12d2', 'ÌÌ$öYἠ', 'Ø\U0004fb91¤QÈ\U00076d5f', '', 'J\x14\U0001eb15(6^«Ù\U000e27a9\U000d544aiw\x9dF', 'à\x9aÄ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 76, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x01', '-ì\U000b1dd0\U000abbb1iz', '', '\t\x1b<', '', 'ëCjQ^\U000d79ffM\U000d12d2', 'ÌÌ$öYἠ', 'Ø\U0004fb91¤QÈ\U00076d5f', '', 'J\x14\U0001eb15(6^«Ù\U000e27a9\U000d544aiw\x9dF', 'à\x9aÄ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00364s
====================================================================================================
2025-09-18 23:55:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003622s
====================================================================================================
2025-09-18 23:55:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -1491530692, 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -1491530692, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004008s
====================================================================================================
2025-09-18 23:55:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00373s
====================================================================================================
2025-09-18 23:55:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003612s
====================================================================================================
2025-09-18 23:55:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['}7ùÞô!U\U0007a991', '', 'L\x97]Ú\U000aa75f\U000d9c8e.SÏEóÁè]\x8d\x85*\U0005ef84±â\r\U0005b2daÞÂ', '\x03¿qRÌ%', '\U000d3a38\U00048a65\x94Á\x88\x1eþõ', '', 'gÚñÒ\x8c', '', '', 'À\x18', 'Íq\x88\x1fÓZà&}oO\x06\U000af0f3f', '\uead3\U000c1b6f¾\x05Ä', '\U000ac696<\x02', 'Ú\x08íü𡡰O§í', '¼ùß\U00052c7bÔ\x92KÛ\x07ã\x0c\x8f', '', '\U0006108a']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['}7ùÞô!U\U0007a991', '', 'L\x97]Ú\U000aa75f\U000d9c8e.SÏEóÁè]\x8d\x85*\U0005ef84±â\r\U0005b2daÞÂ', '\x03¿qRÌ%', '\U000d3a38\U00048a65\x94Á\x88\x1eþõ', '', 'gÚñÒ\x8c', '', '', 'À\x18', 'Íq\x88\x1fÓZà&}oO\x06\U000af0f3f', '\uead3\U000c1b6f¾\x05Ä', '\U000ac696<\x02', 'Ú\x08íü𡡰O§í', '¼ùß\U00052c7bÔ\x92KÛ\x07ã\x0c\x8f', '', '\U0006108a'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['}7ùÞô!U\U0007a991', '', 'L\x97]Ú\U000aa75f\U000d9c8e.SÏEóÁè]\x8d\x85*\U0005ef84±â\r\U0005b2daÞÂ', '\x03¿qRÌ%', '\U000d3a38\U00048a65\x94Á\x88\x1eþõ', '', 'gÚñÒ\x8c', '', '', 'À\x18', 'Íq\x88\x1fÓZà&}oO\x06\U000af0f3f', '\uead3\U000c1b6f¾\x05Ä', '\U000ac696<\x02', 'Ú\x08íü𡡰O§í', '¼ùß\U00052c7bÔ\x92KÛ\x07ã\x0c\x8f', '', '\U0006108a']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004036s
====================================================================================================
2025-09-18 23:55:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -10215}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -10215, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003647s
====================================================================================================
2025-09-18 23:55:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'çÞ\x05¨𤷈\U001083f3R\x15X:þÓ\U000c614dÿ\x94Ôv(¢Ôæy[\x0cgê\U00095175𭫑\U000af21b7\x13\x84¹É\x1bâË¦l\U00075374tJ/\x9c\x97\U00066411𭜺\U00085457\x8a/\x89A¹\U000c204e\x01\U0008aa7evÿ\U000c9c12\x9bjõ\U0010bd8c&À(\x16\x1c\xad\U000fdd9eö\x08\U00043572×\U000f4c97\x87\U000f2a36o1~\x91t@疨0\x9eË1\x84½\U0004d7f91\x81\x05¼`\U0006306dÉ쯴?º\x87_Q%N\U00012b64J\x0fñº\U0007a271o@\U000f9856\x07\ua4caX\x05·íi\x80\x14\U000b137eí\U000dca6e\U000d330aê7î\x12è¯\x94\U0008fe19"ó\U0009795f@/õ~H ÑÆ\U000d83f4b];Â²â\x81\U00104c8c@P£\U000e48c5\x00ì\U000fe419º\n\x87\U0004bae3Ìc\U0002efa3u0j\x83§\x8e\x85½\x00\U0010760a\x99Â\U00067e1e\x06ËÈ\x181¯\x83*Y|𥂚\x10k\x05\U0009c1d84\x04\U0006d9b3¯jUb\\\x82l\U0008b3e6\U000a75e0\U000add43SA\x03Þ\U00069bc3D\U0005588c7\x15Ý%Ño\x9a\U000931a9䷗¶]~\x02\x14\ue928G×ê\x10ö/½Lge¦ì!\U000cb297üK5(\U0003ea42ssä%f9\U000489c4Ö\x88\x8e\U00069d8b\x89\x1f²Þ\x82¢Ý\U000b3852]É\x8e\n\x9d\U0006bcc0+\U000690c6Ë~\x04f\x1bî\x96\x16ea\x8e\x00m}\U000b25cb¾\x88.ᯄ\U000f4548\U0007cefeÒ\U000dc659\xad² ø0\x9f\x81àïÿ\x1bÇÓÕ\x03Y\'!m\U000cd8db§\U0005c35féÓ\x1b>6ä»Ë\U0008e03aÆ\x97\x92!>\U0007e7b1Æ\x8b𢠷\x9c\U0007a448\x0e\x13ÈÕ\x9eþ\x16\x9a©%t¢@ÐOt®l\U000685aa¶\U000b161f¤\xadm/\U000a4212\U000ea8f5\x9d¨¦%\U000ee3c3)\U000b189f\U000448da\U000ddf2d\U00093dd3:Y\U000b1f69þ\U000cf0c5½È\x85Ý3ªÃSBÊ\tû+^5\x17\U000b2acb\x1f𨻈)\U000e923c\U000917e5uk\x05¤\x95\x99oÜëÁa\U00088e72cF3Ét.\x1cpÓEÁ\x12\x953áU"lª;²\r\x04𪄽\x8fs9\x11\x19Ín\x87=\U000638ba1\U00037d17\U000f8183¬\x0fæôi\x9e±\x16\U000e0915u¶ûþÚ8\U0007c0a8\x91b+ú\x033MuÏäOf\U00081283\x88Çß\x84\U00051052E\x93\x1b.u\U000b2581\U000a6a27Sl¸~Äm3ûG(?À\x08µ\U0007c88cÑ\x95]r\U000dadb0\x90Ý¤YÎñｓ\ncòÝ\x80mß\x99E\U0004af0fÿm\x9d\U000ccf5c¾2\x85ê©y-𘚰*\U0010fdea>\x14\x0f\U000ac887j±\U0003506d𒅪¦\x04\x95\x1e@\U0001c487\xad%\x1d\U0010ffe9ë\x90§\x98\x0ev©\U00045c7dí£â𝖞üÇô\U000f2491Ö\U000f30af!.);\U0007d967f\x17\x0f\U000ade230tH\ue6afûö\U000d2236÷^\x1dß\U0009de73ÁD\x1fH\x08K^\x7f\x9a\x92ðôÒ\x1f\U000688b9«¹\U000556a1ác\U000bd10ai\U000ab0b7+\x8f"»EÁ¿HoÆW\U00090b96)^\U000f09f5\x10dt]f\x02\U000e14ca\U000ea200Xò\U000c8786ÉÕ»\x89ÑIËBx<A\U000f03c0qÊk.T\U000561d3þ\U000f624fÕ`ê\x02Ð\x16Õ\U00087d9cz¬õãùg\U000b7134?\U0007b627õî\U0007f369\x08\x1eC©𪖷\U0010cf7c쌴ã\U0003282d«\x7fà\U0004ee12%\U000b57c5\U0002f59f\U000eb1c9Cc³¾]@\U000f318dP)ìîx8\x8bñ\x81\U000c707eX\U00046cc2ëAD\U000ad34bYæB\x98®PLt1\\`*á\U00046f08nëÉþ¢QOc¢\U000c0c2b\x1a\nåÄ\xad\U000b6fc7\U000ccc88\U0006efd7øÏ\U000ce0a4\U00088f65+DU\U000c1574\U000419f0>\xad𠎈\x90o»\U00078562\x9cÀáë\U000f73d7Ç¹z²ÏJ#¹4#\U000dd147\U0005fb61\x19\U000c4c1b¼%&+\x8cè\x01¥ÿ¦𩸦¦\U000dfce6𮝛ÿÆ_\U000598ae}\x1a,\x14\x13\x8aÁH\x8d\x80\tÇ8\U0001aa88n\x11êý\U00077906\U00034112\x85\x1f\U0004e642L\U000e44d0Ä\x14\U0007d72d.a\x90Ã\U000e16a2\U0009d214K\xa0£\x9co\tÔ½©\'Ì\x87q\x87\U00099961🭩\x85\x91ô\U0001921fX\x8c\U00013d99\x8fd\U0009bd05¢¦M\U00107a61P\x7fË$\x9cRq\\ý)?ã}ÙÏÈâ!é<0jÔV|è}\'%8\x10hâ\U00058c85넿³u\U000e43a9z\x14\U000cd827Ùæ³¼Ú-A𥣵\U0008afb6\x83\x17\x08}T像C¡l\x82\x85¤k\x93?\U000fd47c\x9d\x92À\U000c8ac7\U0001a34d>\x84a\U001030e1Á\x1e\U000978f1ûO¬\U000b96ce\U0009f0eaWô\U0005c20f*µ\U00096703{\U00062ee8\U00065039𭿳\U0003cd05\x96Å\x80\U00018f2e\x0e\U000c94bd4\U000f98c5\x83l·\U00075aec𣍦G&\x17[ \x98\U001006a6À÷0,Fèó\x95Ó(\U00011f8c\x07\U000e02b9ý²\U00043c74³\x99\x17³]pm\xad\U0005095d\U0004f77dþ±\x83\x97\U000ee1ab\x07à\U0005dc5eBf\x88ÓÜÙ\U000fd217^N\x9cÄ\x83Q\x0cF\U000d5c9b\n\x11Â\U0003b07d\U000baa17\x9fA\x88\U00088075\x17s\x9fáÔµ8\U0007040df\x08\x96>ÁÖ$ù𗡗\U00072691æ\x1a\U000abd80\x14¥\x10\x923±𨎴½\x1f\U0004de1b\x1d*\x94\U00047f5fò\x14\x8e\U0006c108T\x0c¶\U000bd4e9j\x8bY𰢏y\U0008701d\U000d7ba8\x1fÑa/ÖadüMº\U0007370e\U0010f50bc\x11ÈÈw\ue551]ÜSã=ú\x98íyá\x7fäBçs\x94\x7f~=\U00098db1\x87îªx\x9f\x16\x7f\x9c¬𝤖srK\x8fR\U00048648T\x1fÉÁ\x00\x86\x7f𦺻Å´ÕÎ\x92\U000b54d8|X<"\U000a9b2f\x0b\U0003eeebìÄ5\x0fìÎ¨(>MCk.\x03÷w2\\ÚS\U000cae1e堍>ø\x1fò¤\x80Ëz\U000f6f20æ\U00051881Q\x15vÚ%yz\U00011de2\U000b9abc¼\U000a2219\x84Ë&Ip\x9bn4筞\x93\x08\U00092109\x1a\U000d3b95\U000f2375\x1e.\x96º\U00037fb0Ñ\x90\x16\x92\U0004e062#Z\U000a8b1f6\U00047c3dñ\U00082779(Ñ¼È\x9d°Úí\x96ÕÛ\x83\x08Ô%v\x10Ç\x91\x93þ\x8eå¹\x86òe\U000a1d52\x9au\U00044051\x17X\U0004d73c\x18½\U0004d20b ⊟Dû\x13ý\x7f\x1au\x01\x9a\U00087da1;Eh\x87\x9cÝ±\U000c3bd9\U000e23f7\U000b6795\x1a\x95Ì*å\U0001cf3a\x91\U000ed34b\x9e\x8bÿÐ\x7fSå\U000dd3bd§£Ôq\x0c\x98^1Ïü\U000dac7c{Ü\x82\U0001b3b0#ð<\x0fõ\x1a\x84\x88\U000d39d7)iÝ\U0007fa94s]\U00106af4\x83¦\U000b74730\U000a01d1\x9d¾U\x02Ó\x9b\\Ã\U000b28ca\U000a0697\x8d\U000497de\xadY+úâø¯\x9a\U000a27b9-"U\U0006ea2eæ\U00016ba3s²É\x08\x90\x81\U000bd1d2\x0c\xad7\x1d\n7P° ¸TfA\U0003318c\U00048302KÉÿ\x8bU\U00016ff4l±<i\x9a®|i¾U³\U000a7875D\xa0äºäW'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003833s
====================================================================================================
2025-09-18 23:55:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004069s
====================================================================================================
2025-09-18 23:55:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003857s
====================================================================================================
2025-09-18 23:55:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'N\x81Ë\x88ãU\x03»Á\x06Ê3ÐÃU\U00018dbfWã\x93\x94V\U00105ff5\U000d3b9aëºuuÛ[ßÆ[\x88W\U000495c9v\x8aX\x9cooÊä\U000c7caeI\x9d\x90d\x89X\x07YlH\x89Ùh\x95\U000a80af\U00101223z\x84,6ﲐñ\U000b6184\U000f8b73\x89\x80ï\U0008ea16¥¸\U0001ddd6ð\x8c½z>\U0009a4f2퇔\U000aa013mÑá\x8b\U000e081a\U0007df27o\U00053849ë\U0008c7d6¯v\x8b\x81\x0c\U00091711\\_\x0ch\x1dØ\x1b]Ä³\x7fÃÆd\U0001ff66\U000ecadc\x06c¸9\x90ÈiÓ\U0010263bIiY\U00041986\U000bcb13\U000da048\xa0©\U0003763e\x08\U0001107a\U000ef43f\x15ê\U00086f32É;«Ò\x96\x97á\x06𣈯ì\x85¦땎d¬\U000d75d2é¸²Q\U0001c193ã\x91Rö\U00063a09\x10\x89)\U0004693dï\U000d5094̫õrX¦Êh\U000e2e56VHëömÉK]\x0e¨A`>u\x89VpHö*\U000c67ba\U0006e264åt6篿½\U000b9f26\x8f\x9c\U00077d3cð\x94\x10©õ\U00035184ÕE±T\U000b7c30~\tày9¾\U000f2089\U000e9507¸\U000e05db£\x7fj[ø\U00018edbø\t\x87ûS\x01N\x05¿\x8a>\U000b99e6\U00098470\U0003aa98¦ºå5잸\U0004cc83!6`\U0003929d°OUÇ§?)\U0007bab8©\x14.æ\x96ôJ\x07"\x86ê(â\U00109e8aÐ\x9c9Ù\x97Õ\U000b82d6$\x1e/5nú¤;Oi¶àùoá\x05²\x82æ\x94\U0006c820åEMÂ3\x05\x0b\x9d\x8eéÁ`Ä\U00040180𤋀8\U00102f5fTÎ\U00067d5b\x96-xÒÛXÆ½\U00106684]Ï\x001R\x99\x97±À"v\x90º糷\U00012b47\U0001a09a\x84\U000b6472\U000d9f57\x01µ\x1c\x9b?¬\x11\U00062a5fÎwe\U00057c1f璷\U0010a8e0d8Ko\\H\x1c¡P%ñEÐåËÚ\x08\U00033809Ü¼\x14\x16\U0006b334ÖRI£\x01£¯u\x85\U000b7763ëiö\U000f183b\x02\x02[\x95·E\x93»*â(ëÌUC*\x94P7w¢á\x16ø)\x97\x7fÃî\x9d\U0004a797l0\U00013cecy榧\x91÷÷\U000f9280ü»þ\U000b83a1N\U0005c9a4ßðå\x1e\U000320a8ô\x88\x02\x10È\U0010764dnIqA·ß*[¨\x0b\x19¦ÿÞw§.e¶\x10ü\U000dd2c6\U000a5bfed¥xú\x08[\U000bd60b𢛥(OËCså\U000892b6\U00074229ÜC\x86\x88\U00034427ÜA¿\x07º\x9e*\U000913fe\x97>Í\x9d\x9b𬣗½9ü¶\x91Ò\U000f094c´\x00\x91\x901Ý\U0004ad1bú@pÎ\tåÞb\U000b76f5𬯧aM\U000375ed\U000b6b73·1O\U00107752\U000ad830\U0005d6cd\x8bªK\x0cK\x118ÿ#¹cÿ\x9c]\U000c28a7\x8d\x84áõ¥\U0005b09dê\x8c\x92\x04\U00033ea2\x05\U00038d07\x9d\U000e602f\x00\U000e26aa\U00105c82\U000f265c\U0003b120åü\x8e\x97É\r\x8e7£7ò»b\x7fv»\U0009233e\U000e3960aø\U0009883bQ\x88\x1fÕ\x82\U000d5e51°\U000bd475ðoÖ\U0005e435^\U00052cb9ç\'¦o»\x1aÔ\x9d\x98\U0005a5c6! \U001019db\x11áUÞwãÿ\U000ee620\U000e7cdbÇ\U000599bb쇎\x10ô°~\t\U000ceb54\x1elòMÆ¨J\U00101467l¢(\x8dV\x05©Df"ý×\U00064742\U000e1f8fâ\x16/À\U000581f6\U000c6834¸:²í1\x17\x0eÑ𧝘⾆è\U000f9cc3DqÞÉ\U000bf982⋄\x8f\U000e9fb0þBÕì\x14Ñæ¸ºÍÜ}ÇØgu\x17\U0002edbe\r\U00064268Q\x97C\x9dX\U0003cd25\x88\x01\x88À\x92峩¥\U00053217¢º\x84\x95\x99\U001075a2\U00068c94$^_¶¬¶\U000192e3?a¡\x96\U000decbe\U000bd9658rìh^+\x9eKA\x86öýI\U000fcaec\U0003b7fc7\U001015b6\U0001a737â\x0fýÊÙ\x95.\U0007f725«Ò\U0003b8dfb\U000f098e½\x04\U00039eb0\x83Å\U000b70fe0CÉ\x04\U000cab59p9\U000f8d6e𑊷n\x10Ù»\U00068f9e"\x8d|èÄ¿×\x04\xadpã\U000b9eb2Û\U0009ed17Q\r\x03ã¯%ÈW\x06\x98\x03\x9e\x11\U000e2e5bu\U0006829d¤¯\x86\U000af22dý\U00070a93í¿(\x87%\x12ÚuÌ\x9f\x95¼Q\U000c2810\x1a5²\U00093fae\U00044440ç?\U000534e97·É\x8f@\x0e"\x1d۹ÃÑ¿ñCÌ𛈥òõ\U00084eba\U000659cco\x16\x04\U000541ff\U000d2359¹@\x99â𬳞\U0004c74d\x98𡴯Â\x85\U000f1970¡íòºÐ\x00\U000850ed\U00090b6f\x8a\x88ó\U0003ec0e\U000480b6\U00046737\x85\xa0Yýe\x8fÝ;\U00085e89,𡉍)±?|Õ5e¶\U00059950»淪þN\U000c280f\x8e¦\x1f\x1e\x1c\x91\U0009dc5a\x97ø\U000ccea3\U000dd8f5m\U0010feca\x8bDA^2ïC8\x19/åyûÕ1ü\U00011f1aè0X\x7ft\U0003f4d2\U0007bdb9Cã×\x1bÖ\U00060596xv\x86ínG\x96ü*³\U00086a72\U0010a0fcí(\x9f\n~ãÊ\xa0ô;ÖåYºÝz\U000a4beeé¶{\x1c\x8f\x1d\U00010226\x16k\x94𗊥m\x11J#\U000dc104Y\x8d~àØ!ø\U00011383Ä\U000cce28¸ä\U00046ed3𥳔á*\U00045ce3\x84À#|Í\t\xa0\U000da3f0Aé8Ã\U0007a0cc\x1e?7\U000ac544\U000d45ccqÀ»\x0b\U000a7248\U000e053d\U0010ca4dý\U000819b5\x01\U000a7b70?Ý*ç\U000f4821©O\x1b±á©ç]\x15\xadÌ\U0005a6ffâ\x0f&I1', 'password': -10867}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -10867, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004071s
====================================================================================================
2025-09-18 23:55:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['×\x1c G\x1aªx\x8f', 'Î\x99', 'bx\U0010de95\x8eÖý'], 'password': ['Í', 'Hy\x8aQa', '', 'ÏÆ', '7\x87ö~']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['×\x1c G\x1aªx\x8f', 'Î\x99', 'bx\U0010de95\x8eÖý'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['Í', 'Hy\x8aQa', '', 'ÏÆ', '7\x87ö~'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003591s
====================================================================================================
2025-09-18 23:55:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '\x16I\x9b\U000c1410Ã\x92Âøcò\x0b7§I9𖤛Zß:\x95\U000d97de»\t2\x1c\U00107fc8\x97ì$1\U000aaac0\x8a\U000e7784]õ\U000cb53eÿ\U00093175\U000b1c96\x00\U000a2e29þ\x12\U000da847\U00073e20\U0010ecff\U000d55adi\U0010eedb%g{ü\x8f\U00072e7eß\x05(á¤à\U000b0781s¯·\x8b4LNóg\x83X\x90\x81\x0e\nüD6EO¤îµ𢾮\x9cþæ}zÃ=©kë\x8câ£§í\U00090839²\U000aea1dãX×\x15;\U000cb0ef\x01\U0008187e\U000eaad7䉟)\U000e492dfF9M¸¿P8^\U0005f408Ç\x9e\U00034253>\U000cc7e6\U00087710\U000b834a\U000b26be\x16\x0fò2ú\U0005fab4*\x00\x05ò\U00059319}𥑉\U0010dbb1¨\U000c673f\x0b\U0007d42a`êð!\x11&\U0007b4a2\x91ル¯å#ÏÆÌ\r\U000db6b5âZ\U00034ec0\x83Ñ<\U00077966\U000a4a7b\U000eef40â±÷B\x97\U000f8d15È\x19½:\x97𡝿\x1dCá\U000d50f5\x11Î\x04ià¥ëLu+\x0f¥t"\x82\U000420e9êzûÅpÿëO=;\x13\U0008c3e3ê)Î<\x87Þ{\x0bqZ\U000cd972]jà𫓽\x08£Ö\x08F\x9f¬V\U0009c7c0Î\U000df513\x1bª#<\n\x9b6¿\U000ddafdb!¼\U000d19d7{hÅ{bj\rRHñâ&O))è\x94Û\x99Î\x18®\x05ñ{×;\U000f7114\x03\x1c怺\U000d8c8dXì\U0007922e\x1aÀôCÿRà¨\U000a12c0\x1cÂb\U0007fa29\U000513a0\x99+¤\nÙ\x0e\U0010b50c²ä·@h¹\U0004c72cyP@\x81e\U00078faaIµ)[e0[\x15t<c2ä𩎈\U0005b342\x00ò<l\x98𧼂>\x87±\x8awu¥uÏ\x9d\x15é¯¼y\U000ca2ee-뚔çM.\U000c9d81Ø-ÿÒï\x02s@\x1fÓ·Züß\U000601f4$\x04\x02\U000d0d74ý\ríA\U000e0096Y\U000fe805\x8c5¸\x0eº½\x07\U00104f38¥¯\'îèÛ𢏰<=N\U00095ce8ð÷\U0003697bÀÛ\U000fd49b#ý\x119º\x94]k𗒙7u\U000156c1Ô\U000e732c\x9d\U000f7e55]gáLIÓ»\x1cQ\x9fz\x8f·\U00096c09+\x8f¦@o;ß<9Ämk\n\x8f&8y\x04\U000a4474\x93𡖏\x82\\»\xa0H\U00048460E\ueca86ø\U00075efbb§\x1eR\U0004096c\x08¯\U0009e53d\U0005c6c6\U0005b4ec;\x05\U000dec4c\U000418e4\U0008b018ô\U0001548fqð\x1a;\U000fdfbaÆx\x197,\U000319bfJøüW\x98×\x0c\U0008f99bN\x85y\x97\x16\x18𰨶Þôp䗋2¸Ç\U000b0094ù\xad\x00\x1d\x03á\x94Ê\U000c25a1oÂo\x80ó9\U000361d4\U000b2b12\x9cK=ú\U0004259e\U000e58d2\U0006bd09\x9d¾¦ì&\x96ýì\x87\x01-ÝÂa\U0003b8dd\U000ceae1𗺝\x11)m\U00104b8d\U000e4559À\x00\U000fde56e:\x1d¥¿\x9c\x7fXë竕#\U00039092U阷®YmÅcq\x08?\x08OÝ:\x06\U000e260böÔ\x9e\x93Ø_\x02\x8b=xã\U0006f78e!¼7.\xad\U000fcd13\x85Í\xad,ËË=Û`\x15õ[Eü(_𧋊À %Ä\x087\\,ö\U000c9383\x1c\x05)\U0008c1ea=c\x85çFµútÆ\x89rÒqt¢\U000f4044,\U000fbc73ð!\x0c×\U000aac4eè([á;S?,\U000c1dcdÚyC\U00064d31ý\U000b9597f\x89𬳬)\tÎ\r\x0b¡²R¶\x87©7J\x85\U000c8948Àý\U000f85e3\x83\x1e\x0cç\U000746bcY\x96\U0007171a\x86\U000acdc0¯å\U0005304f>H\U0008faaaIyPBÏHðH\U0007a0da/¸4\U0009e315PVop\uf6dfRa°¥Ê\x98\x06Û%ì\x05\U0010c1a6\U000b17baWa\x80\x07x\U000f6130¸¨å÷Ô\x83XÆè\ryO\x18¸§yà\x07È\x10{hdÑ\x13|Z×2Ï\x9e\U0005114c\U0007d580ⴡ¼½cø±\x0eu\U00087f29¾K\x1dQ\U000ecf41íz\x91Ä¬sf\x1bhó\x0eêãæ\x99\U000aa880\U000a22a4\x1a²¼>;CÒi\x16ì𩙵\U000bea098ý𣍹:Ù\x1dS,\x138\x0b×æp𪩜(A+Ä\x94\x0c\U000bdab7Zæ\U000f0616c\x9fM\x8d¢E0\U0005007cöd%*Y\U001046d4b¢\x0bº/\x95\x8f\U000f5e6ag𧱶[<ç\rè\U00079f9f𧂒6[\x1e\x1d¹Ñ.\x95\U0001df05\x88¥í(\U00042841Á𧁋\U0005baf5\U00048198¹\U000852a8"?\U000862839çýÅ|ák&¡\U00039811{\'!ÎÎïÇ\x17Æb\U0006053a\U0005b44eÖÑ\x83ñ\x12|Õ0¼ün\x13B\x07ö\x9c\x81\U00040873\U000a9cec¸§\x91\U000a24f2g3\U000ba62d\U000700a0µ8Ýí¿\U000e3a35u\U0009be44ì\x15Ò\U000c9f1c¼óÆdS\x90\U000976bdÙc\x16¼y1\x98\x08ê\x85B厢¢ÊF\x88t\U001049fe\x1c\U0006d318\U000e934e=\x85T\U000b315f\x88\U0003902d7ûî×3\U000ae61d1etÌ\x0fåë×{k©\x97\U000e1fed\x8aÜ\U0006f6fdº\x89£\x0c\U0004119ff\x02\U000524b6¯¼\x10U\x17\U000bf745\x97gl𦆱¥\U00034ce1\x9fO\U0001cbc5õ\U000ab9a4Ç=\x82:½\U000a9ba9ùçùÏª\U000e57b1|ûÀ\x9a\x7f"÷ä:"\x87\U000821cceb\U00104df2j\U000c8483û𒃗°|}\U000d6a6a\x1cÕ\U00052e16Uh~ÉàEé\x05e\U000d54031½\U000eb2c4\x9c*\U00093685\U000f7657ö®p÷\U000a8dd3\U00049e8f\x95\x87\U000b8cdaù\U000cc707rP\U000c27ebIwT·n\\ø\U000876eaV¸\U000b235e\x0cÒ\U00104d0a\U000e6f45\U000c08bd𡔃´²À\x8f4Ð\U00093472\x1dÆ\x03+\xadD셜Ù\x1e\x03:\x1cÎ\x18Õ~\x08ß1{\x82Yúi¹ú\U000df5c3Øè$xvû\U0009052fG\x9c8°#3\\\U000809caË¹ÿÉ𩂇1w/\U000b7fb8ÚÇ\x93Ä\nÿ\x8d\U0005e9b3\U0007b750\U000eff4b®\U000f3f21_\U0007da98÷9\xa0d`J\x17\x86 \U000a4cf5\x1c\x84Í\U000d9806º¤«Pß¬*°Ñ&\x0cVU(ÚJOÜ$\x83)\xa0(ÝÖ³d"]È,2\U000c25ba)\x1c£fD\U000573d6\x12"2·\U000ba297\x7f\U000583e9n\x1fYç£\xad\x8aiø\U000f3be1âKä\x03c\U0004a8b7'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '\x16I\x9b\U000c1410Ã\x92Âøcò\x0b7§I9𖤛Zß:\x95\U000d97de»\t2\x1c\U00107fc8\x97ì$1\U000aaac0\x8a\U000e7784]õ\U000cb53eÿ\U00093175\U000b1c96\x00\U000a2e29þ\x12\U000da847\U00073e20\U0010ecff\U000d55adi\U0010eedb%g{ü\x8f\U00072e7eß\x05(á¤à\U000b0781s¯·\x8b4LNóg\x83X\x90\x81\x0e\nüD6EO¤îµ𢾮\x9cþæ}zÃ=©kë\x8câ£§í\U00090839²\U000aea1dãX×\x15;\U000cb0ef\x01\U0008187e\U000eaad7䉟)\U000e492dfF9M¸¿P8^\U0005f408Ç\x9e\U00034253>\U000cc7e6\U00087710\U000b834a\U000b26be\x16\x0fò2ú\U0005fab4*\x00\x05ò\U00059319}𥑉\U0010dbb1¨\U000c673f\x0b\U0007d42a`êð!\x11&\U0007b4a2\x91ル¯å#ÏÆÌ\r\U000db6b5âZ\U00034ec0\x83Ñ<\U00077966\U000a4a7b\U000eef40â±÷B\x97\U000f8d15È\x19½:\x97𡝿\x1dCá\U000d50f5\x11Î\x04ià¥ëLu+\x0f¥t"\x82\U000420e9êzûÅpÿëO=;\x13\U0008c3e3ê)Î<\x87Þ{\x0bqZ\U000cd972]jà𫓽\x08£Ö\x08F\x9f¬V\U0009c7c0Î\U000df513\x1bª#<\n\x9b6¿\U000ddafdb!¼\U000d19d7{hÅ{bj\rRHñâ&O))è\x94Û\x99Î\x18®\x05ñ{×;\U000f7114\x03\x1c怺\U000d8c8dXì\U0007922e\x1aÀôCÿRà¨\U000a12c0\x1cÂb\U0007fa29\U000513a0\x99+¤\nÙ\x0e\U0010b50c²ä·@h¹\U0004c72cyP@\x81e\U00078faaIµ)[e0[\x15t<c2ä𩎈\U0005b342\x00ò<l\x98𧼂>\x87±\x8awu¥uÏ\x9d\x15é¯¼y\U000ca2ee-뚔çM.\U000c9d81Ø-ÿÒï\x02s@\x1fÓ·Züß\U000601f4$\x04\x02\U000d0d74ý\ríA\U000e0096Y\U000fe805\x8c5¸\x0eº½\x07\U00104f38¥¯\'îèÛ𢏰<=N\U00095ce8ð÷\U0003697bÀÛ\U000fd49b#ý\x119º\x94]k𗒙7u\U000156c1Ô\U000e732c\x9d\U000f7e55]gáLIÓ»\x1cQ\x9fz\x8f·\U00096c09+\x8f¦@o;ß<9Ämk\n\x8f&8y\x04\U000a4474\x93𡖏\x82\\»\xa0H\U00048460E\ueca86ø\U00075efbb§\x1eR\U0004096c\x08¯\U0009e53d\U0005c6c6\U0005b4ec;\x05\U000dec4c\U000418e4\U0008b018ô\U0001548fqð\x1a;\U000fdfbaÆx\x197,\U000319bfJøüW\x98×\x0c\U0008f99bN\x85y\x97\x16\x18𰨶Þôp䗋2¸Ç\U000b0094ù\xad\x00\x1d\x03á\x94Ê\U000c25a1oÂo\x80ó9\U000361d4\U000b2b12\x9cK=ú\U0004259e\U000e58d2\U0006bd09\x9d¾¦ì&\x96ýì\x87\x01-ÝÂa\U0003b8dd\U000ceae1𗺝\x11)m\U00104b8d\U000e4559À\x00\U000fde56e:\x1d¥¿\x9c\x7fXë竕#\U00039092U阷®YmÅcq\x08?\x08OÝ:\x06\U000e260böÔ\x9e\x93Ø_\x02\x8b=xã\U0006f78e!¼7.\xad\U000fcd13\x85Í\xad,ËË=Û`\x15õ[Eü(_𧋊À %Ä\x087\\,ö\U000c9383\x1c\x05)\U0008c1ea=c\x85çFµútÆ\x89rÒqt¢\U000f4044,\U000fbc73ð!\x0c×\U000aac4eè([á;S?,\U000c1dcdÚyC\U00064d31ý\U000b9597f\x89𬳬)\tÎ\r\x0b¡²R¶\x87©7J\x85\U000c8948Àý\U000f85e3\x83\x1e\x0cç\U000746bcY\x96\U0007171a\x86\U000acdc0¯å\U0005304f>H\U0008faaaIyPBÏHðH\U0007a0da/¸4\U0009e315PVop\uf6dfRa°¥Ê\x98\x06Û%ì\x05\U0010c1a6\U000b17baWa\x80\x07x\U000f6130¸¨å÷Ô\x83XÆè\ryO\x18¸§yà\x07È\x10{hdÑ\x13|Z×2Ï\x9e\U0005114c\U0007d580ⴡ¼½cø±\x0eu\U00087f29¾K\x1dQ\U000ecf41íz\x91Ä¬sf\x1bhó\x0eêãæ\x99\U000aa880\U000a22a4\x1a²¼>;CÒi\x16ì𩙵\U000bea098ý𣍹:Ù\x1dS,\x138\x0b×æp𪩜(A+Ä\x94\x0c\U000bdab7Zæ\U000f0616c\x9fM\x8d¢E0\U0005007cöd%*Y\U001046d4b¢\x0bº/\x95\x8f\U000f5e6ag𧱶[<ç\rè\U00079f9f𧂒6[\x1e\x1d¹Ñ.\x95\U0001df05\x88¥í(\U00042841Á𧁋\U0005baf5\U00048198¹\U000852a8"?\U000862839çýÅ|ák&¡\U00039811{\'!ÎÎïÇ\x17Æb\U0006053a\U0005b44eÖÑ\x83ñ\x12|Õ0¼ün\x13B\x07ö\x9c\x81\U00040873\U000a9cec¸§\x91\U000a24f2g3\U000ba62d\U000700a0µ8Ýí¿\U000e3a35u\U0009be44ì\x15Ò\U000c9f1c¼óÆdS\x90\U000976bdÙc\x16¼y1\x98\x08ê\x85B厢¢ÊF\x88t\U001049fe\x1c\U0006d318\U000e934e=\x85T\U000b315f\x88\U0003902d7ûî×3\U000ae61d1etÌ\x0fåë×{k©\x97\U000e1fed\x8aÜ\U0006f6fdº\x89£\x0c\U0004119ff\x02\U000524b6¯¼\x10U\x17\U000bf745\x97gl𦆱¥\U00034ce1\x9fO\U0001cbc5õ\U000ab9a4Ç=\x82:½\U000a9ba9ùçùÏª\U000e57b1|ûÀ\x9a\x7f"÷ä:"\x87\U000821cceb\U00104df2j\U000c8483û𒃗°|}\U000d6a6a\x1cÕ\U00052e16Uh~ÉàEé\x05e\U000d54031½\U000eb2c4\x9c*\U00093685\U000f7657ö®p÷\U000a8dd3\U00049e8f\x95\x87\U000b8cdaù\U000cc707rP\U000c27ebIwT·n\\ø\U000876eaV¸\U000b235e\x0cÒ\U00104d0a\U000e6f45\U000c08bd𡔃´²À\x8f4Ð\U00093472\x1dÆ\x03+\xadD셜Ù\x1e\x03:\x1cÎ\x18Õ~\x08ß1{\x82Yúi¹ú\U000df5c3Øè$xvû\U0009052fG\x9c8°#3\\\U000809caË¹ÿÉ𩂇1w/\U000b7fb8ÚÇ\x93Ä\nÿ\x8d\U0005e9b3\U0007b750\U000eff4b®\U000f3f21_\U0007da98÷9\xa0d`J\x17\x86 \U000a4cf5\x1c\x84Í\U000d9806º¤«Pß¬*°Ñ&\x0cVU(ÚJOÜ$\x83)\xa0(ÝÖ³d"]È,2\U000c25ba)\x1c£fD\U000573d6\x12"2·\U000ba297\x7f\U000583e9n\x1fYç£\xad\x8aiø\U000f3be1âKä\x03c\U0004a8b7'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003715s
====================================================================================================
2025-09-18 23:55:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x87\U0008393f\U00064788\x97N\x81\x0e', '', '', ' ËÍÀ\n', 'ùÀuù', '\U00109a79^'], 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x87\U0008393f\U00064788\x97N\x81\x0e', '', '', ' ËÍÀ\n', 'ùÀuù', '\U00109a79^'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003774s
====================================================================================================
2025-09-18 23:55:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -493480771, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -493480771, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003691s
====================================================================================================
2025-09-18 23:55:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['\U0010604a6R', 'Ù\U0006bda4', '¾Ú\x92\x14¦ôþ \t\x00Ü\U00083630𝪀Û®\U000939cfý\x91\U00045492hÊ½¦\x13', '𐭟LúÊU\U000985af\x1bø\x9bÌÔ知', '\U0004ebbfô¨', '\U000b9b76~ÄG']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['\U0010604a6R', 'Ù\U0006bda4', '¾Ú\x92\x14¦ôþ \t\x00Ü\U00083630𝪀Û®\U000939cfý\x91\U00045492hÊ½¦\x13', '𐭟LúÊU\U000985af\x1bø\x9bÌÔ知', '\U0004ebbfô¨', '\U000b9b76~ÄG']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U0010604a6R', 'Ù\U0006bda4', '¾Ú\x92\x14¦ôþ \t\x00Ü\U00083630𝪀Û®\U000939cfý\x91\U00045492hÊ½¦\x13', '𐭟LúÊU\U000985af\x1bø\x9bÌÔ知', '\U0004ebbfô¨', '\U000b9b76~ÄG'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003971s
====================================================================================================
2025-09-18 23:55:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004199s
====================================================================================================
2025-09-18 23:55:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -972900171, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -972900171, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.0044s
====================================================================================================
2025-09-18 23:55:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['aB\x9d', '$\U0008566f=𦦢\U0010ac7d5\x984´hÆ', 'oÍ\x88\x867\U0010dbb4Ï\U0003b122\U000fc362\U000920c2í\U000fd39a\U000a36c5?ð9\x00\x96¤', 'DáÎ\x0c|\x94±=\x01Ñý@²Â', '!\x8d$r\U000cb418Àü', ' ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['aB\x9d', '$\U0008566f=𦦢\U0010ac7d5\x984´hÆ', 'oÍ\x88\x867\U0010dbb4Ï\U0003b122\U000fc362\U000920c2í\U000fd39a\U000a36c5?ð9\x00\x96¤', 'DáÎ\x0c|\x94±=\x01Ñý@²Â', '!\x8d$r\U000cb418Àü', ' '], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003861s
====================================================================================================
2025-09-18 23:55:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003732s
====================================================================================================
2025-09-18 23:55:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -110, 'password': ['𘌢{¨', 'W}', '\x8cGÒÌj´', 'y\U000ca3a7$i\x0c\U0007c62d\U000a6f20\x1b°|à', '\U000fbb66', '\x99O\x11c\x8f\x95\U0009fa70\x14', '\x1dt2Uk', '脵', '³Û', ':\U00036602\x11îCÛSÝ', 'ꎘ𪫵', 'y)M\U001016564HZ', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -110, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['𘌢{¨', 'W}', '\x8cGÒÌj´', 'y\U000ca3a7$i\x0c\U0007c62d\U000a6f20\x1b°|à', '\U000fbb66', '\x99O\x11c\x8f\x95\U0009fa70\x14', '\x1dt2Uk', '脵', '³Û', ':\U00036602\x11îCÛSÝ', 'ꎘ𪫵', 'y)M\U001016564HZ', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003751s
====================================================================================================
2025-09-18 23:55:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003979s
====================================================================================================
2025-09-18 23:55:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['àw\x1c\U000b231b', 'Ð\x0c\x13í ', '', 'Ï\\\x18R\U0007ad41', '¹', 'ê\U0009a2c0\U00076901À\x8fÐwí\x99𖽦\x15', '?¹\U000a2b6f', 'ß', 'V', '', '\U000d1cb7'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['àw\x1c\U000b231b', 'Ð\x0c\x13í ', '', 'Ï\\\x18R\U0007ad41', '¹', 'ê\U0009a2c0\U00076901À\x8fÐwí\x99𖽦\x15', '?¹\U000a2b6f', 'ß', 'V', '', '\U000d1cb7'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00372s
====================================================================================================
2025-09-18 23:55:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "<script>alert('xss')</script>"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004012s
====================================================================================================
2025-09-18 23:55:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 2141, 'password': 'ëP\U000fd2afgo´\U00062854𨋖\U000599bf\x12\x87¿\r𧽷ê\'B\U001089d5\x15Å9â\x87Ò\U000e1553ænÓø\x85[Û§\U0008b90cU\x96Þ\x04ð§\x13$Ö\U00044ec0¿?&)\x11Xꅍ\U000f1ea5É\x017\U000db7c9ã@\U0009ecd4ô\ré+U\U000f1e0d\U00100b8a+\U0005a968\U00010ebcü|\U000b6671\x064\U0003a3ebPlAZ6\t\x9dA\U00106239\U000b1639\x1cß\U000892a4gJÂk\U000a223cþx\U0003b031¢\x0bû¦\x83𱃙\U000a2a57íá𨊡ê\x1c\x18DÌ\x995\U000df88eÈ{ÔuwÑY.1\U00019bb5üÏ\U00031d08Ñ¥\x10G§ØZ\x8e𦭣°z\U00042a12\x13b\U001095a80\U000f7eef\U000bfa43\U000fd30c\x1fk{ÞØÐ±\x93\x14"ÉK\U001096b7Ô?\x81ªä\U00104cb5Ù\U000f1b22\U000816706#ü\U000ec31bØÝÍ<\x1b\x04wíö\x88½aþnN{{z4\U001022a2ê𰟪\U000e2db6ßü𥥼K~\x99xÒÀ\x98𨿵\x0f¥X\x15\x89Gcµ\x02d$溞®_zÃ\x8f浸´tzD\x82S\U0003d916\U000cee84c/\U000c29a9\U00067afd\U0003a48aöî\U000e8febê\x88\xad\x84mX\x7f\U000ac737ZH\U000c4b71\U000a1b56ùÔWÔÌ^Ë\t\U000b76dc7ýà\x93À\x8eÿ\x05\x0c\U000c4c24`\U00054a92¾_kC6\x9eY8\x05¢FP\U0002fae6\x04\r\x05X\x81Ð7)=\U000d8b6bF¡ò\U00068b84\x8dîµÖ\U001039e0ÉÃ\x8cX\U000649e3浽\x07\U000e8d2aÉ%\U000852c6\x1f\U000c56f0\x15\x0f\U00068de0A3\U00063e53"\U00063fd4\x19#Kð5\x99ºÿ\r\x0eH³ùYÔ\U000d5317ÓYS_Ô\x96Cò\x08\x82\U000ca42að\U0001ffe93𡣣²ÚF\x02\nõç`«£tr\U0007b3a4FTe\U000f90c6wûÒ\x81D\x11s-\x11&\x05þ%D|©\U000a6225ÅF\x87\U00012e11£\U0008619b\U000a5146Ü\x1c\U000d2040\x15°ÿÍò\U0004e95eÅ\t\x80惮P½#\U0008f15d£ïJ\x8cV\x055Ä\U000ba548\x8bÛ»|\U000aea6b\U000f698d\U000912b3ìîsô,eLh\U00034087\x9dI\x95ÄµA\U0003e9c6ÖR!/Q;\x16\U000c89e2[\U0001c1a6Z\U0003fc55j\U00108713\x07ñ\U0004aa5dïh<\x17\U000ea796ú\U00040ecf=\U000f1600\x00\U000bccd4\x80\U000e2850\U0005101fYÒJúéÙ\U00038b5f\U00103a72R·\x9e\x19\U00108a72§î\U000f5754!r\U000c3cccÆ\x14\x8cù\U0003a735go\x94*)î¤à\x07\x81\x05À\U0007e12db\x129Ð¤â?8W¹J\U0008875bf\x02\uf161\n±Î?Ò\U0001957bHÁbHô\x86k\x82G\x95\x9f¼ýâ4\U000f8cdcß\x12[RÞ\x90x\U00091eef£E𢈅íE\U00097765|\U000482dfQ\x9fµ瞶RÑA5\x8fnñ\U000b344cW.\x95\U000cff1cÁ\U000b0133:\x80w\U0010bde9¨©¯\x8ct\U000ca83fd1\U000529a1\x05Fé_¤𭸇ãá]Y{/Sê\x91>;\U000a8c82\U000deb90±𭐌KJÌ\x13𐎺\U000e09c7÷àzaÒ;¿Ö]w³Ñ\U00034c4cÒ\U000f62f3\x8a\ue4f5\x0b¤\x8e\U0004ec73±\x97\x90!¿\U000e44830\U0008d2f2ò\U00050902Ç!È\U00090387æ\U000c7c0e\U000498bc*o𩆫Î\x1cÏÆe\U000d74f9h\x81\x0bÀ¾\n\x0bPÚ\x1a£ï\x1c\x8e#ä"\U000e75fbíUx÷\tk\x9b\x10à\U000faba7\U000feed8𢘱\U0008b081\U0003e827mô©\U00061d82AÆ¤\x0bÔëU\x95>a£\x7f\U0008c861Ç»¶Ä\U00103a79Ìt\U0001399b\U000cce6b\U000718e6ù\x84ÉÐ\U000573a3$\x01\U00090d30ñ\U0009c702)mb\x06\x04\x16#\U00034702\x0eè𛀲ÔÊF¾\x11J\U0010b9ae\x1e\x85\x03际º¾\U000a93a8s¢*\x83rä\U00038075\x1fãÌ¢+~(z¹\U000eb638"\x88®Ô\U000ae003¤¥#\x05\x8aü\U000f777cϾ~ß\U0006b8ddÌW&\U000d03dbÅ\x9c%¯\U000b54acÒnP\'/\x1e\x82\x0e\x1f¶,Åv\U000ea8feV\U0008192dï\x07\'硵³þ\U0003e7e2㆕SÄpS+Ú\x87\U000f5584\x87\U000ad596\U000cce1f®\U00074398翸*3§É3\U0003f800:AÙ¿\U0003da0b\x07°¥\x94©!GÅ\U0009930a|ywem(£l\U0004fb19Ô\x9aCað|\U0001ff79\x95\U0006d4a9ÒSC\U000af9c8Å\nÈ\U000a5487í\U000479f2Æóß\U00012f91\xa0\U00064038÷Ó\x86\U0006f316\x87¢\x82\x8dæR\x8a9\U0001a452\x00\U000ea906°Ä𫇴\rO\U00053d47𐎀.\x86x\'6\U00083cfd\'\x1fy\x156\xadÿ\U00076793:\x00\U000d533b\U0006d3acAú\x83 )q Ú\x9cð\U00061f66C\x12\U0007eaeeY\x0c_ÏÚ·Í`ï}næ\U0010d698\x9e\U00059ff4£\x83\U0003908f\x82ú\U000b1310Ôci(\x05ý\\\U00042385Q\U000e8874ó\x08$E\U000b7d2a@m/\U00063d03õ\U0004f461ÁÓ4ÌýM\x92Oo9\U0007528ba/¾Ò·Î\U000ad69d\x895\x94S\x0f\x16O·Î\x81¡\U00047686þ\U000ea4bfö\U000db2f8\x88K\U000d4a5e\x8evi:j×®\x18\U0006a434\x0cë\x15\x96\U0010df6fI\U000cc793\x8b§\x87È*·Tx\x03\x99\U0004b3b9.\U000e8a47å\\³\r랞%Þ\x94\x15Üù\x94¯Éè¿Pú¿\x1bÓ¿\x84\U0008c3c7\x17\x15°ç\U000a366a(\x9aÏÅ\U000c0009RDç@zßÐ\x97\x07ºRG\U00042330Qßh\x15æé\U000a109e³\x9dîÇ\x88\U0005063c³\U000f01b0\x07Ã\x84\xad]\të\x9fn!\x9e\x1e¢Ð\xad\U0007d62afaáÏ*{\x18pê\U000db346ÿ\U00044974\U00045ca5p\x81\U000a4309r`rò\x8bÕ(PòN\x9f#F>z\U000956afK\x811W\U000fa057.\x0bYë,ÏB\x1c\U000a311aÌ\U00052350Lc\x99뉆ì\\áL4\U00010f5cºJ~lü\x16\U0006121b\U000e2c13\x98z©\x13I¶\U0004943b£#Vð\U00109893\U0001ec34\x1c\U0005af87\U00052310\U000ee3f9\x12\x93\U0010d998òºÄUKù\U00104d6a\x80E\x92\x00\\}𤚬«'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 2141, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003776s
====================================================================================================
2025-09-18 23:55:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004525s
====================================================================================================
2025-09-18 23:55:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '   '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004205s
====================================================================================================
2025-09-18 23:55:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -18119, 'password': 26859}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -18119, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 26859, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00367s
====================================================================================================
2025-09-18 23:55:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['áM怈\x04\x16s', 'ék\x86\U00103b97¦\x94\x7f', '\U00072a27', '', '', '§C\U00103f7b'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['áM怈\x04\x16s', 'ék\x86\U00103b97¦\x94\x7f', '\U00072a27', '', '', '§C\U00103f7b'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003814s
====================================================================================================
2025-09-18 23:55:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003626s
====================================================================================================
2025-09-18 23:55:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 25}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 25}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 25, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003519s
====================================================================================================
2025-09-18 23:55:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['a\U0007ccd9Ï(b\U000bc9d7L\n𪸷#\x81\x1b', '5\U0001c871']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['a\U0007ccd9Ï(b\U000bc9d7L\n𪸷#\x81\x1b', '5\U0001c871']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['a\U0007ccd9Ï(b\U000bc9d7L\n𪸷#\x81\x1b', '5\U0001c871'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003639s
====================================================================================================
2025-09-18 23:55:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '    '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003652s
====================================================================================================
2025-09-18 23:56:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['1\U00092523·\x07ә0', '', 'Ál', '©'], 'password': 'öð3eÝ\U00105362â\U000f3f82\x9fåsd?ßäî\x8e(\x8eC¿<6¬:𮖑\U00043221\U000ee2e6¢2ÇøNá\x0b\x16ö\U0007f058\x17·\x07û𩆸ç¿\x18}\U0009c82c3J©\x91A\x1d\x08\U00074906\x1bÕù\x9eHÜ𰛚\x99E\U000bdba6\U000f3ee5%¯×eø\U000a4e73~\x94\x85\U0009ce385\x86+¡\x86(\U000e60cd¶\U0004c8a8\U00085d72«h\U000d62507\U0005d037êÞ\x08yd\U000ace98\x9c\x0f㫦\U0003f586õÐh{ÁK\x9f\x16\x03\x17U⡥³óeÇ\xa0\x8fYÜ\U00048dbb\x0f\x85\U0009a26c(ã\U00052f4a\U00108793Æß\U000a2127,g,\U0010922d\U000fd9f1Ã\U00051a96Ñ¢\U0008ac04¸ÕÝ3E!\U00089f33\U000c3741¯ÞU.\U000911d0\U000770e380ª\U0005e4bd\'\x82\x82s\U000ac59e9çì"\U00094df3\x9eH®\U000c059foh{Ú\x16\x02\x80\x0e>\x9f\U00076f98\U000a6add𪜬\x8e½\x9eF2\U00037996\r\x1f\x99ÿ\x90\x83\x89ü\xa0:\U000f644e\x98Q\x8b;Krí\U000d0d29$\x94æ\U00104053©\x06&oÐcä\x85¾jH3\tö\U00092e4ffü\x19\U00108a11ôûö\x9c\U00049f89\U0004d2a5ú𮠪EþÈeÓëÖ\x9a𘫪\x8dº¶N®GÁ\U000c5a6cd\x90\U000d54ff\U0006dafcÝ\x19>©*\U000cb51eðûñ\U00086b46\x99Ú\U0005eb43½±N\U00046110\x7fç\U000a81f3Çè\x19𨩻¸\U0008455b¼\U000d2776×/\x8d\x16\xad¯ñM;Bx&\x06\U0001ef65ÚU\x8f«Ò\x0b\x06\x01𦕺\U000c7b4c\x0f7𢪣5!Á\U000cc530\x1e\x99\x8bÿÂh\x9e\U0005d1df\x92\U000c8d6aå\U000d92c1ç\U000631f4<Á=õ"\x04yyâ\U000b254a£\x91X$\U0006b876\x97\x81\U00059734A\U00059162Õo\U000ed53e8\r7îp;é×úcè\x8d`xì\x80\U000d7492𒅥L¡Þ\U00071221ÈM𫍲þ×\U00095628\x14á\x19\U00067a28An®ü\x93\ue1eaÌç):^¾\U00073f87\x84Á\x18¿\U000efa59{?\x1c\x95ÆXX\ueec9\U0009f5ea®{𠑩O§)2\U00106390Â\x11¥u%@Á\x08𤜑¼\U0008a016ã£Ä¿\x9eØ¾eå\U000801dfÙ\x01l\U0006d570Yêz<\U000d185b\x8e\U000d8041CÖÖ\x8bäD\x01!Î6𪴦½Ð¹:\x06\U000927f2\U0006f582[Ë-\U0003e15a8𥜾Ï0áÏ\x114U\U000c64760\U00067014\U000162beZ {\ue351òÕa)Tzþ\x02*Ôªé¢\U000a2203\U000b08aa\U000cc240\U000820b2Ò\U000aa24d!\U0009a475üT\x8e&\U000ea4b5C\U00036d6bÓV\x8dÏ|\x93dØÎ\U0008c8e0Ç\U000654c6\U000e464c\x8fKQ\x18\U00097035«Ù\x97ö#\x16.\x83\x88\x83ft\U00045f4c\U000ae86e*\x86\U00060ca3\U00049f29JU/ÜM\x91\U000c4b76G\x8e\U000ef9f1\x18\U0007e88aK\U000504f3±\x0fh\t\x11A~Xgo¯\U000536ea\U000ea6bf]Rã®\x13\U00084ceav \x13Ç\'PãpÔ\x8d_\U0008958b£Ç\U000ba72c\U00044fc0{ ó\x96§\U0008396cVG\x9b\x8c\U000b604d7u½a\U000dab5cß-\\ól\U000ba149Z\x8b\U0009a97c\x8a\x08øß\x919\x1b´\x0f\U000b3e19\x01\U000831a5\U000524e9<ï\U0004e0a5Øh𦫚Á.\U000d676a~灕Ã×¤\U000137b8\x93+ï𥳉G3¾Va¡=9´\x9a\x90\U00106c1f!\U0003ebd9i\x8bL\x1e4\U000905b9\U000d9bb6ªo\x9a!i\x90ð\x0bkÒ\x811\U000740daöâÜ¤íy\U0005b4fe\U0008adedÔ»OAºª\x9eLÞ\x18l½9Ë)𗀁\x18\U000c1022L\x98\x87\U000f4f205{Ø\U00040811\x13\x83¿<\x93§E\x04\U00033bb4f\x99l:\x9añ\x81ª}\U00044ce6µ¼\x9f\x98_\U00098738Ñ\x08\x14ç1Ì\x10\x073Øáî,\x01🃌f\'©z\U00109de7\x89ÌJ\U000393fd{j4¤>x\U000e1f1cì\x01\x8d\x84\U00037194+켌{¢\x84î¾\x89tw\U0001c96a f{\x0c\U000615a9¦qÏçt\x9dê몿A¾Sb\x02oFûÖ\x96ë³\U000b3066×ú£\U000a711a\x13¡³pX𦎮Ä`\U000be2c8\U000ed685b74²tÅû-tÍ±Ú~ì \U000f8ffdJ)L\x01\x14\U0008325c\U000e619beæuv<\x92FJ\x93\x12\U000ca2aaY\x11\x88\t(x1\U00033ee9k \U000b0ab3\U0003c26a#½\U0005d824\x14y\U0010dff3\U000c887dÜÆ_³\x87P"·\x8b\x87\U000492aeR\U000f03ec\x1a£\U00085600ß>P\x90(\U000e554ci큞\U000da176\U000b875b\U0004117bo\U0005b4b1G \U000bd04fO]e~Û\U000b6e2e·\U0005451e\x12xU\U000504edµ\')&\U000804d2ö;eÓGT´\x07\x0bl\U00038d29\x93\x0c𬳁$íN\U00047ad5\U000bf792\x19\x9eÓ{¶êÎÄ\U00057519ùÅX=j5\U000c7ec1\x98\x801tFu\x8a½N\U000d2daa¶TÉ\U0005b427\x1b¥#ॅ&\U000efda5f\x8bFëV¯\U0010b372\x87\U000a4508\U0003afe3ù 𧓄Ô\x8bw@b~~\x93\U00094817\x17O𤲞I0Ú\U0005024d'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['1\U00092523·\x07ә0', '', 'Ál', '©'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004227s
====================================================================================================
2025-09-18 23:56:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x9b\x9d\x90\x89ÿ\x9f\U00094534#_\x00Å\x86\U000515db\U000c7068\x83Ù"ª\x9e$ó\x9cð\U000607ef\U000a4c26\x1b¡e0\U00077ee4ÿ\x1d\x86\x18\U00036497È®B\x99¤n\U0005327d\U00015e57Æ\x0eP\x99\x8b§Zã°\U0009baba\x8c÷,\U0007ba37]!b\n¢Xn\x8e9 \U0002ff5b²¼\x93nv\U000f3785𗫳¯×5\U000cc28b¶6\U000b44f9\x84¾÷ò\U0007efceÞ&\U000c4c38;\U000bcf36©Ñø\U000c11f7\\ç£\x05\x86\U0003325f\U0006d2d3\U000b7dedí*î\x81Y÷"Yk27>\x14Î¡\x026AP\U00072976±\U000e9624òvé÷t\x1eò=¢Ü@\U0010cf4bF\x98Ñ\U0005c201\U000a9cc9䚉\U0010a7fd\U000a172d\x86\x82\U000dbd50\x9f\U000d989frþÁ쑤Ð\U000a0867\U000b9b02K\x94\x92\xa0â6íp£\r\U0009e661\x8fû5C\x83ñmÏ+\U00100dbd\x05Zyvz\x80\U0006833f\U00060655ÀUêf;\xadC/ÇÑÖÔb\U000e547d\rdI\U0006d877\U0007d4b4ó\x11?èÅ®\x02ÿÑ\x05{î®\x10Iqnßs\U000eb453÷-Ì\x0fsô¯\x04A_\x17ª\U0007d07b)\xad\x04Ô\x13𡜹<¨m¾w\U00106ad7Ç§:q\x99X\x9f\x80¤Z\x0b\x8b Å\U000681c7\x12_\x97Êé\x12FË1\x98T£\x02ýk\U000d03ab\x87\x82ñ䔰\U00048cf9\x8a(³Ïå\U000ed2f2Ä\x83ºÖ\\Ù\x0b𢎖àÓ\x90\U000e40a8®|w𘚪ÄBÏ\U000991dc\x8e\U000b069aEÂ\x93\x04\x16-\t°îz\x87è\U000d4f49uÂ\x1d\x9b\x0f6¥\U000c5434)Å\x11\U0009af16{¡-Ð\x8d^û\x82¡#á4\x89\x91\U000e2f8e\U000bae3bÛ\U00100cbb\x9f>¿^\U000427309S\x06?\x8fFzm<&i\x96À碄\x9e\x13Q\U00086182\x01ì\U000e247cæGí^ÜÇ\U000eaddc£[\r\x86\U000dee67\x97µï\U00079061\U0004a22e\x03ýë\U00099e80ó\x90HH\U0005d315\x990NV\U00031681éP\x99\x80\U00081554*óÌ@J\x9a\U000c0087\x04\x18º𥮵\U000aeca7<GG\U000bfc3es\U0009a08d2Ë𱅔\x1aÁrú¬â\x8aQ\x1di_\U000cbba3i\x991pr\x8f\x1cË\U00039a89<\U000389b3\x04Ð\U00064f1bÄLý𦯲Ûtÿ3eð\U000ed4f4\U000eee92\x12ÛÀcH6ÍèÌb\U0010158c\U000ee394yôq tôèÞ)\U00087db3¼\x88ó§\U0001e256Ú\U000c91f4\x8a\U00011f1c\U0008637bJÈ+\x98@0\x13\U000f54fd\x97¦(\x12y\\\x1e$\U000e1879¸ùï\x93\U000b1ccf\x1co©tÄÜµ]À\U000380b3£𬱥\U000148beéß\U00038b7d?YwÇb5\U0010d5de;\x15ÉùQD𢋝\x154\x10¤)\U0010a71cv¸\x1dësdg\U000542242ü¼Xý\U0006a5f9Ã}\x18Õµ\x1fAñ\'Ù>h4Ùç\x95hë]\U00100c15ç\U00038a7a~É\x19ô\U000ed11d*hð\U00103b97£Þ\x80¤{À\U000cf053\x97\x96\x02èsýÁþ\U0002fe23¤\xa0Î\x0ce4§ÓW\xa0°ô淸*\x8aÅØÅF\x93`_°\U0009ce81|\U00048b02§$\U000a4caeJ\x9c\U000b0bf5ØBç\x89\x99b÷\x17\x0bu\x15\U00059ff2bH/\x1d\U000313f3\U000f0a1b\x04ËP\x9d䪶\x16\x86\U00070c298ÜUï\U00045cf0U\U0009ba2fõ4\x02þõ\U000f3323Ñ𫑂\U0006f9d1±\U000df3edèÛØU#\x10\x12\xadN\U000b653e¯\U000d1151\x05\x92é\U000ce640<Æ8\x0bÎò$!F¡Á.f\U00072099\U0006a2ae/Ò\x91\x87{e7\x16¼ø\t²TÓ+\U000c217e\U00082a0b{áR#°\U000afe8dq[ý\x81n¥\U000953b6\x14k𨑥\U00059c66Z>\U000f35a3\x87\U000c9b3d\U0005d1b3\x9cî\x98\U000946d5ý+õ\x1bg.\x04\x1aÔ\x1f²\U00019504>\x04÷f\x86\U0005a20d\x0cû\x8f\x03\U000d4f83\tþ\x9a~µ\U0008771eô\x1cu}Æû?Ë\U000ce7ab90Ö\x06þT\U0003d33f<¾-ç\U00108502!\U0004bc7dÅ\U00066c04>\U00063e6c1iÑ\U000f99d5Y\x0c\x9dú\U00090e6b,`\x9e\U00045af3*ë\U00013a86²BGd\U000a52b2\U000ebea5÷=Ãô\U00034d42`ò\U000ad3ce\U0006842d\U00041a47ÝØÓ\U00062945ø\U00108ea6\U0007be314\x94\x1a:\U00018f86\\{7?\x14ê\U00073fc60\U000ce184\U00059ff3Q¨\x19¬\x0e\x94\U0008e4ce\U000a4e4déK:ì§\U000a39b2²Ö\x99\U000113292\uee8b}𡹖u4@Ë7º¥\U000eb436\x99\U000b10f7\U00016533i\U0009fe32êâp\x11\rFdò.zW\x91±\x8e\x0e\U000b3552\x0f=0\U00064a83¡\x01ï\U0007de1c鲅ÊRý\U00045969\x8d9â\x0ft\x9df\x06ÓÙ\x98\x10\U00103f6d\U0009b6deÇ\x7f\U000887f6o¦\x8e\r\U000bf463\U000bd5fb´Æ\x9e\x8c\n\U000137a5Å|\x88w\x08\x86\x06¾d\U000e3fb0\x1c\U0006c58e\x8dµ\x8cÆJ\x90\U000e7f18«G6{o\U000a3c72\xad\U0004430f\x81\U0009e51a2Ï6\x11\x06\x96³Ü\U000d0e62$_®\U0007e67a\xa0¨vn¸\x1a¾ïÏV)¨@?3áªæë7\x1e\U000cc4e30:t¢²\x0cÞ\U000379b4Z𦎕üN»?8ûmN<\U000637e0?ã\x8d\U000ad220\U000bfe19O}ð¸\'\x8a\x10PhóØðI\xad³YYc}Dö\x1d\x95\U000b03b5:nÝcÓ\x0bác!\x8a6ïé^FÔèý\U000e2457î1cíË\x01\U000ec393é\U0006abf2ÿßî¼\U000549bbaõî4\U0003d522O\U000bccf3>\U000b18bdÕ\U000fe58f+¥`åò\U000c3d3c&s\x7fp\U000322b6ý!º\x13í²\U000f8fc8\U00052c72i\U0001fcf4\U000f23a6\x8dÖðù\x11r2\x9d\x08\U00061f03I\U000805e8\U00089136\x1cC\x12n÷eËB\U0006848d\U00035448c𢾵6JP\x9aæ🔯\x8eS\x04\U0003ac98\U000c63a6\x89👽~_\U000a7d8e\x9d¯\U000d67f6)\x92ÞïþOæÞ\U00051be2\U000655cbp\U000865dcQ\U000fc8e4\U0005b08c𫓉\x03Åô\U00038903¢H\U000f3086\x88±\x04év¨é\U0009883b~~\xa0"Ï\\\x98\U000508ad\x8eôö\U000d20cd5+è®w\x86ö\x98\U00013d63\U00085ab1\x15\U00051b5dCj£OÞñ\x80\U000f3166+øÊð\x08\U000c70f5ê\U0004763b\x1fîú$ß\x16\U0005eb55\U000a0406\U000f890cf\x9d\x07^LZk', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004s
====================================================================================================
2025-09-18 23:56:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['Ä\U000dd5b4Å0\x8fnF\x1eìÑC', '?', 'Ó\x9a\U0005de82\U00109c20']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['Ä\U000dd5b4Å0\x8fnF\x1eìÑC', '?', 'Ó\x9a\U0005de82\U00109c20'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004264s
====================================================================================================
2025-09-18 23:56:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003867s
====================================================================================================
2025-09-18 23:56:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -98, 'password': 18377}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -98, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 18377, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003817s
====================================================================================================
2025-09-18 23:56:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003605s
====================================================================================================
2025-09-18 23:56:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['º*ª']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['º*ª']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['º*ª'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00379s
====================================================================================================
2025-09-18 23:56:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '   '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003589s
====================================================================================================
2025-09-18 23:56:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004008s
====================================================================================================
2025-09-18 23:56:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x19K𑿇\x82\tÌ\x05\x97m\x82\x98ö\x1fc\x1e\U000391c9Ï2\x88\x0f\U000edcfc\x9d\rR3+\U000bcf83b\U0005ebf3#úk\U00109b55\U000d69db\x1e³\x9fÎ8!-Z¹¤JebÌÊ\x99\U0007cbb16í®æIyHb𦝰\U00079bfa\U000a556e¹Þ¸\x9b\U000deb5dìJS\U00080e49´a¨\U00078255ä3\x9a_\x18§\U0004ccc7î\x1a\x86Æ\n±\x08\U0003986eaÐï\x02\U000a38b8\x96Ä¶|\x19P\x7fA6²\x97ÀÅß\U000cdcbdÀxK9\U000da136\x08ËÎ]\U000e4e4fH\x9aò\U000bc42eSÏPü&¬\U000c6adc\x97\x9bße^\x91L¹Qrë_\x04\x8cH\U00040b4fdZ£%÷àé²\U0007d693k\U000a90dfÌö\t\x10À¡g\x1cÿ´£ë\x94\U000549b9\U000ec832\x99ÒG\U0010d651ß2í;\U000e27ceó\U000b1452*j\n"j£\U000958abU@[kó=IXU_\x86\U00103365¬<,÷\U0006c8682\x0b\x0f𦇿\U000963d5\U00060ed3\x02\x94뮗ñP[\x98{~è]\x96È¢k\U00109801\x00¬lÏ\U00064fdcN\x9c\x8bh\U0003e871[c𗨥\U00035200y\x8c\U0010cfbc^;èO\U00056614\x95\U000c4c5dî\x0bÁXÃ¹\U0010be5b\x7f\U00094c1a\x8aÖdý\t³5\U0007e06b\x82Òý\U000920d50\U0008c603\x93ÜàW\U000def38¼Â\U000f2d0d¾ÿn\U0003e281Y\x11\U000cb1c1È\x96:N\x91é\xad=Ù\x80¯~𣬔É£\x8eµ.\x8cfW?\x1e\U00109c228&\U0003cfe3§y\x03\x86e\U00045addè¹0\x16v:Â¥xI\xa0¡\x94z"\x90&tÝ\U000ff0fa\x81mêñçÇ\U000858fcr\x8a\x81Ð³\U0003210aß\x96\x00\U000ebf7b\x15w\U000aa046\x1c\x9e\U00104153§b\U000f2999Í\U000f39b3\x9aµ\x01¿Ì\U000610a0\x18¨R\x13Ác\U000735caë;\x05*2\x1a¨É\U00067c7d\U000f8528\'G\U000aaf76c;\x8fðo·R¸¥\x8eù\námN\U000f2f1d¿\U000bc93fË{üÚ\U00033037𮐌Î\U000d1debü\U0006216f\x8e¬\x94\x8f\x08\x07\U000ec4a4µ\x01¥ês2Ü)\x83d\x1d1Ï𐅬\x9aå øÓ\U000a77ba7\'\x1b#\x8c·\U00104f2f\x06¥\x9cZ¿Ø½\U000164bb¢N\x042È\U000f20cb«𫎦öV\x00𨉜\U000d9223\x83I)[\U0006e7a6áãã\U00108119\U000b7e64\U00051b08\U00038a44\x9cv \U00097479IùI\x80\U000806e5½C\x1eÖ\U000848c5☜K\U00070ed0\xa0¤æ\U000dcd11\x81.\x05ùüâ÷\x04M\U00039ea5\U000f0458\x0fr\U00069fbbpÑ_í$\U00050090\x8c\U0009ece7î\U000ee2c2U:[¾\U0008f844\U00108828\x8dÜ\x17\x86\U00041a1có\U000f5714\x1e\x9b\U00059cbcZ«"*\U0008671f¯9ý\x80M\U000628e7ª\U000fce1bÿ\x84\x8d\x14Ø\x94\x07\x83\x8cÙ\x1c\U000851b6?\x89$\x93y\x94á4\x0b0a𫄲\U000dcc8fûÛ7¿<Çpê\U0009ca70àNÞ¾\U000d8563\U0008a5f01\x8d\U000424c6\U000584a5\x8dá\xadÇ\x92\x11\U000b23c8cÆ\x06£½\x04L\U0008ba0a¾ÜÖ%5\x05\x14xµ\U000bd0cb#Q*û@\x17\x1aÔ\x13½\x1f\U00056f7e©öQC\x86Ø\x9d\U0010bc1eeÆ\x1cç¡\U0007f184O\U0001ffc8ú\x01\U000fe675\U00019e55Baûòt¡Ó\U00088b9c\U00051942\x04𩴚&\U0007b31b𡱀¿\U000fe8a0å\U000577a2\x8b\'\U000d2c2e\U000564e0𘞵æ\U0005cd2b𪘊\x1fµ\U000c3104¸Öé\x96z\U000afacf<\U000ef7feÔLcO\U00016740\x81u\U000e8bc2R\'§\x90ã/¢\x9e|\x08DÚ#GD/)\U0007c88f\U00058b44v\x14·½ä\x8e\x8dä\x82Pª\x01\x861\U00040cc4ÜT\xadsçr\U000997d5\x89*Q»\x18cû@úË\U000331f8L»ã\U0009aa0bqY\U000ccf11\U000ac6d9\U0009ebf6\U000ae280Ò,Ð\x1bÜÍ¾ë\x9a\x17\x0eP\U00060d43V\x82[\x96\x86\x8d$\U000c014a\x03\U000a986aþ\U0003db3a]9\U00036352\xa0\x9cz\x13sY\x08\x98°ÂÍÖ\x1c\x05\U000e63cbrL®\U000b4d80\U00056e9d\U00069727+\U0006f63e¼¤i\U001075a8Q¼\x85\U0003fe07&d\U000bc98d\x18\x97Ê¼¸´\U000bc1da«x\U000dc41d6\U000e342b@\x9c\U000a9906\x91¸\x82\U00082145\x05Á\x16\U00046100\U00081c0d¬\tjNwSà\U000b1dd8"¼\x08\U000ed313\U0005ef1ev<©R\U000712f4%V´\x11\x8cû𨧭ð\U000bbf65®èú\x0fÃ\U000537df\x05Ë*\x16%EÒ\U0009759d;\U000b7aaf$5\U000c5682ú\x92\U0001c342\U000f9657Ú\x7fB\U000f5bff\x9bU²?Tä>Ë\x7fòÒ\x01^B\rV\U0006f265ë\xa0\U0004cecf\U000e2822h\x9bã\U00080365Ì\U000f6d53@𩡊\U000e2f6d(\x0el𡄙\x99\U000cdca7j\x19\U000a52c0ð\x129Í\U000afdddQ"\x1e/h\x81 \U0004cb92õ>\U000ff445\x0fíM\U000cf22e\U0007091b\x1di\U0008adfa6m\U00033240J9\x8e\U000907ab\U0003d699ó\x03\U0006bf06íA\n\x89\x86^×´\x13á\U0005167aW°b\U000c16e9«\x8e%¾R\U000ea15f®ÅÌ¼\U0008c979c"íúqá\U0010908a\x10¿\\ÛÓ\U000f2dca\x86\n÷\U00052725ý\U000acbb4@\x81\x9e⠔{ýo\x8f\x8dä_NR0\U000f72f3\U000e4398mõ¯K\x9eZà\x84c#Æ\x99\U000f12a7V6äª\x8d\U0005a9a8\U000ec960é@°æ\x01"\x8e?\x1aH\x11\U00040d75·ÈþAÖq\x11𧉆m\x93r\U0010720eÜ\n\U00109c8cÖÝÀúû\U00053c03\U00100721\U000bb297*\U000b4db3ÞÛ\U000c4edbäkT²𑆐\x8c\U00011fbdÿó¶p·p\U0005c0f9\U0010cecc\U0008eedc\x12j\x8b|=\U00044207q𧫼ÕÔn\x02\x1c¸R\x9e\x81\U000f8817\x04\U000efddc\U0007ffb8\U000eee22>\U00035839?06\x1b\U0004efc06Ä{\x96\U000f8e74\U00031815\U000b18aa\x8c2\U0004b382A\x18\U000907fd\x82_æ\x02×\U0006068dcjA\U0010bba6(9\U000d4f27x/\x1dph\x0f\xadRS𭻉a)IÌ\x8f\x16\U0008bbaaï\x0f\U0009d763´cS¾\U000c2710𰄅g𠞣\x1fÇ\x9a2©-\U000cdae50VU\U000ebb3bè\x820\U0009de1c𫦇\xa0®úô2æ8á\U000b5d18\U000c3427\x8e\x12\U000ab904².`\U00085933\U001091b3\x0f\x08ë\U000bb73e¸½É\x87H<𭑳"\x96Á*\x8e%_Î\n¸\U000f2f8b³«Ó\x02ßÓ\U0008b39a\U0004f2d6]\x01𑦪fÆ\U000d5310\x03Å-\U00033a86]¤©À±{\U00058f19ÿ5T:\x89Wg𘓼\x8awg³\U000f0ccb/\U000b7df1ß\U000ed2cbìTõ\U0008e278F\U000f7818ýc\U0003ebb95\x03H\x1f\x88ç°i\x06\x03\x1du\U000d91e6UÅ¯\U000a74eeÛ¼.ð/𭖝𨰩×\x15£\x16\xad\U0004f763\U000a01b1F\U0010439ef\U00068d0e\x9bß£ÈØÁõ(x»乂°\U000407fbH\U000be8b0y\U000c22c4\xa0uâätocï¿¾@\x99ÔÏ\x9bÞ\U0006e356gr\x98>\U000df982\U000b3d18T²\U00091a17樏¹W¸Bo\x8a㼳㚣\t\x88$ÞÛ\x1e\x98ÖÖ\U0005d497¬\x8eK\x07\x184Î\U0009e4fb¾\x80O¸\x0c,\x7f', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003807s
====================================================================================================
2025-09-18 23:56:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003829s
====================================================================================================
2025-09-18 23:56:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 154119465, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 154119465, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003552s
====================================================================================================
2025-09-18 23:56:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003841s
====================================================================================================
2025-09-18 23:56:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x00\x0e\U000afce2ã\U00069a7c÷\U000bf5ed\x93ªc\U000a7486\U00089a2bªv\x84òûuÄü\U0007df2d\U000e11bf\'R\U00078b34ÉÚ$\x93Õ\x04\U0007884eÐ\x96%®f\x8f\t±È/ÛK¤j\U000496b0@\U000949c23\x18áùÎ"áØ´ß<\U0007ee6d\U000fe2b1\x19üg\\Vr\U000a80a2~pC\x06xÞÚ¬`¥]{z\U0008132bÐ8ØÀÕ4ÚG%\x0f\U000df34c\U0001a9e4\U00071576\U000ecf2b!\x8aïÇ\U0009672d\U000ab195L\U00071b9a(¿\x9f»´£Ë&\x86Ìø¨O]\U00067aea]x\U000cb9e3\x93,4f\t\x00\U000380fb\U000f5ee2a kÅÃÏ\x06Ä\'Þ«\r»\U0001f6db\x9ah%\x1d\U0010ef96#\x1eå\x7fÄ\U0007314e鎐ïw¿\U000ea9fa\x06ì`Ihå\x8bA\x8b\x0fÙ?·\x98I\U000e005f\x88\U000a66a8fµf\U000b11cb\x10-:\x90\x0b!@\x9aü\x88Ërpó\x7fÌ¥\x9a/\U000b3b15v:Ç\U000554ee4Ã¤<\U000e4b51=\U000ff296½ñö\U000cd2a0ï\x9d2á\U000cf8d7î\U00052184\x06Ê\x91¡(\x81ðYØxT\U00042018\U000736c2;Qç\U000590b24©F<𠙰PR\U000c1e69\U00095846U¬l\U00014256ïç\x06\U00060cab\U00047810t\U00059ce1ã\U0009bfa3¬Ö\x99Î\x88Ç\U000d790aÙG\x01ü\r¥2\x1aZáÊ\U0008c751\U00065ad3-\x05\U000dd09fª_®2V½\U0008f631yÏ\t¸{"RÒ\U000b367e繬!ãîn \x02öh"\x1b§7\x8a]Ú´/d!Ôv\U000a061e\U000aeb6bÉ\xa0Êãñ;ì\x89nE\x0cÝâèÝ\U0009d81c\x06p0p\U000d0701s\U00049e73\U000e7ab0«\x82\U000bee7eðÍ~v×\rÖ\x831k¸=Õ\x1c\U0006bd1ef\U00067480ðW{YéÍã©|\U000811bc\U00109ad2WýOY\x1ex>:¼\U000b3d20=É¥;\x02ÿ\x94ﱴ¸§\x9aÜØ\U000b67c5\x19b\U00077a68h\x19¢\U000ab237\x91\x7f\x04\x19\U000b8c63¤\x9c\x8e\xa0\U0002f03a\x15\x85\x16\U000c8930\x90\U000defc3æ\U000e7d86ùµD\'¼\U00063d30êR𒆴\x86S\U0007f1f9Ã\U00055b8bÎN7\'ªè\x12lÖM\U000e1b99\U00050547\x927B¥ay\x0878í\x01²9â¢\x84Ù±\t\r\U0006f52aYþç§æ\x96f𩁉\x8b\x1aÞ\U001022eaO\x8aêç\x9c\x89\U001097cd\x16k\x99e\x14\U000eb803\U0009ad29ð)ñ¤XÀÞ\U000affdcj"ïÞ\x00æ\U000876d2\x07\U000f6d3dX»ÆøBá\U0004c169ª\x00u\nM:õ\'\x0bFÖ\U000a399b%¦\U000c8704ÔÂ\x95屠\U00032623óÿU凵\U000c6792\x17o06\x17ñ\x8e\x02ÇÑUÊ§\U0001a1af\U0001fc48ÑqãÃ\x06#*\U00103148𖥽iå\U0010c350ÇWÚ\x1c\x10\x03Zpu\x8aj𡛔\x9fF9\U00096677åÓÌ\U0001b768\U00039b81â\x93\nÕ\U00066f68Ê°\x88¾/\U0007880aX¤L¬\x8b\x91\x04\x0c& C\x06Ä5\x9a\U000809ffë\x80*\x1e\U000690f7\x9f5\x1d\x9aY쬵ÆuÔ𠖅¡ì8U\x06\x97\x01Q9\x19{\x8d }üA𡳬\x88Ø\U0007e719c\U0009d814qD"ÖG\x18iT\U00041a9f\U00062a16\U000ccf10I\x9c÷]PÅÔ礷\x9a\x0f]=ꈀi\tÃo\U000ae9737ä¬%Wì5\x1bác*>;\x8a\U000410e2³\U00046885&¦Ì\U0005823e,¢+\x1ag2\U000cc171©\U0010ec15V\x84\x90ï\x14~\x7f\U000737cbõÞH¤ç¸\rn\U0007c3e9/\U00041095\x8a\U00033ad0G\U000fb5d7\U000d3d29~\U000c5f87\x1e\x17@ê³j\U000c5d8eÝÞ¼\x92\U00099ad7\x10¡ý\x13\U000e4477\U0001b4e2ýø¹\x93=Î\U000429d99aèAD<\x99â\U00057417\x99¥\x13HÜ@6dÐ\x00´\U00016c3a\x97\\J\x1að\U000a56c9\x01çáßd\U000b2697ó\x13\U000fd396&G\U00031bd2\x85\U000c4d0a\U0001dbf18"¶ª\U000f19c2\U0005fac4ªK\U00065821ØÓ:\U000d90a1ö\x8cfÖS\x1d\x93î´t\x1e𭠐_©\x8c{-\x0f\U000def19Yú\x8c\x14\x89Ï\U000165ff¾¨3\x18.\U0004d491\x92}\U00059c4a\U000cb3be逅è%ÂÙÏu\x85¡\U000ca61b\x19\x97×ä~¢\U000f0958\x9a\U000d47f3\x12µ\U000d6582\x08è\U000c8acb\x02/\x19\x18|\U00087404&tÚöv\U000153ca\U000f8f36üTÏ\U00073159\x10Ã\x06ºË±Û,\x02§+äÜ\U000c0d93㺍\U000d2b1a\x13\U000eb658ì\U000d1a4f?äý3Wò%À3Þ)Rö\x1d\U0008dd4aJ[¥ü§ì\x8c\U00044f97\U0007b89dµ\x08»\x9e²·3øÍ\x17KùÆ\U000c33c8Z\U00041af2k{\x90\U00094b3fÒ𘀜äô¼\U0001943cK\x1b\U000a12f5\x0ejdùÏ\U000cbf30\x19}g]7\x84`0팃b\U00091a4b^öô\\𣮂ÑÂh-\x8d\U0004fe92:!f\x08Î_Âý\U0005d51f\x95È\U000d4210\U0003685bzóØL0\U00078d8eO\U00053236òÐ\x02ûÛ\r䙝üÿ\U000d6a50\U0005e6fd%𧡴\U0010a422\U000f50b8U\U00069064\x9eh\x1b\U000c673e\x07û¥MeÌaÕ\U000961d5\U0005de181\U000dc361Ⴞ\x1e\U000fedd2坁c\U00096980꺄`ô\U000e4ae3N\x8f\x88g¦\U0007e57c\x1dX)\tº\x95Ø*鎭𣫠h\x9e`\x96÷,\U00056c70w$Å¥\x82\U00077a61¶\\C"\x19\U000ac153¾\x88\U0004bc6c\U000b4d5c§\x93Mব\U000f7c81¯ö\'©\x99¦é\x08\U000861d3!\U0010d562+¨\x16r]x\x19\xa0\x12-A𧐖\x1d\U0004539fe Ïb¶\U0006e1fe\x17ï\U00097cb1\U00073e72i£î\U000d8562M\x86Ò\U000d39b5ï2f\U0010f667oÅ\x8b$\x90\x8c\U00059afc¦/k»\U000ae436ð\U00079d93ZÅÃz\x1c𗲑\U00091ede;ý¡\x11°\x12\x13\x9a¥Z\U00042b4b\U001049d3X7ý¶XÒ𰕃""úhJ\U0004a50aÒ\xa0÷k\U00109524\U000e044c\U00018cd7SÙ`\x0beæoÄ\xad\U000dd6ca\U000a7e14û \U000eb83e©ù\x85\\4É|\x0e\U000ac208\x16\x1d\U000de6c8]Í´çÛâêß\U0010fed5\U000b0810ß\U000fc0f1\U00048148>\U0010a977PJ\x0bå¤ò.\U00057d9c5\x0cÖ/UXt¬b÷{ÓÚ%¯+Y6f\U0010d474ke\x98EY\x15ÚÍ\x08 \U000a63fe½yt\x98aE\U000db359^GÞû\x9dP!\U000e32646\x8dvî𦷾®\x83»¦Gx\U00037877\U0009fb6f\U000f53ca', 'password': 87}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 87, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003992s
====================================================================================================
2025-09-18 23:56:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['£\U0007f6c9\x89']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['£\U0007f6c9\x89'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003915s
====================================================================================================
2025-09-18 23:56:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 'Ö\x0c\x1f\x1a\U000a5a8c\U0004e4bb\U0010c12a%Z?lù;¶ò\U000a9272àQ\U0009bfbb\x94*óò\x9e𗛏a\U000db567Â\x18ø\x96\x98\n\U00093c27Ï\x8eÊ\U0009f922\uf312\x9b#5Ü\x89hr£q\x1cS\\(Â\U000155a1\U0005795b\U000fcb672\x03o\x196\U000614fc,í\xad\x0b(\U000fd8bd¹\U000c7bd2¯ø鄚Ó^|5ÿùþRi\U000d4bcc𘃸XE\U000cd1906\U000c2409â¬\U0001558a\U0005f701Ü\x1dæ\x1ej\x9b\U000adf0b.~_æ\x95²ªù:\U0001ef7fÕ\U00061f96Ì4\U000a1b7a½\U000d1669<\U0005188b»Í\x07åV?5F±À\x84\tkU\x17\x8bÃ\t\x15>\U000badaeS1êê\U0005a71aw\U0008efccòà𩼒\U000ccc2d\x08\U000dc677Ã\x82°\U000ffef59\x90ÿ\\2\x13\x8e\x1c½\U0008e04b\U000e0bca𝖔\x1f\x02¿\x1cF\U000a65daö_!Ô\U000d6384흹\U00081e16\x8a\U00041200:ãn\U000f5bfd\x11þÿÉÅGdÌ𑀂q±¬\U000878b0\U0005cda1\nÙ¸\x8eõ3\U0007c409\x90L\xa0û\xa0\U0001c07e]íT\x1f𮄕À\U0009504bÒ¡Zø¼*E³\t\U0010bd73\U000d273cXÁ\x99\U0009792c\x97-æ\x14\x16\x1c}ÔÔ\U0006468c怸©𐧀\U0009d489Ãs\x19\U00089ff1Vë\x00\U000e4107>,[\U000e651cï\U000d2346áà5^\x1a\x86By\U00069f0e&\x0f\tR\x94\U000952a5ÿ$\U0010f1e4xâ+Å\U0009909bÞJúõ\U00012cc1\x02\x8a\xad1\U000e5dfa𘠵¡à\x7fa\x97\U00063383El<P/þZ\x98`X\x8f\x8b\U00079936Ê÷}\U000e0729\x0f+ÔÙ\x186²\x04W𨝅z:ã\x8fa|%æ\x90~N५-\x8c¦¥\x8e\x12\U00034487\U000bfc2e\U00047ffdn\x18µ\U0010ca9e\x8c\U0008b9f8\U000c5be1睔0\'\U000cc964Y\x80\U00048dfc\U00078578DÖ𬓏\U00098dce\x04\U00059093\U000e685dGdq¿\x14\x13÷\U000b75d7\x06v\U000812fb\x01³\U00048441¹\x0f\U000f6203Ø¶×Kí±\U00084602\x07\x8ehçÐ\x1amáç\x18\x15\x06ü\U0010d7f4¦^\U000ab589EÛµÅJ¨\x0c\r\x18(>\\\x82\U00054ca8\U0008eae8ä\x9a\U000842e4M\x14\x00±Ò\U0010d3bd\x97\U00068072¤æ\U000ffc29\U000f3d90*\x8d\x0f\U000b36e4\x0f\uf604\U0006db65\x9e\xad\U000cbc3e\x81\U00071c35\U00098527\x96\U0006a7bd\U0010e684¡çT84é.®i\x93(\U000ce329P䯮×k^\U00065e27ª\x17\x9d\x7f\x83\x96(_\U000bd7de\x08\U00108cfd\U000bfc61Ë\x1cÂBþÙ\U000882e4jª\x8eícê\x08Ò\x92\U0010d6c4dÚ!|\x1a²©\x1e\\\U0006181dn<\U0003cb8e\x02¡I6-";J3\x98Z\x94\U00067fa1Ç\U0008e1a5\x8c¢X\x1co¯\U00081a79Ö?\\\x8a\U00096bf0©Ì\x94\U000ce2f4£½\t\x81½R\U000b3ee6p&Àü¢>h\U00101b92\U000c240a\x80\x88𦭇\x1f\x1e;R\U00081593Ú\x92\x8a\x1d\x83®â÷¬\U0006b8ec\U000116eaÊC0\\\U0004a50aêN𞹡Htê\x9dì5l\t\x98𡝽e\U00075eb4o\U0005d7e6\U000e1a2dn\U0001ed50ï\U000b3f97ß\x03\x12ò\U00016779.\U000490ad\x86º\x11q\x10ÖN\x06\x14E«8Ò\xad\U000ac97e\x1d2_Nr¹À\x91\U000705f6\U0004cf67û^s\xad\rø0¡s\U0008dea9B+-\x13\x9bÎE\U000e9090Unþ\xadÔþÅ\x1dí奾¿\x96°ᓉ\U000fa102Ï\\Áãùþ\U0009efe6qâOÉ⫥$\x87rØëºn\x03PÁ\x80\U000800b0¢8½^\t\U000ca908õÛ\x935\U00062996\U0008287eÆ\U000e7d72#\x18~HÇ㿨,\x14Ot,Þ\x9b𢮻Ùv\x03(\U000e30de\x0ef\x98ë\U0009ce03\x9d\x93\U000ec24e\U000b38f4¨\x95Ð·\x9a¸x`ñ\U0006edd9\x13⬽+\U00093839\x9d1\U0005c633Íqü\U000d0be4©z\x7f\U001024dcZ\x02\x1b\U00081218ë+\U0004c391!²VÈÀ\U0010047c\x16í\x13\x05Mi\x9aÕï}Ý=Ç\x0b¸ý\x1cØë\x07Ø¦Ñ\x08,"x\x9cpil\U0010f584\x16¢\U000ded45°\x00𭧱\U0008fa07濷\x1c·2\U000b2ccd\U00073088\U000d651f\U00072fad\U00035818kK\x15#@Þ"¬}sÏ_\x9dj]vC9\U000bb209\x01¬ꢺø\U0006b38e\U0007976eõ\x19~f\\ü\U0003d5fe\U00083255\x14¢\x8dGùÒ9.UIv¸\t\U000af1f8Ôõ÷@¨\U00045d9f}`åÅ.¶ð°Ó¶\x16¸Oî\x15¿_\x98\x12ÅºÚ\x00Õ\U000d94fa"Ó8áµ|\r7Àr푛Eº\U000ddb96\x8aÜú\U00106345\x80é\U00083a47\U000e9e76hÐ\U001079aa2\U000ec7b0\U0009f235±\x11U\x17·Â£×ÙyÛ\x17¶[ì\x8b\x03Ð³\x1aÞ\U00080ae7Y\U000cc801\U000af175𬷠ò \x02𧾑ééÙÉ\x078\U0008b340𬣃\U00101fa9"=\x86®ea\'𫠻4\U000f82a0þRl\x95\\\x8c{ñú±,!ñdÎ\x7fÜ\U0005b3c7\x01ó\U000c4571¶%\x8bÆÕ'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 'Ö\x0c\x1f\x1a\U000a5a8c\U0004e4bb\U0010c12a%Z?lù;¶ò\U000a9272àQ\U0009bfbb\x94*óò\x9e𗛏a\U000db567Â\x18ø\x96\x98\n\U00093c27Ï\x8eÊ\U0009f922\uf312\x9b#5Ü\x89hr£q\x1cS\\(Â\U000155a1\U0005795b\U000fcb672\x03o\x196\U000614fc,í\xad\x0b(\U000fd8bd¹\U000c7bd2¯ø鄚Ó^|5ÿùþRi\U000d4bcc𘃸XE\U000cd1906\U000c2409â¬\U0001558a\U0005f701Ü\x1dæ\x1ej\x9b\U000adf0b.~_æ\x95²ªù:\U0001ef7fÕ\U00061f96Ì4\U000a1b7a½\U000d1669<\U0005188b»Í\x07åV?5F±À\x84\tkU\x17\x8bÃ\t\x15>\U000badaeS1êê\U0005a71aw\U0008efccòà𩼒\U000ccc2d\x08\U000dc677Ã\x82°\U000ffef59\x90ÿ\\2\x13\x8e\x1c½\U0008e04b\U000e0bca𝖔\x1f\x02¿\x1cF\U000a65daö_!Ô\U000d6384흹\U00081e16\x8a\U00041200:ãn\U000f5bfd\x11þÿÉÅGdÌ𑀂q±¬\U000878b0\U0005cda1\nÙ¸\x8eõ3\U0007c409\x90L\xa0û\xa0\U0001c07e]íT\x1f𮄕À\U0009504bÒ¡Zø¼*E³\t\U0010bd73\U000d273cXÁ\x99\U0009792c\x97-æ\x14\x16\x1c}ÔÔ\U0006468c怸©𐧀\U0009d489Ãs\x19\U00089ff1Vë\x00\U000e4107>,[\U000e651cï\U000d2346áà5^\x1a\x86By\U00069f0e&\x0f\tR\x94\U000952a5ÿ$\U0010f1e4xâ+Å\U0009909bÞJúõ\U00012cc1\x02\x8a\xad1\U000e5dfa𘠵¡à\x7fa\x97\U00063383El<P/þZ\x98`X\x8f\x8b\U00079936Ê÷}\U000e0729\x0f+ÔÙ\x186²\x04W𨝅z:ã\x8fa|%æ\x90~N५-\x8c¦¥\x8e\x12\U00034487\U000bfc2e\U00047ffdn\x18µ\U0010ca9e\x8c\U0008b9f8\U000c5be1睔0\'\U000cc964Y\x80\U00048dfc\U00078578DÖ𬓏\U00098dce\x04\U00059093\U000e685dGdq¿\x14\x13÷\U000b75d7\x06v\U000812fb\x01³\U00048441¹\x0f\U000f6203Ø¶×Kí±\U00084602\x07\x8ehçÐ\x1amáç\x18\x15\x06ü\U0010d7f4¦^\U000ab589EÛµÅJ¨\x0c\r\x18(>\\\x82\U00054ca8\U0008eae8ä\x9a\U000842e4M\x14\x00±Ò\U0010d3bd\x97\U00068072¤æ\U000ffc29\U000f3d90*\x8d\x0f\U000b36e4\x0f\uf604\U0006db65\x9e\xad\U000cbc3e\x81\U00071c35\U00098527\x96\U0006a7bd\U0010e684¡çT84é.®i\x93(\U000ce329P䯮×k^\U00065e27ª\x17\x9d\x7f\x83\x96(_\U000bd7de\x08\U00108cfd\U000bfc61Ë\x1cÂBþÙ\U000882e4jª\x8eícê\x08Ò\x92\U0010d6c4dÚ!|\x1a²©\x1e\\\U0006181dn<\U0003cb8e\x02¡I6-";J3\x98Z\x94\U00067fa1Ç\U0008e1a5\x8c¢X\x1co¯\U00081a79Ö?\\\x8a\U00096bf0©Ì\x94\U000ce2f4£½\t\x81½R\U000b3ee6p&Àü¢>h\U00101b92\U000c240a\x80\x88𦭇\x1f\x1e;R\U00081593Ú\x92\x8a\x1d\x83®â÷¬\U0006b8ec\U000116eaÊC0\\\U0004a50aêN𞹡Htê\x9dì5l\t\x98𡝽e\U00075eb4o\U0005d7e6\U000e1a2dn\U0001ed50ï\U000b3f97ß\x03\x12ò\U00016779.\U000490ad\x86º\x11q\x10ÖN\x06\x14E«8Ò\xad\U000ac97e\x1d2_Nr¹À\x91\U000705f6\U0004cf67û^s\xad\rø0¡s\U0008dea9B+-\x13\x9bÎE\U000e9090Unþ\xadÔþÅ\x1dí奾¿\x96°ᓉ\U000fa102Ï\\Áãùþ\U0009efe6qâOÉ⫥$\x87rØëºn\x03PÁ\x80\U000800b0¢8½^\t\U000ca908õÛ\x935\U00062996\U0008287eÆ\U000e7d72#\x18~HÇ㿨,\x14Ot,Þ\x9b𢮻Ùv\x03(\U000e30de\x0ef\x98ë\U0009ce03\x9d\x93\U000ec24e\U000b38f4¨\x95Ð·\x9a¸x`ñ\U0006edd9\x13⬽+\U00093839\x9d1\U0005c633Íqü\U000d0be4©z\x7f\U001024dcZ\x02\x1b\U00081218ë+\U0004c391!²VÈÀ\U0010047c\x16í\x13\x05Mi\x9aÕï}Ý=Ç\x0b¸ý\x1cØë\x07Ø¦Ñ\x08,"x\x9cpil\U0010f584\x16¢\U000ded45°\x00𭧱\U0008fa07濷\x1c·2\U000b2ccd\U00073088\U000d651f\U00072fad\U00035818kK\x15#@Þ"¬}sÏ_\x9dj]vC9\U000bb209\x01¬ꢺø\U0006b38e\U0007976eõ\x19~f\\ü\U0003d5fe\U00083255\x14¢\x8dGùÒ9.UIv¸\t\U000af1f8Ôõ÷@¨\U00045d9f}`åÅ.¶ð°Ó¶\x16¸Oî\x15¿_\x98\x12ÅºÚ\x00Õ\U000d94fa"Ó8áµ|\r7Àr푛Eº\U000ddb96\x8aÜú\U00106345\x80é\U00083a47\U000e9e76hÐ\U001079aa2\U000ec7b0\U0009f235±\x11U\x17·Â£×ÙyÛ\x17¶[ì\x8b\x03Ð³\x1aÞ\U00080ae7Y\U000cc801\U000af175𬷠ò \x02𧾑ééÙÉ\x078\U0008b340𬣃\U00101fa9"=\x86®ea\'𫠻4\U000f82a0þRl\x95\\\x8c{ñú±,!ñdÎ\x7fÜ\U0005b3c7\x01ó\U000c4571¶%\x8bÆÕ'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004374s
====================================================================================================
2025-09-18 23:56:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 'Êé\x18\U0010b845X\x91QÏM\x0c\x17|\U000ff5c6kJx\U0007c31c\x1e\x94擖\x91´zã\x8b\x07\U0010fc7c:T\U000c95c2\nv»\x93\x01ª\x1b\x86\x0c\x1b½\U00047816\U00108ca3\U00050bc2Ì22[f\x18=Çí\U0009f21f\U00093ebeÛ𨞹ÌÍ\x12É\U000ab02bI\U00011f81\x8f\x1d\U00038d3f\U00098110\U0001b859?3c\x14§û\x95\x8aà±\x915䙱-\x97tø[\U00063a58\U0008bb92{Øö/\x05\x9fÞ¶ôÖX\U00097492½\x0e\U0002f6e9\U0007ae4a𠨢4;\x9f=äÿ\U000c9679G\U000e652b\x8dÆ\U000ac84d\x17Ð»\x99\\\xa0ãÙY§\U00104d9f\U000a6a4f/\x0fçfè+r«)\U000fb314\'"q𧓲\U0005cfe6\U0009a9d7Í\x94¿\x8c\x8e\x99¾\x15𰰻¸{¬Ãþv\U000e90ecæ\U000cd86djæ@Õ\x97\r\x03O²Õ𣖓ª\U00109664+\U0009aaf3c¸\x0f\x15(*³Ò¢G報\U00051218pJH\U0003e955\tÑ\x93e\x98tp\xadM\U00077d2d\U00034a1d\x8d\U000abd82¼\x9eV\U000d4906¡m\U00058e2bUÑ|è0)æË\U00059f0eS\x9fù\U000c49cfê\U000debc5/ñnü\x06齇z\U0007a68cg\U0007f01f\x16,W\x00à\U000ab541Ú\x0fáåG\U00080be3&𡏬\x01\x1e\U000d2641\x8d÷\x93\U00088f1bDk\U00065c8a~\x00`\U00067735\x8a\U0002fd87\x08\x90[Ñ\x96è!ï\U00059f8dÚ¡\x91:n\U0004121e\x13Õl\U00014217®©\x8a+\x1e\'î5\x80\U000ad398\U000c36a7;ñ½h\x17A\U0008cdccÌ2\U000ad1ce\U000440c4*úZ@\U0005a5f9ë\U0004139a\x8cìù\U000ae8f3\x15\x83~\U000f2c24ñ\U0010ca8e¸\x99o\x0eø\U0010e4d8\x85\x1c¿wvD\xa0ÍÏçX\x07\x8aî\x9d\x8f\U00053360~²\U000411cai«\U000a3762îç\x89u\x1e×\U000369a5¾kÜÂ\x9bt{\U000bc593\t&Ì£·\x0f\U00042b1c)õct$𠧧¨V\U00104aa3\x9f\\Á\x87À¤\x97@UÑ\U0004820b\U0006fab2O-KÚB\U0006c5faOmÈ4\xa0\U000ad564úy@\U000d9ecc\x98Ayá\\\x02\U00086fe2?tå£\x0e.í\x9fáÃÃP\x95\x1f`𭳾f|<ºê\U00052fc6y¬Î)wâÄû¤\x86Æf(\U00012e64\t¾ª\x1c\x96\x99\x8f*\x84\x0c\U00037f31\U000b4928]\x96ÝØ\x02\U000d88a8ÂæÜÅ\x84_h\U000d8c97\x1cï.風J¾\ná\x81\xadÏ\x02¯\U000a5b1a\x91B?\U000be167:©W6ÂÔz\U000d9174:\U000c300e³\U000a5546\U0010d9e5\x0b\x80ó\x8b¶Z̽2\x85²\x1aÀ\x08\r\'\x1b#q\x95\U0001963fÄ¿Õ¾Ø\U000acaacÎv©\x05©\x04¸°\U00107644$\U000f99ca\x94\x88\x996½êJz¥z\x93b\U000801eb\U0009c11aP\U000eda81𣈻Õ\x88øj\x9a\U000c7cd7\U000f769fÝ\U000756327"\x8f\t(Å½1Ò\x00.\U0004d354Á6𪧞è\x12\U00104071\U0003976d\nò¨\x949»o\U0006e53eé¿Ê\x11ms.éG°v½\U00108cb2öÉ\U00079c43~\U000505c9\U000a811dÎ:¶ì\U000d7242K\U0001464fÃû\x11G¥\x94\x91\x98\U000a8113\U000f4544\U000a413b𧯳\x94¥\x88©\x8a\U0005e9eeþþCa\U000f99bc\U0006ae37𢯘ꖤ\\\x1f\x1f÷D:\U0007aeceJé\U0003e949\x01ºÉ\x12\U0002ef6f\x12\x16Ö\U0004f480辭,ª\U00082c0f½Ê<\x16\x8fL¹Ç`鎔\U0004d091í¢`𣆘\U000f7c96\U00076d75B¹\U000f7e6b\t\U000eeffd\x8a\x04\x17\x19Î\U000b6a44WþFµúè𥯴f\U0009c275\U0001c3b3~\U0006b0c3l¡?\x9d\U00097fbc\U00097ca9ýÓ²\x15³ï9%\x9cÀ\x03Wo\x8b?\U000403f6¡´6|D\x81¸:\U0003b3cbO\x1d𘳐¡\x1a)\x19\x9fZì2ð\x95§éqE\U000b4a49Ù_5ñ.P\x90¸ë𣩖6Ø\x02\'\x8d¼µ£ÁÉÍ\U000fe55bR\x12X\U000c3109é\x85\x97r\x80,2\U000a1b069é\x08[S)X\U0003875a}\U0003213e\x94¾\x18ÄXì¦\x9c\x91þ9\x0b\U000f3cd9lÚ\U00094c19\U0007df7fä2@P\x14\U000ca1e5Ë\U0006001d\xa0\x8c?>Ô\U0007e8b4ì"T\x1a\U000bdba5\x13U\x14\x08𮂐\x93\U000ec5d4;緾\U000c6de9\x14k£\\\U000bd7238\U00068d4b\U00101b7d\x17\U000b7625Õ\U000afb78ÄÛ\x92³1\rªi\x94ë\U000b9e3c\x85â\U000d10ba\U000dc475\x87\U000713cfÅ\x15\x8ftbÌ\x1c\x18Î\U000afacdÄ\x84\U0003e749>\U000f53d4\t\x1fa¡켾ÒO\x9a\U00054d5f\x83ÎD(K\U001007b7Ã\x03ÞçÏ\x8eTé\r¾\x1eH\U000516a8J\U000ca0fb\x98¼RûÔt\n\U00100fc7\x0e{\U0007def1\x02WV\x1b\U00081b99\U000b3f6f\U0007a9d6f\U000e1010»p*\x16\U000dd50e\x8bQ*\U0001b771Óõ8üÉ\x92&8¦¦\x8b\x85ÿ\U000f4d5cÎ4\x80\x10\U00096940ªhXl{\U0009190b¦ÍNÀjÆþ¦\U000d0010\U000a79a5Ú®\x81ë6\U00080c1f\x8f\U000b89d2\x87J\U000b5bf4\U0006655fꁤ¬\x9dÛ\U00042bc6ï\U00078b4cé\U000ab825\U0007be74\U00015f73Í\U0005274fù1ú\x816?\x1c\U00056e35c\x94k\U000f606d\U00043460+k³\x05\xa0l¿v¯\x18\U000a66db?¢æ\U000f4d260þ\U0010a653õ\x8ez]\x0fAC\x8e\U000ff013U\U000db818\U000d317e\U00049da7é\U00042943\U000ff481iP×ÏT¨\x89Ð;\x93\U00093d64ø\U000e3fc9\U000316b5\U000ab004\U000a890a\U000eb080\x90Ã©1]M)+Ò]\x14zí®\U000f0c45CÛ\U00016e15\x9a\xa0¤´ò\U000e1dc0\x16/\x8fqq\U000ca658\U000d6e4f\U00038b02Ü%\x1b\x1cÕ\x95 õJ\x0b\x05\U00046de2\U0006fd47Lú\tP;\xad\x89g\x96¶𫼞\x15O\U0009cb94\U0008d404\x90°6Øk¸%\U000c550f2$\x17穴L@\\0æ\U000d0ce3fý\x9cS\U0010987b=²\U0007f1a2|%6¥\x1dº\x1cZ3\U00048c25bAë\x03ÄÖå«\x0bª𑘘è[ã\x9a\x8b@× òÿ¯\U0006b083\x18\t\x9c©𦽽'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 'Êé\x18\U0010b845X\x91QÏM\x0c\x17|\U000ff5c6kJx\U0007c31c\x1e\x94擖\x91´zã\x8b\x07\U0010fc7c:T\U000c95c2\nv»\x93\x01ª\x1b\x86\x0c\x1b½\U00047816\U00108ca3\U00050bc2Ì22[f\x18=Çí\U0009f21f\U00093ebeÛ𨞹ÌÍ\x12É\U000ab02bI\U00011f81\x8f\x1d\U00038d3f\U00098110\U0001b859?3c\x14§û\x95\x8aà±\x915䙱-\x97tø[\U00063a58\U0008bb92{Øö/\x05\x9fÞ¶ôÖX\U00097492½\x0e\U0002f6e9\U0007ae4a𠨢4;\x9f=äÿ\U000c9679G\U000e652b\x8dÆ\U000ac84d\x17Ð»\x99\\\xa0ãÙY§\U00104d9f\U000a6a4f/\x0fçfè+r«)\U000fb314\'"q𧓲\U0005cfe6\U0009a9d7Í\x94¿\x8c\x8e\x99¾\x15𰰻¸{¬Ãþv\U000e90ecæ\U000cd86djæ@Õ\x97\r\x03O²Õ𣖓ª\U00109664+\U0009aaf3c¸\x0f\x15(*³Ò¢G報\U00051218pJH\U0003e955\tÑ\x93e\x98tp\xadM\U00077d2d\U00034a1d\x8d\U000abd82¼\x9eV\U000d4906¡m\U00058e2bUÑ|è0)æË\U00059f0eS\x9fù\U000c49cfê\U000debc5/ñnü\x06齇z\U0007a68cg\U0007f01f\x16,W\x00à\U000ab541Ú\x0fáåG\U00080be3&𡏬\x01\x1e\U000d2641\x8d÷\x93\U00088f1bDk\U00065c8a~\x00`\U00067735\x8a\U0002fd87\x08\x90[Ñ\x96è!ï\U00059f8dÚ¡\x91:n\U0004121e\x13Õl\U00014217®©\x8a+\x1e\'î5\x80\U000ad398\U000c36a7;ñ½h\x17A\U0008cdccÌ2\U000ad1ce\U000440c4*úZ@\U0005a5f9ë\U0004139a\x8cìù\U000ae8f3\x15\x83~\U000f2c24ñ\U0010ca8e¸\x99o\x0eø\U0010e4d8\x85\x1c¿wvD\xa0ÍÏçX\x07\x8aî\x9d\x8f\U00053360~²\U000411cai«\U000a3762îç\x89u\x1e×\U000369a5¾kÜÂ\x9bt{\U000bc593\t&Ì£·\x0f\U00042b1c)õct$𠧧¨V\U00104aa3\x9f\\Á\x87À¤\x97@UÑ\U0004820b\U0006fab2O-KÚB\U0006c5faOmÈ4\xa0\U000ad564úy@\U000d9ecc\x98Ayá\\\x02\U00086fe2?tå£\x0e.í\x9fáÃÃP\x95\x1f`𭳾f|<ºê\U00052fc6y¬Î)wâÄû¤\x86Æf(\U00012e64\t¾ª\x1c\x96\x99\x8f*\x84\x0c\U00037f31\U000b4928]\x96ÝØ\x02\U000d88a8ÂæÜÅ\x84_h\U000d8c97\x1cï.風J¾\ná\x81\xadÏ\x02¯\U000a5b1a\x91B?\U000be167:©W6ÂÔz\U000d9174:\U000c300e³\U000a5546\U0010d9e5\x0b\x80ó\x8b¶Z̽2\x85²\x1aÀ\x08\r\'\x1b#q\x95\U0001963fÄ¿Õ¾Ø\U000acaacÎv©\x05©\x04¸°\U00107644$\U000f99ca\x94\x88\x996½êJz¥z\x93b\U000801eb\U0009c11aP\U000eda81𣈻Õ\x88øj\x9a\U000c7cd7\U000f769fÝ\U000756327"\x8f\t(Å½1Ò\x00.\U0004d354Á6𪧞è\x12\U00104071\U0003976d\nò¨\x949»o\U0006e53eé¿Ê\x11ms.éG°v½\U00108cb2öÉ\U00079c43~\U000505c9\U000a811dÎ:¶ì\U000d7242K\U0001464fÃû\x11G¥\x94\x91\x98\U000a8113\U000f4544\U000a413b𧯳\x94¥\x88©\x8a\U0005e9eeþþCa\U000f99bc\U0006ae37𢯘ꖤ\\\x1f\x1f÷D:\U0007aeceJé\U0003e949\x01ºÉ\x12\U0002ef6f\x12\x16Ö\U0004f480辭,ª\U00082c0f½Ê<\x16\x8fL¹Ç`鎔\U0004d091í¢`𣆘\U000f7c96\U00076d75B¹\U000f7e6b\t\U000eeffd\x8a\x04\x17\x19Î\U000b6a44WþFµúè𥯴f\U0009c275\U0001c3b3~\U0006b0c3l¡?\x9d\U00097fbc\U00097ca9ýÓ²\x15³ï9%\x9cÀ\x03Wo\x8b?\U000403f6¡´6|D\x81¸:\U0003b3cbO\x1d𘳐¡\x1a)\x19\x9fZì2ð\x95§éqE\U000b4a49Ù_5ñ.P\x90¸ë𣩖6Ø\x02\'\x8d¼µ£ÁÉÍ\U000fe55bR\x12X\U000c3109é\x85\x97r\x80,2\U000a1b069é\x08[S)X\U0003875a}\U0003213e\x94¾\x18ÄXì¦\x9c\x91þ9\x0b\U000f3cd9lÚ\U00094c19\U0007df7fä2@P\x14\U000ca1e5Ë\U0006001d\xa0\x8c?>Ô\U0007e8b4ì"T\x1a\U000bdba5\x13U\x14\x08𮂐\x93\U000ec5d4;緾\U000c6de9\x14k£\\\U000bd7238\U00068d4b\U00101b7d\x17\U000b7625Õ\U000afb78ÄÛ\x92³1\rªi\x94ë\U000b9e3c\x85â\U000d10ba\U000dc475\x87\U000713cfÅ\x15\x8ftbÌ\x1c\x18Î\U000afacdÄ\x84\U0003e749>\U000f53d4\t\x1fa¡켾ÒO\x9a\U00054d5f\x83ÎD(K\U001007b7Ã\x03ÞçÏ\x8eTé\r¾\x1eH\U000516a8J\U000ca0fb\x98¼RûÔt\n\U00100fc7\x0e{\U0007def1\x02WV\x1b\U00081b99\U000b3f6f\U0007a9d6f\U000e1010»p*\x16\U000dd50e\x8bQ*\U0001b771Óõ8üÉ\x92&8¦¦\x8b\x85ÿ\U000f4d5cÎ4\x80\x10\U00096940ªhXl{\U0009190b¦ÍNÀjÆþ¦\U000d0010\U000a79a5Ú®\x81ë6\U00080c1f\x8f\U000b89d2\x87J\U000b5bf4\U0006655fꁤ¬\x9dÛ\U00042bc6ï\U00078b4cé\U000ab825\U0007be74\U00015f73Í\U0005274fù1ú\x816?\x1c\U00056e35c\x94k\U000f606d\U00043460+k³\x05\xa0l¿v¯\x18\U000a66db?¢æ\U000f4d260þ\U0010a653õ\x8ez]\x0fAC\x8e\U000ff013U\U000db818\U000d317e\U00049da7é\U00042943\U000ff481iP×ÏT¨\x89Ð;\x93\U00093d64ø\U000e3fc9\U000316b5\U000ab004\U000a890a\U000eb080\x90Ã©1]M)+Ò]\x14zí®\U000f0c45CÛ\U00016e15\x9a\xa0¤´ò\U000e1dc0\x16/\x8fqq\U000ca658\U000d6e4f\U00038b02Ü%\x1b\x1cÕ\x95 õJ\x0b\x05\U00046de2\U0006fd47Lú\tP;\xad\x89g\x96¶𫼞\x15O\U0009cb94\U0008d404\x90°6Øk¸%\U000c550f2$\x17穴L@\\0æ\U000d0ce3fý\x9cS\U0010987b=²\U0007f1a2|%6¥\x1dº\x1cZ3\U00048c25bAë\x03ÄÖå«\x0bª𑘘è[ã\x9a\x8b@× òÿ¯\U0006b083\x18\t\x9c©𦽽'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003986s
====================================================================================================
2025-09-18 23:56:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003775s
====================================================================================================
2025-09-18 23:56:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00435s
====================================================================================================
2025-09-18 23:56:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003641s
====================================================================================================
2025-09-18 23:56:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '\x1dí\xa0±\U00104e18\xa0\U0006cb55\U0007405d𣣘\x9fP\x9c\x01E\U00048c52d\x1f}\U00093eeb\x8d©\xa0v¬\x0b\U000571c9«/2\U000eae79¼\U000708e7=¾P\x8b\U00055a77X\x9c\U0005741aN\U0004b1b7é§\U0003688eÞîÙâ\U00103efd\U0009b8af\x93\U000e13c8N¼r\U001071d9 \U000bc7565o\x10b\x87|𒔰\x8c½NÔýyÚd@ºa\U0004cdc6\x04S>6r§\x06T\x03\U0009fd34¹R\x0c\x93Úu\U000511a4ÈX\U000b86f9±²Oô&Íçz\U000dc6ac2ãè\x1aÍø¹\U000f38bbk\x9c³Q\x06\U000b67a4\n\x1d¿\x9e¹\x0c𝡁\U0006a623\x93|\x98\x80\'¾H\U0005a81b©\x02\x0bÖ\U000acc56Ó\U00040e8c𘧙7\x1c¹õKÒ\U00090485ü0ꖗ\x88Ï\U0009d263P\x0c\U000330e8/K;\U00014ddc\x02\U000c39a7\x18Ü\U00058428T,r\U000e0825\U00070700Þ½Lì\x9aÖò\U001020f2,!k¯ïõs\U00095502\U00046b6f𓏭eaØ\x01û¿.\U000ae874\x87\U0005295d\x0e\U000e1283¯Ø\x89\U000b6331O\x86t\x86\x82\r=\x13g\x17{\x1d\x8cT9Dô\x8a\x8bæ𓎰Ù9î\u24557Óî¼\rÛ\x0bß4\x9b\U0010828e[áù\x1c\U00071f77Íw\x9fBÃ\x1c¡\x9fç\x18\U000d7450æ\U000f16b6\U00101effQÿ\x9fi\x19uû\x18\U0001420e=\x9a\U00050b31\U00108327ca\U000de8cd¤Éü÷éê\x07\x1e\U0007b66d\U000e6639\U000766d9\U00095bba£ÓcØ\U00107468~¹\U0005551c:\x12h\U00055ac3«\U0008970b£v¼ \x00ÿR\U0008f915ýÑX\r~\U0001b566\U000f1d4a\U000f63aeNø\x94\x0e\U0010a333J\U00109fd6±\x87\U000c8897\xad\x95ð\x11\U000da96eþøã\x86\x18\x86\xa0\x10<ø!O8\U000e1e35\t\x9d\x02\U000f7402Å\x97è\x91OVçæº¢\x1a\x15\U000c39e3|\x82\x8bJ\U0005f812\x02ÝN=Õ^H\x8eg°L[<ü µ[®£\U000a7aae\U00019115\\?~ý¹öËÍ\x93\x92°ð\x99}\U000ebae2\x8b\x9fP\U000df36füR*\x9b\x0e\U000e2e3e¸´íAd~-\U00057806\x82çbh\U0005f4c6-7\x11\U000ebc91û[\x1a\U000b887e4\U00098d9al\x9daeÀÞþ\x96¯!\U000f8977ä¼¹Ç\U00052200É¡Ç\U0010fb96³\x05ÂlÇ)\x08*ÆÀ¶µa\x14"\x1a)N\U00055700ï\x05C#\U000bea1c𡷛o\x19\x9cL¢©*\U0007c8da\rÇè\x17\x80Ï,6\x9f𘛌\U00059d10Ì澼m\x90\x96N\U0003579d\x11\U000982a8H\U00015244÷\x8fùj\U000c7111\U000bc614W09\x17pucî9«7\U000c8bf8½Ü\x08\x02èM\x02Û{\U00069d75\x146â½o\x99\U00031e16\U0006ca61\x86$\x1a\U0006c83cA\x9b\x8b\n\x15ay)\xad\U00013b07\U000369d0\U0008cb0d>\x89>T\U000a3895ØCÄ±©Ã\U00069494\x04MÝüÙ-Y¼g\x80`çÅ/´h\x07Ap\U000d879d)\x98\U000b717b\x1fã\U00051f50þ\U0001b957\U0006c6068â\U0003efffè\n4\U0009540c\x17\x10²U\x13\U00055df1h¬\U000c4719/\x88U¹"Ú\x9a\x08CmYbú,G5X¹òµ¾\x90Lf\x93øn"+%à\x84\x90\x84iÎ\x8b?·¦\U000f9698\U00094168àA\x82\U00075254\x14?\U000ed3dbcë\U0009ab00\U0002f77b?\x0b\U000d9d48\x84\U00060d18O7¯T¡JÂö»\x1dN"\x02¶¸{\U0010eb92SÅ\U000f107dÌ(u\x95!h\x0bP¹2\U0009a22d\x93\U000c5075åX\x8cTÁ\x83\x81s&¬ýþ\x8eåÐ\x98\U000e9579{\U000ba04b\U00105e342Í7\U00011e96ÏH\x10dÈ¶í¡`\x9c\x85PÇï\x19mÇë\x99\x83,\U0008a553\x16P\t\U00101812¦\x1b\x08Ì|é"ò\U0008e5b1TËbðÎ=\x82\U000dd6e9\U0008e131½Zq\x03*Ï\U0006e303\U0009ee16\x03ÛÁ\U000d212c\x96©\U000dc054\x07d\U000bfd43\U000a89d2p\xad§wTv£\x13ëh\U00044a02\x88\U000dfd3cB\U000cf4c1\x9dy\x9d`\x83\x0e亴\x89\U00071834\x8cÞ\x11\U000b89c8¦\x16×\U00052d10Õ\x16cFßCfDHØè\x86\U000c80e3\x93\U0005b6a9\'ÕE\U00070994\U00014a83\x87\U000bd027\x16\x8cÚì&\U00096f3d\x05\\QavᓘÀEBô\U000736f9Î\U0007a8a9\U000a2d5c\x16\x83\U000c68faøµñÖ儱\'!;Û\U00103b05\x04ðj\x9f´TP\x80û\x02\U0009c0ff©\U0001a810áw`\U000c26c0ù¸TÞ\x883r\U0001c89cÕ\x01\t\U000f1340ÆUØ¼©p\x83ÃæØ,\U0010299d\x1fK\x1aAZ\U0008ce2f\U0007f187\x05n\U0008dab7K\U000c5e08c®\U0005d369\x9a\x07\U000601f8\U00096359|\U0006e4f6q\x05D\x98\x0fD<K0\U0005f6c7\x14\x93\U000b27af\U000f6ca3aØ\x9au\U000f28f2\x18i\U000dd77d:\x1c\nó\x18\U000fff57l\x86`}ðÑ\x16\U000e1eb4\x82³\U000e5e7c䌰P\U000f68b3oîs\x01"`\x0f¨\x96Ô\x05v\x98ìLH%\x93¨\U00080040y\x171W\x14r\x97\U0006331a\U000c2b97\x84\x1f\x0fÜ%ß><\x01=:Óì~¤2¢AÖIâ\U0001fe95ó(LÒz\U00081717©FÄ\x97\U000e4170ô\x94G®\x81k,\U000fa83aä\x11Ðç?9\U000d2318\t\U00100556\U0010a5b1\x04Ê(\U000547c2\x10ì\x08ð𨀙\x15\x04\nö\x8a§mák🬬7\U0004dabc\U000e8605ýùç\x00\x9d\x12z\x11\x83\xa0\U000a14db\U000509b6£C\x17\x92ÃÈs\x8f¥Î\U0006a541\x85±\x17\x04\U000449ea\x9e>lJm=\x1a:\U000d1a87\U00056d7aw\x1d둎°<\x97\U0002fc13Ù?\x17\rSÎl[\U0007d650U=;\x9c½\xad\x08A\U000865b2?S\x9dÁ\U00050b07×ð\U000a9b28ÏVÕÙ拹Ç\U000e5248ÃÉ#:\x07¾üÓµ<\U00084c79\U000b1841ó𮋟\U000565e8¶\x0b칗>ï\x9e,Ú\U000cc90c\U000556b3\U00048c5e\U000a4bd9\U000a8a75,§\n\U00099770Ý/£'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '\x1dí\xa0±\U00104e18\xa0\U0006cb55\U0007405d𣣘\x9fP\x9c\x01E\U00048c52d\x1f}\U00093eeb\x8d©\xa0v¬\x0b\U000571c9«/2\U000eae79¼\U000708e7=¾P\x8b\U00055a77X\x9c\U0005741aN\U0004b1b7é§\U0003688eÞîÙâ\U00103efd\U0009b8af\x93\U000e13c8N¼r\U001071d9 \U000bc7565o\x10b\x87|𒔰\x8c½NÔýyÚd@ºa\U0004cdc6\x04S>6r§\x06T\x03\U0009fd34¹R\x0c\x93Úu\U000511a4ÈX\U000b86f9±²Oô&Íçz\U000dc6ac2ãè\x1aÍø¹\U000f38bbk\x9c³Q\x06\U000b67a4\n\x1d¿\x9e¹\x0c𝡁\U0006a623\x93|\x98\x80\'¾H\U0005a81b©\x02\x0bÖ\U000acc56Ó\U00040e8c𘧙7\x1c¹õKÒ\U00090485ü0ꖗ\x88Ï\U0009d263P\x0c\U000330e8/K;\U00014ddc\x02\U000c39a7\x18Ü\U00058428T,r\U000e0825\U00070700Þ½Lì\x9aÖò\U001020f2,!k¯ïõs\U00095502\U00046b6f𓏭eaØ\x01û¿.\U000ae874\x87\U0005295d\x0e\U000e1283¯Ø\x89\U000b6331O\x86t\x86\x82\r=\x13g\x17{\x1d\x8cT9Dô\x8a\x8bæ𓎰Ù9î\u24557Óî¼\rÛ\x0bß4\x9b\U0010828e[áù\x1c\U00071f77Íw\x9fBÃ\x1c¡\x9fç\x18\U000d7450æ\U000f16b6\U00101effQÿ\x9fi\x19uû\x18\U0001420e=\x9a\U00050b31\U00108327ca\U000de8cd¤Éü÷éê\x07\x1e\U0007b66d\U000e6639\U000766d9\U00095bba£ÓcØ\U00107468~¹\U0005551c:\x12h\U00055ac3«\U0008970b£v¼ \x00ÿR\U0008f915ýÑX\r~\U0001b566\U000f1d4a\U000f63aeNø\x94\x0e\U0010a333J\U00109fd6±\x87\U000c8897\xad\x95ð\x11\U000da96eþøã\x86\x18\x86\xa0\x10<ø!O8\U000e1e35\t\x9d\x02\U000f7402Å\x97è\x91OVçæº¢\x1a\x15\U000c39e3|\x82\x8bJ\U0005f812\x02ÝN=Õ^H\x8eg°L[<ü µ[®£\U000a7aae\U00019115\\?~ý¹öËÍ\x93\x92°ð\x99}\U000ebae2\x8b\x9fP\U000df36füR*\x9b\x0e\U000e2e3e¸´íAd~-\U00057806\x82çbh\U0005f4c6-7\x11\U000ebc91û[\x1a\U000b887e4\U00098d9al\x9daeÀÞþ\x96¯!\U000f8977ä¼¹Ç\U00052200É¡Ç\U0010fb96³\x05ÂlÇ)\x08*ÆÀ¶µa\x14"\x1a)N\U00055700ï\x05C#\U000bea1c𡷛o\x19\x9cL¢©*\U0007c8da\rÇè\x17\x80Ï,6\x9f𘛌\U00059d10Ì澼m\x90\x96N\U0003579d\x11\U000982a8H\U00015244÷\x8fùj\U000c7111\U000bc614W09\x17pucî9«7\U000c8bf8½Ü\x08\x02èM\x02Û{\U00069d75\x146â½o\x99\U00031e16\U0006ca61\x86$\x1a\U0006c83cA\x9b\x8b\n\x15ay)\xad\U00013b07\U000369d0\U0008cb0d>\x89>T\U000a3895ØCÄ±©Ã\U00069494\x04MÝüÙ-Y¼g\x80`çÅ/´h\x07Ap\U000d879d)\x98\U000b717b\x1fã\U00051f50þ\U0001b957\U0006c6068â\U0003efffè\n4\U0009540c\x17\x10²U\x13\U00055df1h¬\U000c4719/\x88U¹"Ú\x9a\x08CmYbú,G5X¹òµ¾\x90Lf\x93øn"+%à\x84\x90\x84iÎ\x8b?·¦\U000f9698\U00094168àA\x82\U00075254\x14?\U000ed3dbcë\U0009ab00\U0002f77b?\x0b\U000d9d48\x84\U00060d18O7¯T¡JÂö»\x1dN"\x02¶¸{\U0010eb92SÅ\U000f107dÌ(u\x95!h\x0bP¹2\U0009a22d\x93\U000c5075åX\x8cTÁ\x83\x81s&¬ýþ\x8eåÐ\x98\U000e9579{\U000ba04b\U00105e342Í7\U00011e96ÏH\x10dÈ¶í¡`\x9c\x85PÇï\x19mÇë\x99\x83,\U0008a553\x16P\t\U00101812¦\x1b\x08Ì|é"ò\U0008e5b1TËbðÎ=\x82\U000dd6e9\U0008e131½Zq\x03*Ï\U0006e303\U0009ee16\x03ÛÁ\U000d212c\x96©\U000dc054\x07d\U000bfd43\U000a89d2p\xad§wTv£\x13ëh\U00044a02\x88\U000dfd3cB\U000cf4c1\x9dy\x9d`\x83\x0e亴\x89\U00071834\x8cÞ\x11\U000b89c8¦\x16×\U00052d10Õ\x16cFßCfDHØè\x86\U000c80e3\x93\U0005b6a9\'ÕE\U00070994\U00014a83\x87\U000bd027\x16\x8cÚì&\U00096f3d\x05\\QavᓘÀEBô\U000736f9Î\U0007a8a9\U000a2d5c\x16\x83\U000c68faøµñÖ儱\'!;Û\U00103b05\x04ðj\x9f´TP\x80û\x02\U0009c0ff©\U0001a810áw`\U000c26c0ù¸TÞ\x883r\U0001c89cÕ\x01\t\U000f1340ÆUØ¼©p\x83ÃæØ,\U0010299d\x1fK\x1aAZ\U0008ce2f\U0007f187\x05n\U0008dab7K\U000c5e08c®\U0005d369\x9a\x07\U000601f8\U00096359|\U0006e4f6q\x05D\x98\x0fD<K0\U0005f6c7\x14\x93\U000b27af\U000f6ca3aØ\x9au\U000f28f2\x18i\U000dd77d:\x1c\nó\x18\U000fff57l\x86`}ðÑ\x16\U000e1eb4\x82³\U000e5e7c䌰P\U000f68b3oîs\x01"`\x0f¨\x96Ô\x05v\x98ìLH%\x93¨\U00080040y\x171W\x14r\x97\U0006331a\U000c2b97\x84\x1f\x0fÜ%ß><\x01=:Óì~¤2¢AÖIâ\U0001fe95ó(LÒz\U00081717©FÄ\x97\U000e4170ô\x94G®\x81k,\U000fa83aä\x11Ðç?9\U000d2318\t\U00100556\U0010a5b1\x04Ê(\U000547c2\x10ì\x08ð𨀙\x15\x04\nö\x8a§mák🬬7\U0004dabc\U000e8605ýùç\x00\x9d\x12z\x11\x83\xa0\U000a14db\U000509b6£C\x17\x92ÃÈs\x8f¥Î\U0006a541\x85±\x17\x04\U000449ea\x9e>lJm=\x1a:\U000d1a87\U00056d7aw\x1d둎°<\x97\U0002fc13Ù?\x17\rSÎl[\U0007d650U=;\x9c½\xad\x08A\U000865b2?S\x9dÁ\U00050b07×ð\U000a9b28ÏVÕÙ拹Ç\U000e5248ÃÉ#:\x07¾üÓµ<\U00084c79\U000b1841ó𮋟\U000565e8¶\x0b칗>ï\x9e,Ú\U000cc90c\U000556b3\U00048c5e\U000a4bd9\U000a8a75,§\n\U00099770Ý/£'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003701s
====================================================================================================
2025-09-18 23:56:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 18287, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 18287, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003884s
====================================================================================================
2025-09-18 23:56:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003569s
====================================================================================================
2025-09-18 23:56:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003643s
====================================================================================================
2025-09-18 23:56:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['4', '\U0001c782牓¨\x94j', '\\\U000af07ey', '\U000b0c4a\U000eee9eÖ\x11', '\x16÷Ø\U000573dd', '}9\U0004251e\U0003ac67\U000c0096', '\U00107c17휛Ã\U000fece8\U0004d287\x8f@\U000b9dc3^', 'Õb\x08+²\x86Ê\x1c', '\x93í\x05GaÁ\U000ac885ÆuÃ§', '\U000af3ce\x00\U0001fde6a$\x89', '', '\U000f08ec\x9e\x96\x8b\x00rc¼\U000cebccn\x12h\x96n\x8e\x19~\x91_éÎ\x8e㳯\x0bªoª\x19\x07}\U000e3fb4ßmøù\x84´»ïs\U000a0e58¨\x02𧮏', 's:Æ"E_¼\x8f:', '\x02\r\U000ffd09\x1b\U000442d4']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['4', '\U0001c782牓¨\x94j', '\\\U000af07ey', '\U000b0c4a\U000eee9eÖ\x11', '\x16÷Ø\U000573dd', '}9\U0004251e\U0003ac67\U000c0096', '\U00107c17휛Ã\U000fece8\U0004d287\x8f@\U000b9dc3^', 'Õb\x08+²\x86Ê\x1c', '\x93í\x05GaÁ\U000ac885ÆuÃ§', '\U000af3ce\x00\U0001fde6a$\x89', '', '\U000f08ec\x9e\x96\x8b\x00rc¼\U000cebccn\x12h\x96n\x8e\x19~\x91_éÎ\x8e㳯\x0bªoª\x19\x07}\U000e3fb4ßmøù\x84´»ïs\U000a0e58¨\x02𧮏', 's:Æ"E_¼\x8f:', '\x02\r\U000ffd09\x1b\U000442d4']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['4', '\U0001c782牓¨\x94j', '\\\U000af07ey', '\U000b0c4a\U000eee9eÖ\x11', '\x16÷Ø\U000573dd', '}9\U0004251e\U0003ac67\U000c0096', '\U00107c17휛Ã\U000fece8\U0004d287\x8f@\U000b9dc3^', 'Õb\x08+²\x86Ê\x1c', '\x93í\x05GaÁ\U000ac885ÆuÃ§', '\U000af3ce\x00\U0001fde6a$\x89', '', '\U000f08ec\x9e\x96\x8b\x00rc¼\U000cebccn\x12h\x96n\x8e\x19~\x91_éÎ\x8e㳯\x0bªoª\x19\x07}\U000e3fb4ßmøù\x84´»ïs\U000a0e58¨\x02𧮏', 's:Æ"E_¼\x8f:', '\x02\r\U000ffd09\x1b\U000442d4'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004268s
====================================================================================================
2025-09-18 23:56:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00388s
====================================================================================================
2025-09-18 23:56:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': -1941058586}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -1941058586, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004069s
====================================================================================================
2025-09-18 23:56:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['K', '§;\U00016753\x12ൺs\x06WîìÓð\x93\U0007a367}\x8e:ûwQ\x10\U00089bfbØÅ\x00_½\t']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['K', '§;\U00016753\x12ൺs\x06WîìÓð\x93\U0007a367}\x8e:ûwQ\x10\U00089bfbØÅ\x00_½\t'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003639s
====================================================================================================
2025-09-18 23:56:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -28666, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -28666, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004249s
====================================================================================================
2025-09-18 23:56:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 4988}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 4988, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003868s
====================================================================================================
2025-09-18 23:56:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '\x0f\x0c\x95𢧿ÑÃèµ.\x0e\U0009e652ðHx\x1e\x12ùmQ\U0010a053\x84ëÔîv7}y0\U0005dda5eðQ¨\x02Uø\U000444ca£Tð#\x99\U0007befc\U00107402\x16ò\x11Ð\U000b07d2\U000fc153\U000a541dR\x14\U00064f94f¿\U000ec11bTñYIPG-Ã\x93oZ¶\x01\x1bré\x19\x00\U000b54afx\U000bd0ffg\x1f&M\U000b3751tsY×\U000ff7e1\x08ÿì,ù\x01ú\U0003eabb1g\U000980ca\U000a9ad4`A\U000ec49d\x0f𨾫\U0003b3dcú5\x8dí\U000f6892¨y\x8d\U00053bf2I\x1d¢õ®ß\x80\x19u©\x0cz1\x13l\x9f½Q\U000316dd\U000d9aeeêQ²q\U0006aa8b]xTà\x82*¡ñ\U0007742ab\x90è\U000a162a\x16\x11V\U000b3318\\¨\U000ab643\U000cca01\U000dceff$;@¦>&\x11\x92Q:ïÝ\x92\U0003b0a9\x93~p\x19\U0001dadf^R\x1cªö`U\x08|ã\U000515ef\U000b6ab52\xa0)ß,될\x17\x0c𨩠\x92ÕÞb{J\x0fÀ\U000dcddf8q¤\x10wL\U000cbd54Þ°µã\x9f|\U000bb122e\U0006f64dèXMÇÔ\U0007b6cbäO\x8d\U0006cdb1\U0007c30f1\U00040ae9zEÑ\x9b¦\U00049198PÎ\x81¸\U000ba5b48\U000600a8Ç\x88m\U00089cf3\U000ffb34Gþ\x82\x1d굲ÿ®\x8e\'\x83\x9fÀ\x0f\x157|\U00067101X\x9c\U000a66f3\x86_\x13\U00051a1eª\x92\x82\x8fEå-\U000f618d\x81\x07\U0010c56c²\x1f\x94x¬:\U0010178c\x9c\U0005f6c8\\\tv-\x84\x19A½\U000a3699&2@\x8e¸Y)YI\x01{ûo\xa0È\U0004b843#\U0010001aÎ\U000abaa0øÌ\x8c\x99\x93\x1b*¨Æ\U0006c5b1×\U0004d3d4\x80o\x8f\xa0\x80\U000ae972ó\\S/ßÑµ¯|Ã\\¹3Z8Ⲏ\U000654f9ç.ßÆ×YoúR\U000e06f41p\x02c\x05çÎ\x06l\U000149b8\x89Á=\U0004e216I%ë4\U000a2210/\x1e\U0007b839\U0004824e\x06ái¥@\x96\x1f4\x947ä\U000c920e/\ue0d9\U000534aa;0\U000efd54\U00101f43÷ä\x14\U000712e6¦ðë\\ zUÇ\x8f\x0e4\U00052fafñnÃ¥\x98\x94\U000b5541\x98葤W\x05«¥q\U000acf2fá\x04\x84\x8fGïp´¼j\x9erA\U0001a9c7\x8cO\x90\x07Ë\U0007cdc0ÚÅ\U000c836c\U0009c009!\U000f0e99×ø\U000dfc01\x96\x01ä\r=𫜂\x0e2\t\x98x\U000eabcfs"\x8a~ñÍËÒõ×cJ#\U000e40e5\U000b691d\U000978b6\U000a4f9e\x1duÉ𩠤Þ𤬉VÀ/8\x16\x83kP\x84Lá\U000366d8(æn\U000ecc96\U0005a81e:æ\U000eb643/댽\t\U0009dff3S~K¥÷\U00035af5\U000ddaed\U0003ad09é\U000c512eØï¯åOÇÎ®1~_\U0001c1feW\x96!da\x9av"3Èg\U00084545\U000d27fc\U000e0843ìFj\U000a7b2aÉxºð\U00076ed6\x9a-\x17\x80\U000e4f6d,Y\U0010d6e9\U000c25a67\U000ce1f71î¼¥츀q\x05,ã2\U000bf25e\x82ᒩ𤅑𝧀\x1e_\x0eâ»Ãz\x0e\x1a\x01@oÌy\x83Cc+»E\x1c\x88\x1d\x9c\x9ctöï\x16,¸\U000678fbAä,\U00052e91\x11\x96\U00019b8ay×\x9b\x8e𪥳5\x8eø#\x14]Æ\x94~]þº\U000b6c06ëÅj\U0001a0e0\x8c4\U000b37a8cõáF\x1b\x87\U000b8265\U000ff1e9K\U000caef3\U00094ec0%\U0004a881OË¸w\U0008bd73\U00082a78ë\x00ÊÄ~ñ¡#\x1dÏPB\U000f8ee2\U000e0e7c\x9f\U0001a7ad\U000d617d0𤍦\x0e¯\U000a8554\U0010dfaa\U00094ae5\U000a7204\U0010c636\U0006b9d8é«×\x05¿\x95ýn\U0004d32foS\x10\U000fefb0\U000d225fÎOu\U00091a09£×ü\U000bd03bñÇ\x10\U000e2141넞xF\U0007aedd𮜕\U000f29e3\x15\U00012917/µ«\x15\U00103bb1\x1b\U0010a1f9L\U00039b15ÈJ=\x9b\r\x04¸\U000ebb0e\x11þ\x0c\x17\xa0ÝÄËT\x07´q\U000cc727\U0008b6af\xadR\U0005906di\U000496b0\xadú𧰩·m"GàVÈ2\'\x0ba)W\U000adb44[=\x8e\x18«úv\x9a\U000570ec\U000c0243#Ã@\U0010b4e6¹\x83ýAÐ³\x8aËT\x86 \x8df\x0f\x15Èû\x8eÛ𗜠\U000f2800ë\x86çV\x7fÀ$\U00060915R\U00064cef\x01]ç\U000d523axÜx\x91{×\U00044f6c\x0c\x87\x17h]\x12\U000ba462\x01(\U000afcc8\x1b\x06n\x8f!\U0005183er¡b\U000acefe⸥\U00059d4fZLx\U000f3fa6éH\x13ül\U000f57c3Á\x9fTv\U000a0700Ò\x92\x90\U0008fec9\xad\x11Æ\x82×\x16ºô\x95ñû\U0007b6afð𨝯\U0004df51\x85Ñ\U000345ffJ»SÁ/Îvù\x9cØ\U000b9a34içÈvø\x82O\U000be61a\x8ay\U00082b07\x95^\x96x\U00092cc3aæ.Gþ:𝠾Ý}à?\x0c[ºª\x99\x19\x03}\x8dawXt3X\x04ßzä¯\U000afb95\x9c½VÀj+Æ\x1aV\x07\x82¥Ñ\x12íÏ𤒜g\x9bUu\'\U000c1733à\U000ea0b6¡Ñr:\U0009e410\U0009c217³ý#Ð§)\x14°TÚ\x87º\U000f657a¾Ù0ñ\U000472bd\U000633d6\x88)±\r«P\x9eûK\U000b4a01\x1a>𨋇µÿ7\x91\U000fcc8f𦄧\xad\U00061098\U000e1a5b¹Ã\x83Å¬(Í\xad¶×\x92\x9bèXß\x0eè\x12WÁ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003786s
====================================================================================================
2025-09-18 23:56:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003928s
====================================================================================================
2025-09-18 23:56:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004673s
====================================================================================================
2025-09-18 23:56:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004441s
====================================================================================================
2025-09-18 23:56:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00346s
====================================================================================================
2025-09-18 23:56:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003475s
====================================================================================================
2025-09-18 23:56:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -19761, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -19761, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004102s
====================================================================================================
2025-09-18 23:56:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003705s
====================================================================================================
2025-09-18 23:56:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': 'è{u|Éæ\x1d~\xa0Î4ð\U000fa43cö+Vÿ\x863\x89f}Ûµ±\xad\x0e`äÈ\x87\U000f660a¢.\x8dqÄIWïq\x9be0F±\xad\x93\x1f3c;\x01\x1b\x92@¯\x81ã\x1f\U0010a81b´äì\x10{°\U000bdf050\U00036ce9X¾\x06T\U00052249UB𗥓as¿Ì{\x92\U000b9a0cÄ4Ø\U000ad677ü믎¼ Oü4\U0006b589*\U000558c7\x11\x9d\x80Ö\x85¤\U0001aea2\x1cå@2½ô\n\x83òÒµ*@,µ+yµ\x90Í\U0010bc26\x03p*\x88=v(\t\x07ôØ\x83\x82\x9eø"\x0766¶\U000cb753\U0005c4c4\U000e0624\U000c5232Q¾\U000c103f\U001094d6yQ¬\U00085aad)\x82~¼ÑC\x1cgÀ\x9c8\U000c28fd<\U00016d09f\U00095031\x92\U0007db23\x83¡Ð×Q\U000db0b5\x98þøÒ\x9c/\U00034b1d\U000d4055q\U00090d8aØt\x1bÃç\U000f6bdf\x11Ó\U0010ffcd\x85\U0006b685n|ó\U00103e7b\x91\U000ce0076»r\x90ñ\x8cB\n}\x1d/H\U000730b8n\U0002f303Ï\U00016ebd\U00039616\U000d2535\x9a\U0003d986æW\x8aJ8\U00076f99ça\x0f\U0006cb5c\U0004dae4\U000806c0\U0009c76e=í;6Äó·\U000c9d5cÆ\U0007c0b3\U0005b3ca®𮎜\U000ff0b1Q_ñ\U0003f519\x8c\U000c8955æ\U00062af1$BWS#\x7fÎ\x9f=\U0005c372\x10$îþ\U000d8786\U0008c8bf|YÞ\x1dä5\U00042487q-𤱕!èÉFû\U000daa0a\U000a1b19\x9aK\x95ïÎý°}\U000d0655À\x18c\x8bÃâ\x8eU¿¿Õ\x9e.\x0c𰺶\x06M3®#\U00058d1c\x1f\U000ac38c\U000afaf6ç\U000907b4\U0010d91cµT©<\U0005f4a22\x97\x8e\x8cÃ£1H\U000319ddsé&\U0007885eé\x02äø©\U000682faÊÀdi»\x0eè\x95E¿ex\n§\x11\U0010da2fK\x1a\x0b\x8bÊg;0\U00080140ê\x90ùHR\U000ea35b\x8f\x8dñäx\U000619cb\x17@i\U0010f337l3Ê,£?\t\x0b3\U0006b0c2ªÔ¯4\U000f0e0fÄª\x8e\x08+8\x9d¸\xa0\U0004b580k0j\x10\x12Ê\x82\x8fD\U000f4b01\x0eÇ\U00014b7f\U000d7f283\x1bW#𬯪\x1c\x0fm²\x17ý\x84\xa0Pø\U00075548$Q\x08\x9e\x80ý\x80"\U000de851®ü\x08\U00075381\x13±Ã\x0eîz\U000a37a2¬è\U00091909¥X½\U000ca82eé\x87\x83\x19º:\x87"±ff\x19ðÖ\U000da706Â\U0002f7e2\U000ce1fe8yc,½\x8dÉ\U000ea6f1a\U000738c64²\U000460a6\xa0¿MxC\x16\U000e68b0\U0005bcd6\x0ew\x96\x82글hýÔwÙ\x1e\x8cs𭉔Ò\U0006a7b9á´ýRèO.𣏗*\x7f8p\U000b5c2a§\x16£\U00075ab2ú&\U00088c1eu\x92{ÀÂÛâ»\x89n¸\tv\x9bí\U000b50a2N\x04ÃÍ·\U0006be2dÄ\x13\x84+}\x7f\x89\x89WÎ\t§:\x84Þ\x7fù¤ízpe ¥\x05<\x8c~\x8c\U000d61b1ð \U000874b7ü)ï\x00Ñ\x8eËE\x1d"z¨¿÷\U000f21a8$ø𘅃\U000ddfdbù \x18*\x0b\x8e\U0004a115ï\U000fc363\x11𭩏¡Áïy\x9b\nÐb¢jXù\U000923e864(\x8baà\x7f\x97\x1a\U000acd7bcJU\x97\U00069b8a&\x8a»¥\U000f6b1a\U00107d11Õ\U0003b231¦#\\\U000b9b88p\uf5e5*\U000426ed¿\x8e\x93\n\x1b\U000b649d\x12Ü%\\\U000129a8ª\x8e@掉à𪇁\x14Ìã\U00086c3bP\U00062ddf\x96\x9a\x03\x15W\x9cÅ\x86J©\x1b\x00\x8d¿\x05ô&³£¶\U0001c952\U000c6c30<D«T\x11;\x8cËæ?\x14¤¥\U000a21e5rêî\x1d,àIF\x83ÍýJ©?\U00035ac1Ù\x83\U000fe2bcÁ>\x83\x04\U000bbbf7©7´loú]zr\x87Ú]\x0f\x8akyôò\U000dd7af\x14«\x18\x07\x04 }9¤Â\x00\x81Ií¶\U0003867e\x19뒦F\x0f÷\x99y±\x1e2:\x00Txü\x92´㜳\x01³a\U0010375e"\x8d²Æ«\U000b280cDÛ\x12-\U000c9870ÕD\x1b±\x9a\x8dèæþ\U000df5cbÚ\x1fd®ê\U000cdee6\U0004d5fa\x1b\U000d4022ÂPF2j×\x17Ê\x07\x1c\U000abb83Yi\x05B\x8e\U000f497c\U000d6e0f^\x8a¬q;\x14)`\x9d\U0003be1e·\U00083682l²\x91>\x94Ê)!\x9c®3\x10\x18P.Ë¿Wþ\U0008bdb5\x1c\x17Ûxó|\U000e37bdâÚ\x81\x95:𠲄\U00078de6F\U0004710frMøú¿\x0e\x19\U00045020~XYk\U0008f10bFC\x03\x91Í\U000d42b2\x08\x12\x19SíJü𠺔\U000e6dca6\x86\x10xê\x8bO彲C\U0010d38cºä)\x00Úm\U001085ae|(úøó\U000b2234ÿûï\U000f2abaÃX\U00101c3e\\䉍Ò\U000bbcae1\U000796f7¥hLPâØ2\x1e\U000e9408Á\x1d;\U0005c4d3\U00094d11tñUõ×P\U0008e9e7\x17å\x9b\x1bo\U00069420ô\U000dc193[\x86]õ\x97y\x17Â×ù\x82\x84å\u05fe[\U001057a2ß0©óV\x84\x01¹t\x16+\x97\U000c0774/𩾨\x88Ü\U00053b60X\U00101b9cÐ\t\x83\x9a\U0010db36\U000eb862RÁ\U0003e9bd°ýË¦\U0005087d\x81\x81\U0009a1d6\x97w\U00083ebf³àÝÒ\x9d𝥰øN¸\U000fc281q\x9e\U0010a026Ê\U000e3cd4훻\x1aáÕ-\U00013994\x87\x80gLY÷÷\U00052460\x91Á3\x01\U0003f57a[Z[\x14\x99ü\U000b7c08sFYïS\x963¤Æ+Õï\x81\x17L£b>]Y6z\U00032a34Pó\xad\x89oÒ\x99×\x8eyP\x8c\\S\x0e\xa0Cn%𪪃r\U0009cfeb\tc£æ¡/¯\\\U000ccd24nù\U000a0832\U000a9ae9\'ÀøÅ\U000934f6)𰾮xõÅ¿ÝþÔ𧢳\x0e6\U0006d68c1yÑ\U0007b8d9\x8e\x94w\U00033843[\U000467e7\U00088402ÚÓ💗P+}X\x18¿ñ?@û\x12ÊÐ\x9bê·%á\x0c1\U0009ec35Zï*\x9c\U0006a48d9E?\x90¼ìD$\x9f\rµ?}\U000d6882\U000963b7ß\x81S\x16\U000fa297\U000732d4\U0007292e,\U000c0377Ì\x19\U000975c6\x97ä_§ü\x94s!Ë*\U0008a01a\U0010951a\U0004315a\U0009862eP£ÁK´\x8d\U000a2b30¨Þgòù\U000beadbk¼X\x9aY\U0010c2ef\x19(3vþ\U00049a6a\x07\U000f60d6\U00062745]6¤\x92ïob\U000bf464aGïß\x01\n\x8dô\U000a4ac9K²\x95\x85\U000fb3afl\x0f\U000a213b\U000fdb35\U000b428eÜ\U001062d4\U000504d0\U000e9379\U0006696bUÂA𔔰3I¾Ï\U000e98e8+\U000452c2[Í"dXÛ\U00100f5c\x0c\x8fl8÷ë\x06t\x8a\xa0\x97\U000cfc6b\t×ö@È\U00076f67Ç\U0001eb9fü\x07´\U0006b949\U000ff743\ng\x02\x06\U000b3d71ó\x9a\U000c90fa\x8c\U00059710\U00091f87Ú\U000a1234\x81r𩘉\U0006ef2d𨋱\x08\U00037460wtå3\x0bôº\x9a¤\xadáê\U0005a145\x87R\x89Râ\U0010a223\xad𮭱l\U000fe447\x80îzÁ\U000c5981\U000f2289å\x15,^ú#\U0005c0e0É\x13¦NK\U0003e826v\xad`Nf\ue8ach^\x05À\U000eed2eª[\U000f85dci\U000f4792ZÛ\x86§[\x00Û¡}ÑmHoO\U0004b5f7\U0009d199q?aÝ\x8bÊç/"¾D\U000707dc\U000d13d9\x11U§\U00081154\x93{\x04Ck\U000f07150è º\rÑ{V\U000f56d8Ð\U0005e0d94)𫁴ç\x99WHÏÄF-\U0003ffdd\U0007b37eï\U000b7449ö±Ò\U00073a33Ua\U000df92b\x0f±¦\x8fõ\x99dÿ\x8e¬∻N\U0008bd22èS)Bã5\x93¼\\m¯ÎâÝ^\x146U>.¯\x9eÊ%0\x1cö\U000b8d69Ü¹\U000cd5a3w\U00042cbd¦IJ\x0bnH\n\U000ad312\U000a8361Èk𢧖\U000f5cf9\x07U)\x02U\x87o\x91¥Ñ \U0001c5274f'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004359s
====================================================================================================
2025-09-18 23:56:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.12082s
====================================================================================================
2025-09-18 23:56:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004061s
====================================================================================================
2025-09-18 23:56:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['0\x10Hc)l_', '}\x08$', '¨G𤾴\U000bb729', '2\x1a\x13\U000b41a5<\U000fbf83\U0004bd49\U0008f962Â\x11', 'º', '7Zó\xa0ò', '\x01\U000b7138\x18\U000894baí\U00091709', '"À', '\U000f07fd\x7fy\x8b0', '\x03Æ\t\U0006f158\U000b4256\U000a71ffâ\U000f339dªÍN'], 'password': ['', '«\x86iÑÓÝ\x00\x8fÿË', '\U000e02c6\U0003a981©\U00097120*\U000adb23{\x89$ï¦öN\x1a\x94\x07', '`𬰝y', '¬g\tÇâ;\x97Ä\x9d\x9f\U0003628c', '#\U000d77d9', '5Ó¿\t\x1eF\x92', '', '\U000b36b8', 'á¸Q\U0004d698', '\U00037f43\x84\x0e']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['0\x10Hc)l_', '}\x08$', '¨G𤾴\U000bb729', '2\x1a\x13\U000b41a5<\U000fbf83\U0004bd49\U0008f962Â\x11', 'º', '7Zó\xa0ò', '\x01\U000b7138\x18\U000894baí\U00091709', '"À', '\U000f07fd\x7fy\x8b0', '\x03Æ\t\U0006f158\U000b4256\U000a71ffâ\U000f339dªÍN'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '«\x86iÑÓÝ\x00\x8fÿË', '\U000e02c6\U0003a981©\U00097120*\U000adb23{\x89$ï¦öN\x1a\x94\x07', '`𬰝y', '¬g\tÇâ;\x97Ä\x9d\x9f\U0003628c', '#\U000d77d9', '5Ó¿\t\x1eF\x92', '', '\U000b36b8', 'á¸Q\U0004d698', '\U00037f43\x84\x0e'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003646s
====================================================================================================
2025-09-18 23:56:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['\x99', '(\x11¾k\x01KzÄ\x8csWÑê\x97', 'æ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x99', '(\x11¾k\x01KzÄ\x8csWÑê\x97', 'æ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003427s
====================================================================================================
2025-09-18 23:56:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': -70}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': -70}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -70, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004249s
====================================================================================================
2025-09-18 23:56:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 20}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 20, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 20}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00353s
====================================================================================================
2025-09-18 23:56:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': 3599152264120810401}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 3599152264120810401, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003574s
====================================================================================================
2025-09-18 23:56:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': -13745}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': -13745}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -13745, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003964s
====================================================================================================
2025-09-18 23:56:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ';=A\x13>¶ã\U000c7e58\x81o"odª\x9e\x98\x99\x18\U0003c73fçþ\x0f𰢡\U000d45cc\x1b\U00014bd9Á}\'~\x87\U0008d525\x05º\x99\x8dXà\U000198a1\x99L\U000ca2c4Üû¸\x1f\xad«DÇ\U0007785cz&)PÓ\U0006c81e\x16\x87?𭱻\x1c𦲢Ê\U000a0823*9X\x05æ.õ\U00012bf3\x15𩕌×\U00019a7b\U00090d4a\x17\U00070ecd\x0cÅR²\x10ã®°ÎWË\U0004b89cÔÖ\U0006388cÛ{\U0006710b\U000336db\U00031dceâ\U000d4effÖç}\U000f3146ò\U00095130iû\U000c94adÁîY\U000a013fïeÎ\x9d\x81\x9a}\U000f1ebd3n\uf812\U000a2c39D\x90¹éäÒ\U0001ed8dÌ\x0cÂ¼ÿ\x9eª/|âr\x80Vu\t±\U00086b24.r{\x92)\x8a\x14rÀ\x0e\x9f\U0010d3b9Îä\U000e878b!¨ø\U000f7b2e0tù\U000d1400\U000126d0Øï\U00040904NÇ\x0fu\x08v\x93*:\x9e𗿵ãMý\U000c740a8\U0005d6ccd8w\x02\x9d\U00012e18\x96U2\x8e\x13+Ø\x86÷V\U000b4279L\U000e47bb\x0ct\U0010dbd55Ð@\x96\U0003f758\x1e\x0f7\x1czxÍ\x067\x17ï½\U000ef1e8\U000b31dcYß\U000773d6yµ\x14b,E\x9f𖧵õãï\U00042d49ù1ú)\x8a\U0007d09e¾^\U000761e0\'¡ꪏR¥IAñÅ"\x86\U00057f0cÍØ\x8e¤¸ù\U000ec08aj\x1bü)ñ\x04ÂðSìq\x8b\\\x84L£?hN\U000126ed®.ÎÙ\x8b\x8bê?\x87U(ôbý⦆\U0009554c.[\x84\U0007b2c6\x85ö+\U00049817q»¶8XC=úPÛ\x8a\U000aba74×}põ±\xa0àríêêµJl\x19\x94b𪋼\U00045bdc{\x9a\x0c\\\x1eÞ\x1fcH\x8f\x8cY\U0001bf94\x98\U000a3d8eø>Æ$±²뺙JT\x92\x06£{\U000a82cbHã½G*\x9c<J\x83\U00057d4c\xa0\x93\U000a8387-\x97x®r\U000bc93f\U0010c537\x01\x99\U000d9dfe\x98ÿ?1𧮭â\nN\x16\x05Lu¼b\U000db2a3ß\U000c9a2b\x966\U000e2f90\x1e&G\x9d\U0008859a\U00039acfÆ_\U000db054\x9d\U000b5e0fb\x17\x8b\U000ab024êv\x83畗 Ý1¨\x8eeC\x9e\x8b6ôÅ\x16Y\x18+\U0010692dÊ\U0008c4b4¥°å\U00019d16û\x11ÏV.Ø#©TYê\x17\U001011a3\x9b0\x14r,C\x85ê\U000a5ba5𣗔\x08°\x86\U00092f44\U000d978b\x15hc²irÃ×Ô=£©(/\U0008b0c5(}\U0007903eúø\U000d3f47\x06vi\x8faï¸S\U000dadcd\U000f49aeÄ\x8e#À\x99\x18\U000138b1¸)\x02\x85\x9aO\xad\x11Ö|𥟁Ì\U000694efr@\x82h\x03êàÊ¬,^R傥Y¹Ó\U00010d89\x82\U001085ac\x00Éa𠫒\U001012f6§V}m÷øïW\\\x9b\U0006d99e=È\x96\x9aÕIî(nÈ>¡\x1d½¦ª§wúx\U0006de63¿O$M\U0007976dJIM\x1a \U000edb2d5ð1Ý\U000447bc\U0003dffb\x1b \U0005360f\U000db448Ù\U0001e4b8\x02~·\U0007a43dÐ\\gÍ\xa0Í|ó_\U0009985dº\'~Á\U00049e5a_\x7f,æ\x89º*$Ã\U000c2d61^\x15𗐫±\x1eÆ냁\x85𫻷\x8e\x84×\U0008925f\x13åe\U0004bc7a\x03\U00051c5a\\åÐJ6aBgóÞ\x9f\U000f4f00Ê¹\rh\x9bÌ\U0003c51d\U000e8394°Øª𗼎»Ìcd#T\x03ÅD\x10\uf363æ\x00\x15\x03\x99N:\x80𮄑\U00085298WÅ\U000cc813Jéò¬¬\U000d8ab2lT\x84fÐ\x8ba»çû\x8cìV\x1aÿ\x10AÖ\x17\x16îiF\x8dÑ®\U00016c65\U000bee93\x91Ë\U000fe84e\x90\x15:±\U0003597fb\U0005a3a3\U000a543aú~\x0foÜðý¥\x0c*\U0010229b\U0006018eH¤\x92vUÛê2C𤽡\x07\x03:\x97Ð\x0b\U00065743ÁÃ´\x04àÃPò\U00077e2bç\x91]\U000e0998\x16\U000d463cÄ\x85yù\x9b\U000f3d4f"ZKÇ¡\x94»ñË;å¹\x1e\x1f-ÀÎ\x01\U000974e0ÿ[\x95Ì£é\x02äg¦\U000ba882\U0003bea3\x1eZÑö\U000d5f08\U00066a6f®Ö\U00044475\U000b667c!µêl\U0007a4fbTèb낸Y\x02\U000da531a\x9fã\x01\U001057bbz\U000c7e60VÞ¹øÀÓ\U000e69a6\x06Í小\x7f𣀎\x9aäÁ\U0003f890¢Ê\x93É\U000f5ce6zQ\U000fec2at\x87\x10\U000f3160\'\x98ä3\U000f2b62\U000e94f1X\U000e329c\U000a5f0c\U000db40b\x02!@Lj\U000b869b«\U00035c21\x05\x15{\U00065532!»\x13\x852d\x90\U00041260\x87X\U000cc56c\x1cA\U000e1f1cN\U000c7755RÕFl¾\U000a3b1c¿𪗇ë\rÍ\U000f2bb4ï\x85áË\U00041490\x1e\x9b\U00074c2eP\x8b[ÄûÑ\U0010deac0>!\x01S»\U0010254f´\'fg\U000c2051\x02Y\x97v\x8cuvù¿Â\U000d99872\x10Tiöù\U0009d883Ç\U0009163e\x1d\U000bf531kT¶\x90ÖÙ¢ÀF\x17M^\x04]R|)\U0008f078\U000fb336𤣹\x1e\U000e87c6Æ\x96ö\x8e\U000ba860\U00070853¹_\x7fü\x93éH\U000d30c9Ó\U00078bbd\U0008244f\x87\U00061262\U000b6372\U0008d590\x16l·哟Î©\x0e\U00060ac5ë`\U0001ea0a\U0007770cÆ=\U000df0f4\x8f¾Û\x0f<\x9e\x11\x94g\x8c×?\x8cß\x84\U0008ffb9\U0002fb3d\x82¬\U000e73ees,\x82\x8d1/\x00', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003769s
====================================================================================================
2025-09-18 23:56:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U0004c24cõ\U0008d6d6²\x93î=w\x04{[\U000981b4U\U00099938\U00081a58.ës«\x10ßfm\x03}§s\U0003ba6d¦,à\x1a\x96\x00振¦Æ\U0003201cDm\x8f\x83\U00058f18\x02BbÌÂ\t\U0005480fJ𐠷\U000fa31cY\x05𬪏ÑB;O·lj«\x94õ\x95\x1dÛò\x1a[\x80y¦³²ÔºÅ«\U0007dfeaÄªaÍ\x85\x9b\rù[\rF\x1dí\U00056d84\xadp\xa0\x94£\U0006734b\U000d2988B𢉂á\x10\x1a!©P𭃙\U000fcfc1=\rÛÜIÏ\U0010e114W\x93ð\xa0~v앁¯\U0002f252+\U0008852djî\U000d5577»ë\x01ý$\U000f0528$\U0010839e\U0004ffc5]¢\x9e\xad\U0005efa9°µg\U000cb63cálRW\x04\U00049c12\x02\U000967b66Û\U000f8f76à\x8dJîæ@ Yl\x11\x1d¢\U000a6904ýÈ\x12$\x1d1|S𦏇d)Ü$\U00085f33\x97¤ô\U00052101ù³Z\x0f\x14⁋¯\\wc\U00059cd0jÂü H\x967\x10\x9a\x16\x91¤ \x06¢c±\U00032181+¢\U000735aa\U00051872\U000fb49cç\x98Ã\x16\x1b\x1d\U0010f929±°\U000c8212\x11#\x1f\U00038c89\U0005847c\x1aåºL\U000c5fef\U00042b99õ{*\x9b\t\U0007a237ã\x82Í\x9e¶¸ÃùF`\x1d\x0cè\x1d\x18\x87\U000a95e9\x08§]öIo\U0010bfa8\x81ã\x89\x9e\U000526ddÇ§窄FÐN\x8c\x1f$\x0eF¤¤í\U00068d2b·U\x05\U000a5994\x03B\U000626d0\x11öã\x1fo{pn\U000f5dab\'\x96\x0f\x01§\U000a85d9Ý\x86\x03\xa0h>p\x94ïò\U0009630c¦Ç¤£\x81\U0008bfdb\U00105cfc\U00013b0c\x0b\x89\x14ûõ¾\U000e3ffcü\x88úù¬¤\x80Âø¾\n\U0006c424q¦\U0008a01d㗄g\x1cⲢA\x8bµÜ\U00083873g\x9d^Ö>\xad¬쵬\x9a\U000bb7f7V7©`ëD\x11±÷Ï\x89\x98Gº|hÃ\U000ca0593°s7Ç\U000f75c7îÛ\x97}\U00099fc7\x1a\U000d09ceÚ8P®\x08\U0006de6a\x8e£ö¾î}\U00086bd70\U0009b83d-²k÷\x12Ù\U000885f7ÜÆSÿ\t\U000dfa79\x18\U00108a4d𨥋K\x03!6Õ\U00105cb4\x88km\x9cÐ\U000eed78\U000710c5\U000fcf48×àäE\x1c\U000e902a/Â\x95\U000d6689\U000c821dÎ®ã¤½m©¡ôëV赚\x8d\U0004cd58/\U000bc2cbX\U000b9ceeó\x06«\x1b\xadzKj¥R\x81SÓ¿^èyK\x10y²\x87t\U000e410d\U000afee9é\x91¹!\U0006fe9b\x7fÍÁPÔÓ©\U0008c0c7¥\U000c70fd~¶\U00078d8eh`D¹úfÈÃiã¥£^;U\x9a¾I❲§🄩\U000a7a97°Hª§§\U000d682f\x89¿\x7f#ô¨æ5T%ò\U0006b368\x9d\x1dòý\U0008f76aÆï\x08\U000f6a42\x96X/\U000e51ca\U00101f00P\\\x12ÞS·§\U00103f8b»/]\U00097744È\x81N\U00050bfd"\U000d0803t\U0008a881\x18l\\Â\U000a491aø\U0009a36cOÛA\x8e!Ã\U0009ba9e\U000dffc1a𣸁\U00060ab3à½\U0008e929d»\U000e4f53@óÈ4Hóm\x95L쀸\x9b-\U001082bcD\U000ac6afñõÛ\x82«wgJÐ4\U00032480³\t\U00048e41X\x0c)🖰\U0001f271zû`}]Ã\x16\U000c991d\U0010a2d6ô\x15𔓣\x8fK«ºSß\nú\x9fÊbzø\U00106af3\U00103233IN1º\x10N~ o3<±RM\x14LILÖ\U00081920w\ue303\U0007f97a©É\x91øH\U00101b02@\U000b7cec\x9e\U000ff356\x0e*\U00080f3fYÄ]{윇©ô6ÊOÀ!|\x0fÐú\U000a6ecb\x7f\x822\x9c\U000cfedeòXß\U000b3f35\U0001fee2\U000959e9¼\U0006048bq6W\U00019b79SPËq\U0004b5c3\U0004a5cb\U000918e5\x02°\x9d\t\x87ï\U000604bc\U000bf4ce¶\x94ð\U0006ccbf%O\U00032f86û\U00037060ôౚ\x8bëP¥ö\x83\x84Pë¶,\x8f\x0bÅ[}o(è_\x98t{4°\x00\U000393d7¬\x00í\x0fW\x02/;\x81,\x9aoãètn£\x82\U000ce4029(À\x8dª·¤$\x02\x86/\U0007dd99\U000ef55d\U0007c0adI\U00035c0bLøá\x05𩓥\u07bfÀ\U00101510\x82&\U0004766eh\U0004a494ù\x1ea\x93\x9eò·Ö\U000ebdf0\x14ô\x81\x81\U0004cfd2Ì6\\³á\x1bã\x8dÓ`é}Å\x14\U00052279\x97\U000ae546h¢ï\x8c\x16\x1b\x12¶\x00\U000b9fdb\U0001a378\x07\U000a1180eó\x04®\x90ò\x12Ñdö\U0008f159¢U\U0010906f\U00057894p\x05£\U000ef1f6\x85¹°ä\U0009987ab±e\x90\x82\x9a\x97B¢j\x96\x1b\U000c17fc\njõU:F\x1f\U0006659b\x1f¢lG\U000bbb34\U00098e42¹æO,\x8c:ÅC"Þ\x8aµ\x8e\x1cÍL;a\x0e\x15Ê\x14~\U00099564\\äÎÜ\x92{\x82\x85NÇ\U0004d3cdÁ\U0009e7b7ì\U000a466a0Xl|𧘦\x19îüaà%Ô\U00035234\U0009b5d6Ïõ\x8b\x14!}Þ¿è\x0eÕã\U000ad127«\U000433dd×ê\xa0c\x0c朘*ÔA"bÓ\U000c3f3e¾eðß\x87Ñt\U0004f833ßL¤ÜEå¹E\U000ed452y\'\U000f5bdd𑱟æ¢\x9f\x1c_\x14\xad}càE\U000b1c72𭣠\x82Ç\x1f\U0004b63a\x06\x0c¾\x02µÿ6T\U000477b5\U000fbd919ñOÍ\x0e\U00019bf8\x84ÖõÆ\x8b\U000c77d7\x08×¬M\x8d\'!\x92wâ\x8dcc\U000d5cfen7\x8cÂ¦©ø\r\U000e4e74q\x0c\U00107467\U000dbd65ÝÎ³\x97ñ¡qhy蝼{\x96\x8f¦\U000e409f\x7fÂ+õ\x014\U000ac6ef&qqó', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004336s
====================================================================================================
2025-09-18 23:56:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': 8078}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 8078, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003709s
====================================================================================================
2025-09-18 23:56:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 24536, 'password': -52}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 24536, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -52, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003844s
====================================================================================================
2025-09-18 23:56:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 101}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 101, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003953s
====================================================================================================
2025-09-18 23:56:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '\x07¸\U000994ab"Ö¬\x8eÛè°\U000b06a0UÉ\x90SÙ\x0b\U00064d46\x0b\U000b514cGà\U0003fdde=𩎼H\x18Î\x19\U00067d2b}\U0006d943¦¯\x04\U000fc888Òö"\U000839baú·\ruN\x16¨\x1aa|\U00076b9då\x97𰦽þè𨘌\x84RÔl\x8ac\U00051ed9¦\x9e_\U0004966a\U00104600姙D𨅠ü£\U000aac26¡³\x00\x14PË\x18\U000ae2ee𫓳8ýþ\x94\to4µ´채\U00045dd5N#x\x9a>\U0007142f)µ6¬t\U0009494d\U000748c7\U000922952\U000f417b\x94Fì𗦍\U00050cb8«ð,\x97Õ¡켇7\x1fù¸å\U0006c3d8¶²\U000383515\x03\U00053b46\U0004606dº@\x06\U000e5651²\U000607a2o\x89`©\x1eâ´fµK@\x89\\H\U0008b3f9"<\U00075a79"äÙ\x02\U0003fdddR\U0009ac61w\x96æꬣ÷\x1bï\x08Û?v\x94ÌA\x8b\x0cC\U000fcf8aö\x93\U0001bbef´í\x027Zd\x82Å\x18s\x9d\x9f\x92B¯8V\x07\x88\U0006fbbbói\x7f\x07Í\x0c\x05\U0006763cv\x17l¶´Ë"ìFòh\\\x9aNò\U0003b199\U00044fd3át\x1dyu\x8f¬Þ·Û\x82¤\x91åT\x90\U0010316dC\U00092077\U000c9151µG\x1a\x0b\U0006fb28Ú\x16³\x03|\x12Y\U000b50a2\x9b7y¸b\x8d)\x89\U00061040\x01\U000bdfc5jßÛõ\x0c·°,\x99J²ㅁ>\x1c\x82p@ø\x94w1¸\U00076456w\x02\x8b\U000c6332\U000dd1a5\x1dý\x95\U0010071eÓ\U000c8526𮠳\U000f9413ÇÇ\x9b\x9b\x1a \x87\x8f𠲌¨\x87\U000e33ceÚ&\x87\U000ba329ç\U0009fb0d&\U00063dd1L\xa0ß8ð£\U000ce878m\U001071b3\x94bñ¬I𨋽\U0003fe36@K\x90\x0e%ÔX\U000eb30a\x8fø-3\U000623c6çÅk\x81\U000db254Óké\U000fc94e8ØH\U000fac1f\U0003d3b3:\xad,\x0f\x90입<Ú~\x8d-È\x13\x95½ÉÀ\uf57fê\x06b@±ôNÁË\U000a9de4\U00095cc8bÎ\U00074585\U00072a5b\x8a®Ë»\U000be5bf𥘜7;\U0010b59bð|\U00105a48\x02?¢\x99m\te\x00|\x9b²X\x8aÆÁ\U000b5671Ì¸\x80\x8bí~Þ«N\U0009ec86½\U000a67e0\x07穩Z\U0003ff28ÆJ䏟Ä\x11q,Z\U000811ec.Á×§W\x1f<ãIÑ÷𣆾´wïÓ\x9añÍ÷¦\U000395f3YJH\U000fea46\x10Aä\U000bb84aß\x84\x86Aâé 𪔬\x00ê\U00099414\U0003287d§\x18>\U000db737£𘘌ä\x81\x93\x0c\x0bÁ\x12\']½)%l\U000be41a\x8d%\U0007a75aa%\x10g2\U000bbfcaqî\U0006f2d2\x05¡\x9e¼pZ0îEO\U0001579a\x0e`¼\x1d\U000d1bf3k\U000629ac\x81´hJ\x04C\x9d¢\x11\x9cd\x8cñ\U0005bba1Ç噴\U000c2944\x92\U00088fd6\U000e09e0øL \U0010f640à\x94\x17z»\r\U000bab26\U000a6357¨ã\U000c4e35\x03zÿ=\x85Óñwhy{ûé\U0005709e¤}¸䔘\U00084d7a멏ç\x08;\U000ab430\x18o\x10\x92B\x02èð\x1abh\x8cÐjA\x82=(\x08\x02Þæ\U000fa75b\U000c90eb\x0c\U000f7cee𩮩á\x8eÝî#6\U000921de\x1a\x19Å\U00044080#]8¬"\x06g\U000cbb7cí\x93×\xad§*¡\U0005f89eþ\U00046ca5êé\U0003ee1bt\U000da947Ü*%»á\x9dé©`\x9f9\x9b\x83LåÉ\\🂌\x99cÓ\U000545ca\U00086536q\x92Ü\x04³ú¡]\U000b069d?é\x14LôG\x0eG~\x14\'&\x1f®ï³\U000f405fí\x84xÿ\x8e+á\x13ß\x03îi\x94\U0010f235\U00049507¾H¤ç_Ç\U00062ddb¼\U0006ce5f𧹏\x97\x11c\U00099ff8¡U\x0e𰜒\x0fÄÑñ\U0003c313¹\U000ceb0a»ú\\𭲣追t\xadfÌº´\x08\x96\U000ab732S\n\x80ULè)\xa0\x0c\x00Á\x11}\U0010453e·\x11¨\U000a6bd7!ñ\U0004ce08F\U000638e3\U00102aa8´-!\x05𡑐\x00Zå\x8aô\U0004aa93\x8e\U000af329⮼\U0004dabd\x99\x8f\U000c4b0d⃚k\U000e4b99\x93%5\U00015eef<\U00077e47\x94ö)°Xï\x9a\U000428ad\U000f200d¥\x8bõ\x11\U000da2a6æ-ðPRú4\x96\U00045132X\U000db722V¶SåUÆ\x07óÛI\x94\U0010e116\U000ed928\x87½~\x18\x86\U00056f6b\x8a!ä\x9aÀ\x90}þ\r©s2éÁ\x06\x12𥏬o\U00068e07$U\x93òiþ\x9cÁrÃ\x19\U00077e21𢭅ï\x8f\U0009bff5\U000c5816=÷\U00052773ë𮏣÷\x96𢺚<d\U0003cc1b\x1fÁ\U0010358a#¯\r\x7fTïà⡄ÖµA𧀲Þ»´7fÑ\U00102838zE0´\x85À\x9c~ñ?ã\x14\U00100bf1\x94èÆA2\U000d14c0\U0006544d\x0fD\x8e\U000b02d6(\' ²\x07[\x94\U000193534\x81b³\t]&ÚvZq\U0008904e;\x02Ü\U000ecb3bD·\U00038b50Z·¨H£ï\U0010ed4dm\x84\x06YÎAþ¾\x01Ïk4µ~{mC\U00108983\U000f05f0\U00061d83\x1eT\U0005d9adå\x86D\x89\x9csapô\U000f7d15h6f\U000c2f1c)×+\x1c\x8d\U000806dd\U0005c9fb÷¨\x1a×\U000d4f6a\U00057083dÆ¸)WïÄ¹\U00081bc0omØ}c\U000ac012½6-3"XÍ𘗙L\U00051526V\uaad6t½¹\x04\x1d.\U00062c5d\x12\U000d1d74^¡²¿SÚ\U00096445\x8e#\U000fd6be\U00044b26]\x90Lä\U0007c24cô\x9e2îíüO:äñ("²¯\U000456f6\x12I\x1d𡍩#\x8a¢¥Zd\x9a#\x07ÙjA\x92Ï\x98B7.=\U0003c16bh\x8c´\U0006985f\U0004eb34\U000c4d5e裌vä\U0004ad7b?Wýfn\x9d\n\x9a\x85\U000c68d2¯ÎÌ¿\tv\U0009bd53\x1a\U0001138dQ;\U0010db0aí\U000fb04e\x8e\U00100f1f5\U000c42bc\x9cÎéFÈW»"\U000fe79c\U000a0e4fÖ+þØ;\U00037c340\r\x92Ê\U000f3610\U00054997.s\U000e783a¨F\x83\x8eë)\U000ca8dcb\x13C\x81g𪜳\x14\x10o\x16õ\x0cO\xa0\U00038a37\U0006e473>\U000753c46Þ´¾v\x9ewjÖ®\U000b6d8a\x15\x9e\U0008a171¡\x8bq\U000fb359<®\x0c\U00042d8c\x96\x89ÄÚYe{\x86\x12\x1d«\x18Õl캐\U000e2e71\U000f04d0w~·_\U0010937e10^Ð\x11㧋\U00093a57\x81u\x1a\x1a\U00101c6a\x1f\U000565c5±Ý\U0010dff9\U00099a98𤈵/\U00042aab\x8dêæ\x84\x7f\U00046ed5oªF»\U000c30aaüVþ£\x1d#\x83\x82Êm\U0004a6707»¿\x1cº\x94Ã\U000753d7\x14\U0008291cE\x1f\U0005f2429Ê³\x063\U00086716\\+\U001061c3\U0003b0ffÀÚ)Øç7\rSÑ\x185G\x06Y\x1fPb\x90¤`D\x81BA\x0f\U0007c33f_\x96ª\U000ebd2f\x1b&¡\x80öóO\U000de0e7A\x81𗪁ù!I\x9aÆçjÛmÞ\x81\U000f3313lBG㩨Ùoü§\x11p\U00033656P«ì\x1bJ\x93\x03#ÖO\U0006e4c1ûÓò{[\x8c\x83K\U00062e84D[Â¤\x14\x81ðR\x89Ø\U000b3215Â\x1c0\U00011277¡î0«\U0004b3c7É\U000b03b4\U00036892¥a+\U0010dd73j\x14õ\x02Ø\x1fÄ\x93Rë\U00078690K'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.005108s
====================================================================================================
2025-09-18 23:56:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003746s
====================================================================================================
2025-09-18 23:56:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003968s
====================================================================================================
2025-09-18 23:56:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003909s
====================================================================================================
2025-09-18 23:56:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003976s
====================================================================================================
2025-09-18 23:56:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['rÎ°\U0010acb6ÚÝæ\\\x8dä\U00019cc1\x99', '', '\U000911a0Iµ¼\x9b', '\x07\x00\x12ö', 'ê', '\x91\U0001e9c4', '', '', 'Ëù²j\x92'], 'password': 109348098115872529375797113495997966137}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['rÎ°\U0010acb6ÚÝæ\\\x8dä\U00019cc1\x99', '', '\U000911a0Iµ¼\x9b', '\x07\x00\x12ö', 'ê', '\x91\U0001e9c4', '', '', 'Ëù²j\x92'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 109348098115872529375797113495997966137, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003785s
====================================================================================================
2025-09-18 23:56:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x9eæ/¦Ü^*A:EV얭ï£\U0001bab3\x136\x1bv»ÍÍí\x87\x9csñj;\x84Ë\x9f\x13Iqæ(\U0006a68az\U000abbb3iº_\U00092791\U00049050¹R\\\U000db85f-÷\x97\x9d𢠐\U000f7dc0¸\U000aa9d9*åg¼L(𘑪\x9c\U000ff2a7\U000419f7S\U0001eb50Õ4ò3\U000c25c6\U000767d4`\\w¤\x1a\x99´\x83|Ì\U000858c8lÇDf\\\x86é\U0005a933ô\U000dc0ef]pë\x81\t6c\x89\x82\x0bò\U00066d70?\xa0þáA\U00012ea1\U000caac7\x85Ñ\x93áÿcËd÷\x0c\U00079d1e³𐄸(bÍ¿s+\x19ÚèY¶\U000d130f\xad𤖘:\U00108ad1×á\x9dH\x14°\U000556577k\U00016d80\U000b1040\x829\x17\U0004f415\U000c7f8c\U000d2374\x98«\x80\x03\U0009b2b3\U000b8f79ó.EÑ\x86ôYo\U0008bb3f\x91\x8c\U00072f9cs\U000d3a78\U000f5ebdJ\x9b \x9f\U0004a162𛃆\x18Ï\x81ã\x07·𝛻\x12ð¡\x9e|c\U0005c8fb\x07áêf¢\n\x85\x12\U00089156\U0008db45ß\U000551c5¦\U0010f13fv\U00101973\x9b²\x1c·ÂõþÓ¨\x16\x01k\x85ý²$\x18\x94\x8fx\U000da599\U000e28ff\x8b{\n\x86§é$𤍦\x8394\U000abe53#|\U000df7c5~\U0009250f\x8e»𑂼쀵\U000a804cl\x9e\x15¡µ\x96f\x94°wOõ§¼=Ó«zIeß,ÿ\U000c5ed7\U000829b5Y\x10ï£\U000a36a4旮\x9c\x8b}mùi2¸ê®t\x84\U00019edeC\U0010085c\x97Â\U000c0b4aÊ¢Å\x84Âùµ\U000e9f72×Î²1\U000c6303f¡Xã\U00083cdb4\U0006c224\x04\x95\x92¶\x9e({^\U0007f575L\x89£Wv\x10»\x12Ó;\U000df898\x9e\x0b\U000199c0\x06Þ\x97u >z\x85ùÒ⓽GÂ\x80Ä劢\U00056653I`®Ù4\U00068bdc\U000b8ee8Ê~\U000e2a19@\x82\U001089de\U0007ea1b¹)ìÑ\U000f5762d\x087Á\x0e÷\'\U0006ee03\x88\U000ba75e\x11¶\x0fÄ\x12\U00106dbb\U0007ea79\U000f8d8dË¿¼\x12²ëXª\U000a1c31\U0009969e5c<x¶𰭚\x04¨ÙçúQÕÉÿ\x9f\x98\x02µ<\U0005391fÒ."07ï\t\x97\U000a118d\t§]ËØ\x0b#/Vï[Â\x19𮬩\U0008f1ca\U0008735d\x87é𨣕\x0bÊ\U000ea857𬵉ú£\x12nz8\U000564e1\x9dá\U000b5aaaéÑGJ=â\x97\U000b6712Z\x94ü\x84&.¼ÛÛ7¼u\x7f㢶m\x0fTs¸ï\U000c2c41ÈT`\U0010c1d7-Ü\x00\x8aGö𑇈\x86oº£¹²𝞅c\U0001271d\x06Ì𪘽\ue7cbs\x9c©ð\U000678f0\x02\U000abe7c\U000f3c39ÃÌi\x86\U0007d8eb2\U0008f1ed\U0007c6e2\x1dø𡦁"¯fCe\U000e12e6ÀÑ\U0001a439²\U000fd17a\U0006a17br0t\U000afa1a8Àò¦L2\U000c583c\U000ada67\U000fa8c2ä\x18+cµ\x8fI\U0010326b\x94 ·#zür\U000c5164I\U000cba02º`;\x07Áí\U000cc455\U000aacdbàS,0ûì\nû¨\U000ecca9\x01ëI\x82ûê\U0010a6fb\x16\x8c\x80\U000f94bf¾X\x02¾\x1bæ\x8d\U000d2aab5\U000aed48uÐ\u0ffc8ò \U000fb9b8\x18Ê\U0004c2e7~\U000779b9«g\U000d58d1\U0003cb10\U001081e9gÉ\x87F¦jñ!&6\U000e15d5q\U0010da24\U0006d33eÞ\U00090128\U000fb9f3A\x96Û«Á»Y´Æ\x9f1\x9a+Å\U000f01acÛ(\x80£\x8ba\x119D\x01nWz\x98\U000cfa6dvÈ®ê\U000cbaaaõ|Å Ú¾2î\x9e\x98\U00059a54\x12×\xad\xadC¸\U00097468\x1f\x06\U000f4e06O\U00031a55£sÁ\U000a7c1cìjD\U000a4608\x10$\U000a0464Û*÷\U000a27caìNfÉ\x1bM𣂡E»Q\x1dbc\x9fÏ4\U0002f606x\x0c\U0010a297WÊÒ§T\x85R\U0009f62b÷íÉàé𠯞º\x0f\U00063d84á\U000f0bfaD+*Yt\U000e348b\U00096848\x9azò"1\rÉ×¤\x0e\U000d1027AIè´6\x10¾\U000dcd11\x8e\x18\x11\U0003530eî-\U000769e2\U00042df2\U0010cc9añù\U00098df5\x9e\x98*\U00076265Çx];uâ}ìc\U000477f4G\U0004ee89\U00096bb52ß\x95nH\U000901fc𫰧\x02bsㇲ¤u0\U0005793a7zJ9\rß\U000a0841+\U00059d92\x1ffVDR\x17\x1d똋\x98!Îl\x94e\U0006f875ßS𭶍\U00104625,t\x07\x92ữ\x7f\x97ÝÝ3\U000a9b93\x0c\U0008494f+\U00034b74ðR¥5¾\x0e砷Hé«õ(¤\x8c\U00084141:RQ¡C#\U00106975ÁiKã\x04\x05\x92\x81`!\U0004ef7b<ý\x8fþb\x1fõ\U000359a05\U00032c0e\U00066ea4\U0009cb29\U0001b7f5櫟îþýO\tU\U000a9fdcÒ%fÔoýA\U000dec27;\x1cýÔæ\U0004a3cb1\x8a\x1c×\xad$¥\x00¶\x14\U000613e6\x97\x16Î\x18\x19öu#ëïïzÐÒ\xa0𠇼5\x9a[Iº\x8c\x9f\U000fc624\x9d\x14àÒ\U0001ee04P\x1b\x15\U0001ca4b\x1fW\x93&º°\U000d7eb1Y\x80\U0002f5a3¦\x92\x95\U0004f72b/$GP£®\x19\U000cdba1hHD\x7fJï(\x90\x0b\U00055fc2\x9c\x18\x93𝐚J\x1e\x02A«\x0f]\U000dd17b\U000af88bÐû\xadJ\x13Y_¤\x15Ñu\x80\x81(×w\U000c888at\x7f\x80\x1duD,\x88i\U0009cd6b8\U0003b407\x98\U0002fc52\x89>h-*\U0007a2b9\U000a06b1!¥J\U000d9343\x17ºº°&Aµ𭂯aó$\x1c\U000d03eb\U000a5cdb¢.\x93 b\x88\x8a\U00106f653l\U000465b7ùO\U000b0d7fë¥\U000b7e77\U0005f39cÙévä𩜻ð\x1eÐáj\x04o:\U000b0e7c\U000d9fd1Òi\x07Àøø(\x17\U000a255dý,\x15\U0006792br\U00040cebð|\U000f43fa¸ö\x8f%\rZÝ\x00eÚÀ\U0007da87𫹠·\U000bb44f\U000c340a𫉲^L\x93\x1e¬gü\U000be3d2l\U000c5467Ìvn\x10\x92\U000f92f5\x9c\x800²\U0006b181\x88\U000f07e4Ñz×Y\x0cÚ\U000951dcs¤Xc÷\U000b164aSCi¿Éâ\U00016195Ø\U00102f5e\U000da598\x00\U000ce2f7\U001087e7{\U000e390f\x18X]Ê\x8eôÆ\x90ã(\\\\_\U000b84f1¤\U00069592»hç\U00043e19晼®\x83\U0004ae22²\x8cñ\x1c\U000ce441vó\U000d4274òqÊÙ\x8fy\x83\x8c+ÃÛ0\U000b9599\x1aòT\x1e\x167JÍ:úË\x03\x92Ï\x1f\n§"D9\x0eOÚ½Ï\U000e5797\U0007e687}\x8d\U000d1af9Q\x81\x1b\x93Ñ\x83ô'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '\x9eæ/¦Ü^*A:EV얭ï£\U0001bab3\x136\x1bv»ÍÍí\x87\x9csñj;\x84Ë\x9f\x13Iqæ(\U0006a68az\U000abbb3iº_\U00092791\U00049050¹R\\\U000db85f-÷\x97\x9d𢠐\U000f7dc0¸\U000aa9d9*åg¼L(𘑪\x9c\U000ff2a7\U000419f7S\U0001eb50Õ4ò3\U000c25c6\U000767d4`\\w¤\x1a\x99´\x83|Ì\U000858c8lÇDf\\\x86é\U0005a933ô\U000dc0ef]pë\x81\t6c\x89\x82\x0bò\U00066d70?\xa0þáA\U00012ea1\U000caac7\x85Ñ\x93áÿcËd÷\x0c\U00079d1e³𐄸(bÍ¿s+\x19ÚèY¶\U000d130f\xad𤖘:\U00108ad1×á\x9dH\x14°\U000556577k\U00016d80\U000b1040\x829\x17\U0004f415\U000c7f8c\U000d2374\x98«\x80\x03\U0009b2b3\U000b8f79ó.EÑ\x86ôYo\U0008bb3f\x91\x8c\U00072f9cs\U000d3a78\U000f5ebdJ\x9b \x9f\U0004a162𛃆\x18Ï\x81ã\x07·𝛻\x12ð¡\x9e|c\U0005c8fb\x07áêf¢\n\x85\x12\U00089156\U0008db45ß\U000551c5¦\U0010f13fv\U00101973\x9b²\x1c·ÂõþÓ¨\x16\x01k\x85ý²$\x18\x94\x8fx\U000da599\U000e28ff\x8b{\n\x86§é$𤍦\x8394\U000abe53#|\U000df7c5~\U0009250f\x8e»𑂼쀵\U000a804cl\x9e\x15¡µ\x96f\x94°wOõ§¼=Ó«zIeß,ÿ\U000c5ed7\U000829b5Y\x10ï£\U000a36a4旮\x9c\x8b}mùi2¸ê®t\x84\U00019edeC\U0010085c\x97Â\U000c0b4aÊ¢Å\x84Âùµ\U000e9f72×Î²1\U000c6303f¡Xã\U00083cdb4\U0006c224\x04\x95\x92¶\x9e({^\U0007f575L\x89£Wv\x10»\x12Ó;\U000df898\x9e\x0b\U000199c0\x06Þ\x97u >z\x85ùÒ⓽GÂ\x80Ä劢\U00056653I`®Ù4\U00068bdc\U000b8ee8Ê~\U000e2a19@\x82\U001089de\U0007ea1b¹)ìÑ\U000f5762d\x087Á\x0e÷\'\U0006ee03\x88\U000ba75e\x11¶\x0fÄ\x12\U00106dbb\U0007ea79\U000f8d8dË¿¼\x12²ëXª\U000a1c31\U0009969e5c<x¶𰭚\x04¨ÙçúQÕÉÿ\x9f\x98\x02µ<\U0005391fÒ."07ï\t\x97\U000a118d\t§]ËØ\x0b#/Vï[Â\x19𮬩\U0008f1ca\U0008735d\x87é𨣕\x0bÊ\U000ea857𬵉ú£\x12nz8\U000564e1\x9dá\U000b5aaaéÑGJ=â\x97\U000b6712Z\x94ü\x84&.¼ÛÛ7¼u\x7f㢶m\x0fTs¸ï\U000c2c41ÈT`\U0010c1d7-Ü\x00\x8aGö𑇈\x86oº£¹²𝞅c\U0001271d\x06Ì𪘽\ue7cbs\x9c©ð\U000678f0\x02\U000abe7c\U000f3c39ÃÌi\x86\U0007d8eb2\U0008f1ed\U0007c6e2\x1dø𡦁"¯fCe\U000e12e6ÀÑ\U0001a439²\U000fd17a\U0006a17br0t\U000afa1a8Àò¦L2\U000c583c\U000ada67\U000fa8c2ä\x18+cµ\x8fI\U0010326b\x94 ·#zür\U000c5164I\U000cba02º`;\x07Áí\U000cc455\U000aacdbàS,0ûì\nû¨\U000ecca9\x01ëI\x82ûê\U0010a6fb\x16\x8c\x80\U000f94bf¾X\x02¾\x1bæ\x8d\U000d2aab5\U000aed48uÐ\u0ffc8ò \U000fb9b8\x18Ê\U0004c2e7~\U000779b9«g\U000d58d1\U0003cb10\U001081e9gÉ\x87F¦jñ!&6\U000e15d5q\U0010da24\U0006d33eÞ\U00090128\U000fb9f3A\x96Û«Á»Y´Æ\x9f1\x9a+Å\U000f01acÛ(\x80£\x8ba\x119D\x01nWz\x98\U000cfa6dvÈ®ê\U000cbaaaõ|Å Ú¾2î\x9e\x98\U00059a54\x12×\xad\xadC¸\U00097468\x1f\x06\U000f4e06O\U00031a55£sÁ\U000a7c1cìjD\U000a4608\x10$\U000a0464Û*÷\U000a27caìNfÉ\x1bM𣂡E»Q\x1dbc\x9fÏ4\U0002f606x\x0c\U0010a297WÊÒ§T\x85R\U0009f62b÷íÉàé𠯞º\x0f\U00063d84á\U000f0bfaD+*Yt\U000e348b\U00096848\x9azò"1\rÉ×¤\x0e\U000d1027AIè´6\x10¾\U000dcd11\x8e\x18\x11\U0003530eî-\U000769e2\U00042df2\U0010cc9añù\U00098df5\x9e\x98*\U00076265Çx];uâ}ìc\U000477f4G\U0004ee89\U00096bb52ß\x95nH\U000901fc𫰧\x02bsㇲ¤u0\U0005793a7zJ9\rß\U000a0841+\U00059d92\x1ffVDR\x17\x1d똋\x98!Îl\x94e\U0006f875ßS𭶍\U00104625,t\x07\x92ữ\x7f\x97ÝÝ3\U000a9b93\x0c\U0008494f+\U00034b74ðR¥5¾\x0e砷Hé«õ(¤\x8c\U00084141:RQ¡C#\U00106975ÁiKã\x04\x05\x92\x81`!\U0004ef7b<ý\x8fþb\x1fõ\U000359a05\U00032c0e\U00066ea4\U0009cb29\U0001b7f5櫟îþýO\tU\U000a9fdcÒ%fÔoýA\U000dec27;\x1cýÔæ\U0004a3cb1\x8a\x1c×\xad$¥\x00¶\x14\U000613e6\x97\x16Î\x18\x19öu#ëïïzÐÒ\xa0𠇼5\x9a[Iº\x8c\x9f\U000fc624\x9d\x14àÒ\U0001ee04P\x1b\x15\U0001ca4b\x1fW\x93&º°\U000d7eb1Y\x80\U0002f5a3¦\x92\x95\U0004f72b/$GP£®\x19\U000cdba1hHD\x7fJï(\x90\x0b\U00055fc2\x9c\x18\x93𝐚J\x1e\x02A«\x0f]\U000dd17b\U000af88bÐû\xadJ\x13Y_¤\x15Ñu\x80\x81(×w\U000c888at\x7f\x80\x1duD,\x88i\U0009cd6b8\U0003b407\x98\U0002fc52\x89>h-*\U0007a2b9\U000a06b1!¥J\U000d9343\x17ºº°&Aµ𭂯aó$\x1c\U000d03eb\U000a5cdb¢.\x93 b\x88\x8a\U00106f653l\U000465b7ùO\U000b0d7fë¥\U000b7e77\U0005f39cÙévä𩜻ð\x1eÐáj\x04o:\U000b0e7c\U000d9fd1Òi\x07Àøø(\x17\U000a255dý,\x15\U0006792br\U00040cebð|\U000f43fa¸ö\x8f%\rZÝ\x00eÚÀ\U0007da87𫹠·\U000bb44f\U000c340a𫉲^L\x93\x1e¬gü\U000be3d2l\U000c5467Ìvn\x10\x92\U000f92f5\x9c\x800²\U0006b181\x88\U000f07e4Ñz×Y\x0cÚ\U000951dcs¤Xc÷\U000b164aSCi¿Éâ\U00016195Ø\U00102f5e\U000da598\x00\U000ce2f7\U001087e7{\U000e390f\x18X]Ê\x8eôÆ\x90ã(\\\\_\U000b84f1¤\U00069592»hç\U00043e19晼®\x83\U0004ae22²\x8cñ\x1c\U000ce441vó\U000d4274òqÊÙ\x8fy\x83\x8c+ÃÛ0\U000b9599\x1aòT\x1e\x167JÍ:úË\x03\x92Ï\x1f\n§"D9\x0eOÚ½Ï\U000e5797\U0007e687}\x8d\U000d1af9Q\x81\x1b\x93Ñ\x83ô'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004521s
====================================================================================================
2025-09-18 23:56:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['럘ó{gîò\x81,\x97Á\x13`HÞY\xadÖ\nD©ÈE\U00074642»j\x8aë\x00\U000b1d62Ê\U0008e5d0𰥙', 'B\x97\x1fÅ\U000fe0a4ª', 'è\U00090580\x99\U000ec0d6\x11(\x86', '×Ï', 'Vü±\x18\x11', '', '\U00065cc7', '', 'M'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['럘ó{gîò\x81,\x97Á\x13`HÞY\xadÖ\nD©ÈE\U00074642»j\x8aë\x00\U000b1d62Ê\U0008e5d0𰥙', 'B\x97\x1fÅ\U000fe0a4ª', 'è\U00090580\x99\U000ec0d6\x11(\x86', '×Ï', 'Vü±\x18\x11', '', '\U00065cc7', '', 'M'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004463s
====================================================================================================
2025-09-18 23:56:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00399s
====================================================================================================
2025-09-18 23:56:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['-\U0008e7dcb\x86.', '\x98>\x85â\U0006c6ed.y\x18ËµUb\U000dcabcï', 'eáù', 'ß', 'j´A\x7fª\U000b5477\x96\U0009b831\U000a7236¼\x8b\x7fÇHv\t\x07'], 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['-\U0008e7dcb\x86.', '\x98>\x85â\U0006c6ed.y\x18ËµUb\U000dcabcï', 'eáù', 'ß', 'j´A\x7fª\U000b5477\x96\U0009b831\U000a7236¼\x8b\x7fÇHv\t\x07'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003611s
====================================================================================================
2025-09-18 23:56:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003753s
====================================================================================================
2025-09-18 23:56:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -564, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -564, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004186s
====================================================================================================
2025-09-18 23:56:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 'Þ]\U000a5564IX\U00104b98¾,\U00012b4e\U000d9bf8㠜®\x05ø\x12Â¥p\x8f\x96÷\U000c4419\U000cdf1a𓁆®{¶\x93xå\x84vF\x08ø\x8cæ\x0f=½\x8d&G\U0005fd14GÀí|f:¢ã¸ñ\x9c_\U00073c0b÷\U000c8be68(,\U0006fa86\x0coH\x8b\x9b\U00041c57òO· ß\x98óå濕Nã¢»ß\x10û\x01ZXÆjm\x86\x8dQÞð\x9eLg\x13\U000e65b3Q(Óâ\x12$@%\x8f\U00080919ú.¡\x16.)Fb¡Wî¿%\x90\x01\x81&`ഛ\x8f\x93Ù\U00014f40\U0010cb51\x99\x85KÚÿA6K\x9a\x8aS^\U000e67e3µ\x9f\U000782ea\U000c0539*`YH§\x96ñ\U0007bbf9í\x13\U0008a16f>¦\x97\x89ø6ò\x14\x1cÄ¾Ôñ\U000e385a\x969Ç\U00085986XÑ\x1e9\U000dc8dbW\x93\x8c2\U000f8f47&\U00054910\U000f6826,A]\x96\x08O\U000b331cÊ6þÝv\x95\xa0\x120G\x16R\x96âÚ\x8a\U0005d434+!®\U000ff091¥ùÑ]}%\U0001e652\U000d35321\x92\U000497492«7ÇÈ\U000d1d6f\U000bb301\x1aVeãÉÇHPp\U00050e2cM𣸺⨉\x02è¶kdûÚ\xa0`³ª\U00040795\x85\x88ÍU\x8f\U00076726è\U000669df\x14qÅ¶ꌷ\U000fe872Æ\x919;3\U00089259\U0007fcae¡ð\x12\x1bf]çÒ|\U00104606\x8c«ú¥\U0003677d\U000f2a00D\x7fî¬\x85ÓcE¥¢ÎÆæ\rñ\x02RCÖ]\t\x92û[Ñ¨ð»ÞnÖ:º𩬩\U000eca93\x9eîö1Ðm(º:R¢\U0010c1ab0Ò\x86(Øâ\U000f7b86@ç\U00058de5©\x0c´\x1e\x9aaz\xadF_Ô\x1e𠉗Á\x99Õo:\U000bfe34½t놷\U000cfd6b\U00087811.Ý¹·ÞË\xad\U000855b8\x11\xad\x99/Ø\x80]\x88\U000e442a\x14RhP¥.Q¾n\x99\x0e\U00107da8\x89\U0006ce21+«[Õ\U000a6b3f\U00082d59v¬Þ\x8dØ8\nßp\U0006b275\U000974fc\U000f2026é7\x19É÷¯à\U000d8eaa\U000d477a\x99\x1aÚ\x90\U0002f4a3\x18dýy^7\x13\x98\U0003f211\x9b\x8e\U0006ce7bÚñ[+\x18\xa0;Èúo\x11\x8d\x16\x83\x00>𭋿y¨\U00041ba3\x03\xadºG\x94þ\U0004ee12\x12D\U0007a888²\U0009d368\x87\x94\x93L\U0003b241𦇵\U0006a387Ô\U000ddc9e\U0009959f\x80`®\U00103fe9\U0007a544\U000c1b61\x12Tå"?VMà\U00048e83\x04Baû\U000b0d11\U000d7bc7\x10\x19]\x9fjÓe-\U0007c6b6\x8b×}<\x10\x89Hë\x06\x07%\U000a2975ÓqHO8\U00045df2<\U000e10d4ñwxò\x84½8æ\U0005181dÁ\U0008734eÄ\x87iì\U000c15b9\x0f;Ä|Ç\U0001513a*\x1b\x9aí·°X\x03㳧8`{\U00083a9b\x89i\U00072f49\U001062ef\U0004bd505U{\x1bí°D\x15\x19n\x9f\x01Ï\U000aee5dñ\U000a9a88dØa#K\U000fb562\U0010b63f4$\x84\x9bL\n Ý𪬲\U000a9475:v\U000ec9a9\x07¯©a\U0009624c¸\U000655dfÔcäÒ:Ê\xa0³¹\x96$x\U000480d3±Ç\x7f|akÒ¼®l\x94\x1c\U000ba4a3Ý\U000dc40c9\U000d75d4\x86\xadFóëåú蟊ý=p\U000878f4\U00066f8e6\x19ÛKÚ\r\U000f8541\U00031a6a\x05\x90ý\U0002ffc4\x14\t\U0007a3f8𠘩ðHméêk\x9f\x1dYÈ\x0b\rG\x17³\x05(#\x9c\x03Ó\x07-ê\U000e508d\U000db64cÆ\U00079aba/\U00085edfò\U000bf3feÀS\U00058d31¸\x96\x10±.4Z«\x97\' O\x11\x95\x81\'o)\t檺æ{\x80\U000d0be5í\xa0\U0009a7f8Ez\U00067c5aH{\x87\x1c\x9f\U0006428fk\U000e07b0\U000bdc63f\x15¶!oÎÊ\x13£ã\x03E\x99\U0007235eIfI\x98÷8õ¥kÒÇÑ\x16\U000bc8a1\x8a\x16\x0eO\x1b\U000dc865\x85@\U000da8e1𛱥\x98\x9a\x9e\U0006b756³ÕÞ´;)\x0f\x85\U000c2968Æ\U0003f65aZ\x034\x12ºúâôeèw²À*\x01;Ë»\x85ä¬c\U000bc0d9\x7fÒÍC\U000331a3\x92þ÷\x08±\x90\x97½»ÕH\U00016de1\U000ee81dW)\x08%\U000d59f7\U00011ce6Ûy\x9eXï\U000ebb59\U0001bebb gµ\U000c4867ç\x05BSÂ\U000d52a3*¢\x9aÀô\U000e498e¾:\xadÙ\x964\U0006ec1eX\U00093db8\x99#\x8f\x1c\U000e0cbc´\x98\U0001edb1)\U00103dc1°®\U00096e41DÑ±>\x94æ~Ä\U000746f1\U0008bc4b0ìdá\x98\x15Í\x078ø^ó𠡙\U000c6e27ojrWt\U00062954îÔ\xa0¯\x1d춯p.\x1a\x80\x95Þ²tÒ\U00042376F(d2\xad\U000f224f𬻿~O&l\U000d04f1&\x03*\t\U00041541ÈìKÃÒ\U000da7797\x03\U000a7fea¸Ø\x16\U00098d71Övc\U00031aaeªÜ\x05\U0010a8a2\U000e6329K\U00040f36逤ñ\U000982c2\x80Ê\x0b\U0002fb16Ï\x99¸\U000aee70+Þ\x99\U00106de5\x90[F\x08òl\x9eE\U000400ab¶£\x93\x98¦\U0005d189ö\x8c¢¾¿\x18\x15\x9dÈæ\U000b9311-\x8dk\x7f↘ã\x01êeË&õ\U0003356cÛ\xad\x14Î\x03Ä\x08Z\t\U00076f72^ñ\U000bf1ff\U000562f3\x8a0IÕ\U000f6906\x82\x194\x19\U000c1d2dî\\\U0004894f\U0004028b&\U000a5884f\U000a85ab\U00014eea\\\U0008e174\x1c\U00055f4a\x9aiG¯\x1c\x04ç)\x1cï8VÒ\x0ftÚ:ú×VÐ¬\x85\x13\x00"À\x01ß\U0009b925¹sl\U00039220\x8bÜ\x8c4h\nhÁN\x0b\x14\U00031600\U000e907bZB¬¡\U0003f324^æP\x02\U0004950eûSê\x85&\x7f\x13¤̪µv\U000853e2\U00061a5c1\x84o(\U0003a8d0\x183û\\µx#,ü\ní\U000ce1aa\nÈÙÕ\U000149a5E𒃇\U000e3079f\x81\x07>¼¨\U000e347d²\x194·\x1fÈ¶\x13Ç¾ëÅí\x9eo\U0010bf61\x0fåºÆ´\x02\x03\U0009c0fa\U0003c2b0\x164\x93Á\x14\U000cc41dMẙÿ$𤨧\x9e\\4bT\x8epÿ\x02ý©Ë\x1c\x19홠&#¥\x88\U0009e6b9¹\x11\x87À\U00015627\U0007647f\x04\U0009fbf2\U000a38dd[tA3\U00084041\x8c\U000da640D\U000f6268\U00042879°\x90v!F\x14g\U000e697e*\x89B¸%\x8do-£Y©\U0009215d\U00052028®E4\U000b66c8'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00363s
====================================================================================================
2025-09-18 23:56:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': "w\U0007efae\x8e\x88\U000ace18a\x9bÇ,|\x91*\x14\x92v\x83\x8aÑ×\U000dfa2e딝\x170îÌ\U0002ef8d\U000bd07eB\U00077653(òR\U001000a1\U00042883\x1c\x8b6{\x85úE¡\U000bea7f§õE¯Å\U000caaf0\U0004367e6\x7fÏ\x06¦\x05\U00048870Wÿ𣢪\x0e\U000597a7\x17\x98\x1dÈj\x1b\U000592deø\x9b(Ë\U0010d144On\x94ì@\xadÌç\x1e\x1aJ¸ËP5q䕎©N\U0008625f\x00ã3\x14|ÿ/\U000c19de\x0b]óEÁ\U0001dc61\U000716c0×\U00076d02\x1fJ@\U0003c8c3\x8aÄ¨=v1Äú¡§\x96\U000e1680ú\rÔ\x0c@jC\U000f6f28\x9al@\U000bba3a,Ã\x94\x9cÖ5ãdT𘃤È\x15Ö\x0fçäÆòp\U00048792!\x12E°y¢\U0005d9afr?𭚴ìá\x86F¯\x8b\x11¾\U000fee09\x12Í\x8f·\U000eac38h\U000c303e]\x05\x04\x88Rj=Uë1pñ;\x01j@𝁐\x0fL9\U00050966®\x81\x13e\U000646a2µ\U000d0736M¼IEVKD\x96EE\x81\x12³Ù\U000915c9\x1b|úÁ𪱼\U0007e6edA¨~\x81\x04mÝÒ\U0006cd3a\U000f0fac\U0001c198«#Î$苈Ø½´¾\x7fþ\x11\U0004392dLßÕ\x04y\U0004981ai\x1c\U000961f9ÑA\U000e1a04\x14𮕸w\U0007f2ddv\U000996a3\U000b6b6dQ\U000f0dc2\U00055743ß\x9cÚÓ𣋦ô\U00100a94\U000c519bpZ:𗉲\n5¤àb\U000e2b8c\x08SÇÚ\U000a090c\x82Ó}\U0005d8c8\x14\x93\U000a6900[×õ\x01vÆÒ ÄaMÌ+@{\x0c\x1e\U0009e78d¦_\rh\x01\U0010ed87!\U000591abÄäÿ\U000e0cd3\U00066ff1Óû\U0009d2abzí\U000980a2\U0004b7fb¢\x85&}½\xad¼\x8bãã©Í6¶\x97(\U0003ef28Ç\U000fda00P]Aj\x14F\x17\x97^𪢚\\Êà\x08\U000fc91d¥ð@\U000deaf8¬ß\U0006d961ùUõ\x1anÖc½\x1a\U000cd8ca*£´ã\x86\x06\U0007665c:.¹x\U000e68ac\U000a834872\x14sòDåÑ¶\U000a2530pb\U000915ff\x8b\U000c3654N\x19ÿAµêR\x1b\U000c56f9Ñ\x98aÒ»8\x1e\x83\x15\xad:\x16vòIé\x91\x19,\x08â\U00080abe\x13Ð¨𨂤¡ (³\x0e-©\x18Ý\U000cd75d[¼°#´Ì«!g\U000cc91a\U000dd98fÊâ\x9dS\U00071aee±ýn\x98PÛ*\x04J8\x1däõìî\U00055d0eá7\x9b\x0bi\x86\U000b2088\x15\x08\U00038386\x1a\U000c2240}Uumô\U000be6c2Ã\U000898cdý\U00076773\x98\U000401ac\ra\x83\x0f\U000bbebaævÊ\x0eeÊ*~\uec33¹ä\x8dµ\x8aå\x07\x7f\U00102605kêQL¥CFä\x9e¨rª\x9fÐôÁ\x11k´Ä\uf194¥°=\U0008b8efb\x80`]Ä\t\U0003d665\x8e\U000fa4ddW\U000978feá^\x8e\x833¤m\x18i\U0006e8fe歾𡻄\x8c\U00050730Ð\U00013c6eÀ\x904^N\U000b775a\x81T<üA-î\x8fmOï\U00071061y\U00080e4fË½¢H\x0e¼\U000a07a3\x13ôÞ«è\x9a\x80ù\U00042568\x96i)òU\x9c³º)«\U000a3af3%N\x82tç\U00032956\U00072624\U000f9c9f\x9b\U0004d273µ\x06\U0006a01b~\U00059984\U0005280fÕ=\U0008e69f\U000536df\U0004fbd21û\U000715ac\U000cecd9ß\U000f7d9fVg\x83»\x06\x82¿\U000c1a35)£\U0009e996!\U0001387b³â»mñÄÚëSøÔ\t\x84\x9a\U00056089uNø)%\U0004c973<\U000891ba𬀗ä\x82k1\x8dý\x8a¬¼\x80\U000434c4\U0008060d^\U000601cd\U0010429f\U000710a1½=@𠟵¼?Ú\U00070181𤱪\U00096fc6\U000f557e\x1e\U0010eef1à\x1b경\x1c:?\U000ae78f\U000a6879)¬\x96\x89J\U00072717?\U000575f6\U0003ce14\x00ËWÕ@\U000c6551\U00095f37þÀ\U0007a446[\x17Y\x06\x06§r\x1c?𰥖Éaö\x14𪖡\U000e8cf1\x9c©2\x81¸ý\U000b2b70\x1f#9K\x90\U000cc12f9òx©\x151L]\U0003bb3bAhw£\x0e洍TøõEà\U000c04eeTã6j\U00044175\U00049b438\x95¦\x9d÷ÂØ+\x9b`ìÜ\\\U00058f73ä{ÿJ\U00088757Ñ6ð\x1a\x06𣔑Y9\U000da706µ¿I\x19½H\x8e{ñ¤\U000142a0\x8b]\x9e\x93\x07Õ\U000d5a8d\n\U0007a5fd\U000f7c48X\x05\x97Æ\U000cf1f8âü\x89iµ´5C\U00055fe2\x88Ñ·öo¼'\x84\x93wî\U0008a188-«AÜ\x98\x8b\U00091a70\U00082e2c㪗\x1aFÝQC\U00098bd5\x04âß\U00050413U\U0005056cµ´b\x05\x08Ù\x18t\x93eñ\x16½( C.ôñå\U0004ea93[¿Q._\x9fÃa\x87\x02H\U0003a5c0@¦B\x85®Ô\rftÊ\x19ó§»\U0010c64b¯\x80\x01¡\x85\x9b\U0005c4a7\x1dÌ\x18\x8dú\x00~\x0e\x92à\U000e0ad2À¦\U00071ce2Íd6藃7Õ\U0005e97c¦\xadJD\U000d9052ª\x1d\x0c|\x87\x892ÊoÌ\x92\U000ec7fe\x9bÍòüôï«\U00038f265\U0008c8ff8\x19\x90¢\x8edM3𡊕±É\U000813efµ!U\x04\U000ba58fÚKÈ\x04\x96\U000b4852lW\U0005c195\U00107c9e<2\U000f6145\x85¼6\x17nd\x95é\U00087fc0:Õ\U000c6d8b\U000f4d7aÀ\x12ÀÓ¯\x067\U000e8c15\x08¢ñh½\U0005c752¼\x95xÑT侮`ÿ\U000f9e36+[\U000b5d5f\U000e214bb\x93wæ\U00077bfc\U00101d43´Å¢ÓÆ\U00105c9fºs\x8b\x8bQ\x1b\U000eb3e1LၖG3¾\t"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004209s
====================================================================================================
2025-09-18 23:56:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '2\U0004b214\x1e>\U000e819dÊ\x1cH¢a\U00085912û7\U000ead88¤1\U00077557r\U000df5ff0Ô\U0007da6fJ\x9eUÚó\U000abc2c¿Ý\U000c1f97Iui1ÿL©\U0003afa4ºÒ%\U000bab55ÙôÒ\x9eçªsÚçr"\U000ed8c5\U000fd9b0O ÂÏæ\U000f4fe6\U0003cf97\x8e\U00074bcd\U000e53e8{éÓÈUl\U000aa18f%\U000ffe51»\U000b81f3\U00051132.Ow¬ååx\x8bBXÓ\x1d\x17!£\U000715c5\U000decc5\U000d0765*𰘘ù\U0010bafe&¡\U000e88e0Í\x9c\x1eÐtÌäÃ\U00104d0d÷\x0f𥸵\U000eaf0fÇ\x82ÿàAÝYØ) ²\x0b¶èµÈ]«ÎGNRñ\U000c1b83dò\U000a4217\x81\U0008ca9f\x01¢*àZé\U00045fa8Âü|\x9e\U000e3f1a\x8a@\U000a4e56ÌWÊ\U00058e25¾E\x93V·  \x7f¶ûRnõ3_\U000f3457𬮒<\x9b\U0010579c\U000930beãö\U0004944fR5¥·\U000e1ca50𪉧\t\x10Ò\x01\x94pê\x97𧑟\x7f\U0008eaf2(¬\x10Ù\U000dd42a·c\x9a\U00058da4\U000502e3\x9a¿\x0e\U00081967¹[Y\U0003337e%®Ýy\x9a\x9a"\x12\x85\x88cï\U000cf6d8lSÜ$vvµ\U000cbea5ëò\U000765ac¥/\x80\x14\x9a\x95Ô¸i.F\x06×\x7fßÒ%Í<õá\U000a34a1\x19\x04ë𢘿\U00074e75\x81fS\U000d58d4À\x0fçVç𪻢[\U000bbbf3-\xa0\U0003d7b1𤣹\x90=\U00096f56\U000e8f82ça\x89\U00015654æê\U000a3ee3\U00054064\x13¼\x1b~\U0005f9a0\x88ú\x04´\U00082b24\x9c{Û?0ØÅËª\U0001af90\x9d<Á\x0b°ã;\x8d\x1e\x8c\x9d\U00042e43\x99\x18pÂÙQÅûx¦⚬B\x07=©uÒ\U000803f8\x9f\U000daf9dáÕe\U00101f47\x9d¶\x14Ï|:Qç\U000e8e6a\x92Æó%Wx\x0b\U000a53c6\x96g\x1dÿ\'𮢻\U000f8809\U000f9992\U000363bcV\U000c3a23\U0010f513´\x00Ó9á\x03\U000b99f9à \U000e5b24\U0005746f\nð\U000faaa3b\x8e7\U001052e7¤Rê¨\U00059242\xa0)z\U000e4876\x06\x8e\U000b7bee\x06æDøU×¾@芑¦\x942\U00049775\x8e\x0e¹´5çc&˩\x10\x1b\x86\x11hu\U000cd1a7Ã¹\x88nÄ\U000ea2f3\U00094e21¶2d\U000bd1b2Ü\U000b30bf°w£»qç\x8cút\x9eu¢vù\x11z·\U0004e29eVÈÊ\U0004e725\r\x10\U00079da8é䍰\x1c´Û\U000a5649\x977\U0007c47aã0\x86\U000e8f8c\U00071776P~°U\x02\x02±óÐä\x88\x19\U000934da\U0009971cõÐ𒈈\U000665ae\x00\U0003c12fõ§\x90\x0cºé\x84,üiý\U000ebd0f§@\U000dedcc\x81𢖻\x13`Ö½\x8f¤¼ø\U0007b325Ø\U00049060\x1fÿ(#ü\U000fd00cK\U0004c3a7è\U000f1759zÕi\U00041706`\x80\x11;\x9d\x04Ù\x03]\U0005f30d¦\x8dÈæ𱀀É\x11o\n\U00049932\U00063c69G\x90ÇªÁ:ù£uV"-W\x15\x9c\U000e786fågÒ-\U0006905d-\x8b\U000ffbd0\x04ç\U000aca6b^F¹û:\U000dcf8d=Z®$\x16q\x92\x9a¨þBÒ¨:ß\U00072a0cû\x98·\x11\x08¡Ø\x86\x1e\U000e797a:\U0010768eË\U000e65eb\U000a4b52\U000a8771p|D\x15\x1c\U000adab3\x08\x9b$\x87\n\U0009718e\xa0;\x9c𝇨R\x19X\x8aJÇºT\U00057896Åe\x03~\x97Ý uù.Ð\U00083572\U00090c62=%𱋳aR\x01\x84C¯AÂ~\x9c\x8d\x99𨱆\U0004f468\x10¡Í\x84Ú±hì\x9cµ¬^%\U0004dac8¢ò \x04\x05\U000f7b21àýn\x04¦\x0cL\x1at\U000a7f6eñíó\U00033fc9\U000332b2®å²#\x8e\x02M\U000df520\U0004e508bú\x15¿\U00033205Y5\x06\U0008dcccÆíQ\x11\U00048e78\U00099a76\U000f4134qe\U000a41a4\U0010f7b6·H\U0005d8ad\U000bbdb1:Ç\x05QRO¡\x9e\U0008629eW[º𢏿ié@ëkÓÞ©\U0005fa84\U0007c979H4\U00053d9e\x80_K=J¤\U00032218\U000ef68d\U0001cf85&\U000fd7c7V\x93pmX\x10òîU\x91\x9f¢Î»²𰖐\U000e9ab6]U\U0004e979\U0008d89f\x96𫠬ã*\x8a%\U0003eabc[\x03P\x90³_"Ýb\U00036249J𢠳yï\U0001eeaa\U0004223c>E\x01u\x1a¢\x12\ue462Ü\x1d«lN\U000f7531ãø\x9f§Aúú\x9b\x9a8\x131Öî3O\U00036669\x15#¦a営\U00076f04\x92ùþIg\'÷6\U000c594cà\U000a918a\x08Þe\U000767a9w\U0008ba4eK\x8bnÍË"\U000492c5ó\U000fd0ac\x16È\xadk\U0010e4b3\U000631f4\U00048d15ÝBH«\x98\U0006cc8cC"6\x14\U0001e37cÊp5\x1e^EZ\x9f\x04M\U000fb9fe¶ÍuÕÍ\uf6bf\x8aH\U00102540B¾\U00055338\x1f?»\x91\U000ca2a4¨\ní\x1f°S\U00107b22V\U000c0903\U0010132c\x94\x03\x96\x1c\U0010b238)Ól¬îÇ\x8f\U0003745f\U0004c6ab\x94Y1\x04èu$\x8a\'\'ù:nAdØ\U0004123dàFEÏ\x81²Gc<|\U000f3c8b\U00095ca4\U000bffbaO\U000b397f\U00047b6a\U000814e5V', 'password': [',¬']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [',¬'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00369s
====================================================================================================
2025-09-18 23:56:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': '\x0e°sîëü\x14ÓW\U0010577b\x8b~\x86×\x08ÿ^è\x83\x161\x89𱈂\U00090feb\U00035487\x90á\U00038e9c\x01\x8e.𗹀¯Æ2>\U0007f26aÑ¤\x96娿Î²;\r\x04È7\U0007f097\x03_òÌ\U0007a778öZ\x9céàúÛâG\U0009eb96i\x82\x99\x85\U0009085f1t-Â\x1ej뉎@\x9f\x92B\U00094e502Ãþ\x1d\x8aÁÁ\x96\x93\x9b\U000c988aç\nÃº\x91£.\x17I!Pì\U000f3123eMia\U000b2a97¥±\U000f4018ã¥Y\U000d0371è@\U000f7ba1ø\x94;&\U0010145f\x0e@7â\x8e^â\U0005644c\x11}\x9f\U000ae39bØSÿû𭥩\x1e©"ä"º)ý\U000af2fc\x0b¯}ça7®÷\U0003c1b1Û Xö𖢛\U00075b39Ù𧉍Þ/\x0f\x9e\x1b\x86,È䞢A\x03A\x1c~\U0003c077í레\t\t\x13ðqØªÇ\U0007d4e2`{Ñ sö®½Â\\\x15ëy\U00054786@ÖU\U000e6b94\U000534f6\x1d®²\x87\\\U0003285f»\x16\U0006edb3lRÓ^&[\x05\U00050dc0v\x16\U000feb12§ð\U000c1a79>ð¦\U000b80e6\U00012d82\ru\x15ÁD𧈸\x8d\U00081139\U000cf279\x00U\x06\U000d8273\x07\x8e£j\U000ea5e3Wmc\x80éÝ$|\x83«õë\U00050f7f\x04þ\x19]\U000fa9e8=\U000978aeL\U0001058e?ÅD\U000f1279\U00031a68\U0009af07\x1a\U00098bb0[¡¤j\U00038b80/ÞTµ\U0010ffa7\U000a8465Ì\x11û\x17\x93\U000bb567\U00082a7dîÔ\x13«6\x8d𢔼¸èô#óè\x86Ú\U000d40a8ðÕñ\U000e4f84Vî\x90/ö*\U000902f3ïÑËUc²°\x9d+\x14¼«\x06;\x85¨äú\U0005008b\x95qÊ{dpgù\U00081981\U001049da\x1a¥\x1a@\x15\U0003ebd1u{\x1e9¼\U000b4a24\x81\U0008bf508\x93LU5\U0001edea\U000e3b07ÅZUÒ\x89Ü\U000d487c\x18\U00095b93\U000a8593\x04k\x0e\x18Ò¤Å\x96Ö\U0005b3faVÔ&\U000cad4e\U000ed8b8𡗆𝌀Èã\U000ae8d3\U000cf8fb\U000ab688]^s®\x96P\U00056631Òê\x8a\x18Á\x9b)rõXÎ\x06g\x92\x83Ô𗂍QZR𒃫\x1eï\U00057f7e\x8ds\x03Ç>÷\x13ß\x01ûU¦{ö°\U000affc0\U000c2e58ç\U00066adez\U00060d64\x1e\x18\x9a\U00060a84·Éø\U000463d2\U000d02d7àñ\x8e\U00059cb2¹\U000f4ed7\U000f83b7\U00053f80\U00073a25éà)ã\U000ed086\x07𰅬c¿\U0009ab52\U000f7cf2ÿÜÙ¯4gFÌ\x1c"ä>R𨓣𣨤\x90\x81¸PsE\U000732fa\x8c^g勻ï\U000a242c\U000db11a\U00084bceÌ;\U00092185\U000a9866.Fn9º#L\x88\U000ab54fd\U000eed21GÈ>il\U0003d035\x14\n\x00×/Ü÷É\x90L¼\U00019150û\x1e÷\U0009bd7b±\U00090fde?ÿ\U00109846\x12\x05ñßªi\x1bÅ\U000367f4-Þ\U000cd336J\x19D\x82)ò%\x8c{\x7f\U000cee75j5z\x9d\U0004133f\U0006419f\x88\U00033939À@God\x9e\x95iZ\x06\x9f\U0006681có䛶·\x8fv\U000f7303%\x07\U0003f753\x15¸§¤!\x80\U000151c0¸Ë\x99¯\U000b320aX\U00082a5f^\U000de7a9\'ë\x89Ì.²Z\x96AÅü\U000a3d03\r\U0010828f\U0003cb08\U00102ce1\x12ÈB\U000c6c75\U000a32d7Î\U000b4ebf_}\U0005b520\x98\U000a8b05Ñ\x12¹|v\x9fë~ïÊG8øó3𪧹¶\x02ª&\U000fcb70Ó\x0e4¬1w\x06±}JWr\x05³¬2\U000bc91cr\x8e\U0004ca7e\U00057a32\U000a8ef4¦\x11Édõ\x08\x8f$qEw²/±Ü\x04T\x08𨶣|\U000e212b\U00067f47\U000bfc5a\U001009d4\U000fb6a1tÀ&ðËMÔÑ\r\x04#6\U000a2f89\x9a9Rä\x07³\x9eüY\xad\x96ioùAAjr\U0009f422\x88\x05N |É\U000bb3b5N¦èÃôwW\U000e7f4b·rM»Ä\x00¸´\x83\x19\U00092404¦}\U0003e3fd\x05\U000da183\x92\x94\U000cb0000üg\x8cù$\U000fa6f4h\x99\x04#L\nâ\U0008d09eGÞJ\x95\U0007d61c\U000880bb\x00RV\x1d¼R𗰥Ve=íÿW;%\U00064923ë\x9b\x1d\U000a6df3Y\x14\x85MóÛ\\3\x94ßá$é\x00\U0004b27d#,Ä+\U0004c645\x8bð\U000d871dè§Ñ\U000cbbb8\x0eí[è\x12Ô3\x11º\U0010f075f𭅋F\x8b¥𧭱×L±½\x9a¿JZîxäÒ𤢒\U000610c4""°Ç\x08:\x1f\x83hcðóëê\x96Ð\U0006db66\U000cca9b\U000b831aÌF\U000395b6\x1bçúÿùÖA©Ö[\x0b\U00037d61\U0004a8ba\U000d7438\U000d9aeb|¸\\e\x13\x9có\U000b6e03\x97\x19½\n\x8dªWØ\U000af4de\x98î\U000b2096\U00099f08+i(Õ\U000ba876\x83聜r\x01Ì:ü¦¾v^\x9f"\x0c#\U00091f57\x8c\\T\x10\x18ËA\U000f511b¾)DØÚn\\\x03\U0007fbf5Ç\x02\x81\x8b\U0004a6f9Äh\U0009b9aa\U000ab498æ\U000793ab\x80ê(\x0cùþ\U000bdbeagK\U000698ee\x16N°÷uE¿ü«\U0010861bû\x1d÷DâÝ\x86\U00073fed\x97w\U0009065a\x8c\x13¾×\x89·\U000d13b1)ªê\U00075998\x97ªv\U00099877\U000a1b96%\U000531ef7\x91\U0004cd60¹\x0f\x1dé?À\x1aç¨iû&\U0010dcde\x15P5I\x9a\U000d69ed\U00083837´-\U0004849e\x08\U00074d23|\x1eÛ\x02G\x85àT¯Ø\U0005f6d7{\U000c4a03\U00066896=È\x18³}:tXx\x983\U000a9315Ë\x8f=võ#\x97\U000c801bXF\U0010d9b4\x18=\U000ab2b7§pr\x149ü\U000a4f4f軠\x1c$\x91Þ÷vh\U00058e45\x0b\x1dè\x8b,\x98ºò\x03ÇÝ<i\x8eÞl\U0001629c\U000715dawÕ@Ã\n\U000afabc\U00068319\x1fa\x8b;\U00100ecd\U000dad8dO4ìÈ\U000dba78´c\x1a\x00\U0001faec_ø'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003647s
====================================================================================================
2025-09-18 23:56:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004077s
====================================================================================================
2025-09-18 23:56:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00387s
====================================================================================================
2025-09-18 23:56:16 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U000153e0\U00076b4d\x85W\U000c5ca2\x8dú\U0004264b\U00089539,9ò]ÒÇ\x1a¨p\nÍ-\U0007a834\x82\U00041277\x1a¨x\U0001abdf\U000c0a0d|\x85«\U000f4f8býljn\U00069498\U0008d5dd\x0bÒ\U0005ec10\U000be8fa\x84b§Þ{\U000acec4\x0e\x12\U000ca2fcð¥Ë\x03\U000494b9õW\x92Æ!G\U00032189\U000329fdØ𠊅\U0001eacca\U0004ac73]\rãG\x91v\U00086568pH𰖹\x94¯À¨\U000cbc7eqÓ\rg\x12\U00049477]\x83Ó¼Älâ\x97@\U000c9d39\x88Ì\x92\x15\x02Û\x82\x11T\U000d94e0\U0005fac2W\U000801e2¶"á\x8eá\x03ò\U000d83ea¶\x87\x12Äà«´Ý<\U000ac904Fïÿ\U0003ed69æt2\x19\'ið\U000948e1\x7fÓ\x83[\x97\U0001ae9a¬RÂá\x1cìéY\x84\x07VýRqiR\xad§O\U0008e364\U00041513|\U00055020n\x83ö\U000f58d0«cZï\x9bù셚Ø÷\U00037a6cËd𬼹Û_@\x94\U000a37b9¨,:<q´lP𭩰\U000d60b4\x82-IØ\n#\x11k\x1bF¦åÿLK¿W¶º\U0003c669w\x9a\U000e1758ni§ð玝¢ÓW\x13V\x1e\nC\x98\xad\x04-Ü\U001013e4@\U0009d09d\U00091356£¶²@j¢°\U00081183¤\U0010414dN\xa0+G\n=Á\U00059d46=º\U000dc3fe\x87Ä1\x8d¶V\xad¡Ó³\x0c{%XI7v-<\U000b8d13\x0f·Ù°\U00069ad8LO\x9f\x1d\xadF\U00014917\U000696c9²\U0006ca55I\x8fR\x08\x81¾\U000abb6aµ\U00042121\U000c37e4^p\ue2ac\x01\xa0+o\U000d702fI\x13쨢&\nÕÿ\U000954ae\x7f\x93\x1dç\tÆ\U0005234c\U00093b34\\\nM¢\U00031492µ\x8a!숽²\U000c9a8f\x92Û榁£ËÆI\x8a\x13Á\x94\x16cÈ\U00097c6e\U0004bb31\x89Âø\x88öH\U00087493\x88\U00031d83Ã\U000191ca\x92ùZÄ5\x98\U00014a9fA\U0009ecf9\x8c\x83\t\x93eç\U00041aaf\x0f\U000af491°\U000fa446Ø\U0008eafb\U0009f1b3\x17<íW\U000e1c39MCCLlâ\U000a26d7©´株:â\x7fú\x0b¸Z뤙o\U000dc010Ö\x0eX3SÚ¨\U000e6a92µãÂ\x97\U000dc4a1\x0f\x1c\U000bf4f5\U00064de5\x7f\x1a\U0004e254\x951E¥É\U000ffe6fÊpA\U00053cc4\U000319f6\x10l\U000cc4dd×\U00109ee6\\\U000ce83eùW\x83\U0010d988á]ÐØ\x04{}\x86\x80*¢\x1c\x91ÌÓ\x8c\U0006d404\x8díäÙÈ\x1eLü\x0b²¥@\U00100fe4\U000faa3b>\U0010bc2a𭷚\U0003c07eè\U0003eb8e𫔼\U000aff4bò\U000d43a1\x9e\U000a45cb\U0006a7ab]êÂ\x08[þsü&¡½lÅã\x93\U0008eddaDA¨ü\x8a\x1c$\x1cW¦CÀ\U0005c255}t\x1eº\U0001a97eÀ\U000a9890Ô÷Ã\xa0𡌤/\x8eÂ\x92Ü\U00038a99\U0003de6d勆¡Y\U000f1e63qï$-ÆÕE\'\x1b\U000c85c9v²R\U000ed558ý¾F\U000c43b7]\x99Ø\U0009b829¶9<\x17n\U00045194\x82\U000a5ba0²Ïö\x10õWA𩗨)\U00034662\x11\x8b\U000e9569Â\x94\x0fë¹\x9d«ã\x13\x0b\xa0Xd\U000f043a\x11Ël\U000bcef3<I¦\x94"\x15Qs\U00106197𖫛¸÷Ô õ\U0004a62a\x1c\x1c§½\x9e\U00092f46gÉ¥¹ËN\U000e1788\U000e4604ÓÇ\U00045718Ä𓁉\U000ffeedK\U0008547b9\x86¼Ê)lA\x19\x91û\xa0\U0001a64aá\\\x03ÐÌm\x7f\x89Ú\U00084efbI«Áß\\\x15-´QrÏ\U0009d933*\x1b\x16§"â\x92>âä \U0001dcf3!^\U0007cd3cÂËC$\x9a\\3\U0001a23f\U0003b481FIÇI\x99-\U000e9a97yX\x96\U0001b9e7áªC±ä¬e\x1eU\x08jÂcSÁ§|\U0007fd63\x7fA\U000ecd16ñg\xad¤KÑÿY9}\x0fÍ¦\x97\x89WÊ\x1d\x8b\U000d0d24w4\x90»£A\U00013db2Ì\U0008f48f\U000c38e8\U000666223°\U000fe924ªꂓv\U0006c872\x87£j\U00039cbct\x9eC)©K\x9d\x8f/1h\U000e16c0ì\U0002ee64\x03\x82»°K\x0c&¼V\x8b\x82V씌*}\U000f150d"\x80³}\U000fc283\x15J\x9dâ\x8291{\x04ÓÎq\x05\U000db8f5ÊÉ£³\U000813a9K\x030k\nb.\U000f4e0bD\U000cd01b\U000d7e1bY\x1e\x06B\x19\U000b0449{Wm\U000c94a7\x07\x0c´\x0e\U0006b31a÷æ\U000756a1\x00\x8cC¤\x0fõÛÈß\x1câl,*\U000e2bffX\U000d4a6d\U0004b21e\U0005b9daß\x18\U000589e5\U00075d73𐘤õ\U000c3827A\x16#\x12\U000a03da\U000db927𪨤|Iw\U0009711b\U0004015eÎ".\x7f\U00077c02\U0010d9b48\U000945b6©\x0b]\x02\x8b\U00038eda´{\x94b\x92\x17Y»óÒ£®\U000d8a0c쩤𤅷²Wb\U00072860S\x1c¥\U000195c6î\x0bi𡸁\U000141f1#\U000d99d9âÌ¯ÃÙÀ_y梄\U0001ecd3A\x89Ê\x08-ñ)!yìCöäÎ𰦍噡ª§\x80F`_𡈆Á\U00109c74\x89봼W1msû\x17\U00089254ÆÄ\U000cabcbÙë\x85\x10:ã\x84ÔÓ^L\x13\U0010080e\U00054f8b4£\x17Ý\U00055f72À\U000c0e29<\x89\U000f9311$\t\U00075b0fñ\x0c^2ºÏ\U0007beeb:u\\|@\U000e9345\U0005394bµ»\U0005134b\x026!\x1aB\U0005bbc0\U00087cf1\U000b51d4ÄÐ\U000a834e\x16\U00089cb2w")ð\x16\U0006cdbcRᒨ\x93ªø«\U00033775b\x97\x05Â퇢}é{*Ú\x9dÉ?¤Í\U000d0e9eMr-¸¢\U000925efá\U0009ce79\x16\x95NG¨ù\x04\U000e1711\U00011521\x044\x8d½\x1a(9'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003689s
====================================================================================================
2025-09-18 23:56:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003968s
====================================================================================================
2025-09-18 23:56:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -4185987153332310457, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -4185987153332310457, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003725s
====================================================================================================
2025-09-18 23:56:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 147816863786355799664835515781350595747}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 147816863786355799664835515781350595747, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003942s
====================================================================================================
2025-09-18 23:56:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004062s
====================================================================================================
2025-09-18 23:56:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '../../etc/passwd'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00412s
====================================================================================================
2025-09-18 23:56:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', "?\x01R\U000de57f^~\U0007c45a'ÞF!Å·\x03\U000ef31a"], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', "?\x01R\U000de57f^~\U0007c45a'ÞF!Å·\x03\U000ef31a"], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003729s
====================================================================================================
2025-09-18 23:56:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['p#µ\U00019837\x8a\U0003e01f\x19¹ñ=\x07ß"9\U00081c35\xa0'], 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['p#µ\U00019837\x8a\U0003e01f\x19¹ñ=\x07ß"9\U00081c35\xa0'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003541s
====================================================================================================
2025-09-18 23:56:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004056s
====================================================================================================
2025-09-18 23:56:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 17683, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 17683, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003856s
====================================================================================================
2025-09-18 23:56:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -18684, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -18684, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004355s
====================================================================================================
2025-09-18 23:56:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -24675, 'password': '\U000a8ccb𭋊\U000c7c95\'në\\\U0003988a\U0009f205¸i[\U000bda49Wá7㻕$(Jð©\x01\x7fÿ:\U000d7889𪲸Ó\U000fb35fß:\x0fÃéd\x99\x80\x9dê\U000a0541¶û\rEb7\U000113a2Ï/·ÔR\x1c\U000cfedaJ{\U00100ae2\U00075404¥\U00078689ÐêýøGù\U000d22c6î\U00079e54\U0010a810\x1f\U000f6cc5Ý%𦚼{#\x13æB>±𤯋3g\x0c욾M\U000ae39e²Q§ò\x9a¢\x9fYãí\x91\x1e5¤-\x15þèþB\x88\x08âV\x17¬\U00035ac0Ë\x8f\x7f\U00084e52Tv¡¿\U000139bc\x12¼\U00095870\U0006e21e\U0002f2e7\x07²\x17cÂ\U0005063b\x06\x91[\U00048527\U000d1a1a\t\x8e§\U00092aba\x96\xad\U0010880a\U00098401ºÊ\U000c4c0eéÏÐ¿ôw嘓\U000a2895^ðµ\U000ef078Ð\x03\U000616e3¹\U0009569f\U000717c4\x1bh\x1eP\U0004b5cd\U00087921\U0004b273\x02»\x0cDÅ\U000747ff𪜘\x1aÙ°\t\U000fd7d4\U000728d8 \x0e×\x80R\xad\x9dÐ\x80©\x87\x0b¨¿ÚJ!\U0008e7d6\U000ab1b6Q)\U000403d8Z\U000a3c01Ç³\n\U0008a1c2Ñu\x10Ä\U0005941e\x8b¤Ü\x8dH\x80\x8d\U000fa7dfaåw\x18\x8dE\U000739cbí𤈲J<lnY8\x1dg\x96ÉÌ\x04\'\U0007ce3c×ß[\U0005c7b8Å-\x03\U000f1d58×J\x17æ\x96+\x98\U000656c8\U0002f4de!\U000a7314\U000efa3e鶭\U00045f3e¦Rî=\U00103382í=þÿø¨\U00044493í\x03À¡\U00051c41lÀ7kÁkþÁ屯\x82¶0É\'\U0010a848\U000139a4\U000a7acbÎq\x8cf\U000334a3m[Ï\U000b24da\x9c\x0e:\x05üÒ\x99\U000de58fÇ𬚐*LU~\x1d\U000342b4\x0b\U000ed88c.\U0005cc0e\x80ù\x8f£\x8b\U0008d125#â\U000cbe88\x13g\U000d46dfC\U0006183bÿgÚ5\x1b}J\U000db47fq\x90ß\U0008bf30\x11\x9d\U00068235Î\x80ñ³;6\U00074ed1y\U00015a91ã\x04\x8a\U0005165a\x92\U000b5b70\x97Åm\x9e\U00098ff9©ì\x90\U0005f649𰮞𩵯·;0\U0006ba2dyh\x98>÷3Þò-ñ7\x96\x0c\U001048912Üc\x8dÇ\U0005291dâ\x8e\x13²j\x94\U0007081còG\U0004541c\U000de4cad\x9fÝ)O1£¿𫻄½·\x84ã\U00098ec6R\x8c+\x0cÈªz\x1eá\U0001e23e\U0008b07b\U00034311\U0002f7cb\x02ô\x16Ñ\x8a\x8f\x80[Ú\U0009aaecÆq¶m\U000b8924\x04\U000439cb\U000904ea\U001075c8𩢠\x10\U0001381a\'tÊ]\U00083d58\U0005b7aa\x83\U000b36ae\U00041529-¸O·¶\x85Ã\x14âuÒ\x9c¨5\x92Ô\U0010e0b3Yì±ðÞ½\U0009a678)÷y#÷\x86aJ!«À\x1e\x82½7¤\U0003360dQA\x7fÞ\x8b.\U00100aa3o\x1b\U000894de4È\x14³¨v\x90¨X\x81Ý\x83\x97\x93w6P\x8dvÅ𫿪*\x1aL\x06W\x81\x80\U000cdd2aÛ\U0006528b\U000ea0f1Ã\U0010547e£M¦ãï\x01M*\x07\U000c4345\U000ba9776\x07\U00041395?üt4\U0008c848]\U0003a35c\x98Ð\x80µ\U00079413\x12\x11W.Ï6\U000ebdd5Ã\x8a¸ç>\U000b20cbT飮\x91\U0001a9d7½\U0007bea9M?Ä\x9elj\U000e9127\U000c23b6â\U0009e08b\U0004cd66hÆ寘Ë\U00089c66\U00107e8f\uee9c÷á§G<âa\U000c0837¯QãøÀ𥥥¹\x82\t¹oyJêû\x7f\x92\x19=\x95{¥½ud}(Pm\U000e3e5e\U000a13dcO\x84m褐\U00049fd7ÊkÛl ÿb\U000cec00¯k>SÀhL`\x10d£\x05¬\x81\x00¼}\U00092e71ý ÐÄ4\U000aa77d\x1e1\U0006e462\x94\x14ù¦À\U0005fb9cáàæÏÊ\x10}/>\'\x9a\U0007082dÓ\U0002fbdfË\t¤Ö\x1dA¯\U000606c2\x8eÓÉx\x8b^]\x17\U000b141c\x83\U000f44c2청ÿ\U000c0dd9ð\x15¾Õý\U000d492b¤\x0b\U0008b1c1\x0e¯\x06Ãd\x9cø\x96`\x83<\x9cD1a\U0003b960Op@7Á\x8eV\U0005f35c\U000c0e93\U000edab5 \x82D\U00036511î*§\U000471a0\U000e53c3\x0c\x15ï·𗬨Å\U0008baa0\x01r-ùi\U000fbfc7\x07\U000d1cb5àÚ\U0009ddc6\x17\x8dÄ\tñ(Iò\x00\x92ì\x1c\x19\x13\x95\x13Zü m¿l\U00055b92¤ãºò\x18\x12𗢮ë𨓽\U000bbe1f\U0006c6c0wuË¾Öé\U000bb154\U0010155c\x19\U0005f3d1³\x85nä~^\U0006deceõí£¦\x11\U0007cdc6?Ùiô#·ªÃÊ\x8c\x8c\x95\x94Í{\x07(á\U000e771cx\U00066705\n\U000e7487\x1a?㣾§\U00064942\U000e633f¡\U001048b8ÖìøS\xad¤Çq¿\U0005c4b8Ø\x00:\U000f75e5»U(2ô\rú\U0008e285£\r\x1dmL1v\xa0Ä\U000f7fa1\x10±\x06E{Jtð§\x12\x0c\U000efb54À\U000eacc0\x15\x13\x9c\x99\x17¿\U0010da54\U0009ee50ÞÁ×\U00072c5c·Í\x14\U000867ca\x83\U000d370256\U000e3a05áy.\x1a\U000b5522?\U00088067\xa0J\U00054014\x93\x84,\U000a511a\U000db973\U00072104\U000bf7c5w¯Î𦂜Ó\rU\x95\U0002fe75u\x18\x07Õÿg\U0009238c¾\U000b9679\xa0Ó8\U000d5e00\x8eÄÍ\U0008c846º}Þ\'K¡Q\x9c\U000391dbÉPÜ\x83\x0bå,µ]\x93\x80æ2\x80\U000edd8b\U0003299cË\x9f\U00106eaf4øª\U000d42802"\U0002f5f4\U000c4be65[UñÕ¸\x13\U00053f4d\x97W¹<\x85\U00012a0d\x8b\x11÷ì\x8dé\U00105683\x1e\x17\x90\x80þÏ\U00091fdd\U0005fd670v\U0010993cJ:f\x16\U000590ce\U00036c0fpü.⽺\U000c0771>\x9b©Ù\U000abcf9\x85Ä\x87COÔMX𪏋õ\x13¬\x80t\U000cc9fa\x80¾vø\x83ì;\U000be90c¤õ\U000f3abdÄ¦ºæ\x8e\U00083eff\U0003433byØE𣋾\U0001efeb\U00045bc4W\x13\x9a 8öÆ\U00069419M\x92\U000fad0b¨4\x1bé\x99\U00036012\U000a8708𝖦wq_\U00092123GÚäà[\t#\x11\x80c\x17\U000376d4»þ<sÙ\x99N5t0\U0005737cp\U0009f4c4¦\U0008952a$\x96*÷\U0006f8bfÒü°jþ7±®¶\\©\x92\U000e851f¶\U0010ca9dà\x1cÂ\t4ì\x8e\U000c9ff7u\x07»\U000b025eîl\x9aQ&\U000d372c\x82a8L§Õ°|ó5o\x8f\r\x82\U000e0637@oõ\U000af678~\U000ed888I©\U000f0f74X\x95L¢\x953\x85ó\U000164aay\xad¢ÑläÎc\x16Û\U00012ba9\x1díW\x0c\U000e39b1\U000edb88¬o\x13\x95\x1f\U000ef91c\U000f2ed4â\'Ér«;-.ë\U00014ce4\nÈá\U00047317à<ÿç𘮑\x96Î𠦤\U000d34ce\x96}\x80µbôdS\x01¦*ê\U000be4f9\U00083a57JP\nJ²ã\r\U0008ad47)\x15SY«⟀\x05\x07H\U000c1b9dÿô\x9dÃ\x00«_\U000ea636ª\x10\x1b\x9d\x91#ò½\x83¸³\U0003b898i\x10\U00052063Ï\U000ec9a7\U0004de80\U0001eda8üF\U000ffe86\x05¹\x06À\U0003c86e¹\\\U00096482õ\U0007973a\x15\n\x16ÿ\x12½@)xî\U00082e9eZsK\U00079d21\x8b\x96³â×\x93ë\\¯\x85\x85÷w\U000c4da6?¹\x08ùs\U000f59damB¬oÁ\x0enÓÿfA\x12J¨÷[ð\U0008e010YöQ1\x07\U000ba512Öe\x03s-\x86\U000d29ac\x85\U000b18a2k7{\U000b5b36"\x87\x1c\U000ec6886\x18'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -24675, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003883s
====================================================================================================
2025-09-18 23:56:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 10647, 'password': ['\x88`Ué\x85¿\x02\U0004c64f\x0ftç', ']ßp1\x19@ªÒ\x00w\U000ef49a÷\U000ad6e8', '', 'ö', 'ás|Ü', 'ò\U0003da59 \U00088445l', 'yÍ\x0b\x83#', '\x84<wԭ\x9dTw<((\x13u\x9e(\x99', '¬·', 'bFl', 'ï']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 10647, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x88`Ué\x85¿\x02\U0004c64f\x0ftç', ']ßp1\x19@ªÒ\x00w\U000ef49a÷\U000ad6e8', '', 'ö', 'ás|Ü', 'ò\U0003da59 \U00088445l', 'yÍ\x0b\x83#', '\x84<wԭ\x9dTw<((\x13u\x9e(\x99', '¬·', 'bFl', 'ï'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004014s
====================================================================================================
2025-09-18 23:56:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003989s
====================================================================================================
2025-09-18 23:56:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '    '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003569s
====================================================================================================
2025-09-18 23:56:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003979s
====================================================================================================
2025-09-18 23:56:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003703s
====================================================================================================
2025-09-18 23:56:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '&Ò\x05kÌ\U0009452c𮔔¡\U00068268Öd\x86¹3\U000a7f0f\x13N\U00049abcK\x8d5æ\U000b6400\x02\x91,\x7f¾óÅ\x89\U000d743aÊ,\U0005e94c\U000bb931}Zð\x9c\U0001abf8Úê\x1c3;\x96ü\x80±t\U000d6c08\U000b035br\x12\U000bebc2ÀØÊð#¡E\U000fd089¼\U00068a39\x83ÁbRÌ뻛\x8eKx\x84£¼C\x14\x84é±\x8dFÕqV»°¡\x03\x95\x18\U0007d181僈"\x18ëvÎò\x1d\x9f\x1f\n\U000b3706\U0008fb8e𧭴\x1e\x9bý\U00050520*\U00082a8d¥\x01|\x11^\x93\x93µ\U000f1405qã\U000421b62¡³ð\x8aÕO8\x0b\x8bö\U0007caf4¾R\U0010daaa\U000cbf13ÛÎ2\U00061368\U0004d236\U000ee8cb÷\x1b\U000d57aeæ\U0009c1b2\x8b𝃕\x029þ\U000c876c\U0006d258É8¯>\U00098f0aºêå"íè\x8d§b\U000c2417\U0003dbe7O+â¬ßú9]ê\x1fWò5>b\U000cc4e1+{\x16&\x0f\x93\U00014b8a ¬oA\x9b4\U000537e1\x8c\x19ì\U0003f4a6\U0001c434W\U000c7373\x9cð\x93ù±´á¶Q@í\x1e_ÎÏ\x9a\U00072066\x9b«1¶\x15\tW\x13\x0f稉\x9e\U00038e4a¥Ô\x89\U0005cfae\U000e4a61J\x19>òc\x00\x0egi𬩋\U00038f4f¥.Ïê\xa0Ì뢓\U0005e389\x8e\x97òÀ\x17\x96-H\U0003c46d©vVÊï\U00045a25\x97𮪖>;^\U0004e0e9Aº\U000753b86\x96mÛ¿]©@Lz𬣚½\U000660bc\U000fbd29\U000d3e2c\x9dØß¥;Ae\x19¯cú^3C\U00049d9d轧\U000f208b\x9f\U000c134d\U00101d49Úí\U00062b2f÷\U000aebc4\x8eþØåÍ!5\U000a0358\U000c967b\x85馔\x06¬ï\U000a39aca¡¨ª7\U00094de4\U00061514Ï\U000870c1O\x10\U0005baa3Z±\U000b6e43- ?k\x96\U0001a1b5d\x83-\x93¶\x16\x18â~V¾ౌå\x99\x85Óv/ñ\x8aÄ\U000b754b\U000ab9f7Ë6\'½S\x07a\x01%<MwÄË^\\$\x03^²\U0005004e¯ºy\U0005f7d2\x95\x84\xa0xm\r\U00072740õzqtC\x04\x16½W\U001091c0(Æ\x08!,\x01«ûÈ\x99ò1On]³¯1µ\U000489d93\U000b2c53\x9f\U000c05f4FªGÇ;v½æ\x0bO\U0008df46Á¿\x17E_ ò\U000a5a4e\U0001c70fo\x10¼Aã\x7f¤\U000f6324\'Ò\x82Ï\x80\U000ad822(\U000b6a98¡\U000ed08d\x9cgÀ^z𨋞\U000abf8c`\'\U00098b01MO\x916!r\U0004a779䌋\x17\x0c¡Üä_}w"𪰒𩚴^@\x83,rÅo\x89P\x92$\U000c5d3c\x17\x87×Añ]º~½£ü«\U00012f6d\x9f<\x12\x1cÏî\U00093866e¥°\U00092dfd\U000ff46e&ꀂx\x9f1\x87\U000ae480PÐE\U00032597\x0f1\x17[ãà\x0c×Í´2F\U00107965帘f\U000e11b7¸:\x00vi\U000b9bc4\x8dÝ\x14\U000e588f\x93/\x8a\x14囇>¹\U000f5c61Ë\x8et\U0009bfc9\x88+\x94\x11\x87\x8e·\U000e672f\x85\U000d1961\U000d3a11L\tü\U00075e4d\U000eab72è«õ\ue083Ýþ牣Ã|\x9d\x12\x96ï3\U00099a1d\x8b{ç8\U0001624c3W5-Qyä\U000c3824\x8cº\x02í$Y*𢍨<u\x9d\x8e¾\U000b86adý\xa0sèÄ\U000fc8c9EL\x17A㯧\U00044dffkᐒO}1F~ê䗬\x83^Å:ý¹ï«\U0004be1fiÇ\x8a\U000314c7½ò\x91}\x1e«ð\U0006d192,\U00043b5fP÷\x01\x05Vþ*\U000d7adb늭ÝÌ\U000eca24±\U000fb551\\\x86\x19à?Õ7\\\x06Ú"D«\x7f@撵}{\x02Ë\U0009ff98q\U00082432ᒚ\x11Ø\x92¨&J*¥\tîýsåqûO\ryßþùLÔÔ\x8d\U0009521f\x88DÚ\x87«\x16b§ôµí³4ú±ý𬴍S\x02\U00015a9cÔGw\U000402aakú4S\x8e\U000a1e12\U0006fbd9Í\U0006168eé\U000dac2d*\U0006224dì\x1bLä\U00043827Ý°ë\x98É.\x8a\x9c\U00108a7c_S\U000e12ea \x01\U000830db+Wçm\U000d9049\U000dfb1ff«Ùà\x9br>2í\x82\x7fÝ\x81Ø\U0006d25cw\x9a\x1f\x9a\U0005d4ab`;j\x07Ö\U0009ba53\x7f\rÐ£Ø\U000f173dÿ¹¦O𫞏Ð\U00034ad3÷Æjy±A9\x92\\>¥\x05?\U0004f54c¦Ä\x11\x8d@Ì¡Ö\x04HdW¢\x1bx𣂬\x85\U000d2651iË×\U000c2256\U000f44abïoTv6\x1bf\'\U0007f793b\x8b\U001095ceB\U0004533f\U0008638c\U000e24e2\U000aec88\x8f\U000d635c\U000ebdb1\x9f\x821§\x8d\xad\U000d4ed69\x0cOï\U0009991c2\U00080833Ç\x9bw\x85ïs/\x8a]\x98\x8d^\U0010fd3cUÒ~rB42Ã¾\x0bf½\U000a3266Îe\x7fre+ES\xad\xadxý\U000f51d3?\x80\x81T\U000b876a𩑉\x1aâ[\U000b139fo\U000e4159\U00065a6e\U000615dbà©\x9e\U000b850bho~P÷\x89¤ùhÅ\xad\x1a\U00078d85\U0002f559\U000ff2b0\U00078980õ\t[\x8d9\U0010776dÃ°\U0008666fP;¶¾zN\U0008bd13\x00Òc³Õ3è\U000e74f9\U0010b6ff\x9c\x12éZ\U00106f7b\x81[¿Ô©?\U000e9369¡\U000d531c\U000df201:n\U000ec29f\x1d\U000ff0a3録S\x82s\U000b1018\\\x7féZü\U0007675a\U00070197\U00054b3cÒMy\x14~þ\x01\U000dd88eC\U00053528,\U000c874f\rµ\t6\U000a8443xU\x8a\\lT\U000edfdd\x9dÈ\U0003462eJ´\U000b8d09Rû$.\x01\x95\x8f7\x8dJõ\x1eµï\U000a2084Ã¹]®\U000da039çC?g!Á^ð¨>û\U0007f240?\x0c\U000ddc9b\U000921baµî4þ¿2\U000577ca¶4\x99ÝHw\U000d7cd7\U000bf16eÕH\x9e \U000a9ae8%\x13\x04ïå7bÒ\U0006f8beçù$\U00092d63\x19²Ú:Á\x98\U00108076\x0b©0Q|\x14\x8eÊᤰË\U000387b0\U00093788A\U000b713c"Ãã|\U000e4b6d\x8b~\x11\U0006ee82µÙ𗇗\x9cs\U00015c04~\U0005a29a\x9c\U0006b34e|\U0010aa21\uf382êá¸¦E²K;þ\x0cü\x19\x02\x92\U00061e0f\U000d9ca0Ñ\x83Î\U0003ba5b\x08A\x1aa\U0007b9b8\x0e\x87Ò¾K\U000b13a5\x8f\x18\x08ö\x83W\x13\U0009ffd0\x13âå\x86\U000c13fd䉖_ù\U000c52defË*U{𠴜ê\x9b¾#\x18Ù\U000c95f5\U000dd53bí`oì\U000f66869\x00\U000732des\U0003d593\x05ZV\x8c\U000da690\U0001b46bPÏ\U000770bf¬ú9\x11ÖOÎÃ*\x81\x02õ§\U0008cf23k&\U0007ab67¹\x10\x03\x80\x87ÌSóªLÈ\x04\x14Ø*æmos\x01\U000c6e1b/å6\U00086670\x97\U0006a2e2L\U000a4a41\x18!\U00066e60ã𤷭@4\U00104343\'Z¼¼b6O(¯¹á\x19Ñ#u5¾\x03ÇßAn÷Y7YG¾ßX\x97\U000c2a9b\x90o¹6\U0006b69a\U0006a21e\x02[\x90àÅq\x96\U000d24de\U000371cd"Äéª/5\nð\x0e4Û\x04\U0003b525\x99`·ÿ¿0$\x9bs\U0003858a\x8bý\U00084a42Iõþ\uef85\U000a2555#Vh;\x99\x8e\x83\xadw\U000d3839\x04\U000959b7Å«䋮äX\nß«\U0008bb5dô©\U0010e96a\U0010397a𪿳\U000b348dX\x991_\U000ae541\U000579a0Ù\U000372671𰱺6e\x81³:²ß\U000f953b\x8d\U00087915§\U0004038a3\x1f\x15/\U00014dbdÙ¾´U¡â\U0009b7f3å\x83\x02\x05\x00\U000a7758Ñ\U000f6572UR\x07Dä_ú', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004139s
====================================================================================================
2025-09-18 23:56:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003669s
====================================================================================================
2025-09-18 23:56:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['J\x19|cì¯', '\U000f1368ØÒ\x00\U000f0669\x0cl', 'Â\x7f^ß\U000a6ae3\U000c63b8î\U00033a15k>', 'm\x10\x8e', 'Ç;'], 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['J\x19|cì¯', '\U000f1368ØÒ\x00\U000f0669\x0cl', 'Â\x7f^ß\U000a6ae3\U000c63b8î\U00033a15k>', 'm\x10\x8e', 'Ç;'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003824s
====================================================================================================
2025-09-18 23:56:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003607s
====================================================================================================
2025-09-18 23:56:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\n9Ï\x8c\x95\x15\x87«\x96\U000851d1cg\x03×', '~\U0008db70'], 'password': '\x8d³\x160\x9e\x1f]\x14\x0f\U00034495Ü\x87y\x04wüx²~\U00035325\xa0\x07\U000bdddf£(\U00084369áﴣ\x8dZ¹s\U000cf2b3<\x8b¯Ù/B\U00103eee\x07°Ä\U00069167C&\U000efcc13å\x15¿\x11\U000757e5\'\x10¼ÝgÁÐ³\U000a907fNúùºc}\U000e3db3ÌëÛ]í8%¡i¼Ñ\x079\x96R\x8d²\U000aed9f&)\x88ç\U000ef55fá\x0bÈ\x1eõ\U001041dcö"¦\x83Ïp¾\x98gÄyµe\x18\x076\xa0\U000f61b5¨\x97\x9e𰘯/\U000cdfafìûI¡í\x18ø\U00049063\x10\x81\'Oí{\U0007878c>HÏi³ºLý\x16E\U00075c63X¢\r\U0005be0b\U000a83d1·ç\x1d\x95òeº\x8fwÐ7\U00068074\\Xáy®"´~{e/ßð\U00019b1cÕb\U0005ba0e\x14ùi\U0010fdeeÜÐ©\U000f9d2aj\xad¤~\U00080611Y§\x19Ô\U00057bf2W\U00059389 \x7fÍ~ÿ\U0008fdd0[\x8b_\x0f\x9d[ÄD¶è\x0bY\U00056725r\x9f\x12\x83@\U00085c79\x18!þ8>\U000e4835Ì.𑨙\U000c0f76Ku±ð\x0f\U000d9fe0/Ât\x84\x00\'ª\x14\x07\x0e\U000cebe4\U000ce397Ï±\U000cad72c\x0f}2x#±ù\U000da510mØ\x01óðe𡠨/½\t\U00035745\U000ae694\x1c\r\U0010ff62\x8e\U000fd157n¨.3Ùw}\x96熜\x80¯²káå\x1f(GÍ\x9eÖ𩿺Ôl\'\U000c17f2\x8c\x9b}]\U000978b7𣠶þ+òv±\x9cû\x10\x14\x0c\U000d384e\U000aaf76\x8b\x8c¡\x0c\x9b\U000e2b1bèã\x03÷\x8f\x12\U0008f6c6É"â\x96\x05¤A\U0004b805çO\x8cÓ\xadàp2\x1a\U000c1f38åå\x83\'\t`𧵯𡀒í\x95%¢!$\U000c6922Â𦚴!çõ(\U000d0688ÜpÏ¹µÊ¼¹óq»ð\U000525b0?fK𝃧Ý\U00108e24ÖD?\x16²Î\x03öÏR\U000f8c2fá¥\x07óa\U000aa28fä\x0eÙwÝI\x8c\x8a\U00061a72iÇ\U0006eb37𑐡ajr²>\U0004f949þ¸\'Å,\U0007b899QÜwë#\U000a0061\x88¹\x1cåÁ\x9e¡\U0003ab88ôÝ/¿êÚlóÆ\x8b\U000c063c\U0009c3c7"À;\U000b6893\U000a31a1%\x13\U00109aa6®\U0003f850»\U0008003eDN#𥨲\x94ýä\U000bb713\x1f ö£\x9e®¡î\U000787d1ë\x97\x11Y¶³.ÕR6\x01+\U0010042d\x10ã\U0009b007\x9e\U00077a52¦¡\U0006be42\U00088590Ê}\x03\x04R¼^\\l\x199*\x89\x88d¹×𛰓\U000c6c03\U000f8e03´ô\x13G\U000b79ff\U000b5a9b\U000d6a6f=Ýj\U000a24ce\x00\x85!»\U0001c2c4n𤳍X½ \x0bì\x8bd\U00094458¼F\U000762ee3Ï\x15£ùé\U0001b709\x83¯¼Î<<\x04\x1eüÚ\x1aØE\x88°öì,w_¦Û\U000be7f0\U00045c87\x15(Ò𓂸Å\x03P땡ós§Ô\U000ffced¹¸~\U000376b8m\U000d8b06ÿå\x8f\x97\U00102fbd¤\x82\x8fÆ´\x15D\U00031445\U001024ce¯Ñ\x0f\x99t¦\U000aec92ãw\U000b7540\x0f)Dp+\U0009bfe2vÅ\x8c\U000ae018 u~0Á,Ý\U000f3ac0ê"á]8\U00041717Oçx\U00096f40Ö£.\uf594\x8cõ\x03\U00050eb3ù\x8b\x15ö1\x88g\x96H|}7ø\x1fk\U000811c1\U00089c17\x8c\x7f5\x11ïw\x0f¡£c\x9e\x01H\U0009c401𭡺g\x8e\U000c64ca\U0001fc29`ôk``\U000c1e44Ð[1¼\x1f\x1c\x0cY,\U00094c02\x80]{ù\U00049845ø\U000cb742ÁÂë<8\U0007394e8I\r\U0001dc90\U000ffc39º\U0010da69\U0003cd71\x19«^:Þ\U0003f80f\x90A\U00055fea+\'Z𤸽\x1e¢f^\x19\x9d}í{\U000cf627¿Rÿ¼\x1b¡Q\x1d°&^Õ´®\U0007feedDa]\U0001ffb92\U00107601\U000eb779\x96g\x1cn\U000808f7;\U00074469\U000fd5a0É=:\x97\U000a7d50>ÎºM\U00107e6f\U000ced6bÚ\U0005d590J0K?û+×𘝿S6%N^4§\x930Î½Ûªô\x9c\x89\U000f4c3eÔ¿ÔßgÀ\U0003b63b\x03\\?r~\U00033d9bæÅ\U000b36b0\U00012a8b£\U0010ccc1DÇᚌó\U000ee730Qq\U00088b5eê~Ö\U0003919eÍ9\x14\x82ö\x90H:$\x8e\ue3fa,`𫧉Ã¿ÕÙ¨ÖG\U00077e1dãÿð\U0008d986¨ñj\x1c뭁w®9\U0010150eê/\x89\x9bà\xadÒ©\x97©\x11\U000390c7\U0005ec4e\U000a8797àV*X\x068\x1f\x87\x07\U000a5c1d\x1e9\U000e95f0Å¿¤\x95\U00092d61\U000c2654¨Ú2\x8eU\x1aH6\\\x96.MË±\U000b2cfd\x08ìr\x92I]Ñ𗌻=Àú\ue344\U00037d8enñ\U000cfe18\x17Cð¿\x8f\x12\U000eedc62\x19B=ý\U000df151)ëmj\x19ℼ\x83{o)H\x0e};헇c·\x8aÒ·U𣬒\U00047c0b#\x05ü#LÄ5ü\U0005fa2eì\x9c\U00071e83±𩇝\U00100e76\x9cÖò¶𗾅·ú'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\n9Ï\x8c\x95\x15\x87«\x96\U000851d1cg\x03×', '~\U0008db70'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004468s
====================================================================================================
2025-09-18 23:56:22 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '°\x03§\x04µ\'\x8b¹Ac\x17\xad\x80F&Qÿ3\nMF\U000728c5´¶f\U000a5af6\U000d9780ÀZÚò\x99\U00063292¡ °\'\U000d30f4\U00036dbe\x88Q\xa0P\x8aª\U001091a3Ô2áã\x9bùâh\U000811fe%E\x05\x11>9°²Àc\x95\x90I\'¶À\U000efae6ï=å\U000453baì\x80\x85¶\x07\x947N¥\U000e483b\U0004018e_\U0010455cß\x7f\U00108739\x93=𥠿\U000570f1ü¾û?\\\U000cf117NiM\x02\U00106b6c;\U00106083äF\x08dÙ\x8bÖë\x8b\U0004ef3dË~\U0004bbf8à£\U0004c70aïÍ-Ôåé»\x15b\x8e𪣞\x15\U000e4972Ûò\x81\U000db47aëË¥\U000fb532\x80\x89\U00012beeR\x89%\x99.Èº2tÇ\U00036d64\U0003eace\U00069f2e¿O3½¸\x9b?\U000ea090å\U0004e4ef±\x97\xa0yä¿Ã\x08L\x07ÆÒÛc\U0005644f\U000bf7c3\x99£?\U00075fb7aó\xad\x02\U00106a97â9\x90ì𡍉Ï\U0001bd05\x1e\U000fa046må\x8c\U000bdfe6\U000db371\x85\x12Ôü\U000e00d3â\x01£Ä\U000db78f¾\U000d1c1cÄY\U00057ac2Ô^\xadÔP§¶\x94\x9dhÔË&\U000a146fy\U00015aea4þ/\x8f\U000d9de4⼰zXy[\x14ÀLô|\x18\x9dú^Ø𥷧\U00107d3d\x9f𬸮ô-ö_\x89×ós~Y!,F³\x80\x10\U000da7e2ú@àó\x97©\U000d4f0b\x8a\xadª#!Ü\x18\U0009adb1?)(\U00097dedKé\U0010e7e8É\x19\x06a¢ê㑑\x08oðß\x8c\U000efe6b\x84¤R\U00012fc8Õ§\x07¡kÍ\x93ÿ]\U00086e627··\U000564faµ\x05·?³y\x85ù¢\U000d8a96¿\U00105b0b¦Ø\U00106c6c\U000332791Å÷µ\x81Ú--\x88\x1a┶\U000f1258\tÔ\x1añ\U000bedf9R{\x1b\x82ºÌï\U000e263fäõ𦅬fÊ«\x10\x1a·\n\U0003d8ac\U00032749¥\U000b7899Û¬ü\tß]𠢇\x98\x9f!\U0010b580Õ3N\U00071b2f²x\x03}\x8eÖk\U0006ab98û5Í\U000f2042Ïí\x18+¾i\x9ck\U000add68\U0001cdc1\U000e9051\U000ab65f짼\x10\uf87a\U000b99acG%\x8eÊ陋\x01\x87°næM\U000f8d89j\U000fce9a³\U00083bbc\x12È\x92DO𞋅¤d\U0005c306¿é~?â\U000e82d7«\x9fáx)1\U000b4667\n:\x9crÅË\x89\x8f\x15¡>?TþûÑ^¬\x96\x1e»\x05ᮁê\x13æh\U000442b4z\x0c\x7fæGuÇÐ>\x01؇Ûúü&\U0004cb12\x95½:\U000d784f\U00071783\U000c1a8d𫄧\U000d5ae7ÐÛ\U00074d7f,ý6Î*\U00037e992\rq\x80\U00098326\x15\x86\tO\x13øÁ\x10ä\x81&Í\U0006d363£\x82\r\xa0\x1f#\U000822bcR*êÑG\x14S\x11®\U00090df1=r\x0f𬡋\x00\U000b7408\U000df11a\U00076ac3KÆ\U00072f85D\U000bf5a8ÉÝ\x1a\x07\x90\U00071b9c\x9c\x81,1\U000bc347@\x1a>\x8dE÷Zû\\ÐUE\x04Ù8\x89Ö\U0010c296py\x9eDí\x00\U0003ae8a³^\x0c\U000a0a59$«âÀ\U00063aafâ©\U000df60f\U000f8ae9ÑcI\x91\U000dbb56\U000b0718\U0008695e«é\x8eú\U000e3cceTÍ»Îß[Á8K4·½\x8a𘬑\U000e6d9dó𥮅\U000f42fbëDq}aþu\U000341c0\x1ew\x82f\x88\U000dbd2b\x81Êí&𬊢릓-ö1\\ûÏ¢íÔç\x95\U00012b6dT\x02\x0c\U000cabcc\x8e+\U000e7f08æ|\n\x8d+\x01v\x00\U0009b8f7-ç§«\x1fÌ¨\x197ë"`\x92\U0002f444\U0008dd74\U000b8e57\U00042ef6\U000b9a60w\U0009f4de\U000d9deb¡\x18CË\x0f\U001073b7ñ\x16\U000beb9c\U0003d907ó\x0bÅËÛ\x00\x8eSÛì¤§û\x1f\x89𠙔\U000165e1\x8f𝅔i\x9e\x1f𪢅¡ð?\x02N+\U000d1111𗅄\U0001c2e6f\x19.\x8a\U0006f836\U000d5a22\x89\U000cda26Ï\x86PÖò\U0007c219Ìö\U00051492\U0004176e\x19¬O\x89\x9f\x12¦×𖽔\U000bb44e\U000f9deb;PÅ\x1e\x9a%àÄ\U000b7a67hëFê(\x90\x84>·jt\x03\U0004738b𝩖1R\U000d7aea\U000caa57<iûæ]ØC\x1bÎ]\U0009ae04\U00032d51\x9a\U000e968a\tOÜ\x97Jc\U000f3893\U000554ea\U000db28f\x12IK5\x1dÂæ`bç\x8ex-Ý©í\U0006a758â³PÆ\x9d½톟\x91=𠧭Î]Co\x9e\U000569f6卌\x1a®É[¼z4𫦔Ùs=e\x0cÖ[Î\U000fb733\x15X\x8a\x1bÀQ\x0f\x04\x92\U0004f7d0½\x03Sg\U000fd0daöåPwÓ`<ÚðX𦯡\x88i\U00090b06ZÓ\x17\U0005b977¢\x08\x01\x8d\U0007a9f2>IiW½\x1f Åv\x80úØ~\U0006b237ÝâS\x93i/¢}\U000ab5f4\x18\U00078061C\x08\U000e843fÚÇ\x96¸¢a/\x85\U000bae23:\x0c\U000cba32P)캮¬×ÌB\U0006bcfa\x1b\U0010fd40Ä\U0004313f\x85\x86\x1d\x8e\U000394e2UåJ>L\x13³\\\U00073563\x1f\U000dbc76\x1f\x9d\U00098d22åÖ"Ê\x06\U0010ce75\U0008f4ec\x9c¢\U0004f4343\x8cæ\U0001c561}㽜\U000a3a8c!\x98Í\U000c1e95,}u²\x0cÿf*\x07aµy\U00063edaÓu\U00076934ÏQ\U00097e4aW§\U000fdae34\U00054c88éR\x894·~^û<µH\\LL\U000107b4\U000ae2c8J±_P\U000f4260ÒÃD-½Na)j\U0010aceb\'\U0004e409â 4#È', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003886s
====================================================================================================
2025-09-18 23:56:22 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': 402877026}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 402877026, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003609s
====================================================================================================
2025-09-18 23:56:23 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 7298, 'password': '\x9b¿Ì%>P\x10ÕY\x94\U00046fb5«ú\U00012d55\U00092cba¨\U0003cdabýÉ;\U0001a0d1\U000b105a\x89½(òKÚ5Ñt\U00031c31~Ë%îÒ\U000db0f1b½\x91ê3g\U000fde50i¦×\x9e¨\x19ý-\U0003c0e7\x14\x8e\x9dKÂ\U000a06c8IyÌ\U0008abe5 ¸\U0010dc81\U00035845j\U00046f66\x0e,\x18\U00086aa4Í\U000ef6eb\x8eu\U0003f125\xad6iuî:\x95\x19\U0004fb32OlcÛ>s\U00060ad3¯¹×ß9[\x9d\x98\U0004249fé\xad\x078\x83\x96:t\U0004dca5앳èyçW\U000ec360e\U000ca451¿ñ[Z\U0007a980z\U000a3efe\x16§$µÅ\x81#\x01\x01\U000d344f¤\U000ac992ï𣝬¸cA2+\x18×\x85¬\U000bf7f9jÄ\x11UþD°=Ñ\U0003f04a\x13\x7fw\x8b±ÞÒ«kPv\U000d45ffÓP\U0007cf4a4Àn]°\U0009ec46\U00076d4d\U0009c0c4𗜑Gw\x0f,Ïº\U00046762\U00059cbe\x023\x96\xa0\U000f1532\U0003b610´ve!\U000ccb60\x0cb³á<ì\x01\x12\x020鞮\xad\U000f7abe>à}Ìâ´\x14\x83Iìeo±FA»Ã8÷\x9cörAÔ\x10§ØXÌ\x05/\x9dD¡\U000d212f\U000f4dd1\x80\x9c¥8\U000c94eb¶]\U000cbbbe\U000809cd8ÉÇEgâ\x82\x15d\x15÷µ~\U00053986°U\x90\x18üêñv\U000d5b4d\U000be4d72e䥝k\x82\x0cL\U0005adb9·\x92A\nõ^=;\U0007e1c9o/\x04Ú\U000c7bb3×õ\x11\U000fed0fÄ 5Ý\xa0m\x837é\x81\x91³\x93\U000f1ed7Ɫ\x1f\x97`\U00055017i¼÷ÇÖ\x8cLÇG샊\U00063e57\U000cfc73\x0c\x8f.¾\x1cÙ\U00050cc7:\x8e\x96\U000fb633Û±,P8Ð<\U00054c44ßUM\U0010d721õ¡\x81\x13\x8c¨RùB\x12&ã\U00055ad1-h\U0004dc8dÃ$\U00045249\x1c¢áÐ\x1c1ë\x12r\U00106e8aÊ\x9a\U000a5d34MM\x82Ù\x07\U0009de20V\U0001e606P\rRã>qÈ4\x7f\U000c361dk\nÄ¿ÓG ñ\U000c1cc4劤åÒÍ±@³\U0001c497\x83\x1b¬\x03\U00038e5aÀÇ\x95¾ç\t\x1b\x1a÷4\U0001ee4a\U000b55c2GÑ<c\U00015a061ñy¸Ü\U00069992{:XQRÚUPÈ\x1e½\x95%Qà\U0010f1b0\x0f\U0005ded9ß\x8e¡Y\x8a{ÊúH\x07\'_D:q\U000df2d5\r§\x8e7)ZÖØ@÷§ÃI\U00083e18\U0008b347Å\U000ed287,Ö\U0004c356Æi𗲀K\x00\x87Âµ\U000782c8äK¢\U000e39f6🠑\x8b\x82î1\U0006afc4\x92\U00095465y<I/ÿ\x06\x1d\r𨝲\U00078680 \\\x12/_\U000c4752\U000644b0¶½\xa0¢\x18w\U0005b78e±:\U000c7287~_\U000e1cae\U000b9c9f\x81\x18ïyñ\x02\U000586d1\xa0ó\U000ecbb9µè篬\U0003da8eO\U000e5b8eD\xa0qÅ·㈷\x1aÛ¾Å.\x8a\x97~\U00016624\U00081dbbP\x89âª«\U0004b46f\U000601f3ó𰕪ý¼ú2\nb\x80æ\U00034d5e\U0005c668\U0008d8a2ᵩÍ\U0007236dY\U0004dcb2_\U000d5c80頢Þ\U000c98d2\x15𠾡ËZ\x85³§xº\x8bJ𪆩Èßã"\x9f\x855ò%a¬4Á¯¹\'@\U000db001\x93\x8aÕWÒrP\U000cbe54k¨Ú\x11m\U000b8a66\U0003409f+\U000c8a7d𥘈X\U000a07bbl\U000b9d13Ì\U0006796f\x87-«\x11ç\U001013450\U000d9546Õ\\\U00104264\uf1f1¾Îc¿\U0001c404\x17õ\r>P"G\U00059c4dR\U00101566Y\x8aí\x8bÝ‿çÝy\x9cíÅ\U00096998N\x8eØ\U000866b8\U000f9b20\U0008d15e7|ª\x0ecÙð\U000b8d92\x11@Ö\U000f596b?\x9ace\x13\U000c6997é\U00099010e\U000ee16d\x02À»§\x0bsÆ\x9a;\U000c0750[卿\U0003dfb1^º\x95\U000ad260\x0e?\x11Qü\x86\U000ec45a鶁\x07êÙ𒍑bº\x86\x12``o\x89&\x8b\x9e\'}ÊÁ\U0003cfadð\U0006adefÑ_\x85\x9aÛ^\x17Â"Î½\U0005c331\x1eº\x99î¸\U000e31c5\U000c2c01¿𦘌$ù\U000f795a:)\x02[1\U000f820c\x84f\x7f\x80Ò\U000c752d\U000eb831\x1b;",¸\x0bß£zH\U000e4a5e\U000968d4\x95²G\U000feba6%\U0007e3dc\U0005804b\x9cÔé\x9844\x11\U0009c20e\x06\U00093eb7£Â$I[ºP\U0005d859\x83#\U000f93f3\U00046d4e³7\x85µ\U0006aef0Lò\U0004ffb4X\U0005f34f_{Ñ¢¡«è>\U00078d3dó\x80ÄÒ\x92\U00055f9bº\x07\x0e\U000daf43Öî+üá\U00014a0ae\x82\x97^\U000e768a\U00012874\x1c\U000b861d&ô²wFx\U000b66dfÞ L3\U00074b7c³ü\U0006c406¬¸l4𬼄\U0010ee37µ%U\U00107afb\x06\x8cº\U000dbfcfØÓ\x1asüv\U000bbb43Ê²\x9fâAãÒeèæ\x8e\U000e4115\r\U00073fa1\U000c0ea5\x13öwò¡\x88ñâkm\xa0\U00066ba9ùE䓸þÿá\x8fèࠦ\x90\U0005d58a\U00077b3b«]\U000b23d2\nü\U000ed639Ð\U0005e8a6×\U00076a73ò\x93\x9f𭝛Ù«ø\U0007d89f/gîÕ\x8e\x93\U000740d2Â\xa0\U0001fca8[ZÜ\x08JW\x86\x11µ\t\U00096f43vé\x97Î\x8bª"À\U000cfd85S\U0001cb0c4\U0009f666À'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 7298, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003547s
====================================================================================================
2025-09-18 23:56:23 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 37}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 37, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003934s
====================================================================================================
2025-09-18 23:56:23 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': 125}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 125, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003902s
====================================================================================================
2025-09-18 23:56:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': -32516}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': -32516}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -32516, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003994s
====================================================================================================
2025-09-18 23:56:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 8889}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 8889}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 8889, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003728s
====================================================================================================
2025-09-18 23:56:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -124888891593201023402750872171604748127, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -124888891593201023402750872171604748127, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003436s
====================================================================================================
2025-09-18 23:56:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\\4>쿚\U00062f35Ä𘋻¤Æ\x90\U000fbeff¹·#GÎejÄvC%;\x84¯î\U000b333f5㺖&b\x08\x82Ñ\U000daea7\x03pË¤.Í\x9c\U000ba570d1\U0007c0a7\x15XòK𥰋\U000b89e6Ù\U000f3a16Ã\U000bf9fc𰥫v\U0008203b®𬥠¥cùL\xad\U000675e1-\x92\x03Ôq\x9eHC¼ÖE=°Éd¨\x9f8§\U000ff97eÅ\x87%\U000bb1af\U000f3d5c¿Þø凋kÈÍÆ\U0006b8d0\U000e92b5ý\x92\U00055fa4òxþ\x19ò\U0006f30f\x98\x8aL\x8c𪁀𤩰¸A7\x1cÑ\x1d\x8b\U0007c2d9\x96³¢ÊU$\x98yJ𬳜\x0f¨±ÿ\x80\U0008a949\x9d<\x84æ\U000b15ccZ\U0007a69d"g\x89\U000382c5)\x03\U000a455aÌÎ\U00047d07[\x14\U0010628f`\U000d5566çè\x14UÅ>ôk\x96\x13$I\x06¥d(3øÕ\U0007e516\U00067013ïûÍ\x13\x10\x0bÔ\x96\U000b307e\x10£×Zy¹¡r\U000bccc0@\x00Ên\x80JF×ás\U0004b0c8ú¶x𬵊þ#\x9a\U0008ecb2Ä\x8d\U000d19aaÚ¼8\U00071bcb\U00033aa9Q\U00039783õ£<\U0006d43eæ\x02±\\Ä\x89än\x7f@𭗭\U000c90dd&EMÔHb\x95_IÝ\x15\xad9i00ÃØ\'Ü\x97S\x90?\x8cp£T¢py\U000cdebc\rHs¬vúë\U00065cbeÃ\'\U000b2c27\U00078c41\U000ba579𮊦\x940òP\x83\U000e6399\x1c\U000d5670)\U000d4598OC7\x16\U0009e4e2`}e¹§/\U0009c366ö\U000a7104`Õ\x87àxC\x89\x8d"a\xad!\x93\U0009785e\x9f\U00012c37(\x9b\U00037973\U0010037f\x92\U0007ca80\U000ed29b]𨂡ul\U000ab02a\U0004338f@ËÔë+w\U0004d51a\x0e\x01\x95\x10d0²\U0004cbabú\U000e8af5\x91©ÓN\U000bc886%§Ñ¹¸\U0008e0fc\x9eîÆ\U000628e0JcÊhv\x8dxBå\x99\U000ea11c\U000dc2dd\U0001dc7e¤\x14\x19\x12¶çø\U000ebff1qÝ#¨\x0c\U0003387f\U00068fa1`0ùÑ\x97\x98ú[HÌ%\U0006970bÌà²Æü_à\x1eÞÛè\U0003c28d\x04𤭔+\U000f305cY\U000a84cd\x9a\x95\x0fÀà\U000c9a29\x7fÿ\U00092923\U000fad14\U000ebc4e(£ì\x0ed?cÌCó\U000a1105\U0004eea0x8\U000c3e28Rô\x81\U000547d9<\U0005220e\U0006b463æ\x00\x0f\x1a¹Ô9Ìî\x82c²\x88sì\U000ddc62üö\xa0«\'\U0003dab3\U0009d8c7\U000b9035\U0002ed7e\U000ebf43¬ôYÌ:\x1f\U00055d91\x18\x14\x7f!\U000807883{\x8d^î\x16\U000a3568t¶¢\U000f55baí\x94?\x1d\U0001a610\U0006a887î\x07¾\U00092b11+\U0004cc05Azfn\x1d¢\\^e\U000ba160ë°Daü\x00©圌\U000e1fbc*\x05옪\U00084686ð\x14G:ß(ªà\x1en [6\x14Í\x06\uf3a1\U0008c870\U000dc57a\x9e\x13Y\x05u\U000503ff\x86àîÒ\U00102755f\x0c𬛝\U0008b2c5F\x90\U00037573Èõ¡3\x9a\U0006da1cõ\x92ù\U00088c3a\U00093ac9y@Î5\x1cÀZ\x80\x1cX\U0004ec6cÔë!\rs§\x11𝕵\x08þ\U00101a65\x0f\\朳\x91ë"G\U00038710\x93\x08\U0010a98chëþ-\U0001bf78/\U000c4fab\x03R\U00055354H\U0005839a\x01\U000c59eel\x9a\U00109ebbø\n\x81Ý\U000c6ff4\U00099204EUÕ\x89¬织\x90\x16\x13Ç\U000d56ac%~\x1c¶=\U000b7166~!ìà\nFc𐮐\x86Ij\x9e\x0c\U000a5e71¾\U0007dbedÖ}«\U00035e6dnAìã)O9-|\x9e»\x9e>\x0eN\x8cÿ`w!IÇ«ö\U00108b05T\x04\x7fÄøõ\x895\x12¯J\U000f40b3`N\U000e37ec0^@¦R;\U000bfe7aõkIHÿ𣺰Y\U000e55bc\x8aîHÍ\U000f0300\x009$\U000971aaYcÆï\x95µõï¾\U00047095¢«\U0005614eÖ\U0010e5fa \x04\U000a0850»ÿÀ=¶Ó\U00049488\x80ÖãeÌç=\U000d1715»,\U0001bd07^%\U000cf3a3\n\x05\xad½6/D\U000ccaf4\x87\U0004c249â\x1d±\x83\x85Ä\x07Å\x12ú¾HÐÕÌ\xa0ÐGù\U000a1313Bü¤\x00»¬\x98\U00043d85𑲝À\U000bac03\x82Vë8%È¢\U000fdb07ýAj¥\x90\x11ò\x9bZM²\x17\x02\xad\tø\U000d5c97\x14\x8bsFH\x13Eë\x91\x98?\x9f\U0006a5f0y©z³J÷滕{潷\U00032f1bq\U00050dd9\U00065aeaø2\x0f\x07î\x9ad\x01ý\'\x80\U000c7822\U00075a55\x1fKSÜ¬!ê(a\x0c]J@Ëd\U000338dd©,\x0bÕÄò𭖚ü\U000938fa\U000781b2=â$\rhÑµ@Ç\U00097a74\x13Ül)ª,aÆúU\U000a5e35\x8aá\x15\x89\x18\x90=\U0009c6c98S\x1cÔ\x88\x8c*G{j\x9c\x82\x90õ𬤁\U00059d1e\x81AêøÜ/\U000cb853:,\x84\x91R\x84F\x16\U000a56b8Þ\x80\x01,\'\U00106faa\'â𬔡©Kè\x88\x07ÎÄ\U0010e45a𧴒\x07>Æ\x94hP¬Ò\x14\x19¯O|\x00+\x0c\U0007b010%ê(\x9cÊ\x9d@\U00109b8dÀûaäMB¯Â\U000d47a1%Üñ\U000943d2®ÿ¤í\x85\x82\U0005782a\U0010df99?{ô𠑊c>¾\x87\U000d66d9\U000ea6d7}𫆻ÿ3;î\x0cþ\U000b708f\x97T\U0006575b}\x1f@3\U000c6964\U0002ecf0\U000cbb3e\U0003fa0b¡ ÷l\x9fµP\U00059741\x84^ß\ufe75c\x04\U000e7642;vCz#¿°\x8aØ\U0008e2a7¿\U0009a23bÂ;\U00101b278\x82\x81\U000e5a03à\U00036442\x04)A\x99Ä\U000f9978\x06Ò\x9fy\U000f1661hY½\U00101065¸ö\x84;g\x99b\U0010516a¼\U000689c2×á\x93ß\U000e4f6b\x18\x86\x00\U0010f540N\U000fbebc\U00071680s7³]Cð\x86D\U00040c9fõ¸9i\x10ã\U00058bf3\x19²\U000635f3Ýþ9⤤ÜÀ¹îN\U00071cceªÍ\U000bdee2a±i\\\U000a5980¨O\U000aab500©\nx¨æÄ!<é\U000a595e\x959q\U000a6129躤®\x19\x08\x84\x85\U0008fdad\x0e\x88x\x0c7o]\x95«pÁl\xa0\r?ø@8Æ\x97\x9aBh\U0001987aPíí\x1cs¶\x10-ù\x8aÐ\x8c¹q&_uç\x93ì]í\x88\\C!\x94¥p\U0003fa65\U0009b52b¹\x8b\x9ag\néN\\𞡭®\U000450d8Ìy\x0c»£\x0eYY\U0009eb4cF\x14\u086f\x8bV\x12!è𐄢\x12\U000a61a5\x9etqà2VØ\x87ð[Ã6uþ\x02;R\x7fÇ\x80¬\x83\x06ny𰁯?j¦\U0006b0d1Ã[Vø\U000eeaed\U000379e5æXhpcy4\U000a163c÷à\U0010891eû\U000db282\U000ae441\U0003f679\x9a\U00108bd3y·ï1øø`¼o:\x1d\x91\U000a8cb4ó\x8b\U000c409f;e\U000be4fe\U0010688e }\U0008cd24\U0010ce77xâè64\U00032da2\U000d1ba2IÑ[\U0009a38em\U0001a034\U00053f8cCx\x05\U0007c185\U0005e094¤J`\U000bfd3eÈ\x7f\x1c\U0006e119§\U000bae94ö\x88`¼\x8fî\x8e$4G\x9a\x96F\'Ñ°\U000fefa5\U00035c10ü\x07¬\U0007bf81B\x11\x0e\x02Õß»pû\x15åÜÄ?\x0fþ+\x05\U00077527=n=\U0003d947âÔ"ÍJô\U000431eaê\U000ccf36ì\x93¶»r\tñ\U00107f349ÞP\U000dd24a\U000b0ac3Êj¦\r4\U000404e9\x88túÄ\x83ìê\U0004f091\U00065fb7\U000dbfbc§a\x96\x01Áð\x8a\U000b3d6e æX°6\U00059070\x97\U000da0bf&𗚪\U000a92b9\x17<K\x1bþ𧺔R', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0038s
====================================================================================================
2025-09-18 23:56:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['$ÎêÌ\U000cfbfa', 'B\x1dÚó³', '\x99,Û', '\U00083492\x0e\x95\x05\x1d', '', '>', '\U0004c3bb\\\U000ea6be', '³ín', '"+ð¿\U000a42cdEVÝ', 'Ô÷0ÿ嗋:°\x909"\U000ab3c1Ö\U00040800~pá', 'Ñ\x99', 'o\x975\U000c1e5c', '\x8e+\U0009f6eb¤FÉ\U000ae84b\x85~Cn', 'ë\x82K', '\U000ae0c0ÌtR', '\U000e7b55', '🇲\x17_\U000e1584÷\x03\U000f4814Ë¨\U000c1f24Á\x1e;\U000972b3', 'A7»', 'hÓ\x12X±ì\U000cdf62\U00081e72@ê\x8caûf(Ð\x0bC', 'qQ\x98^m\x84§7', 'Î\U00071b2c¿\r\U0001a922$ã÷', '\U000c123b\x92\x08¹\x97\x1e¸[\x9b,ÉzÜ', 'ö\x06%', 'XØ\x9d\U000ee74d¨', '\U00048d21\x8a\x18Ë\U0005306f\x0f\x0cË', '²\x9d\U000819a3', '', '', '¯ôj\x91\x91"\U0001dafd\U0008671a𘋫)\U000f20eb']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['$ÎêÌ\U000cfbfa', 'B\x1dÚó³', '\x99,Û', '\U00083492\x0e\x95\x05\x1d', '', '>', '\U0004c3bb\\\U000ea6be', '³ín', '"+ð¿\U000a42cdEVÝ', 'Ô÷0ÿ嗋:°\x909"\U000ab3c1Ö\U00040800~pá', 'Ñ\x99', 'o\x975\U000c1e5c', '\x8e+\U0009f6eb¤FÉ\U000ae84b\x85~Cn', 'ë\x82K', '\U000ae0c0ÌtR', '\U000e7b55', '🇲\x17_\U000e1584÷\x03\U000f4814Ë¨\U000c1f24Á\x1e;\U000972b3', 'A7»', 'hÓ\x12X±ì\U000cdf62\U00081e72@ê\x8caûf(Ð\x0bC', 'qQ\x98^m\x84§7', 'Î\U00071b2c¿\r\U0001a922$ã÷', '\U000c123b\x92\x08¹\x97\x1e¸[\x9b,ÉzÜ', 'ö\x06%', 'XØ\x9d\U000ee74d¨', '\U00048d21\x8a\x18Ë\U0005306f\x0f\x0cË', '²\x9d\U000819a3', '', '', '¯ôj\x91\x91"\U0001dafd\U0008671a𘋫)\U000f20eb'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['$ÎêÌ\U000cfbfa', 'B\x1dÚó³', '\x99,Û', '\U00083492\x0e\x95\x05\x1d', '', '>', '\U0004c3bb\\\U000ea6be', '³ín', '"+ð¿\U000a42cdEVÝ', 'Ô÷0ÿ嗋:°\x909"\U000ab3c1Ö\U00040800~pá', 'Ñ\x99', 'o\x975\U000c1e5c', '\x8e+\U0009f6eb¤FÉ\U000ae84b\x85~Cn', 'ë\x82K', '\U000ae0c0ÌtR', '\U000e7b55', '🇲\x17_\U000e1584÷\x03\U000f4814Ë¨\U000c1f24Á\x1e;\U000972b3', 'A7»', 'hÓ\x12X±ì\U000cdf62\U00081e72@ê\x8caûf(Ð\x0bC', 'qQ\x98^m\x84§7', 'Î\U00071b2c¿\r\U0001a922$ã÷', '\U000c123b\x92\x08¹\x97\x1e¸[\x9b,ÉzÜ', 'ö\x06%', 'XØ\x9d\U000ee74d¨', '\U00048d21\x8a\x18Ë\U0005306f\x0f\x0cË', '²\x9d\U000819a3', '', '', '¯ôj\x91\x91"\U0001dafd\U0008671a𘋫)\U000f20eb']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004122s
====================================================================================================
2025-09-18 23:56:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x03Y', '$ï', '\x7f', 'Æ\U000ea2df', 'Ù_ªj6B슧', '\x13\x99ç', 'Ä', '[', 'þ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x03Y', '$ï', '\x7f', 'Æ\U000ea2df', 'Ù_ªj6B슧', '\x13\x99ç', 'Ä', '[', 'þ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['\x03Y', '$ï', '\x7f', 'Æ\U000ea2df', 'Ù_ªj6B슧', '\x13\x99ç', 'Ä', '[', 'þ']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003544s
====================================================================================================
2025-09-18 23:56:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['^ýÈy´', 'U\U0006d2ceß\x92²\x91\\']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['^ýÈy´', 'U\U0006d2ceß\x92²\x91\\'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['^ýÈy´', 'U\U0006d2ceß\x92²\x91\\']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.0036s
====================================================================================================
2025-09-18 23:56:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 62, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 62, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004004s
====================================================================================================
2025-09-18 23:56:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003516s
====================================================================================================
2025-09-18 23:56:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'Õ\x94\U0006a646Ü\x01\x9a\U0003d08c\x11\U00047a46ù𒅢,\x15\x94\x0cMÉ\x94\U000aec5bdÅ»È\x8cóé\x7f\x11Æ\U0005cca8\x96\U0007b19a\r\U00079c36\U000a39ec«\x85\xa0úXëà\U0007b16e\x01\x8c\x9e\x1eÚ®iÞ}\U000a9d9dG\U000824cd\x96=Ö®\U0003a121Ù+îâ\tÄ·9f8·\x84\U000acdc7®\x04𰦏\U0009e464f$\x8cÛÒ\U000c7b70\x02fÂßÕ\U0008dc50\x98\U0006cbc3_\U000a2640x>\U000896ba¹Ü\x16ü§×[B𨏞1쒑P\U000a2961\U000ec241\x80æ@Ñ\U000d08d4p\U000a8f23\x1d\x83éZ\U00037b6f³\x06÷\x14\U00061b6f\x94\xa0\x94·\x82¹ù\x92¤ \U00092722\r"*\U000e50c4½#\x93¤0¿ïRó\x81Ánºu\U000fcf43z[T\U000ddb91\U0007078f3\U0010c47cÇ<dbÑ\x02Äd\U00069dffÂë𩕵\x8f¨\x91\ue7543\x1e\U000d11986渏\x8c\x83\x14\\ü\U000c73c3\U0009f65eÊz-\U000900fa\uede8\x87,âVgü\U000be357×j¨ì\U000ae724}àÖõ.V\x9b°¦U\x1e\x84ö»\U000665d9~\U0007509b\U000b4dc0`Ô\U0003a3a1LìM\x99Í\x8b\U000a997d\U000483cd=\U0008d745\x85&ÌÀ\x18ct\U000a7075\U000c4cc5Ìs\U0009da84º\U000d66b8ïou\U000d09a2ø\U000475d2Y\x1fîX\U0001c865\x96Ä\U0007f1010\x0ft\U000c19c3𩁜\U00094e2fÈ\U000a8aef\x9f\x83~𤨉Ü\x18üÂàªç\U00100e45âþ\x12±N\x14Þ)\U00042cf1\U0010a8e3º\U000e9b91\x1dJ\U0007b111m1;N§kü\U000dd1af\x8a\x98ø§à\x89ð\U000eab24\U0004cb71Æû\x9a\x16l«\U0006a062Ç¾«ìa\x00ó\n,\x9d\x90\x92\x02¥_ç\x16N\x92!\x927§Y"Õ\x0c¢\x02/\U00066f3dÖá%\U0003c81cçÿ\U00054f03æ.\U000d4d07Y\U00050ebe:Z^\U000a9bd3¦\U000e7561Èî\x9f\x96f®\U000ea66f÷ò]¢\x80𮛞\U0009964f\U0004e880\U0006eb53\x17;@*\U000c4a07\x1déZ(¹\U000c210c\x0c\U000cd26f\U000a3be2dô\U000f7e68Å𤑎\U000e90b2\x13\U000dbbf5^\U0006e0f1B\U0008ddc2\x9fwäbõ\x9bÁÊìXÚ\U0007b4cd\x0blF|ꭈò\U00061ec0\'\x16\x1c1\U00043bc7ã\x889i\U0010694e𓇉\x86K¶8zþÕ\x89\U0006968en¾\U0007e8e6\x83¯DÓ\x8c\U000820b1\x001\U00034aaaºúð´s\U000bcb64h\x03$í\U000fa190\x0eÛV\n+ä\U0001c4e2s\U00015a99\x99Æ\x99𗈊\U0002fde8\U00033d8ck\x8ejÁöêäÊ@ÑQ\x99vLs1âA´Úb\x01\x83Ä¯ùz:%\x0e\U000518bd\U0008bb52\x18\x9fø\x1bpü\U000ca6d7?ã\x9e®º\U00016740\U0006466c\x12\x05a\x9a\x94Åc¤\U00096020ß\U000cedc3\U00052cf7tç\x00«\U000e6022Ç\x9e\x87\x8fØ\U000e1002ùÐñÌ\x80ꎈ(çgÚ®\x04\U000a59bc¥\U000eb7c2\U0007ec4b\x82rü!\U00102120rå\x86fSÒëÎ\x8e\U000addc9\U000197e0¯âJ"\x1b±ùGV¤>\U00037a1cY\x84\x90,d\U000ad217\U0010390b\U0010702bÄ@\U00034270\x88\x8b¹IO\U000689e4\x17»µ\U000cd609\u18f9µT\U0009e938\U00054965\U000abfac\U00054f36\\b0¦=\x18~\x85Ï2\U000532a1\U0009c83b\x85{\x8e\x81º\U000382f1»ê䀵ù\x17\x03×\U000891fd\xadk\x94\x04\x04xÍë\x1e£\U000a5652\x92m.L\U00062b62QOµ\U000e85d2v\U00101c45\ue310\x8d\x8b\x08\x10/\x92Û\U00056eb4û\U00085ab6\U0001ab49¼\U000532bb·\x12ÉÛÙÊ\x84\U000edf1e¨\U000e7c5bT\x8a&~gC\neuæ\x94\x0cò\x9fä褏\U000fab9a3ìaRÑ\U0006c7b6\U00083d41\x9d\x0eàõ\x98\x0c𩔄¨(ä$\x84\U000ff955\U0010df81N\x0ei¹\U000ed7baFzº\U0005b7f1ò𧛏rî\U0004e1e3ß\x04\x85\U0010268d*\x801æUè\U00090ac7𰐓(éã¿ûÜ¿þ§\U0002ff03\x9aÖ8ì\x9fÂ1Ì𣱃~¿Ý-\U000c57e3\x90¡ß\x0ej4~«£0âÓ\x8e\x9eöt¢2»Ê\U0003d0b6j÷\U00099c08\x89\U000c6c33mø\x9eODÞFÐÙ\U000e0cfb\x91Ó¬\U000da924\U000893bcé\x0e\U0008d725æ\x0c\U000c6d07@\U0007aa8e@y\xad\x04òµú\x1b\U000afd6f\U000c380d¿Ü\U000d86588·\U000c032e\x05\U000ca48eK\x96½¯\U001057048\x8c¨\\\U00075007\x8e\U00062534\x91\x83\x98âÆ\U000474ef\'Õ\U000d5695\x19â\U00057305𩥷\xa0\x10;nå\r\x8aøA\x04\x0b\U00068a44¸\U0008df17\\Ö\x7f\x94ÅÝÚßÎzsø\x96Ô?\U000dfc75.¿Û\x1duP\U00102ccdöÄúM\x1b\x0cÐ\U0005c36f6¦\x1c§u|\x1a-\U000599a5\x88ÜÆD]°½\U00105387\x18À굵\x92\U00080456\U000b5571¥K§𑀊Z\x11³\U00036671ï\U000e59a0\U000b2594\U000d318c%\U00040a5e\x12^4\U0004f118\x8b$A\x97\x0f\x98~t\x85]\U00015858Ð\x99bV4\x14\xa0S¹×\x1dí澛\x80\U000c8574Ð\U0002fbf0çÛ_í\U000ca398ö,¥y\x0f\x9f\x95\x82\x1dÍ\x05v\'¨Á\U000ce188\U0005e197>5\U00056dae\U000bd7da\x87p\U0005f832´ÿCü\x14\U0008cead\U000b72a6j} \x9fnÀ[Oo1\U000e1ec7Vä\U00083ade\x85\x15³Ìÿ\nã,\x14a<(¦,\x1d\x9c𫱻F?7\U000d53e0º\U0008b8d7{\x15âWä%Õ5èú¥𠐁½\r\U000e5280rNAË,]\x8a\x90\U000c5856\x1d\U000cfe14\U0008b6d2Æa%Oe{°°\U001000508\U000e16b66\U0006c3a4tB\x1e\U000c55cc·â\x1c\U000f568d´\x01ÐðÃÃ\x81ë\U0008a7b3\x98\x0f\U00082277\x1bÖíy\x0f×h\U00098d662\x1a\U000f3468Á\U000df332M[J\U000c51d1\x9a³¾\x83<»\U000b5172𔐯-«¦\n\x89Ç@𰟆Y\U000530cc¡#D°Ç\U000aed94\U0008e2ebj\x9b\x91r¹\x8d\x05\x87ý\x10Õ\U000d1fed$Ý&\U000e7cdfnB\x8eåJ@sÙßÓ̮ÀÓ\x16Ì\x8c\x80\x9e,\U0008cf0du¬§\U000fcff2wOó\U000aa991Ù\x8b\tp4=v\xad\x1c\x12Ç~º\x8e-ö\U0010ca5a\x1a\x1e𠪛Ûú*Ç\x9b\U0003e09bÕjQç×gKV[X\'ô\U000fdff0\x9dO\U00067d15.¹p÷#\x1aB`\x99³¯³\x12J&"õ4kî幀\x95\U000801430Ý\x91QXR\x92\x9am\x0b¿g\U0010fabc\x15\U00072a99\x83éûE\U00075a1f\x8dl\U0003ff7dÌI{\U0009ae3fß[»{5Ý\U000d78b8|e\x8a<Ôð·\x83\U000d6a4eꂘ\x96¦\U0008eed2ÓJ%\nP𨟃u\x8c\xa0¼\x13=\U000fdc82\U0008b841½_\x83\U0003996cû\U0004c67f\x10\x87\x9eË¹\U000c952eÞ\x9aÜðô½㕎Zó\U000e8fafÁ\U000a43f32\x9b%\x00\U000cf6e1d3µL\x04\U000376ccüâX÷¼·\xad\U000f96a1y\x93\U000e7635Äy\U000df515\x0e\U000c807càzX\U0007964e\x11\U000fb59d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00405s
====================================================================================================
2025-09-18 23:56:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zTª\U000928cda\x00\U0005ee05j:©¥煅_d\x19Ædb{\x0bvj¿\x0f0\U000d580fnP\U00094602RÊ\x16\x0c¢ ÷\x00\x11ÚåCÓ¨uÖÞ\x88\x0b\x10쇅¹~³,¶1»Èï耀ûõÍ\x8a\x01jw\x02æ\x1eø¶1>×ò\x95×Ð/\x00\x07û¢\U0010a081¥\U0003a26f\U00044fe9\x0e\U00086d26\U00065fe9Áûü½e"\x97\x1f·¹B\x06\x12¼ã\U000a387bç\x97\U000f6057ù->\uf667\U000f6fbe<ú\x80\x9cÙ6\U000e3b46v\U000330f6 Ðï\x1ckÅ)ï\x1aï\x14\U0008d716Ç¨\U000c747eQ\x1c>\U00091235\U000c3caby\U000c43f9w\U000d239aº\x93X\x95·\x9bO)×,\x14\x9d\x81\U00058696ËÊ\x8bR\r\U000b1d7a\U000a9903g\U0003b385¹\U00082e53ú÷=±\x171\x0fjÙ·_{¸𬥡Tåïã«Ír£9êºÇc2éE\x9bY𫷺Á\x94Õ\x1d𐦆\x9b\x1bè®刯𭋣8\x04\U000add9c-â\U00082050\x84\U00067a07\x8a0\xadØØ𱌥åf\U000fb0a8öÖ\U000350fb>7í\x1e^\x18\U0003c890\U000819ca\U00072cbcÊ\U000dc6bf썪\U000425b0²Ã¾\U0003b354𣙮¯æ\x80Ò\x96+H\U00058691¥>\x85\U0009933ctà𠳪¯ü°d\U000eb5b3\x12\x93åbd6\x9aöú\x18\r\x98\x1cyé§ø\U000dd097à\x8e\x84D\x8czu\x9báw\x05\U00088722\U00071c0ck\U0008801dðÏ\U0006c075g¦\x03âü0\x83Rì\U000f7d0a_\x04Å\U0002eeed𰬹-Á¿Ù¶\U0006a494§³\U00086914$Ã2¤ÿ\x08\x89\U0003a6c0\x1d\x89n\U000caf56Üà\x14ê[a㱐Í^úÆ\U0005c1ea×\U0007954awÒ\U000e2fb4ÇL\U000aeeed®ÚÓm\x0e;\x96\U00042e0d@è\U000ab5d6Ä®\U000d2a97³Ö\x1e\x13\U000b406d\x8a8\U0005197e\U0007cb85E3\U00081ea4´á\U000ebe19kè\U000df0e8®y\x1fÚ\U000ccfe7\x02\U000ca597<\U000caf83:\U00088926äð\x1c5\U00015075\U0005a97c\U000a8aeeìc\U0010d831\'\x03æD\U00072fc0k\x82\x0bp¹`Ü©/×Í\U000db0e8n|\U0006a7ccL\x9efg]\U0001b769ÉQ::Ë\x18\x94`³\n|å×\U000b61c7\U000f9871\x9c\U00084aa0ÙcÏ%\U000caae6𧆜\U00062d21\x1c\U0003cce2ß\U0006d658\U0010d82a\U0005481f\xa0\x1f\x99þ\x9fù;\x06Ç\U00098ac7\x00«\x08-%ä\x01ô\U00086c07ÛP\x0f\x9a¡ß4\x99h\U000ee01f\x19\x90\x82Y&c±\x8a\x85OÎ\U000ffad8YÓ𣙥îæ\x91\U0004bd9dP\x80\x9d\x07\U000acd6ec"\x90\x04\x96\x19\x93\U00069e45sW÷\U00109c88\x83\U00095c88@\x82\x07)1\U0003e373\U00053670$\U00041251mfx\x85\x132v§Ô·𘘰\U000dc576¶õqnµ\x94\U00064b18¬J\U000ed176\x15\x99\U000e1f32«8æµÊµü\U00060ce2µywÖ暣?\U00076a97Á´\U0006b63d\U000bd6b6áà¹\U00064d51,ö\x16ö¶yÇ§ãù\U000328c0ÖÊ🚞\U0004898f\x1b\U000556ebi©l\U000d6dddÄ\x14Á\x0c î\U00057571\x03\x95\x14ø\x0eß&Å\U000d34aeR\x8erL\x80ó:©[ù8\U00065464\U00093ee3\n\U000a53cf\x0c¶WS\U000ca03a¬H먺\U0010e2b9\U00087a16®á\U000f7d69\t\U00104273\x81\x04Î\x9c1\x88\U00039bb9\x9f\U0004f4ff\x14l\x92¾ÐC\U000727c9\U000f7957¬¬³!\x85\x8d{»[VÓ\x08\x91<Ðó\x97\U000b12ff\x12ÙÔo+\xad#\U0005e625\x97îõ=\r¡\U000ab217\U00045b9dî/A\x88§\x86\U000416d7\xad\U000faa61ÿ\x08\x0b²|\x14\x00äþ\U00012b02Æ\x8dõ\x96À\x855ç<ò\U0009c678\U000a25e0H\U0009308a¨Y#!$y𩟷P\x19¨³\x88ü\x1a^7\U000bac09$\x07\x1dm\x94\x1d<\U000454b3\U0009e85a\U00038ba4R\r?`Þ=\U0010d457\x8e\U00031f9fC\U00109b36,~ö\U000db308@´\x80É\U0004ae87Á\x97\x06𘥳º\U000b8a2e\U000e59cb\U0006bd56\U0005f5caãTõ\U000328f3\U000bfd7c·º¥ÓNW\U00015c1d\\}m\U000a6874ô"½=+o\x0c\U000c23a4ÆX+Ì\x80ÁX\U00062af7d¬DaÛZäö\x18`9𧝰1𣸽Âfc\U000ca103Õö\x18Uá+\U000c00c1©\x10\x15\U00066a8a"ìᓫ\U000f3259ü𮜯À¢\U0001e492\U000b9c66\x82ä\x0b§`\x1d1K\x92\U0004b550\U000d54ad\x0f\U00070198»ë½Îâ\U0005a362e𩈘\U000fe3c3$婇\x0bu\U000f4294!\U000758feD¶:\U000b7b97𪦲ß¹@\x00H\U0007a28c\U000607c8\U000a3f0d\U000a4781lBË\x1br\U0006bc0fÛ¡F`\x8cJ\x9dmeÞ@\U00043beb¢\U000f0057ÒðØ6a\U0010ce89Æ\U000d1133¥Ù\x87\x08-¤$0\U00041f7f¦¹Ç~1vý\U000afa1cL\x81G\xad\U00077db0Ìú\U0007ad0fcq\x93\U000e171a5\U0005f811l\U0003801c-~Gtpáìë\x0e🮃¿\U0006cf0c1¤¹"¶V\x92\x10\U000578bcrÔ;ò½\x1fT«\U0003f168<\x1cÍ\x05\U000aec29\U00103140Z\x82[\x8bIá®D\x83^\\tÚ\x91\U00059e4c\U001017be\x14\n^\x1aÊ\U0010b109Ú·ÔT\x80s\x1e§`¨\U000323e9Ý[[\U000de932"\x93Ê\U00094251\U00056ed2\U0006380e𞲡M\x95\x17ÕW·E\x999\x05¥\x91Ç𩞞\U000bd55f¾åP&7`Îò\töA\U00069666\U000c4a53\'´#ò\U000924ae\x05=ÅhTæª\x1eH\U0006c5bd\U00093fa1Kñ-ª\U0010d16c:±³\U00081df4å³Vù¨Ý\x08ÀLð\U000a833fjñÓ~"Þ\x00\x01\x8f\x9bnë¨\x99W\x86Ü)Ë«g¸I\U00092f8e\x14R=òA\U000a7f3c¯Mb\U00076813øR-\U00013785%\U000a3e1cµª\x80\x1bN\U0009f96a\U0009f5d3S\U000f4bf5Îg\U000dd65eÃß\x87\x05\U000d9dafêÈÐlm\x98ÐT^"\U000ca3f0\x9cÁµ<;\x84n\U000e33f7àöýóTVê\U00012f0eË!Rqì\x80*ÙR\t\U000cf8b2\x9e\x83\U000b9639^\x95\x0b\x18r3𨕠yv\x9f`v\x1e-6\x19k\U000e6c75@fMò1+]#\U00105517ì|\U00093dd5TÇ\U0008ce2e𧞶_\U000ed9f0fê>N@ôB9¯\x1f\x03se\x11\x06\x8eúk\U0003e449\x86\x0b,\U00059ccb`§\x9a\x90|=.\x83𨖄\U0007600e\x8e\x811T\x9e\x1f\U0007d8a0im\U000b1545¤', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003953s
====================================================================================================
2025-09-18 23:56:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': '\U0003b0b3\x99þÞ\x8b\x8fË&k_ßÈ\t\x03î/¼\U000ffc7d\x86Tb¹R\x9aÊ^\U00040cba\x88i\x9f¡ÍÎÄÚ)7²O\\\x1fÆd\U000817bc\U000ed71fB¦øø\U0003c115\x95\U000b0c37I\x1d𖤛®\U000a4d7eæ£(ÑK\x1eP[\x01ªí\x08\x06¢Ï\x1b\x0c¤DöÆ\U000900aa\U00050adcà\x9eÎ\x0f;çns7TØñrÃ&\U000cd9b88é\x8f¿ã\x97\U000c3f1er\U000baa8aÔ\x88E\U000ef520(Mò\U0006b0ba\x13\x81`ðÍ\x16\U0007a99eïÉÚ¡è\x85Õoº°Øé\x07ÏíR\x00H²\U000dde35\U0005f6bb\x89\x0fd\x18\U0007f084\x82\x8e\U0007db91\U000d2894sÛ\U00033bed\x98.\x89\U000459119MÈ\'µì\x18\U00058d3d\U0001979av\x05°É{³=k\x93\x077\U000e6386µÖ¾¢\x06È"=\x85î0U𰧱\U00080da2@\x97\U0008ce09³^åkº]\U0004539eÂ𭞧Ï\x12\x8b\'\x11yó1Ñb\x01§\U00087c3d\U00055a40p\x9b½=𩌽ëW}\U00064175Â\x08tF´\U00071336þ\U0004ff0c\x88ëë¥\x81ðw𧷽0𣸹vz\x83\U0005f2bb\x9cù"x\U0006e122\x91\x19@\x13\x97ÍêÝä\x8e«\x16\U000cf390ñâ\xa0·\x1f¹ª\x08\x0f\U0001e761.¡\U0006be0d\U000a0218c>\U000d8ca2¦\x03ê\U000e7b3c¡Iß\U00081092\x98Á\x81â\x1eaf\U00085b24¾\x1b\x81b\x85\U000d587c\U000afbe6\x99mÒo~æUf"Ê\x7f\U00055e87\x95h>^\r\x86\x04Û0È\U000e3e88©"\x92õª\x19\x9aî\U000e44c7Å\U000bbc6eÕ½Ýã={è{Í£Å\U000ffc91𥻸\x8e\x98\n¬Â`\U0006de52\U0009c7d2\U000a3092\x1aô\x0c\U0004cf0c¡Õ\U0006197eü𢘈\U000eefb2\x97\U00097b25·\U000f873d\x1b\x93¿Ë,ó\x9bOÊ^Þ½Ø½Ñ¨\U000686e5i]oú\x97eÍÌq\x86Z\x8d蒣:· \x1c\xadö;dty\x98a\x93#KÇ\x02Ç¿\x1a?\x1aUé\x14BF\x06¼\U0007cd65f\x9dúþì¦\U00037f5c\x120¨\x86<xBw\x8cÎ\U0004682b!A³V\U00073081\U001090bc\x85ÝÕØ\x03|\U000fd624\U000968e81虫\x08?m\'\U00045109Ô\U0004ae2bì\U0007834b𫲟\U00053d59\x95½8R\x0fh\xa0«G\xadR»k\U000c1686\x86Û\U000d3dee\U000d1fb3¶Àl\x9d\x81oÅ²\t\U00066874\x05*\x936\U000ecfedå©Y\x93Qî\U0009a835\x9fÚxk𐳋\x9c磜Ja_\\Øø²Sᄕù¯\x81\x9b¬ò»£(\x08\x02ÈrðhC\xa0 \U0003812e\x8f\x97W\x14C\x0e\x8bm\x04\U000896ad®ã\x92¯\x8c=Ò\x18{\U000fe7d2Í\U000780e0\U0009da2d\x82𥪗ÍwpÂä\U000fe87a\U00109528Ïüì[ñûÒ@\x8aÖ_é!\x82\x97\x0bû\x10Úê謬À\x8dAÛ\x86\x04³\x8ay\n\n|\U0005993bÁ]\U0003aa3e\x99ÒN\U000ae0b0\U00095749\x03\U001094a5\U000eb149¦\U000cc5e9ZB\x8cX\U0007d1a3Gßà$oþ\x86h\U000bce70\U000c7b33 ö\x87Cù-\x02KL¶v\U000c4769o\U0010bcde\U0010cd57ÍÕ\xadFº\U00109344Ô\x9fSãÅ\U00064226ýÚì\x81M\x9f@\U000341efù¸\x9c\x88\x82`^7 \x8cc.\U000c3260\xa0\x06\x103\U0008bc81\U000efa3d\xad\x9cî\x9bû\U0007f85c\x06Fµ\x8bá_C\x05\x13\U000d0c42LR\x98\x10\U0009548aq#\U0002ed5b×´\x80_Ø<<V6\U0010e7ee(Òµ\x9f\U000f0db1\x0ekºÿ\x14,£\U0007aecb\x83\U000fdea8\x95¡¶Õ\x1fVµ`\x84^m\\î𭫆çñП\x03»(\U0005ea20\x00\x94\x96ÐÈû\x1fÏ\x14k\x80\x00ô@fw\x01\U000163b0RSƽð.°Nû\U000f0eb3\x88𧆑\x1a\x98\U00045d14\x9apÁ²\x81\x98\U000ba95e\U000ff2d0á\x95\x08\x95ü=~\x98\U00093953\U00053aba\x02ÁP\x16µ½àÎé\x1c¡ååHk\U000bb5a8:\U00048005k¶Nµ\x90\x8d¦\x94bOÇxtÀ\x88é\x10\x9f\x8b\x8c\\N°éè\x9e\x9b\x1bëCÆÏD\U00101d9d\U000f8ab9\x1b&\U000badca\x8b𦟜ò\x8a\U000d62bb\x94\x1f䮑\x89\U000c1e54|õ¨\x0e\U00054c2f°¦~\U000873bbî±\U0003a70e\U000f60408c¶?\x89®»â\'\U0008c3fb¨\U0006589d\U000dd261\U0001c73dJ)i÷\U00054e9cíZå:/åÖ\U0006793b)çÅ#ú\U000fe1d8\U0008425eº¶\x9a\x0eDo+\U0003c77b\x0b\U000bc440Ô\\ð\U0008d3d9\x05¦-õÃÂ嶓ÅPü1ï\U000499dc\x81å𧊏\U00108e29K\x0eü»\x02÷4\x97\\\U00081222\U000f66965ú\x9bÄ¡\x0ea\xad2È\U000686a5,\x99\x11\xad{\x1e\U001094f1e³Ø\x9e\x98\xad\U000f859c\x02\x97xêûÒþèi/R¶\U000a4eb6\x8fk\U00051140ÃHæ\U0003423d\U0005dfd4Õ?þN\x8d\U000d67fd쯟k2<Y£\x8e¹\U000e5e49Ðø\U000ccf63\x18 ·\U000dbb88\x89jö\x1b¹\U000a7668so\t\U000c5297\x84¦\x02B𣿙\U000f9ce0UëÜ¥\x91ßè{\x1a\x15T\U0001152eó\U00078a2dú¶\U0008b3a7\x17jöv\x8ds\x9cÐï\U0007b0410\xa0X\x15\x9f3£\U0006b5d3\U000f3e2e\x15#z(\x02g\U000f2725Ä\U0002f33d}\U000d25df\U000b222a\U0009ec41Ø\\bk\U000ee195t\x1f\x94dæ\x17ù'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004189s
====================================================================================================
2025-09-18 23:56:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 37, 'password': 'ê\U000dabf5\U0010d63eÝå.í¬2\x12\x05ò@\x82P\U000d55b5\x17ç\U00051ff8bÐi´ö\x1b붖ê\U000a3fb0S\x08§\x8cÑP\U000f87be±\x0e8° ü\U000dd074I\x89\x87¨\x10ï\x1böLø¢#\U00103250â\x05\x07\x08L7\x8cÙG¾¡ÊL𡨢¹ÈÐ\x90\U000e0fd8Êâ𥜇v0ðI\x1bí"NçÅ\U0004d83fb\U0004fa3c\U000c51c6_=ÎO¼ç?\xad\U0003d25cÃZ\U0010d9cd\x8b\x0b\U000b6e02\U0005727aW\x13\x1f5¡¶\x1b\U000801bfꍫ\x1dd\x12\x89\U0001582a\x9ba\U0009fe0d\x07ÉÄKZ\x12\x02\x8b\nÒ\U0006d4e2M¹\x96È\U000bef2c\U0003ec7d\U000bb84e\x16ù\x04V\U000c27e5`P\x06%\U00015fc4\x8f\U000ef192)ì7º¸\U00048bf5\U000bf249vD|ß07o\x8a\U000b1f7bÙ&o¾¥\U000e797eÚ\U000c2695E:ú嗋\U000358f7\x05×\U000be58dG\U0005d263d@\x11\x1f\x14\x1aM\x1c¤\x94Òêõüñ\x8cè(¨\U0007a82d¯𧦴\U000ca024Â\U000c0b4c%}\U000b4523\x9atm¯e\U000b3494N\U00061408$\x82x\x9aÜÞØ\x15ÏaX宎\U0001c5b7銃oñ\U000577feG\x0b\x92\x83^UñVý\x11ã¶\x1av\r2\x8b\U000ce750÷S1\x03j-Ú<A\U00063d60Þ𨜗õ|\U000b4e81\x9f𐀿\x1b\x8a\U0010a126¯8>\U001022e8\U000e0433Bk\U000d475cÄ\U000516d8\U0005f5e9\x9fÆ~7\x8c\U000b4955\U000a50a4Ö\U000789b2Ýô\U000d700amÀ+Fm\U0009d07d\U000bf7a4\x9aY\U0007a914g~±%\U00091b0c\x82\U00012c45\U00072b53úÔ\U000a0290I\U000f56c9\U0001b4c52Úh\x87\U000f1a93ö\U000df101a\xa0_Úú\U0006f70d\U0005427e\U000af4d7²T\x17q^Ð\U000a28eeo½\U00037526ö±\x9f\x13\x020U´,âê£+>Z\U000b267c\x97\U000a9c55\U0007410e𥿢\U0001146e\U0008f322Ú|\x8e\x11Ô2Ý\U00062861¨f\U000b9f98Û\x8f\x7fê\x80\x07xÆ\U00055334\x1fa\x9c²\U0004c49f×\n&æN(\U0010a48f\U00105791ÿ\x9b\x04\x15UXª¶󠇐\U000b9140göË\U00081c62ὰ\U00060e8e\U0004a76a+\U000af536¿Ì\U001086b3\U000f88ca\x99ÕhºæÑ\U00081096Ô6\U000a2889V÷\x91\U000a88af+{\U000a0cc4\U000d370b\x0f\U000ff64eä\x9f8²\xa0Ñêé\x05Ò4´\U00068d6eW\x97Û\U00101654µEÚ\x07\x0f\U000e0505\U000fe033\U0003846f\x93¯熺\x1f@\U000a78fa\xad\U000bebaf3\x99뱇\U0008b229\x16𨍜,\U000dee78Î\U000b0c67¹®\x93ó-\U000c1a2f½î\x7fÁF\U0006c9cbd\x14Á6\x9a\U000879e8ä\U00085aafê\U000af310\U0003f0c3Â\U00042606\x03$\U000cd612Ë\U0007e421\x90C\U000a44b2=\x08Ø\x1dØ{\U00019b16\x14F\x12\U000dfd26\U000d76b3\U000c8779|½\U000b3bc0É\x18\x81\U0010008eÑæ¬Å¿\x19\U000dfc7b½c|\x8b\x8f\x93Ø\x12\U000c7dab\x98\x0e\x94w¹\U000fc2c4.\U00089b43\xa0\x88\x82z\U0007145eÓ\x19g\x91×5â\x06!ýC\U0010d8c1\U0007e7c2\U0008b658×\x91\x8cû%jF\x9bí¬8\U00039841\U000e03b6¡\x05\U0003cd39\x94ä¯\x0b1\U000e17c4\x14½<\U000f6216â\x86\x13ç°\U000549ed\x1a;\x8e\U00059984\U000ccc55Î°Ë2\x9adÐôFû\x1c\rz\U000c1598i\U000f35b4\x18×ûÊ\x84\U0006f41c5\U0001bfa0\U0004fa3b\U0003db032Ã\U0010e047\x02-»\x8fµ\U000ffc0e¶Õá°{ì\U0008102e\x89\U0010a723\U00075380L¡EÅ\U000542cf1\x01\x93ò\x9fmëxmú\U000f3cea\x19h\U0005c3b8B\x8e\U0010a4e2U*@Éï\U000de3f1d\U0007a56f\x05\x82/\x88M>ö\x18ÔQ\U000f84bd\x1e\x96\xa0\U00048ddc£\U000ab4b9Y\x17\x8eU\x1d\x8e\U000b9c6f\x0f¶[\U0007b111\n³¹\x87uWÅ\x92^/\x85\U000f3f36µÑO¶|µ\U00093f14`\x8f\x94\'\U00014e87\U000e2413¬Ïa\x14\x08\x00Ë\x87¼S\x9a¡\U00102d78\x17\U000e5cfdw\U000f1b397V\x92\x01²\U0004c493ýpO\x8fkÁ\x16\U000889ed¸Íí«\x82&¢¹Äß\U0003afd0æèé4\x97&µÝ\U000b37dcç\t#𢓶\U0006c314ãß\U000b02f1\U000452e9í\U0008d280㘬o\U000f6e1b\U00083fc0ûV\xad\x96R:nÿ\x19Z\x0fÖótÓU\U0004fc1d£\x92e÷òßo\rtfå\U000a1792ï+ø*\U000f5ffa}\x0få\x9a\x12\x9a\U000422dd\U000d0ecf\U0008a78e¢I\U000f5259¸\x9cÞ\x99÷\x13\xa0\U00086e6c\x84\x9f\x01\U000b36f0\U00072cbf¿\x85{»(3Rþ\U000530b1rK£ò\x00J\U00082109ÝØ8/8\U000997a2ò&Ûæ-\x17ñµ\x19-\x1eë딆\x7f\U0005fcf0\x0fÜH𖩎×³Údà\U000f60e8\'\U000d981e\x1fc\U0004595e-±öi\x88-\U00013f75Ý\x90\U0009823a íôõ䱗𨂋FÕ¤n\x80}6\U000cbe24\x82È\xa0\x94ºCbÈc¼\U000e8c17ø\U0001268a\x8b\U0010c0e1^#\U000bc1c7\U000dcfcd]\x80D=Àò_\U000f403e\U00105dfc\U000ea266\U00090000õ\x12¦\U000d4c48\x93\U000bd47d\U000b19e7\x8b\U000bcfe4Å\U0003ac08Ã;Ï\x97\x90z/¾ô\x88Ý\U000907a4î[\x0c+\x7f\x99G5ÁÃmaDß`ÙÁ/\x05\U000fec60be«1\x08Áç$\U0003c5caNÑLSq\U00087e2d\x10\nNë\U00080bb5G'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 37, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003615s
====================================================================================================
2025-09-18 23:56:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003473s
====================================================================================================
2025-09-18 23:56:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 398095085}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 398095085, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 398095085}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004204s
====================================================================================================
2025-09-18 23:56:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004094s
====================================================================================================
2025-09-18 23:56:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': 4994}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 4994, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003572s
====================================================================================================
2025-09-18 23:56:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['êÄm\x14Ò\x1a\x02Ô!\U000f0096', 'ÎÒ\x06\U000d57c3v\U000d7e78\x85', '¢é¶\x12']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['êÄm\x14Ò\x1a\x02Ô!\U000f0096', 'ÎÒ\x06\U000d57c3v\U000d7e78\x85', '¢é¶\x12'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['êÄm\x14Ò\x1a\x02Ô!\U000f0096', 'ÎÒ\x06\U000d57c3v\U000d7e78\x85', '¢é¶\x12']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004326s
====================================================================================================
2025-09-18 23:56:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003758s
====================================================================================================
2025-09-18 23:56:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ë\x1a\U00106fe8àwdoëU?\U000a8629RZ\x08¢\x1bþ÷÷yÄ\U0010138b\\é|±ý(㹛µ\x9aë/𑑗뢐§\x95\x01\n\x91g\U00075ca5\x8bᎢ¶\x93\U0007279fÑVà\U000f3cb9-\U00078963\x18Ç\U000a6b66\x90\x81Îºm\x83tæBDÈ\x13\x18\x08Ñ\U00070825ðð\x0e\x07â±\x8cùP﹨}\U000b3d9c\x1bi\x1dl\x1fg\U00063eaaÏ\U0007d2495{\x8d\x975òã\U00033a8f\x98¤\x8b¨\x16\x8aF\U00055761ôfÏôT\x95×ýÂ\U00065ad3\U00035450Ôh/\x9b¢\x7f?áç\x13n\x07\x18®\'Þ!\U000bf205ì\U000ba531\U00034475\U000ce7e4Fx¼9\\T쌱¶¯𦠵\x9b\x9b%w\U000d2cf8ØffÃ1\x85𡅯\x9cF\x0fÕç\U0006323b\x1f\U000500fbðÐ\U000cbef0ùù\x8d\U00045d18Z\x94Rº\x85wñ¸}¨\U0006e10b\U0009270d´½\U000bedad¶Ê\x84ªþ\x8dÀx\t\x98\xad\U000be573J\x92Ñk¨𑵠í\U000a27b0\x1e/\U00084a19\U0007ef4d\x86Ô\U000dbbfb\x805\U0005ae1567ô\x05\x7f\x9b@o\U001093deÌë\x1a\t𣅎\U000fed8aJ\U000853d9ó\x9bÔ_>\U00047c78üAG¿\x1efõ=\U000efaebt\x0bkÖ\U0007fe1c\U000fe5e5.\x0e0%â\U000d3056ì?\x9d\x02\U000cf492ã\x9a:¶\x92\U00044114¯]\x18\U00076b41B\U0006e9e0\x18[¥\x93:W|\x08\x90ì(\x8fÍ£t\x8eçâ\U000603d1m\U000c0870è\x88|÷´§k´\rWÎ÷\U000436c3Äé2\U0001cc05À¨ÐH±Ñ\U000daa27🄸*r\U000ff954𨋱¡\U000546c8\U000f91f1¾\U000aaafe\x06\x8d§à\U000c0f02\U000e9b5f÷𰽛\x15³B´\x84¦;\U000ebdbe𐰈e0H\U000f538fs\x83\x86\U00094b16áY2\U00034fd8AêÇ\U000da294\U000616b4\x10奄\U00096c12÷M4Å\U00098ae3\U000f2785Ûë\x01¿,D\x86lL\x8c^6\x85DÂ$\U000fc5eeáÒ\x1f¶l\U000b84e5\U0003bb4a\U000906daÝHÌÒì´Ý¿W\U00071833\x93M\ue3b9÷í\xa0JË$\x16 \x03MS\x1bÝ𢓓\U0004593cK\U000cb376\x1fÑ\U00098c15Y:Ã𭷮\x05n\nNÔý\x82躨\U0004db4dé\U000374e5\U000c5d66m\x94\x15&e\U000823f5/á¨õ9\x0eOW!\x17\x9c=iáÉ\x96×l\x7f\U0006f895\x0f\x07\x9bT\x7fõ\U00057d56\x1c\x99«\x1c\U0005d2da瑛n\x1f\U00078509ha\x16¨è¹\x00𰱰©\x10\U00085a65\U000aa495\x07\'\U000eccc1}\x94dØ:\U0010a49eN\x9e®¹Õèäñ\U0004ad08\U000ba715\x02+ñ\U000818d8úrG@:ÔA\x15\x91ß\x91e¶\x95\x07Õ3ý\x83w©w\x053ºÙ×\x9dö\U00079f7d\x95×3\U000b832e\x0cò\x0bÉ9o\U0003df66Ê\x01¿0\x1bté\U000dcbea)\'\x03«\x95\U000ebeb5\x0c\x94\x8f\x94\xa0 \x134\x1e¿\U000ace01ß\U000bb6a3k𤽣1\'𗯬\x1fu\x18ô¡𩁝n³µ\x119\x80Ê\nSK\U00098332\U0007c531\x95\xad𗴳\x92èÄ\nØòᜒ\x10ôUá@\x93⤧c¨\U00069d43\U0001df28\x80©É\U0004c869\U000e204b¡¡\x87x\U000dee4e\U000c0aaeçóÂ1Ä;dL\U00085162qÎ\x90\U00037205y>0Ç\x18\x11\x1a\U0007538eü\U000828e6¹Jñ\x1b\x7f𐍪\U0003d3d7𦥀ÓM,¢\x9b\U00062477æ\U000fea04éê\U00091ce7\x05\x8eD\U00060ac3\U00101a59ÙÅ\U001003f0\U000dac27\U000be6edúõ¿à¶ô\U000cdb33§\x1c#W\x06\U000c6536Ã\U0010263a¬¾\x86\U00093711û,5¬\x0c\U000df3f5\x0e¥J\U00067649\x82^\U00090685$\x11¥\x88\x17\U000ddedb¿9\U00107f72\x1e\x8e¦\x1e\x15\x8aVÞ\U00060d13ç\U000edd1c\U000b6190ÉhÑÚ]\x07xØ\x8a\x9bM\U000898c5¡\x82Ê`óq\rÝ\U0010aefc\x80~û\x12/®j\U000cfd5eÉ\x9e\U000709dfI\U000348ec8ÿ*gp\U000ebe97µ\U000befbdä£`Ó¦\x9c\\𤅮\x98OÊ\U000e3432\U00081b7bÇ\x1có\x83\U000efaaf\x16Ð@\x97\U0010bd60±\x0c[Ò³\x9e\x10ö¬Èù\x8dO«\x1fÕÓª峢\x17\x11r+1âéwl\U00055c92ë¯\x10\x08\U000ace88\U0009ed7f\x7f\x95\x81_\U00041c83À\x93\x7fôô\U000e7155}\x17\U000a4696\U0004068e}\U000822c3Ç\uf2ddÐ\xa0\x04¹"©«6lî2«Ð&𦳝\x8b[ÍL6A<$\U00059d61\U0008af47\U000ea186~\x13V\x86\\\U000696bf\U000c4998\x18\U000c3feb\U0009bb74ð#Õ\x93Ð\'¢\U00048b62Ðú>𣭄\U0004dbae3a\n&\x06\U000d0698£¦C\U001052f0\U000c65bc\x94¿EÑÇ\U0009a444S|r\x08¿Ö\U0001da98𨱪\x11åè´\x18µÅ}\x02ó\x9d\x1a(gkØ\x10T\U000c2648\U000ee79a\U001061d4-\x94\U0001a160Î\x19\x01×\x12½ç\U00104317N\x1f\x95gI\x86\x08\x1a\U000a5db5ÅÍ\x9b5\U000cfeb0J\x8a\U000165c0\U000e80a3\U000b0bd0\U00100a4cª#\U000fb9e6\x03\x81øN𬷠\U00069817ñò$À\x01\x04ß\U000c7ab2\x12Á°;"\tÓ\x8bRÂQ\U0009e011¨4\x8c\x0c²äÝp\U000c5f73Î\x1fÝq`wÌ5Õ\U000a2117`Æ\U000418e5\x8dk\U0007dfc4\U00047714\x81ÖU\U000af2e1#\x95×\U000e7aeb\x1c\U0008f925Ü#Þ\x0fr\U000857ca\x06\U000a32a1Ö¿åÜ\x98*\x95%¸\t\U00103408ô\x08\U00061a26Ç\x9f¼\U0001b7cdv?9\U000fd649ô\U000a08de[\U000de9f7\x17r\x99ß\U00068e39ûU\U00086108à\U000a6e04\x04¯#3p\x8a\x9b\x0c\U0009a7aa\x98\x9b\x93Å\\\x03ºv¿ì?DFkBrDÆ\x8c0Æ𠄙', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003672s
====================================================================================================
2025-09-18 23:56:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.005532s
====================================================================================================
2025-09-18 23:56:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 117, 'password': 4436919046803428174}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 117, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 4436919046803428174, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004146s
====================================================================================================
2025-09-18 23:56:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004223s
====================================================================================================
2025-09-18 23:56:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003979s
====================================================================================================
2025-09-18 23:56:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -101, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -101, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003879s
====================================================================================================
2025-09-18 23:56:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004009s
====================================================================================================
2025-09-18 23:56:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'B\x9f\x8d\x9d\x8eV\x83Q𤲖\xa0\x03|\U00014ab9ç\U00013af4Ò\U0009d66e\U00034693\U000d1c17\x8cÄ\U00092a95🥫lÇ\U0009c2fb\U0003bef6𮪇5𥩈\U000b7a1d\U0004f5b4\U000b6e55Õ\U0008eb6e\U00084799ýrqH5ø\U00033a0a7\x0f©P1Å\x87A\x89\U00066fafvK0.\x9a\U000719f8\U001021a0\U0003e644\x1e´û±\U0006e706\U000e9c9a?\x9a\U0004a8dfâ+£Ù\x83t]óÆ𤡣\r\x06\U0005cbc9\x1aü\U00089d35¬\x9cHÖÍã\x7f𬌟Óç?\x1a¼\x91"¥\U000e1539)!\U000a4312\x8f\x00/\U00038085\U0003de28\U0003decd\\\x11\x8b\x13\U00049500爍Âsþ\U000ccf05Ý7\x11Ç\U000e5314±\U00082667\x84\x85r4ÕÔD_ -/cÁÁ\x9dÛÏõV\U000331b6WÙ\x82\U0009552f\x00©\U00085c53Q\x878s\x17ÍH𨦎È\x0f\U000fcc57¤"\x07QT¥\U0008aa84µúîý-\U00088b48¢V\U00051cd6\x87M\U0009df9b\U0006408aÂYJ𥵅Ӷ\U00077caeöø\x068\U00084597f¥𤐻\x1c\x88i¾Y\r#m\U00088ccf\x82B\x82\x17Q\U000ad3d7\x9f\x88?\U000ba39f)ií£·\x94þ4\x03\U00079ad4\xad8ï^Ê\U000ae183\x93O\U00016484\x01µ\U0006d2c5##p³¡g\U000902d9\r\x8dT\U00066726\U000d0396\x80áKKÕ\U00013ee6(¸\x93¼ª\U001092a7Óª\U000deef4\r3ÒAN\x1b\U0002fd24±0ÁËÓ?¬Á\x16\U00054924\'\x82|¨uì\xadªrÝõ\U000eb352𘟨sEûL\x81¿¾°Ý\U001008c9\xad\x1de¡OG\x86𢾸\U00105f96Öí,\x08\x8eòÅ\x0c\x9dß\x98Q\U00098e85í¬õ/V\U0005eb6d9kPç\U000e3c86\x02å÷\U00080560þW\U0004434c\x96<·à\x86\U000c15c1º\\\x1dÕ*ò\U00055cbf;j½\x03\\@\x87\x0b±¹\x00²\U0010f8c7\xa0)k\U0010701bF8\U000fd7fd·\x9c\U000406cb\U000a3fa8µ\x06ÉVD¬𫺔/L}qhâ𡐢ï\U000ea5d7Ö\U000fdeb1zS¨\x8a\U000d7a02\U000b1386´\U00057171øS-?\x94n\x80\x1a\x91Ì\x9f\U000f9ee8\U0003bacboÊë`ë\x06\U000625a1\U000c8a0a¥\x1d6\U000f187b\x85`Ö𧏘(\U000dadfb섆\x8e\x04\x14\U000cc0b1\U0002fdf4\x1b𘞪÷\x80:Â\\\U0008a7e0+¼\x82$\U00107233]E\U0010485a\U000a43cd\U000dca37«\x91\U00099ef0ñlÍ³\U00082688\x92Ò£%Ù\rØí\U00056ef3¤Åh³PÞ\x15/¯\',@Y\U000f5243BpF[A`Iﮄ\U000ef021[몦\U000f9287\U0006a156¨\U000f574d \U000e4cd8𦆫䗤LÖÕ\U0003356eV¹\x0eçp\U0006fed2@f\x97m\U000e4e40´\x8dV\U000e5c59"¦\U00100c73𥚌lqú%\x06¸\U0006353aF\U00100876V\U00064d4eT𑒙-ø\U0006d382WT5£\x03>É~𓉗g¾°o)\x17¥jÄ{\U000f72bf7U\x87¶²\U00041ac5\x97ØMj\x02\U00077ea7YPÓ]\U00067b16\U000da00eÎ«}XÜ$È\x19\U0003ad89¿»\U000fadbaT\x85\x9aÀ%\x04𝛳Ó\xad않ú®%Ëãó\x08.©ïG딆üÓ^8óëÊ\U00053b4aÌ\x99\x93\U0005dadd]Î_$·`\U000f1fc0\U00100f40ø2\x08\x18𝈲E\\8R¹R²þ\U0006bb83\xa0\x15Ç¯\x83Õs\xad\x8cP\U000905d9ú$\x1a\x1b\xa0.\x0c±\x11<\U00087c53\x06%nÕðt\x16\U0001386d\x1db\U0006f68b\U000d6164BÇåÞæ\x17\x89\x83\\?\U00033ccdâ\x84¨ÂB³W\U000dc510\n\U00035f55CÆ\x94\x1a\U00015f3bÜª3\U000ba8d0µ /\x1fñ\U000c067a\x19\U000d8543ꔎ§4ä\x8e¼ì2\x02\'Úå\x85YÀçÃ"N\x91³m])QH䀺õPÆH:S\U0010de42\x96\x01@{\x1c¥õÑÀ멹#_6\x90±c\U00094f99fª&M\U000da4c3C\U000a872f)p\U00096f6c<\x85\U000b47a4<²¹º\U000c0dffþ4~D«ÕÍ¹h\U000cc188\U000146ae\U000df614²\U000f24e1ã\U000a0292\n{W\x88\x0c\xa0eB\U000a9eb6à³D)ªù\x84\x91f\U000a347eçPö\x9aÞ\x9b4\x02\x9b÷\x87M\U00034200\x08\U00088ce4\x0bz\x01JôEw§\U0010e05a°v#ê¡\'X{𪙉¡\U0007defbuë\U000a5729\x0f\x19¢\U000c15ab7\x9c曯¤ý\U00078a4b\x06Íp\U00059de9Ð{Ç\U000eb12c\x81gjCø\U000f1c29𑫣@\x03q\U00091407\x03𗱠w´^\U00056fdcàf1\x92\U000370f0\U000b7d97\x1d³\U000a44c4\x92\x0f½WÊ"\U0006a69ca\U0010b3e1Ö\x13åÄ\U0009f357j\x0e\x8d\x1f\x15Ú3\U000a69b6ê¸Vh\U000dfae0ªÂõû½TÞ+\x97ñî\U00042ac2\U0003153d\x8a\x9c\U000d886c\x08_\x13\U000a41ad\U00088994\U0001e4d1ó\x89ªÐî[\x85Â¶´\x08Ûª&\x92 \x85\U000dac7a9\U000767b1\U00081bca¢E\U000ee129\U000c1271¯ñ\x1c\x18\x88ã\x00\x82´EÐÕ_\x04â\U0003f705ÉÎ\U00055fbc\U000adfdc\U000f611e\U00088e4a\U0007a8ae\x13\U0005f853çÔ\U000591d9¡\x01¦Ó\U00054f2aJ\x82\x8b\U000b106a\U000bbada', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004434s
====================================================================================================
2025-09-18 23:56:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '{\x8b\x0eC(Ãb_â#\x84Ûw\x06h\U000b92bb\x14ÕïÒõ\U000419b8\x94õ\x02:\né\U0006b420Í\x93þ\x01\x92¸é\U0008b088Ë\U00076af1\U000788ac\x9a𑈔Uô³d\x82.ë\x95n\U0004c8cd\U000e6f09\x84ÃA\U000cd697\U00055c2a\U000e966d\x80\U000ae4ecÄ?üØØÐ31ön¶R0P~\U000ef34a\U00062a7e^\x14³0\U0003336a²i+·\U000886ef«·\U0003b093\x85\U000392c6/\x13\U000afe98{\U0007e5bb\r\x0fGØs\x84\xa0\x03ÎþÌ\x04!\U000decf0ì\U00063db8\x99\x9a$\x9b\x07\x89ÕÎQ^Ö|\'ó\U000a7ebf\U000745e2@\U00048dc0s𠏰{$\x17ùÂc\x93Ý\U000a1dd3Þ\x9cÊ$Ïn\x87Û¢Y÷p\x06Nxh\x8e\x83\U000b6f66\x12<H ×¸\U0005c6ce\U000410ca\x85\x16[ê\x84°+Qâ%\x8e\x93òªöKx\x9dèº\x90\x0e-9=~ãð\U00052540\U0009afbcÏM\x1c.»è¯\U000f38c9æ\\\x9dú\x85VÌ_\U000661f2\x15kÙ\U000d7571𠟈\\𞴅Âh\x8bÝ\x04\U0003d95eÛÂ=à6 n)<\U0010696a73þ\U0001a3d4ö\x15\x8d~¬â\U000c46b2ä`\tß¬Ð\U000f71b5\x03\x0c¤𠴿ÉÚq\U0010e831rùÀ\x10\x9f\U0009c776\x1b\U00047e69\U0009f0aa¯_\U000f6bc2\\\x9b\U000c9cca\U000d2218úK\x16jý\x1dø\U000faae8\x0c.\U0009c6dd"\x10\x8d*g𫍾ºw\U00102eaa\U000d8aae\x90m¸jï`\x8d²|\U0010a11f\x85\U000c31a9=\U0009c351\x02\U000411f4Öò\U000a027eàF\x00ÂxÞ\U00107b98ãEõ\x11³\U000c907bÒ\U000fd679\x07T\U000aab0bº\'ç\U0003f82boÑ\x11V¹\U00081888Õõ\U0001e73aª¨;\x83\x152\x90Ð7s\U000841bdõ\x00@\U000ed232\x8fÚ\U000bdca42hàó§\x88\x1c\x8c\U00042439f \U0008c86a\x8a\x9b\x86\U0006b346æ×\x81î0ÒÔ\x93\U0007f1d7\U0003a387ú×\U0005c212\U00084bbf\U000863daù\x93\x91\U0010b994\U000f3523\U000f93c0è\x1a@èË\x15\U0005ca26p£å\x80¨\\\x04\U000bfe0aÝ4\U000bb8dc\U00039a3e\U000df9acÉÇj2-𗗛\x0c\x97É5\x8c¡µ£&"\U00052ebb\U00045240\x88\x98É\x00\x1cÔ\U000bc2afã\U0003c949\x9fHôâgá\U000e0c5fÊ\x9bÅMo;叚Èv¥\x03Äõ¢\x9e\x06\U00082edc\U0008d230\U0001bca6IDæ\U0005141cu\r䜯Ö\x9bp\U00019942N\x00Á2\x0c{Ó\x82;\x7føþò\U00013cfa\x86T̶o\U00075ec5îù²\ne\U000e9c84¨º\x19@~o\x00\x91½_\x88Þ\x01<j¹)\U0001bc8c\U00031dbdþ\x14\U00032b4d\U000d5d07ÓÂÑg?\x84\x87Q\x0b¯\x9f¢r\x1e\U0007d197\x14O\x16\U0004d70eÙ\U0008d628\t\U000afa5fÍ\xa0Ø\x9e\x8bæSãøP\x13\x0eà\x84Û\U000a2b2b\x0fòWñS\x18\U000ed818®\x8biáH áÃ\U000ee089\x14\x0e\x0e"\x1f\U000fa622\x93Î\U000d285a\U000c3636È\x19\U0001ea7dQo\U0010bd47jÞ\U000946aa\x82yÝ\U00038292\U000e4e6cñÝpB\U0004d434\n.\x0fõ¹W%D!v\U000e13e9\U000f4d0e\x92Qv\x1aÇÅgzJÌ\U000c2c7fÇ$à\x1d\x16\U000b38cabh\U00098fb0h\x9e×4Ìz𦝅/\x7fù\U000f4c18°\U000b055a\U000bfd10ô:\U0010688a\x9f\U00095ac9\U0004ac9b¶\x03\x1c\U00065ea7ð\U00101f9d>Ç\x0c\t\x80ã´¸cW\nGÞÛÈ9Û-rÚ\U00045df0ù\x87¡=9¸ì𝍦𠣔<\x8a´õ\x04\U0003297d[\x17Ã\x19\U000855a5ðµ\U000b37d8\tß췆»o[¤\x9e孎9çZ)A\xa0[\x07\U000b6e41\x97¨};ꄚS^\U000a436dPÁÛ\x06<Ð\U000dbab2«Òß\x89\x06)f\x05ð¯\x95\U00080037\x00\U000741df\x82ÞºU\U00083fcfñu\U00108db7E\U00034553µ¸\U0003aaca\U000cb11bó\\\x03\U000f0c0a\x03\U0001b3c3Rt\U00015df0B®\ue8afÑÀ\x80\U000d7633\U000340deùñ\x8c\U0006ff90\x8f#à\U00087c23/\U000bb79f\x98õ]믇F\U0007c9a0*¥\x10B\x8c¯Á\x9c\x87éF\U000a4350Ë\x9d\x9b\x15_a\x9c\x1c]\U0007dfabè,Z1\U00056eef"£u\xa0ÒÒO\U00043a23\x89\x9b\x1d¿Ä\U00050284\x98öu\x8d\U000fbaa7\x12\U000fb5b8àTõ\x94\U0006f392ß·Ñº+6¥\x10èt\x04i6e\x92\x88)*ý÷!$\U0004e809XC\x88>QÈ\x86«ÁÆÁ\U0005b040\x104\U000f513fA4aPJ]Æ\U00087ee1Xa:hÅ:V\x80¹ý\x88ù¢ý¥\x16\x16^v\x0e\x11\x0b\xa0i"äÊ\U000e07d9\U0001485bº/nI5Uþ¤\U00093c35[á\x05\x9e}çÂ6¥ÕÊ\U000e785d9\x98\U00081010\x9b\U0009ca44×bF\x8a&±w\U0005233ewµÁ\U0007d416\U0009b930b!\U0006fe36¡ºs\U000fce9aÅ\U000147b2\x0bðÓ \x9a±\U000bf3f7\U000e3143P\U0008c939\x99\U000b822dp1÷C\U000643d5\x89_\x88`\x01úZii\U000ac86e#\U0003821d \U000d75e1\U00064df7.\U00086eab𐚮@ý½\U000d9221¢㓙\U000b0c51Aw\U000dc636Òê𒑄ù¶\x7f\U00032cf0\x1d\x9bùò\U0008284f\x92/Bâ\xad\U001061a1nbkÖ_!\x04\x9b\U0005e2ce`É9\U000c71c3\x1bÿâlÐ\x1a\U000cacb0¾l¶$:T\U000ad640\x13ñ\x98\U00055940§«\U00037389\x81\x87\U0010e499c\n;M\rD\U000d4059P\U000b6301G©\x05𢻿¤î¥«Ø\U0001c5cc\x03¡h£\x95c;â]\U0006a7a3dM+YD|\U0009d740ÿ\U0006c896\nI\x12\x92\U0004ab74\x01\U0008bbbdT¤w\x07\U000383ec\x0f`a\x80£\U0005e99eèæ7\U000ce312¬\t\U000629f1¥cÀ=𪎺É\x197\U0006a193-i\x8fÜ»𐜜¦\U00080f9eÔ1\U000d6fd0\x1f𬷾oÅ|Q\U0004b595\x18ûÂ\r7õø\x06\x0cV\U0008a99a\x0eó7Æ\U000f5b2e\U000badcb\U000ae9cc6\x81\x06㥽u\\¢Ö\U00089027B\x98\x89~\x14\U000b61f5¨\U0008905a>\x13\x92¼õ\x81ù£"\U0009e5cc\x91\U000b5c27\x1c@Hà\r£\x07\U000ab3ba9\x18\n;¤\U000799bc¼\U00074e25Fhác+©\U0008ae12BMðö\U00040055ËÃ\U0008d25b¹ô\x1cr\x02\x99:\U001067bc\\|×昻\x0c?í\x9bfqQ\U000c1bad\U0003bed9c~Ýûª\x88𢻽nkß\x0cÑ4À1\U0007ace3ÒÊ1¦±cp½0Ê𰫇\x1f\x8d\x87\x06ñîe¶;\x03\x0c\x84\x0e\x14\U000a184d=\x1c¾ù\x16\U000140d2lå\U00066aa4G7Ù)³\U000aae9br\U00102dbeÜ\x90\U00084707\x16&\U0003e82aê\x14Uð~ï\x03\x8eÝ\x7f²$\x01(ò?¦çø\U000f4de9¡îQ\U0010596e\U000901a8|s\x11½Y\x8dôÿBòãã"é\x07', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004033s
====================================================================================================
2025-09-18 23:56:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['r\x03Þï\x1b'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['r\x03Þï\x1b'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003842s
====================================================================================================
2025-09-18 23:56:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004108s
====================================================================================================
2025-09-18 23:56:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['x', 'Ô\U00107b4c\x96\x83vÌ³', '(\U00041e78\x01î\x12ö\x16Ó', '\x8aø\\Ú·Ô|', '\U000d8a33\U000c2b4a', 'º\U000abaa8\U00069604\U0003c996%ÚM´Ó\U0006f3fdp\x08\U0009cc22\x95ùG', '·\x8e\U000bb5a6²'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['x', 'Ô\U00107b4c\x96\x83vÌ³', '(\U00041e78\x01î\x12ö\x16Ó', '\x8aø\\Ú·Ô|', '\U000d8a33\U000c2b4a', 'º\U000abaa8\U00069604\U0003c996%ÚM´Ó\U0006f3fdp\x08\U0009cc22\x95ùG', '·\x8e\U000bb5a6²'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00392s
====================================================================================================
2025-09-18 23:56:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003614s
====================================================================================================
2025-09-18 23:56:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '𭵢Á)âÿUé𫡣\U000ae147VyÿÛ\x0f\U00043867w[{ /ØþÍç$"èÂ<zçá\x88©È\U000bca4aY\x0båõßl\U000391480\U000df7f7©Gù\U00093f08@&/\U00015cbaÀ\x93xË풠\U0008186c\x18¹æ+È¨½Ýዽ\x17iq»wY\U0010a9f3\U000f2c7c\x89𦰒\x890\x0c^\r¯w\x16°â\x98túJ\x120(\U000afd0dRç\x95§\x0bý㡉𣞡n\U000ebb29\x93bê𡉢§æ®\x9f\U0005f8ffä\x9b³ä!\x87l±È¼\U000691fe\x0c\U000d1a22\U0010e2a2*𤼪X𠁲\x12ÊG«{\U00066d68L\x0b\x04¿\U0007b49e\U000701d9A\U000e52a9$Í\x11¨©\U000cf54dÅg\xad¦\x8fðÅ\x92ô9Ø\x01\x81\U0003ed69íc¯.\U0004a027\U000c0a1f÷\U000ef9ee\x87*;\\\U000d98b8%ñ0´\U000d567e\U000768dc%\U00048f8dï®\x1d\U0005c9e6à\U000729e2+¢ak»𰐶𗪤\xad\U0006c24c\x1d\x1c9¶\x8a\x14Í4Ä#`ëf7\x06\U0001c588Í\x10ú\x9b0iVt\x8eÈÎ\U000d03fcäÍ,Økø\U000de057e8Ò³\U0003b0c2W\x86\U0003739e\x1e¾µ)-\x8c[\x18Jè\U000d3c31}`𬞥\x87\x11\U0008f1c9`C\U000899de\x1b´\U000e8646"N;·\x16/\U0001fcd8_\U000e3865ÀS\U000e088fâ𣥀\x0c3\x0b2\U000395d3\x9a\x0e\x90°\x99gè\x84\x1eÒ§Æ\U001096eb³´\x1cì"I\U0006aced!\x02\uf428Q\x84\x9eZ\x82\x1b\x9b\x87\x96\x8dÄ\x10±\U00085815\x1câ\x92\x15\x1d귁\U00034860Ôm\x8f4\U00084b52G\x83\U000bc186À\x9aù\xadî\x80Z&I\U00037a10\x18Ý\x90¤Ú$\x92Ví\U000c08aaë§\x95Ã\U000730daí&𧹶\x88sø\x90ú\U0007e562\x9d%\U0010e4fc\U00108ee1\x89\'øxjU¤P\x8d\U00035ea9W\x90ß\x9e\U000faa30¯«"¤W\r<ß𝀓à%\x8ajJ\x04^\x05¶i\U000a939c<$\x0c\U0002ee62\x89\x1e\x8e\U000b7b63¸\U000ae86e÷\x00ô`Ó\U000fa5ebÆ𒒱 &¤#Æ¹¨[ºw\U00076e49酫\x16wg\x07Áeä\x1a\x01Í\x02ÓßV\x0f\U000d3fb1Ð\x9a,*\U000aaf54\U00076463ä𦔟\x05ÚÿÕ/T\x86ð`\x91þ|hÃí\x07\U000d0cf5\x98-Ë\U00068494«HN\x96\x0b\U0010dc51\U000e0d54´=Íé,\x1d{\U000e127e;øµ퐅2SÈj¡9Jû𫹮ÿëkÏ\U00044aecOH\U000909ac\x89d²\t~ÍX\x88\U000e4bc3B\x9dØ}\U00072e71Ïê\x93z\U00050552\x11N\x08ò\x1au\x9a\U00067d91\t𮎄/\x1czW\x9c\x86*íSzÔ%¿gv\U000effd2¥þßGÕÆ(ó\x18.xæ1>\U000762e2\\\x92Ó,\x11&\x96O\U000c9f2c,\U0001b89e¨¼×Vyw\U000fd75b\x84"*\U0010e272lû\U00076c82)ÈÈ\x19?Z\U000fbb5c¸5\x1c«\xa0 ¦\U000381b6𣊒\U000d681d%\U000c0bbcV\U0009cd53\x96=ÓPª\x14áN\x03@7\r럝ÁAKÕ\U000e61a6\x8d\x9a\x90+[\x10qeÒt\U000e17fa\U000be001ÿ䁘\U000d71d7\xad8lâÍ4×â\U0006fa30§Ô7𰖥Åx[ ó\t\x05¨,䁔óÎà\x9e\U00080521\U000457aa\U0007a3ae\x93\U0004ffaaµ\x1f𮀚\x142\x0f\x02Í\x88\x15=Ñ½\U000add1c¶\U000b69c3\U0008b1f8\U000a9259\x9bËï\x05\x04ª\x8bvÕI\U000e5b72\x1e\x94êB\U0001494e\x98\x92FÇÐlÏ<.\x0f\x99n\x88Î°öX\x1eÈ\x1c\x1c¥A\U000bb25f\x18à®𝓨\x91\x03É\n\x93ê!\U000498c1\x94Îï\x7f³O:ÏM\x91\U00087182\x18o𦴎ö×ÉÉ\x87b\U000faf8d\x9bÖ\x01HCÍZ<\uf33b¥IÞ\U000bb05d ¥\x02\x92\x03\x90\x9d¹\U000746b0\x7f\x85𭧶攡Rß¨FI\U00064c47BÖ{2\x02ÔY\x86t\xad\x915ÝÀ\x95\U000b850a\U000473c0\x83\\ý\U000a4924\U00082c39md\x97W\U000e06f8\x8b}G#\U000c1402Ð!\x7f\rh\U000f227b$\U00097e58Þq\U000fcfb8\x92\U000e3fc2\x8aɫ\x12µü\U000450cb\x00¬î¡\x12Tÿ6\U00073b07hþ\U000472e4\x0e\U0003c07c3\U00044cde\x07\U000d3ef9OÝî¼ÀÒ:\U000be7fe𑨭Ø\x10𗉐Í\U00081567\U000d76a9\x86\U00069191Ä\x8d°\U000e5469\U000835ff\x89\x8fì3\x0f¼𢁊Õ\x8b\U0005fdd6iè\x95\x19\\\x1b\U000fb1e4®𢨗)\x1e𓆟w \U0010c8bc\x14#Ä\x85𘞭\x06\x14\x10\x0c\U0005b33cë|àË\U0010bf5cú\U000a829aâvÅ:Ëi\x0b4 |Ém\U000946dbeÜF\U000feb971§\U0004d9fb\U000f78c1C\U00046768zªÀ\x8a3}Ì.\U0008f931·\x9f~2\x90<Ç\U0007d959\x85\U00074e77½\x8c¥\x0bd3\x86%ôè\x80ÍõÂ𧳦ê4Ü;p\x02\U00102a0b¥*8\U000d5dec\U000adf1fÿ\x8c\U000aa717¥¦\x8d\U000a67b7À\x1c\x15\U000f0a2f.\xadlÉ쩊ä)¹Ü\x7f촷\x81\U000cd757Væ\x03\U000e1fb3\x99å\x1e𡶶â\U00103d3eÏä*\x04å\tßå\U000f9fb1ÂéÎ\x8fÕø\U0006086c\U00040c5e¤û&í\x14\U000ecdcaÒ¥Øz\U000162f5ý÷\U0008dfa4\x9dÌ\U00053749𝑨Ñ\U0001ffe1i\x0fÍT85\U000fc273N3\U000d2b19\U0010c6d9\U000a54e4ï홤\U000acdc6OM%Ä\xa0¶\x1e\x14)Ø\U0001dd64\U00035022Ï¤\x0b\x08o§Ê\x07&\x83\U000fd7cc\x1a-\U000852ccõY\U000a364a\x05\\J¾\x87æõ\U000d2602ó\x95}L\x97Ãp;µ\tåk\U00088bc7\x97\U000ca2ab½\x13A\U000ca64a\U000a15d2A5\U00044518%ÒáÔ搕z\U00057483ÖóÕ\U0001c280\U000a58af𥩄\U00074821\x80±𑌢Òðï\x85mr\x10`wL\x1fÿýIÁùoæ\U000aca51\U000dd58b÷ôV÷ª6\U000e9c56ÌÅ\U000fd774Ó;P\U0006283c\x9b\U000eb412\U000d3027\x8e]ªl\U0001147c(\U00037802\U0008408eQÑkmë\U0004b7d4mñ¦Ä\x1f¶úkÍo\x1a𡞠çS\U0010bf06â\x0f\U000ea920\U0010569e\U00039e3f(\U0007cf54QB\x9f\x04ÎÀ-»b\U000d46a6(𗬮SÓ\x97ð\x060\U000c68c6\U00083924W\U0005a3d7òå$\x97Ëx]SºËD\U000919e8ÍØ\x87ø®\x11l¥"\U000901b2yÇ\U0006fae5\x94\x9aI\x12\U000b3948e!', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003771s
====================================================================================================
2025-09-18 23:56:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x1c:\nꣅ𣐷', '\U00086f36+\U00081915', '9\U00101b9e\x9f\x81\x95IC', 'I', 'N|\U000ec7b0\U00062619\x14'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x1c:\nꣅ𣐷', '\U00086f36+\U00081915', '9\U00101b9e\x9f\x81\x95IC', 'I', 'N|\U000ec7b0\U00062619\x14'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003523s
====================================================================================================
2025-09-18 23:56:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -29}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -29, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00367s
====================================================================================================
2025-09-18 23:56:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x96v\x82?\x91', ''], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x96v\x82?\x91', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004186s
====================================================================================================
2025-09-18 23:56:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003864s
====================================================================================================
2025-09-18 23:56:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -32448}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -32448, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -32448}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003845s
====================================================================================================
2025-09-18 23:56:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004084s
====================================================================================================
2025-09-18 23:56:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'û×Ö?i\x1aëQÿ\x99\U00106cdf\x11\x8f\x92\x85#\x81,½>Ì\U0004a59d\x90\x96\U00042cf2P¦¼i\U0001c741KZæ\x12\U0003d87fï¾\x06G\x87ßö\U000e49daÅg\x97\x1ccC𣝞ì¿À=A&\U000cc9ffÌ\x93\U000cbdaejØÕ鏉\x13\x8dJw7ÂÅdê\U0007f7cbF%i竵\x03\U00106b24uã\U000523dfJîiG}\xa0\x05\x00s,q\U000aa786\x03c·𑙖Z\x8b\U00058efe\U00034e16s\U00103ca2Ð\x98O\x98c4¥^\n9\U00073757Ñ\x88áQU×dÐA\U0009d327\U0008fc48å{\x0bÍçXý\x1bü_w4yî\x12\x04µ\x9c\x1f®\U00010fd9ý3\x85Õè3\x0e\U0005febd\x0b\x03\x81C\x91 \U0008bbfe\x0cïâ²Ø\x12\x13\x00Ï\x8a𦮬á\x81@ð\x9e\U0004c5f9\x8b9v\x1b×\U000ce3cb¨Ôª\U0005548a=Ó\U0003e5b4ÄÀ\x0c\U000e56f3\U000b986a\U000914a7ú®7𫾖i\x96\U000c580e\U000c049f\U000bb7e1º\x98\U000ceba9áÁ\x0c\x8eìÎ\U0007e768ÅÓè\U000f0fb7u\x85¹\U0007b0c7\U000a1511ZÈ\réó\x9bªpSm·\x8a\x90*·ã<<\x8eó\U000c2727¹>¬\U00098899\x0b\x96Þ\x11n-\x07ػIõ\x882\U000b69c7·\x01f\x83\U0008ad16)°?\U0002fe77\U00058d34¾\U00073eef\x9eÔ\x02_¬\x9e\U000c81faÉ\U0010c7f2\U000810d9𮋔ámì\x08d\U0010ceea\U000b6cceÓ*\x86V1O,\x91ºÆïÂ\'<\x87JEø\x1f\nMrq\x8c¥\x8e\U0008d18a6tÚ\U0003f42dÇ6â\x04@\x00°¶ÐY¶ô\x1bæ\U0005a068ú\x1bw\U000a4d16Ù±\U0001c5b8²\U000c8867Zø\U00051af5\x83\x06F\U000cf9b7ò×U"ã:\U0009c41acE𧀲×s®\U000a0de5\U000d6e6dw^%\x86é/úU\U0007ef0f%\x8dð4t\x8c\U00109797ÔDqÆ\x07\U000db9fb\U00081f29O\U00054beelè|Ê|\U0008dc05qÛÐqß\U000bd772;\x0f𫞪\U000f8f61ä~\xadCî\x06ë\x13\x1dÝ\U000a316b𰍃w®\x1cÞÃ<\x82Ñ\U0002ed76\U0001a313\U0007a686\x1aÿÿw\x07m\x90ñCM\x19\x03R\U000db8cbýØ\x00!áÚ\U0010a2f2¯¾\U00050126쿆³\U0003e271]\U000a45ef\x0c\U0008270a(愂\uf0d8Â\x16$\x8a;\x92\U000e45a7àY\U000ab404\U0010f107\U000a724f\U00074200\U00080b15}g0\x90𗋁P;ZÝ5`%\x8a\x13𰧏\x82\x06Ýù\U000f44698Ø6÷}\U000e9a99\x84<®I\U0007d342µ:o¹ýr\x97\U000562a7\U00065a47K_𩔸÷\x95_ò\U000c6b86\U00064a9c\U0009e89f:o\U0003e811\x18\U0007cb7fû?»\x0bh\U0010f062\x85Ub\x18Ý\x13ð\x12bÁìéí\x03a\x859ÄÑÜ\x9aëÊ\x16p³y~\x1eý\x8cNò^\x16r\U000ee512©<¢\U00097713\U000c9838\nt>\x86\x94<\x1df¦±\x9c\U000317e1\t\U000e13aa\U0001551b\x14ôï_Ywò|\x17\x80%ðZ8\U000c48fb\U00014882½ø}}ß\x1c\nß¸Ò𗀛ú𢡗\U000a33f7Îþ6\x97\x1e\U000e86ef\x83\x95\x1c¥´\U000ddef0k\x02\U00066741\U0008becetg\U0006913f\x17º\x81\U0003ad53\x93\U000e1204ùb𧤮\U000bdc85»¨P¯õ¬\U000362d3\U0001a065b^\x1aÜi!ì\x98ñ쀕_·~\tä\U0009514a\x16\U0001eec5Ö\t\U000651d5\U00053eff\U000d87fa\U00050114ü\U0007a1bbóÀlI\U00032c14¾\U000af607p\x18\U000f87912a\x0b\U000b7bdc£Ã=7º\x0fÓ\x9bô]7\U00106aba\U0007facdD0\xadö¿\x12/\U0009e5aa"êµ\ua9ce\U000ab4a6\x07üt\x16a¸\x0e\x06°\x90\x89\x97\U00102181\U000b19fa\x94\U000f9736\x1a\U0004e1edRÔ$\x832\U0001c97fÕg\x0e\x1f\x88ª\U000ec0bd$Ä\U00034fae\U000768faｗ+\x1a𧼍M\U0007470a6\x0e\\\x14\U000595f2,¤µ\x1bó𡅫_ù¬\x84á¾Â\U0007555aPW\x9e\x0f捄Fyq㌀\x13n\x1bÊ@E\x12\xa0Qs\x1bÄ)õõ\U0004f15c%\x19\'h:\x82³²î\x1f/ßùDÃ\U00047909\rÅ\x9e𧨯\U00096d0bÆ©\x1bm\U000146d2\U00015a72\U0009789e\U0005be5e%?Õ\x91\U000ba309\U0001c0d7\U000d5817©ög\U00079e0d\x95\x1et\x18\x94\xad\x9d\x91\U0006779b\U000655b1\tG¾_§\U000a89ee³aº9\U0008630eÏÔ礁i\U00067bb5\x15\U0007be0e\U000a406dÀShCO.^\U0006ef5bCë8Ãp$*³ÍyXa\x0fÕ¼q\U00077528\U000b703fYÊÄÑ7¼áì\x9a]\U000eface\x04\x96ö\x8cÕ\U000f7e0dàÎÇ×¨¶6\x9fJY\xadþÒ\U00067775c"\U00041f4d\x08\x12-\U000b2355J\U000a430f¼\r\tt÷FI\x01Ú\U000830b5\x9cT0𘬙\x16\x853\x82èÖ\x1d\xad\x95_ÍZ¨ì\xa0u\x05ÖÆæ\x06Ï_"¬:O\U000bbbf4\U0009db78\U000d3070ÇU\x91e\U000a11a4\U000d6f07N\x86\x993\x85þ\U000744c1Én\x91\U000e4023Rí\x91𡺔;\x1bW\U000f1b55나\U000c02c1\x80\U000910deê\x92\U00013a5e\x13±ß\x16\U000a46e3\x97§¶\U00064e9c®\U000c9f47\x17\x040@\x93}\U0009d221Ë \x0c\x0e¿\x1aw¨ð\x11°\U0001db6c\U000f84f9~\U000cc074Í\x05$¡¿ೢ\U000e94b8½¦\x02\r\x80rXMë\x17CÚ÷¿»\U000a43b6²Ñí»\U000c4aae\U00052b2f\x93Sy¡e𧆭½\U000bdb0aÊ\U00061aaa\U00032ef2\nm '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004057s
====================================================================================================
2025-09-18 23:56:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': 9043}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 9043, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004197s
====================================================================================================
2025-09-18 23:56:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': 3429}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 3429, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00369s
====================================================================================================
2025-09-18 23:56:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 28366, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 28366, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004131s
====================================================================================================
2025-09-18 23:56:35 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ÀÒëÓ³\x8b\U000f0b66Ñ\xa0ò¢>\U000c1179Û\tÛ\U00087dfcì\x8fÎ\x17\x1c¨ÉZ\U0010c7930Ú\U0004c966\U000de341|\xadT\x97X¾¯&\U000f6381Ð\x83x\U0004507bã\U0004b57b\U0007c8ed9\U000990e3\x106/yãÕ1\x92\x95\x03W\x03f\x86\x99F~Ë\x9dgø\x19ªñ\U0004aca1ô\x11!Î\x04[Þô\r4?\U0010eb1a\x84r#w\x19\x9d\x86»þ#aD\U000f0b85ÁÒ\x1bT¢Í$}|7\U0003c35e\x04e&aÃ&\U000778de×Ö§<\x16ç¾ò\x98Ì|\U00032edb\U00108d6ctó\x95\x9f\x0c\x8f£ôsRX]\U0004c78b)5¯\x92ÇH𘎻>ê\U000a04d8\x19\U000c54095{$\U0007c6f0\U000b67cbD_S\U0006fa76j\U00048271\'ã\x0cùA\U000d8ca7\x83Ð:ªÈ{x\x91À&Ýe!Á\x94ßú\x89\rÜp¬\U0005fe4düæuS\U000da611\x14\x7f\U0007a4ed\U000e9bd7\U000aad4fe¬\U000a35f3\x1aá3zbK,\x19\x1f\U0004fe0b\x8d5\x1aû\x15\x10^ó®\x92×ÈÉ\x9cú\x15\U000f12cc»#\U0005d282\x8e~ù\U000f7feaÝFó¦Öx\x8cå\x7f8\x84\U00085ad7-+9æ¬\U000c90cd𩄹>\U00105872\x9cñ\U000df187\U0006b0bb°¹䌦vBi\U000eeb7c\U000facec\U00050b8bj k|\x01ÈÚýùJdo\x81ü)÷(\U00092da0C\x94q\x9e0\U000fdd0a\x90m\x0bÄµt=âÔ p\U0009d72d\x19\U00069257Â\x8fñCÓÈ\U00047065\x8b\x1c\x95\U0007cbde\xa0e¦\U00042ff2.V½T=/\U0004c485ß\x01ÙÖ^_Ü¢\x18frÙÐ\x7f¾7\r\x98÷óa\U0005f8de\x81𫹿|,¶\U0010a863I\x9bB§Ôk\x1dbj´\x80£ÚôÀ{\U00033e5eÓ\U0006cab8STÍu\U0010ded2 Û¬l¤q¿èUÛ\x96õ\x8d=©ûxÊÐ®³²\x116\xadÿè흎𤵎VLM¢%æ\x92졉\U000ea3a6CØpm\x83Ây\x1cÂ\x96\x88ÕÕ\U00034b4d𨖎g\x04\x12\x8c\U000b7a40\U000c1706ãÔlì\x15\U0001c038𫵛\U00067e23ÊÉK\x9b½ø*\U000ddd63â\U000ddbb8\U00066e7cúÄ\U000a133bK\x02\x99c\U00036c25\U000791a5\U000e8b02f\x95\U0007e3ebÃ\x7fðb\x9e\U000829ee\x03𨟙vøÃBÖÔ\U000ebfe9y\U00038c18ø\x0c\U000fc7ccpJ?Í\x9c\U00073997Ì\U0004b543𪼖\U0007ac34\U00077dda\U000426daH$áÄI,&k°Ýi$\U0007878e朖)"ç\x14so¼\U00060b7d\x02Û\x8c\U0010c942\x8f\x8cg\U0001b858·D\xa0úÉ0\t\U000793c7Ëõ/\U000fd695\x88O¦üiy³\U000fe860\x92qÒG\x0bý¤\xad\x0e\U0005452aÎ\U000b1432°\r\x00àM\x12\U0008910e\U000fb53b\U000429fd\U0003d844槛ji\x89\U000b68a1íTh\U0007666b(.4\U000befa9ì\x8f§\x80\U000f8560\U0006649f\x93\U000ee68c}2\x04Bk\x84ß¬\x06p\U00058619ä:\U000494d5XL-\x85¥Øø\x0e𫔇)ôtÏ »«µ{"oxZì\x86Ñ`rG\U000a5048㧫\U000447b8ÿ`Ú\x13zSÏW\U00095230"eOL\U0006bb58\r鲄ý\x83°U\U000420d3<mÔ\U000a9d51\x870è\x88Ø\x03Í\x89ïaCüÀ\x8bà\x14\x01\x9f\x01í\x93\U0009fa74:\\9s#Ý\x0bi\x931S\x87!\x1e\n\U000f2ef4Lºj\x8e9í\U000f345e\x90\x038\U0005bec1´ª<\U000a389e\x15\x8e\x1f°\U000e00dd¡\U000aa184_r\x8cÔ6\U00040575*W\U0003e5acÞ+\r\x8b\U0001c11a\x98Åô\U000e3797ãø\x81L\x1d¤à\U00069118î\x0e鳨\xadN^\U0008be0f)&\x05|\U00072d47\U000d834d\x89ã\U000771ac/W\U0004c9a6óþ\x98\xa0\x1f+\x82Ë_Hà\U000dfc67?$\ufb0a@\U00050e4d\U000d024e¯¤P\x96\x0c\x7fÔQS]\U0006409e\U00040618t¸\x0fH\x99j\x14\x1b䲄¼¨¿\x9c^\x08â"\x07\U00093130\x0cXbBø\x9cºò\U0005e03aV\x93\x99=^ã°\x9e¡Ꜽ\U0003ac88Wüº\U00031fcf\U000137dc\x9c𬖞í4¿+\U0009a2dftÈ\U00105caeu,3ÿzÐ\U0009c9ba𫏡£\U00070d5a\U000a798dð\x81Ö+\x10Ê\U000e12cbØQ\x92«¾tÇ¯\x0b\x1d}ÒÃ¿¾B\x0coÇÂ\U000f36456ë¢\x85g\U00090645û\x05Ú\U00104864栻\x8e-Â=¯ØW"qÇ\x9cÌ\x8a\x1c𠳿G\x18&\x91¦𥘽¬¸\U0008549f\x06\U00034ad8²\U000e3452\U000c5c90\x8fc\x8fᒽ\U00015a9a?·e\x97\U0003673fß.û8\x84®\U0003d8b1«\U000b1394\x1d«\U000e3797Å\x91\U000bc8beí\x98\x93z\U0006b4f0Ð\x10\U000b2ab1ªUú,Âê\t𣬎,\U0001aeb7°CK¯C§¸*鉇g\U0003cef3ä\x1d\U00041c23¶\x03w\x8d\U00100e1aZ!\U0005a06a\U0002fb98Q"\t5\U0006ab8a3÷\x94QYB±"\x8cónÖð¢⢸\U0006770a\U000a5b7d]\x99\U001018e3\x86,_~<À\x8e}<ÂQ\x8c©oL\U0007ed66\U000b420d\x85H\U000bfddb2Á¦{\\\x88`\x00D 鞇0a\x03\x02\x03$hA\U000a0ae8\x89¨k\x8bo\U0008c2e9\U00074bb1\x9fM\U0002fb20È\x94µ\U0010483b±H\U000e5dc5\x0e¬\x8dþÁíêÙ\U00057483·q\x04Óº¤e󠅫1õ\U000b50a5N\x13`\U0008cc5dä~[²æk\x1e³\x8e\U0009bf60\U0007ca39ïiÁ\U00055df3\x9eÇICè^\x9e\x97\U0010243e\U00069180á\U000558fa\U0001a635É\x8fk\x10𰧣\U000a4290Ø(ÿ=vm\U0006801d´ç\x00ø}´ðOéÌ\U000d13d0\tÈ/\U000578baN?dÂÖC\x81\x9e\U0005b546)\x92Ú¶u\U0003c5c5 J\U00048a0eôQ\x96Õ\x97\x8bÌ\x9aG>\x9bI\U00053503¸kß¸R\U000e318a\x86\xa0¿Ð9Î\x17\x1c\x17ÜóÇl\x84c¾$\x81\U000c0104&Ú6\U000647fc¶«¾¸ 沊\x8cz0\x94á槬BÜ4Ô\U000bbc17\x19ÄO.\'\x075áá!®\x0f\U0008c0f9Ý\x97\x99E+Ò¶}AG\x1e\U000921d15NÉqj\x93\x9dÂ\tì\x86p\x9a\x85\U0010ffefVü#𥡿\U000e5eafØ\U001000ec0Ø\U000dddc7wÛ¹Ò\x1a\x1b\x86\x8bR\x04\x1d\n\U0010927eË¥ÅLHjv\U000db931𥄛𫩍\x06à\x96Ö', 'password': ['', 'Í', 'Z¢æ\U000554a1鬳%\x83', '\x8c0\x91\x0bÅ\x0eØ', '', '\x9f6', '\U000dda2c\x87_ÚGÍæ²\U0006ff6c\x13e\U00058aa4&?\x86\x078\U000a3983%]T·\U000b7151됪±', 'b@ß\U00068f06\U000c3accãX']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', 'Í', 'Z¢æ\U000554a1鬳%\x83', '\x8c0\x91\x0bÅ\x0eØ', '', '\x9f6', '\U000dda2c\x87_ÚGÍæ²\U0006ff6c\x13e\U00058aa4&?\x86\x078\U000a3983%]T·\U000b7151됪±', 'b@ß\U00068f06\U000c3accãX'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004346s
====================================================================================================
2025-09-18 23:56:36 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': ['l\x14\x83Ìß\U0006c1d8à\U000456e3', '"', '౮OÄ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['l\x14\x83Ìß\U0006c1d8à\U000456e3', '"', '౮OÄ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00369s
====================================================================================================
2025-09-18 23:56:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\x06æ\U00061d4fÒ$¾\x85<Þþ\x06ë𑨱\x8dÌ6K𩎾\U000da311\x99SN\x02X\x19e\U000dab210!\U000ad29c\x08Ã}G\x8a)M=,\U0009a505\x18Å<~x\U000a700c\x9a\U000317ddOô\U00089db2X\x9a\U0005b463Úf\x89藋\U000adb8a¡\U0001e4ebTU\x12ý\U0010d6fa\U000dfe4cÕþMÑi¤\x1c\U000d53a2\U000754b5\U0010fdf7\U000e6edbjD#\x9bñàx\U00044fff\x18\U000f55d4§\x84\U000397e4"\U000d9a76\U000af422}\x14î\'§di%Ñp\x95\U0003a7b4\x8bË2ì[\U000c44f0ia\U000f7b3b\x0e<\x0cv\U000e267a\x0e\x0f𤭃4\U000c6716\x0b [\U000db867\x07\x92\U0004fd4aÅþU\x8e\U000c6b91^ô®ï\t\U000fd0a3Í\x1c𢪏0é\U0001aad6Ê\\Ìþ\x00\x1bS\x8e\x1f\x93ß\'\U000c0313ôÇaÏ[×\x13ç\xa0\x8eÉ\x0cÈ\x8cÎ,\x16\x18\U000d1c16\U000b3474\U00085726½\U000d85f0´õK°P\U0008db04j\x06 \U0010eb61f𐐾ð\x92\x19Ø\x0f\U00074c22$\x97¹m[\U000f824eÕÕ\x97\U000ed6fb\U000bf491ú\U000a0e53\U0009197d\x9eõûµþú@gC\x0e\x1c\U0003d5d9|Ý\x98W$ù0\x0fp\U0004a0a2ÜP³\x8c\U0008ec22¤/Øêêk)DV8í\U000f9e8f\U000b4792\U00099057\U0003b4ee\U000c8e68\U000cb89dÊ\U00086924\x03n\U00079281Å\U00067f56¹ªã\xaduw\r-\U0006bbcch\x9a掛\x1btÅê\x8c/óÔM¹é\x880ÓÛ¸:^𖢽SIÓ\xadO\x1d\U0008d4f2\U000a308eâwóXy§7\U0009cd2aBH\x84Ö\x87S\x7f\U000b8b1ea\x95\U0008a23a\U0010f42a$ù\U000af83cv\x94\x98%\U0010dc66r«Á\x8b\U000ab8f6l\x86¿C¼\xad±`¸=\U0004dcdcðöQ\x1eäÔõ\nû·\x07\x8b\x8d>骎Õm\x99Iä\U000a31d9\x07±>Ñû\x10cñEæ\x03P®¡¢ø} Q\U0003b5ecÊãkàL\x94Í$\x0c\U0010572e\x86\U0003659cÝ¼¨\U00066deaQæî8\x87^\x1bW\x99lU\U00096a92¾\x93\U000fc0db\U000af2da¬²Ä\x8aLý6í\U0002fdc0\tõÙ\U00097f13Ç8üðÔÐÂg<D\U00092e3b \x84\xad/gìU\x83W»\U000379e5\x8adâ\U000786b3\x92\x81M\xadãù\x08\x8d,·;ËJ\U0007a618\x8aóR5-Á\x9eu\U0008d090K\x83\U0010571b𦣂\U0010e39fGý\x84ªç\U000ec62b·tØ\U0004bc2f²\x96£É×¹DÅ𦧪«𥤠\U000e33cbå\x1f\x0clID\U000a9563\U000cdcc8\x1b\x1b\x1aÐé\U000d2875rM养[)¸ol\U000c5b3aA\x87\U000524f7\U000fa58b-\x85r\U00080c7eE?à\x8a\x18p\U0004dcc5c\U00042d01¨\x80¶D\x81õ\U000fea4e\x7fCMõ¾Ú_ÐR,Ê\U0009a4a0\x11tÄí\x04\U000596d9\U0003d1e0bÊ6\U000d9fd7Î\U000bf198³ãÊÁºg\U000a026b𘌛𖡂a\x98\x8ai®\x898_OsV$í\x11\x86Âû^W\x02\U000e654fm\xadD\x14\x18Ä\U0005a499ªÜ\U000a4820Þ\x8cñê\U000b5d5e\U0005473c³\U000bf8df\U000f0b53`\x91¬\U0008c5b0Ýî\U000bc4af2ñÄ\x04\x12\x07\x14k$\U0010f636\x83\x19\xad\x05`\U00055059\x94L\x7fnâ¾¤j_g\U00064dd1_Ó3\x91Ë2ëd»\x92®\U00079692qy\U0005bc80轝ÏB\\`\x98/\U0004dff7\U00082cce÷=]\U001068cbØ\U0007698bâÞ\'B\x9bt[b\U000e2be8Î\U000cf813\x05\U000685ce;\x9b\x9e¿\x07ªü:G5Vp\x98\U000e75a0\x9e\x85ê\U00072e04ù\U0004fedbk{g\x8a¶Ñ\U0008c755\x8aÊÊø¸+\x13\x99õ\x8a\U0008756cH~5\U0008d6e8\U001008e8Ô\xa0[ï\U00070c53r\x85~\x97\x9a\x1c=\U000b99ba{Üù6\U000bf68e\x87å¯$Ç¸\x11s\xad𦶩%𩻗\x1eï\\x\U000c2270\x8cg\x1c\x9d\x00\U000d94b6\U000f1c96\U000616af;\U00036553\x06\U00055d4e}K]ÂI\x18\U0010d6ba\U000a23c3#\x12\U00038f93«[Ë£ù&t\x16\x9b\U000c11c0\x8eúÁ\U00079af3Ï÷/K\U0004250eÞ\xa0\x87xÔ!è\x83Q\x1aó3d)K?\U000acd98\x05\x05Ä\x1d3\x9bÅ©±\U0003a119\xad\U0003d6d8\x15ùdnF\U0007beb4ª\U000e18b1\U00091bbc\x08ò\U0006b9c8\x15\x03\x9baW\x80Ø\U000718f8dÆél\\I\U00061a28ø\U000dc26d\U0007b329¸=\x1aâÖ\x0f\t谀ª\x8f\x97 𐣧ÂHH\xad\U000afd06f\x13\x86𠀌Ï\x88\x9dß\x83\U0007b916ûÉ\x07¤\U0003656dËä¤\x8d\x92\U000d33b5+\U000f4ebd\U0010c067\x11Ûqï\x80\U0003b726â\\\x99\x97\U000a180d²a\x84<N¨j¬²\U0010d761êNu\U000dc11f¿09ë¢äu0\x19rtè\'\U000c8c1c埴\x17Ý\U0006886dmò\x9aÂµ\U00108fa7c\U000bd396v)Â+hÅ\x88\U000f7162u\x1aª ç\x8e÷²\x89\x1f\x80\U000a325f\U00065813Ì\x98ìî©¤´ã𮓻\x7f¶蠫\x8d\U0010be9dª²\x9fã\U00039010¸\x1b쭿𗋄$𦴃Á\U000670d7\x18£\x8c¨a\x12\U00040f9ff\x00(¶^\x94¼\U000811ed\x10>:ÆÈ\U000869efÉO¡\U000a53fd°\U00093d63\U000af73e\U0004bf3e\U000384a7\U0001e9a2\U0009ceb2\U000bd667sf\x1bIòP¤s@^\x01\U00092bd9E)Sn\U000dfba2_)¯ûèÿdbï þ\x19z[>®\x19¬§H]ò+\U000ba6e9\U00053a12\U0006c00d1\U0006275a\x9d²²v\x83¥PC\x19â\U000a48cd\x88ç\x84¹\x0b¨\x9cÈ>\x14ä\x1d\x83óð?¿\U000b264c\'\U0005d9ceÓ?u\U000b4817KH®8Ï\U000e83b8ym\U000634c2TkSo\x9f#\U00076e47:jÎ\\\U0005a3f1\x0fG\U00075163tõ\x08\x05ß\U000512e6\x13±br \U000d05c0æ\x0bÁ\x7f\U000f501bÍ\x84\x1eD½åó\x91\U00054619\U00067759\x93/Q\x8c\xa0z\U000bcfd0Ùº\x9fåôå\U00071feaÿ"Þ°m¿6aMlk¬\U000e170a\x1f.\U0003e9acòp²\x01Ê\U0008a608\U000728c2ÿ\x88aC(\U00012b38Õml\U0001e598],\U00060144\x14\U00095aa0áÝè^FÓ¦\x89\x8f \x07ä"rb\x82¸\U000ae153Æz\x0cêáÌ×\x10¯\x1a\U00056f1e\x83b\x1f\x7fwà\x1fø\U0010c822g\x81¨|\x05N\U000a2ab7\x94a=Ë¼~OÀÀ±I\x12\x99)[\x8dY\U000a2215\x13þ¢\x02\x05\x97\U0008aa6a\U00041bbd§É¯U\U000a7018\x91\x17Qø\U0010e7e2c2ÃB\r²Õ&°P\U00065d9c\U000eef31ÿ\x85S#À\U00043986\x9dr'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003641s
====================================================================================================
2025-09-18 23:56:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003899s
====================================================================================================
2025-09-18 23:56:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003675s
====================================================================================================
2025-09-18 23:56:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003863s
====================================================================================================
2025-09-18 23:56:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': -81}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -81, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003867s
====================================================================================================
2025-09-18 23:56:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -8133290366135821535, 'password': '\U0010bc65ûÝ\U0007fbaf=S$_\U000eff10\U0007b0ec<W𪝴äÊ\x13\U000cee9aÅ\x04\x90^\x96Ô@à\U0008d51cä\x85¹\x14\U000e6247\x90\U000705af\x87\U0006a8cb\x1c|\x00Ìå\U000e51264\x1bçÁ\x87Bq0Å\x8a\x91\U000fb21e\x9bµ\x06\x19Â\x15Ⴀ¦)\x1e\U000fbd0bx\U000b416f\x88PÛº\U0005e5a5Ð%dg%\U0005b32e\U000d0b44PMÎ\x01÷\x86õ¡\x9f"äC²Eò\x1f\x14Ñ\U00087692zß!\x1e8\x94°æ\x1a\x88ÉÃ\x16\x12\U000ed6ba\U000f7487\U000efa6eK:\x14a¯e\U000a6ffa9\U00063a21藣\U000d5321o/\x0b¶Ì\U0006c734\tüÎ\x96\U000b40ba\x9b¯£\U0001e407\U0001ee9e\x9dß^\U0004a25aþ窗\x89n{\U000acea4Ò÷ßÐ}Y\x04c\x8c\x96®c2¦CÊ\U0005df09N\xad³Á©CòØ\U00055898\U000f6c51Tì\x1e\U000e8075Úµøeì3\U000e1865ý\x1b\U0009cf4a\U000f761bþ©kuTZ\x1e\x97l灙q¤a?\uf072É6\x10R\U0006d6d0\U00101d9em\x90\x07o\U0004e26a뉖z\x05\U0007c5df\x98\U000b02bf\x14¨삼\U000836d2\U000840b6CO\xadü®ìÊ\U00039d55\U000443f3\x04I\x84Ñ\x19%\U0007be48ú\x1a¡t\U000c169c\U0006d852´\x1f\U00076b25,\x9b\x0b\x1d6¡\x048V\x01\x8d\x88\x0e?ïAbkÖÄ\U000cefb1\U0007761bUÕ\x98²à÷s±\n\U0006dad9Kª*\x13t#®\x05o^%\x1d%\x96¤r®û\U00057d57þ^èÝ/\x8c~\x86ÿ\U000823e4©¦\r\x87ì4<X)p\x1a\x89u\U0006cb18E\x90AÐ\r\x01꯬¯\x93r\U00085c4b\U000d6fdf+ャ"𥶖\x06\x00\tW×è\U000a2e1e\U000a3471\U00069940O\U00074421¼\x86«%\x00.òQ\x8bÑ\U00013b61Ð\x08¹J\U000bcabdçxª\x95O\\\x0c\U00040842\U0005531epð½ù%¤iZ´8>*\x14Ò\U00013a1bî¢óÁK\x83\U0003d25cØG±\U0010c9d6\U000ce020P6P;`±\U0003c554\U0005fa3f\x10¿\U0005fd1f×¬¯\x9få\U00074006\U000ee5a1jzý\x83±¯\x14-\U000c176a𨂫\U000ed04fþ춷+Ó²\U000dd92b\U000beb02\x0f\x1fy$\U000c00e1\n,\x8dP¨\U0009808c\x92\U000d893e𧙸y\U000eaed6NÖ¥Èe5\U000f5380\U001049eaÄꭚD\U0009622e8·ºA\x81V\x87SÜ\U0003bf6cPÆ\U00080fe0\x0cjÌ³1v\x89hj\U0007cb79=Ac·\x8e\U0004f7c9ú;\U00105d13\x1b\U0003ace6\t+\x81ð3OI82\U0004cb37𨞽\U001074a7\U000c4de3\x92(Re\U0007e2dcðÀ\U000b5b62#\x08\x99¢g\U0008916bt\U000fef19ï\U00058a58§\U000ba408ÎIo\x08Ôe\U0004bc19í<\x94U\x00\U000f1ccc\U000345e7N\x9bóõl\x926"7\x8bµ\x05a\x84¯Ø\U00045d4aÒ¿é\x9eLþ(\U00091145ÿ¢õ\x88\U0001ad31?\U0004cc8bØ\U00090b7aÀÑ\x9b\x1aÛ\x92q\U000fadbeÑm\x00\U000c210fû4A\U000e7fcaa\U0005f358^\U000e06e5𨒊\U0009b697\U0010dd60¸¡ú\x8bæ\U0010b9d72\x0738¡\x98\U00059677ïÅÖ\U000c08ff\ue0b7|¢A\U000ffa60)O\U0004652d?\U00072d8d\x86\U000a1c5d\U00053c85ÌÞ^[Õ𤯃Ð:X\x04\U0004169aZ\U000e7ca7à\U0001c998\U00060bee\x03ù!¹0zËÁEïy5´\x94þ\x14\U0010c6fd\x1eÈ\x8cK¦\U000425dcÁ\xa0\U000b2e61\U000ddf99\U000fab11\U000fb96eaßÁ9N>¬¼Äû\x982\U000d0551\U00082d45Ìë½ø´Ñ2\U000781d8Ú"K\x97\U00081e84\U000f1af3q𒌈\U000cc7faÜÜXÑ>\U000c1987\x91\x95\U0003bf4a\x08õ\x1c\x88¸\x1e\x14\x9b\x83$þËi\U0008b9e3=´>RE2ONmàaä\U00061740\x15\x9f\U000595f1ãÄ\x9f&ÒÀäM±\U000c199a¶Ë\x1e\U000846c4\x89î¾¨U\U00076745ë\x00¾Àg\x93¹µô\U00092a3a\U0003f36dH\x9dNp\x10»\x8eF\U000334ee7\U000eeafa\x85ç\U0006924b\U0005d699\x8cÿ\x9b\x1e\x81ö𨴁\'\U000ed1c4ꬌ𬥺\x8f¼V\U000f8002\U0010191eØ\x12\U0001605e6i\U000f824c\U000d05b6>Ã\x99Æ\x90\x0b\U000cfb30\U00078b6cîú½¿\U0008a915Å\U0009fc5f,8uA\U000fa6ecý𤬰ÌÇ¦à\\p\x87Ò\U000bd6e65\'aÐ\U0008771e\x03\x0b5\x03bþ\x10\U0001ab20\x14Ä\x85E\U0007b87a\U000a7398 ÿ\x0e\x0fìÚ|\U000e9fcd\x08\x1b\U0008acad:\U000a88f0\U00062b5f\U001012a4\x80Ü\U0008f69a¦\U000b8a5d\x13<VÆ\U0005c712\U00042026\x8f/\x15\x1b¥\U000dd5c1§¢\x82\U00085f3e 2$eÇñ¹0&¨*Tr\x00]\x9b\U000536d1\x9dLÓ\U000d9490³h\U0006b9c6+\x83°\U0008b8479Õ½-kh\x1d\x80\U000e57e6y¨\U000c9d7f$#\U000782ecZ³Æ\U00109b05\x04\U000bca33\x1c;\U000563f1\U000fb7e4 `\x85U\x84¼Rþ\x92\x15J\U00058628R\U0006abd2A"{뢝?\U0003d098\x7fà÷\U000ec90b¨\x176ûÇXVñ´쬌<=\x9b6ZùiÁ]b\U00035716~1\U0007f89d\x7f\x1e\x8a\x0c8\x15\x95³²H\x18Ã6ùÍx\x13ñsg\x87®\U00044681𩕎ÄÊÂÜ\x18òðé\U00101ff4\U0009c9ceÈ\U000999d59Ὰ\U00073427_}zÒ[\U000ae616\x92Æ-ÀQ¡\x9fÓrW¿\x0c\U000f38e4\x95n\U000353a7\x00\x94\x94ÖKû0\U0005ef02cÄcâ\U00053f1d𥯀\U0009c3d3,\x8bXÜ\x9a\U0009936e𭀥Òdr\U000c0207\uf35eñ<m!켿\U000fcd5a\x19\'t\U000efed9¥V5\U000676a05D'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -8133290366135821535, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003692s
====================================================================================================
2025-09-18 23:56:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ç\U000d98b8u', 'æ@\U000c68fb', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ç\U000d98b8u', 'æ@\U000c68fb', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['ç\U000d98b8u', 'æ@\U000c68fb', '']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003516s
====================================================================================================
2025-09-18 23:56:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['\U000a2a28weï\x9f', '\U0008a0ba\x00', '$ä-Öþ?\U000bcfc2ßk\U00092ea0ä', '|\U0005b265', '\U0004aa07¬', '(\U00107bce\xad', 'J>I\x7fgaV', 'Üh𨂅']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U000a2a28weï\x9f', '\U0008a0ba\x00', '$ä-Öþ?\U000bcfc2ßk\U00092ea0ä', '|\U0005b265', '\U0004aa07¬', '(\U00107bce\xad', 'J>I\x7fgaV', 'Üh𨂅'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003983s
====================================================================================================
2025-09-18 23:56:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U0006b77e3ð \x1e²*\U00019d98ðL\x99ÜL\U000e9446\x9c,\t¯Ô\x8c\U0003dbb2B^×\x12pþ_\U000735d3óËû\U0004762dà\U000c1ed9\U000a4736𢦳ë\U00098630)\x02*¼\x10É\U000da8b4Æ¾\x82\U000cebe1H:\U0005116bTðö<\U000a9768éZ"Ær¶÷¶h\U000e6c76»¥\U000b2846U\x94Ä\xad\U0008a5acv{½\U000a8300\x12¹Ù¤\U0009feb2ûÕF\U0007fa97\U0007a754Ô¾á𐭒Fø5\x1f\U0009b771Ö´âÛó\U000a821b\x19OoYc\U00036601ß᭬#=eâi\x1a\x1eÒ%\U000fedfaqÞå?À\x9b\x1b𠜟1\U00065b99\x8e &\x9e\U000e242e±gvÖ\U000dfbb4¦\U000fac52\x01ëRþP\x91/Q\U0010a54dÛ\x91äm\x05ï\x13\U00019d68\U000b9931\U000f1998¹°\x8a\x1bx\xad%\U000f5512¯#\x95KV\x1d\x82\U0005baaehv\U000fb6e1\U001000efä\x89n\x14ïÎEA\U000d293b¡MrÎ\U000f9d18á\U000ef9f0È¥\x10\U000cf8fd]\x9e®\U000b9cd8\x19+\x98\rr\U00041594\U00071323¶íí×[ÈÌ𦵓½\x15¬å?𗶮Ó\U00045315F`hÁZþ=#4®\x82þíÎ\x96ò\x9f¢L\x96D:\U000d4b9fr×\x15\x0f\xa0\x1b*\U00016db9\U000b69c2ꃂ)§\U00088649\U0003369c\x9d\x115\U000d8eeféG \x14r\U00080f87f\\ûÕ\x15\x9e1\x81ö¸8b\x19\x9aÌ\x85𬍑Ô¹60\x18Z\x03HNk\U000a19c2\U0006b995rï\U0007086e\x88\U0010b33aEI¨ÝaAí\x13\x0b^\x84涠\U000c20c0\x7fF\x0b\x15\x1c¥à`Ë±\U00069f3c\x03\U0004dec8è\U000b0b7e¶\U0009203e\x8aß\U000d24ea\U00078955a\x8d\x97\x0c\x9axut\U00102102EHö75¡\x90c¨]ÊÚÿ\U000b69835G\U0004a2b7%Ñ(\U0007dc06\x06\U000f1d54è4ýßÂy\U00087057\x13\x9aÙ\'K\x8a";;{\x06¡\x1b\x9d\\\x9bó\x9f¯#XúVþq\x91\x02i\x1c녴mÚ¯ñ\x15½F\rÄmì\x9f©Ì\U000eda334âÐ\U00062050\U00096b7cN[{¥\x8bËõ\x82A\x95jf©\x82±=6\U000d005bG\x97Zö\U000cd36cDÀq\U0006dd64Ñ7\x9d\x83\U000cc46d𭲑\x81J\U000c1a59\U000c1af4\x12&ª\U000e44e30S´å]Ö§\U00074405\U000fb0deÚ\x1ci\x04§\x17\x1c\U000c4131\x9ePYa\x010Û𓊞(¶\x80\U000d7d60\x1d7\U000c8549\x06©𝤧\U000dc9ecJ¯±F^$J\x83\U00072a24\x04\x87\x9eÒ\x8b\x1e\U0001cdd0w\x80\x92n\x92(Ìÿ£êç\x1d\U000404ccPc\U0009b70b\U000e8f15\x04n\U000d9cefõl?\x8at\x89\x00WTr\U0009a66f&÷\U000555cd\U000c2e88>®AÄ²LÀ\x8bµ5üýf\x9b\x87-\U000962b7¦Èl\x84Bìèèëm4Þ>å\U0003641e¢kÏ\U00037f4b\xad\x1eø\x93\x89\U000e2fdcû\x06öì\x19\x15r\x8dU\x8a\x89y6¢·H(\x17\U000cda95嗱¯䧯ñæ\U000c4074I\x03Ñí\x9e?\x11𬦨\U000567e7\x13\U0009b74d\x1c\x1c\x0e\x1a\U000687d0\U000ab331\x83úL\U00093e38\U000de956!I횭\U000a00ccÉa\x89\x9dÔ\x98\x87ßÏ3\x938o\U000c9ed8y\xa0\x90y4\'\U000997c8\x9fë\U000755f1𮭄)·ò\U000f6719\x1bD\x8a\x93x\U000aab19\U0008f15dE\U0005a3ef\tA\x96\U0010bc00Y\x9d»ª\U000b8c6d>¤¶\x08Ç4K\x03:\x8cC«\U0002f503\U0003a4af\U000db692[<\x8e\U00094850éËô\U0004c6d5\x1a\U000c3acc\x9bEC\x8cþ\x7f\t\x00A_æ\x80«\x7f𑌙UÈ\U0006b6ea拤\x02\x84>f\x13\x05\x88)\x0bQ\x0e\x00[B½\x91\U000b674aÔ\U000785b5»#\U000ecc46𧗏t\U0009ed7f+\x90pà\x02ê\x11\ni\x1a\U0007d5cdùäu\x86KÏc\x85\U000b053d§·\x90ÕV \U000f5964\tÊú\x11¶á\x98\U0002f76d¢\x06¼𩤔0\x83\U00052ed6\U00080759QQ\U000b3b61m𧝪úîõBoAç/\x969\x9f\U00042a00øL\x85\U0009a212/-©\U000a2e0fÉ\x0f?\U0004d43aÜ\x0b3zjqV\x17bA»w°\x1ca3\x98+ÒÏÿPÛ\x80\x99´\x06\x8aÕ1F\x15XL\U000b68a8\x02Î\U000da104\x90n$\x86\U0004c1c3³ÀÓ`Ó𰱽ÄmE(\x0bwìfª¹s\x03D\x0cÜ×£\x07\x88yV𝆃\U000155f30\U00042d16\x92;}!¹\U000cbef0\U0005f135\U000f6f2c{\x94\x91\x08&Káú\U0006fcfa\x91Na!c\U000374e0±Kîm\x01\U00087b10ἒ\x95\x94\x14\x89@\rÒ\x81l𒓜É¢\U00046738³aÎ@6ÍdÏ+fl/\x1e?\U000f4709\x0c)𮀠y\x9d\x08÷CÕÞ\x92\U000fa3c7xäu\U000b51fdV\x0b*\x91Ó\x84fª¦\x06\U000a092a\U000824e9n\U00035a18\x8bc\xa0G©\x99ò\U00095dd7\U000439da澙\U000e2236ÖÒÅ\x05å`±ó1Ç\U000e1f4d\x1dÛé\x80\x18´=𥮤\x8c@¢Û\x95On7\x88´Xh\x9e\U00039f2bq¿¯ÓM\x19á\x95\U00054ae3¢w\x93g\x19?\U0009e730\U0001aba6.¶ÈY\x1b|\x0c\U0006a4dc\U000ede4c£\U00054fceDMÆ\x82#\U000bc8fdJ{tm\U0005ea9c\x83\U000afbc80\U000a6d24\U000ff300\U000e829e\x1e\x0b\\\x11\x08\n\U0001e352\x9eÀí\xa0𬯺\x0cu\U000e637d\U00049cf9ã§)\U00053a56\U0007b8efÛ\x10r\U0010076cÄÐ㝅z\x11\t\U00073fb5By&\x17\x07ï*\U000e9262)\U000e1bcc\x1d|ÆwöK\x92ð\x96\U000c46e8Õ\x99zØå\x88{𰊶\x9c¬\U0003883e0KÓ\U000e66caR\x88IÄÐ\x1f\U000654ber\U000ad45c\x00\x8b,Õ哝WB'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '\U0006b77e3ð \x1e²*\U00019d98ðL\x99ÜL\U000e9446\x9c,\t¯Ô\x8c\U0003dbb2B^×\x12pþ_\U000735d3óËû\U0004762dà\U000c1ed9\U000a4736𢦳ë\U00098630)\x02*¼\x10É\U000da8b4Æ¾\x82\U000cebe1H:\U0005116bTðö<\U000a9768éZ"Ær¶÷¶h\U000e6c76»¥\U000b2846U\x94Ä\xad\U0008a5acv{½\U000a8300\x12¹Ù¤\U0009feb2ûÕF\U0007fa97\U0007a754Ô¾á𐭒Fø5\x1f\U0009b771Ö´âÛó\U000a821b\x19OoYc\U00036601ß᭬#=eâi\x1a\x1eÒ%\U000fedfaqÞå?À\x9b\x1b𠜟1\U00065b99\x8e &\x9e\U000e242e±gvÖ\U000dfbb4¦\U000fac52\x01ëRþP\x91/Q\U0010a54dÛ\x91äm\x05ï\x13\U00019d68\U000b9931\U000f1998¹°\x8a\x1bx\xad%\U000f5512¯#\x95KV\x1d\x82\U0005baaehv\U000fb6e1\U001000efä\x89n\x14ïÎEA\U000d293b¡MrÎ\U000f9d18á\U000ef9f0È¥\x10\U000cf8fd]\x9e®\U000b9cd8\x19+\x98\rr\U00041594\U00071323¶íí×[ÈÌ𦵓½\x15¬å?𗶮Ó\U00045315F`hÁZþ=#4®\x82þíÎ\x96ò\x9f¢L\x96D:\U000d4b9fr×\x15\x0f\xa0\x1b*\U00016db9\U000b69c2ꃂ)§\U00088649\U0003369c\x9d\x115\U000d8eeféG \x14r\U00080f87f\\ûÕ\x15\x9e1\x81ö¸8b\x19\x9aÌ\x85𬍑Ô¹60\x18Z\x03HNk\U000a19c2\U0006b995rï\U0007086e\x88\U0010b33aEI¨ÝaAí\x13\x0b^\x84涠\U000c20c0\x7fF\x0b\x15\x1c¥à`Ë±\U00069f3c\x03\U0004dec8è\U000b0b7e¶\U0009203e\x8aß\U000d24ea\U00078955a\x8d\x97\x0c\x9axut\U00102102EHö75¡\x90c¨]ÊÚÿ\U000b69835G\U0004a2b7%Ñ(\U0007dc06\x06\U000f1d54è4ýßÂy\U00087057\x13\x9aÙ\'K\x8a";;{\x06¡\x1b\x9d\\\x9bó\x9f¯#XúVþq\x91\x02i\x1c녴mÚ¯ñ\x15½F\rÄmì\x9f©Ì\U000eda334âÐ\U00062050\U00096b7cN[{¥\x8bËõ\x82A\x95jf©\x82±=6\U000d005bG\x97Zö\U000cd36cDÀq\U0006dd64Ñ7\x9d\x83\U000cc46d𭲑\x81J\U000c1a59\U000c1af4\x12&ª\U000e44e30S´å]Ö§\U00074405\U000fb0deÚ\x1ci\x04§\x17\x1c\U000c4131\x9ePYa\x010Û𓊞(¶\x80\U000d7d60\x1d7\U000c8549\x06©𝤧\U000dc9ecJ¯±F^$J\x83\U00072a24\x04\x87\x9eÒ\x8b\x1e\U0001cdd0w\x80\x92n\x92(Ìÿ£êç\x1d\U000404ccPc\U0009b70b\U000e8f15\x04n\U000d9cefõl?\x8at\x89\x00WTr\U0009a66f&÷\U000555cd\U000c2e88>®AÄ²LÀ\x8bµ5üýf\x9b\x87-\U000962b7¦Èl\x84Bìèèëm4Þ>å\U0003641e¢kÏ\U00037f4b\xad\x1eø\x93\x89\U000e2fdcû\x06öì\x19\x15r\x8dU\x8a\x89y6¢·H(\x17\U000cda95嗱¯䧯ñæ\U000c4074I\x03Ñí\x9e?\x11𬦨\U000567e7\x13\U0009b74d\x1c\x1c\x0e\x1a\U000687d0\U000ab331\x83úL\U00093e38\U000de956!I횭\U000a00ccÉa\x89\x9dÔ\x98\x87ßÏ3\x938o\U000c9ed8y\xa0\x90y4\'\U000997c8\x9fë\U000755f1𮭄)·ò\U000f6719\x1bD\x8a\x93x\U000aab19\U0008f15dE\U0005a3ef\tA\x96\U0010bc00Y\x9d»ª\U000b8c6d>¤¶\x08Ç4K\x03:\x8cC«\U0002f503\U0003a4af\U000db692[<\x8e\U00094850éËô\U0004c6d5\x1a\U000c3acc\x9bEC\x8cþ\x7f\t\x00A_æ\x80«\x7f𑌙UÈ\U0006b6ea拤\x02\x84>f\x13\x05\x88)\x0bQ\x0e\x00[B½\x91\U000b674aÔ\U000785b5»#\U000ecc46𧗏t\U0009ed7f+\x90pà\x02ê\x11\ni\x1a\U0007d5cdùäu\x86KÏc\x85\U000b053d§·\x90ÕV \U000f5964\tÊú\x11¶á\x98\U0002f76d¢\x06¼𩤔0\x83\U00052ed6\U00080759QQ\U000b3b61m𧝪úîõBoAç/\x969\x9f\U00042a00øL\x85\U0009a212/-©\U000a2e0fÉ\x0f?\U0004d43aÜ\x0b3zjqV\x17bA»w°\x1ca3\x98+ÒÏÿPÛ\x80\x99´\x06\x8aÕ1F\x15XL\U000b68a8\x02Î\U000da104\x90n$\x86\U0004c1c3³ÀÓ`Ó𰱽ÄmE(\x0bwìfª¹s\x03D\x0cÜ×£\x07\x88yV𝆃\U000155f30\U00042d16\x92;}!¹\U000cbef0\U0005f135\U000f6f2c{\x94\x91\x08&Káú\U0006fcfa\x91Na!c\U000374e0±Kîm\x01\U00087b10ἒ\x95\x94\x14\x89@\rÒ\x81l𒓜É¢\U00046738³aÎ@6ÍdÏ+fl/\x1e?\U000f4709\x0c)𮀠y\x9d\x08÷CÕÞ\x92\U000fa3c7xäu\U000b51fdV\x0b*\x91Ó\x84fª¦\x06\U000a092a\U000824e9n\U00035a18\x8bc\xa0G©\x99ò\U00095dd7\U000439da澙\U000e2236ÖÒÅ\x05å`±ó1Ç\U000e1f4d\x1dÛé\x80\x18´=𥮤\x8c@¢Û\x95On7\x88´Xh\x9e\U00039f2bq¿¯ÓM\x19á\x95\U00054ae3¢w\x93g\x19?\U0009e730\U0001aba6.¶ÈY\x1b|\x0c\U0006a4dc\U000ede4c£\U00054fceDMÆ\x82#\U000bc8fdJ{tm\U0005ea9c\x83\U000afbc80\U000a6d24\U000ff300\U000e829e\x1e\x0b\\\x11\x08\n\U0001e352\x9eÀí\xa0𬯺\x0cu\U000e637d\U00049cf9ã§)\U00053a56\U0007b8efÛ\x10r\U0010076cÄÐ㝅z\x11\t\U00073fb5By&\x17\x07ï*\U000e9262)\U000e1bcc\x1d|ÆwöK\x92ð\x96\U000c46e8Õ\x99zØå\x88{𰊶\x9c¬\U0003883e0KÓ\U000e66caR\x88IÄÐ\x1f\U000654ber\U000ad45c\x00\x8b,Õ哝WB'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004695s
====================================================================================================
2025-09-18 23:56:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'áys\x1bÃÌ&y\x05Aª\n\U000dbffd\xa0½Ï\x19¬\U00069b28\x1fóf_\x84ï~\x89\U0004c5e1s\'J\x84\U0009e462,\x9a\x12ÁÍH\U000ac57b¦𗡣\x9fQ\x9eÕÓÞ\U0003c3ca\x11º\x8dU\x1dcm\x99ixf\x19Ý\U0005160fi9Ø𮞐¾\x06u\U000c0001\x94éµ©ý\xadÃ\U000da1c0köP\x97®ïëä¿\U000fa5a8\xa0\U000de1f5\x0c\U000fe549ð\x12¦eÇ\x86\x80\U000fada3Ë\x928pO\U00096801\U00106aac5?\U000f20abë\tX\U000fb743\xadîc䩧ä\x8b\x18\U0005323b\x05ñ\x071¬NÅjr\x8d\x14À\x9f\x87¸öSY\x10\x87a\U00072036Èn±=\x83茫øÒ\x90îôB\U00082fdc\U000aafc2墓\U0010b5b0Õ𝘭È\U0009c999|@1\x15\x9e\x86S\x02\U0007c502V\x1cû*ß\U0008a41dÛ¼±\x80\x16\x98{©\x01\U00089387\x17\x8fÓ\U0006ca43Ö}H\U0009e76c$e\U0004ccccô\U000a1043<\x8a\x92B\\«\U0009a42a\U00063f30ê\x06¢fX£»!\U000dbfa5\x0fI\U000d211c\x07\U000fb10e\tß\x9d\U0005ef48\x8aå\x8e¡¸g\x11\U00032330\x18µ7=\U00089862a¿𩶊´/\x18𣐗ÿÂQ\U000b2194\U000912e3Å\x8e7b\x7flm\x9bt¢:\U000c1f19·"\U000dd9a1Ý\x1f\x82ìÙx\U0007c398Ù¿\x95äÎ`\x1bX¾®\x92\U000b1f1dj¥¿\U0006c5dbk\x0bý\U000b0a14\U0009fd3e÷\x89Ì\U0009eda5ãË5I\U00081559\U00044414\U000ff8bføP$¡\x97\x08ªDU£¬㟓<ý\U000c4719l¿\U001091c77J\U000858ed\U000f88f2\x82»ê\U000906c1\x02Þ\U000ff09fÅÂ\x7fzé\x99UIËÒ\U0003c460=\xad\x075`P\x19OyH\x83ó\U000fddd6\U000614abl\x16\x82©Ý\U001034d6\x0b$\x14\x94\U000aec98ÈBË%\t\x99·\U000a9461Ïe\t𤬰\U000d2ace\x0c\x99\U0003b825\U00069954{½Å\x90\x0c²Ï\U0010621d\U0005f22aµ\U00045edb\x8cZ\U000c9afb\U0005e83a+B\U00048655rVö(/,gÒ\x1dÈì¸_u\U000ddb93\x94\x86IÚh𬈲Ö_d\x12b\x9dÒ\x93\U0008f84bÁ\U0004adfeë ¥Ï\U000b9078o\x1aò 90\U0003c738\U0009fadb\x838+Ë=â¤[\x1e\U00052ec5@Vj_oÓ"\x0b\U000a59ccGñJ\U0009ef5a\x7fⓌ9\x11à÷+\x85\x04\x02Æxô¯ \x84\U0010ac15\U000de21dr{\U000f1de9\x86¥\U000d4e26;î±\x83\x8e<;B\x1d\x97\x0f\U000efc8a\x19+\x00P¥x®\x1er\U0005e201¤\x16v\U000c73d4z\x9f\U00044717\x98\U0001de0f>q7O\x9d\x9c\x1cÿK¨\x92¸\U000d0fa0\x98¨à\U000f18e8𰚜Å\U000149f5\x7f\U00099142\U00097d46S\U000d6ead\x8e7Ô©\U00070d1dWÀõQíZ\U001095f7z\x86ò\x8c\U000393d6\x1a\U0003be70ó\x92aÌ\x17´\x90t#\x87\x85\x04\x19»~A\x95,dï3ñõ\x08\U00047e6f\x0f\x87ª\U0006848bñড\U0009309b\U0005ea3d\x7f®\x07\x86\U000e5c9f\x00\x86\x86t\x08\U000797f0\x8bÔðÏj\U000de0ba\x96¹UÈÍG\U000a644ck\U0009aa1d\U00079c43Õ\x1eò¬\U00086015Éýõ\nI\x98\x8c\x8f\x1c\x86\x9f¶ºÊlw$\x04\x14Õ+Ö\x177\U000823c1\x1c\U000c7206\x84Á¢\x1a榤y^\U000ba837à0\x12\x94ö÷\U00096ced£_\U00040aa4Ä0iO\U000ad3a7\xa0þ¥¿\x15:e\x89\x7f\x1f\U0009afd6ÎØ<LíØ\x05Ý\U0008838bÞ𖺀;\x03ß0JR»v-\x81ê\U000b47c6Ã%\x93L;[È\x96²4O\x155ðñ\x99\x82ÿÐÄ\U000cde2c\U000a8fc9BIèÕ\x18\x80:+°j\x18zg3ÐË\x0fNU°Î֎=\U0006b7eb¯yvJ\U0009af67\x9aaz?Ð0\U000358f7\x87\U000c0f02\U00094690\n+\x11Æ\x81\x83燓0^[éÓ\U000d8842"ú¡\x9a¤\x8dÓw\x10Í\x07=\x07\U000368bdÎEåR\U000bba7a\U00079503ÅM\U000eafd7þ!ö,«\x0f¶\U000790b6\x0f\U0008256b¬l\U00105a08-=&½8\U000afffe§\U00075a92Úã¸º\x1dF\U00074a89H\U0004eb4b¿\t\U000588be\U0001164bO\U0003e43bò¢9\x8fÕÙ¡\x91¯¯S¨Ó5$\x8f1\x08\U0004b535\xa0\x7fö𗣙\U00012caaÐ\x80¨;\x1b\x82\U000f48ddøt\U00049919±O\rå\U0009df16zMð\U000fa98a\x87\U000e179c\x86ï\x00^û\x846\x15\U0004c333ZÌ\U000115df\x0cL\x84\x10\x8fÈ\U000b1c86º\U0008b22dÂ¢\x91\U00085f82\U000f6ba42\x17\x03\U000fbdb4\x06kE\x88*\x16\x8d¢esî®\U000c05f9B,ú\r\x03C𡹵!¤}ú£\xad\U000391b3\U0007cb6a\xa0B\x15Åw\U000d1cfb.\U00097bcb\x02ù\U0003d8efa\x8dÂ\U000a1603\U000b8728\U000365b9\U00043623\x91¯\U0001cdffe[\U000fab17.\U000bfb9fn±\x14Æf\U000de1b4\u0cf4\x02\x08?bòÍøÈ\x99𑵲\U00037c96ÿ\U000bc219èº\'𣵆ì\U00056f2e\x9faZ£\U0004310d\U000787e9ø\x182zÜ\xad\x84\U000dfed4yuÚ\U000f0d81\x96vN\U000f5450\U0010961b-\U00050322âÅæÝ\x93\x9e\x95\x18¯\U000d893fS¶\x91ä²s\x15¹Ó\U0009b6c4\x05\U000c8559\U000e0a3b\U0004326c^𓍜ïuï\U000ecce7𭺮Ï\x1c𬴝5î)\x8a\U000ac591\U000e406cÃ\U0001633d\U000aaf3f\x1dÝ\x90\x88\U0008b6f8𤹮\U0003f61fäú\x16\x9e\x84h\U000fc8830\x81puÍè\x15\U000a55fc\U000bb20b®\x1cÄNßº\x82\U00035aacà\x1d&𠍠\x08§ö\U000ec68e\U00108aa4ù¦ríÌ\x8c0\U000a89ebD\x93+\x9fc\x1c\U000d2275ÐB\x0b\U000e9dd4¥\\\x9cJ0%ûoßÊÀ\U00051b85\U000891f7ß\U000e7594\x02\x80\x8b\U000a8b62\U000bd0b2T\tK\x02m4?*\'×\x0f¿]SÙ\x98£\U000cfc44\x8eâ\x8c\x88k~V\U00040371ZûE\U00090472ÔbÂ\x9f\x0b0\x7f\'\x91ß\x8f\U00097dd3\U000d9ebc\U00054d84pª¬Ù\U0009ebe0𡽕¾\x86\U000d03d9áv\U0004c332gW\x16簦\U0001a83c𥕂\U0004485b9^\U000e5b51\U00050ab8\x8eY\U00037276±à\U000748c8\x1d¨\x99\U000c7da6\U0006d347¿è¢\x02\x11\U000a300b\U000ce8bf\U000b5d90G"3\x04\U000c81f7\U00059b78è\x81r\x9e\U000b66b2à#¨ù\x08Á\x10â]LÚ\U000399b0 ,°øØüÆéö\x15|:J¾#(\x94AûãÜ+\x86C}oµ\U0006aa6cᯃë\U00036850u²\U0009c2df\U001001e6¶».Ëµ\x08𣤿\U0006abbfE|\U000bf6b6°oÚ¢ã开\x96ó\U000c116a\x10\U00089227J\u1a1d\x17/Ð\x04*B\U000540c3IU-q\x14.e\U000dfa2d"+\x1c\U000b0a52.,\x15ëû\x18¿\x1a\x8a\x07ñ$¹ìj\x9d\'®ãúÞ𥰒A5\x96«=\x95ÃP\U000b78c5\x0bpÚÿ \x90$¯·\U000623eeó·:\x0b4¼c3Û𫞇w\x98\x88Ö \U00042aec\U000a3a7f:\U000846ab\x8a蚧\U000d6d13±\U0003eb39\x88\U000ad485m;𧙕Ýún\x81#\U000aa43f\x1e\U000dc39b\U00045243\U000b65ff¨\x0ftÑÅ¾«ü|SºkË\x19\x93h\\B\x89¬©§\x8bNê\U000a4815\x1bª\U0010fc28¯J À_ \x0e@\x96ÞTV÷êOØa9\x8cU\x16\x8a𰚛\U000fc6131\x12.2~\x0b\x99S\x96Z\x17§\x0b\x9f¾á¦\x88ú@\U000e8d01\U0009c541\U000bb674\U0007549a.ï0õ£6\x90/0¹xæ=ïÎUö²"Ê\x88X\U0007a62d&', 'password': ['', '\U000d2671À\x055', '\x97', '\x0bp\U000bb7c3\x826', '¾\U000e84ac½ÆV', '¿Á𫙀\x9bÄ\U000fb7f3', 'wx»', '\x10(¦\U00080aba\x8d\U0001917cÅyß䵀D[\U000a44134', 'þ0¸\U0007365f𪁧\U00103ded', '', 'Ó\U000ce045Hô', '\x97x\x9cÇ\U0010ca3d', '\U000b3400awª', '\x81\U000ef893', '\U00039e91\U00056b0fç\U0003fe04\x8c\x9bY', '\U00067f6e', '\xad\x98\\', '\x13\U000a73f5\x8b']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '\U000d2671À\x055', '\x97', '\x0bp\U000bb7c3\x826', '¾\U000e84ac½ÆV', '¿Á𫙀\x9bÄ\U000fb7f3', 'wx»', '\x10(¦\U00080aba\x8d\U0001917cÅyß䵀D[\U000a44134', 'þ0¸\U0007365f𪁧\U00103ded', '', 'Ó\U000ce045Hô', '\x97x\x9cÇ\U0010ca3d', '\U000b3400awª', '\x81\U000ef893', '\U00039e91\U00056b0fç\U0003fe04\x8c\x9bY', '\U00067f6e', '\xad\x98\\', '\x13\U000a73f5\x8b'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003955s
====================================================================================================
2025-09-18 23:56:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['\x90$']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x90$'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004563s
====================================================================================================
2025-09-18 23:56:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'S\x82 ÝsÏ\x07hó\U00103674i¢\U000e4786«¦{i>w«\U00079139¢$\x80\x91rrE\x93åôÌE\x98î\x96B\U000aba1e>\U0005df78\U0006c838WàèÁ\x9côꕷ\U000155e3¨_Ê䕲G7\x02Û\U00059b56j\U0008c955%"o\U000c8507ɀ(Þ¬Y\x9c ã¯À@j\x8eñ\x12¨Ð\U00015c4f\x1aÖÒßÏ\x1a\U000a883dûìü¤Õ\x0e\U0005abdeèpÜw\x9aõ\x00Ãû¥\xad¨Ýð\x90\x85\x1c\n\x8c\x193ã].\U000e6ac9Ìê\x14\x15\x13d\U00031d52\U000e7f54h\U000a9446\x06\U001016e2b\x042\x1bßÓ¬\U000b85a0\x88\U000b2c16\U0001a4da\x91·\x81\x11pr Þ\xa0k\U00041a5fÑî¾IÑ(P\x01\x99°Dt³Ö\U000f4f6a\U000f6a88\x88,¨\U0006a260W¨ª\U000b2e38¹2\x0c!´GÞº×\U000b5d0b\U00073011r¨Pk\U000787c3%:\x19\U00056e6f¥¯\x1c¼\U0005ff87.à\U00013876\U000e7d70Cx«ê`ó_Þ\x9a-\x83\x90§!ó\U0003a251\x8a\U000fcd65\x0bઢü\x9d\x95\x8b\U00061081æ\U000729df\x19\U0009ad34k\x08\U000b1249\U00050bdd\x93\U00073e99Ø\x96\u0d98¶\U00051b3aªîh>\U0004abc7鍶\U00066f86=\x08ã9\U000c5246\x057\x95,¢Ù\U000e65c5\x08\U000abc832\x8cW\x82J\U0007f4a6\x1c`#M\U000f457e\U000ce307QGC4ãb\x18\x1bexéÝ\x86qc\x17C\x9e¢\U0008d19d\uf0a7\U00034494\x82¥\U000da0e9æ\U000c4992\U000b8824ßÊ\x907Z\U000c021c3<1\U0001348eÍ\x11\U0001052f\x99îl\x9eXQL\x1f\x85\x8b\xa0\U0003472f#uÒ\U0006daf9T\U0004e1c5\U0004bfc9\x85\U000e379b³\U000148b6\U00074089I\x82ßØ\x9bÜ¢2PeH8¤\U00102a92m©\xa0\x1b\x1b\x8c\U000722a1©\x0eº)2\x83𣣫ÿ)\x10\U000d544f)\U000abf85µq\x02ë²ç9\U0008407d1ø*\npZÊAÓ\U0007a62dë\U000c721d`\U00075fd2CKïº\xad|ëäÛ«=7\'\U000b4de7\x8f©\x0e.¦ª]Å\x0fä\x87\U000aad64\x1f\U00070f33z\x7f>»?Î¹\n±\U0007ed4fO%p\x96.å𮕪m\x07\x87Ø\\\U0008641bó\x9f[\U000903c8\U000a6ee3*Ó\x8b]f\U000683da\x96ç\xa0a\U00075fa2\x91N\x90\x88¢\x01*{búJ\x13ó>M:$;\U00103cc2\x04"\x1b[\x92\x0fÑª \x9b²\U0001b803\x89\tÖ𥩮Ê\x94\U0001dbae-6\x06\U00088a7b\x02\U0003b53dí\U000bab24𣴰2\U00053786\x87Z¦\x8f\U00046d7f\U00089e31\x1b¡õ¾\U00085cb1Y\x95c\x0f[\x85uú \x83L\U00070c96ô\x1c\U0007a1d3Ø\U0004d8cb\U00087b8ax\U000c0f62¨┹\U0003bca3\U000b3bdfõ\U0005f49fv\\\U000d91a9\x8c6ãE\x85\x91\U0005c8e6ÓQn¶\x04\U0007770bhñ=\\y\U0007c13b\U0004c1df\x88^\x98\x90\xadæ\U000a0744\U000ae628\x8b\U00094641v\x1a\U0007bb2a\x88ë\x18\x9bEÂ":á🨋\x9e𓀐\x0cL\U000f3a65gõ\U000dad27\U000bbed9ý½^\x83ý\ue24bÜ\x12\x86\U000f7548Ù\nÕ(õ¯\x9b\x16\U0003dd1fõB\x8e\x94\x0b,\U000cc1fb\x89J\x1b3𐓝å&+Ý\x13ædc\x00È\x1e\x95Qögëè\U000cda3e\x10\x9eî\x95j\x96\x1fZ3*cØx{𤽗¦û\U00044a40\U00105f7f¬r\x02k\U00060200\U00036637\x0egè\U0007ef26±Çì\x83A¥Þê,d\x08\x19;îºýà\x02¨eî\x01\x03Ã 0±sYÕ\x87RÕ\x9còF\U00084213h𑱚\U000c1ea1\U000d48d1\x9c\U0003208f\U00081adeæãfÒ\x19)³\U0008151c\U000cf6bd£\U00049500\n\x95ÂÕ\x82Ñ\x92;§\x9f\U000b79a6Ê\U000a0a12\U000a8d1fÀñ¦⼪\U0001b773d÷\x8a©\x1ck𪌶#Ý\U0009c973𥳙o7è\U000dff6d¿wIÚ\U00083c2e\x93lñ\x95H`\U00082dc9\x07\x83\U0007d680O6>±\U0003ae6e\x85\U000d1dbdÙÄ:¨ÿ\x81Ä÷g\x87¿Z\U0010c77f\x04Kùm\U00075043Uôå)\x8e\U000347b3b¾\U00071f92!\U000c4b63\x80\x9f9\U00080f8dÃ\x86\xa0\U000c6bf6æy\x1cÕÓÏ\xa0taoó\x1b¹ÌjfÕÏ\U000d745dÖ\x86JuW;êZâ\U000a4c7dv\x95𫦽a\U000cfdf8\U000b0968\x95%\x85\x80s?\U00044604\x01\U000df497Ù𠓯\x98p\U00091f46§\U0008c318Ê8𦠱\x11à\U000b9380\xad\U00067311ð5\x13yÃ\U00102eb7\x0c1g\x05Ú#\U0010128d𰂉ö-\U00062257ÆÄÔ\U000a8050\x84x/\x8e\U000bae19Á-n\U0010c114\U00075105;¼s¯\U000789efÔ~²\x90\x17B\U0010789dP\x14-E®^\U000e9805û)\x94\x87¶ᛩà\U000a3e22-\U0006c872\U00016753\U00109d31\x14\x1bº<\U00014aa8𠩑ÍÀhC!?³°\x87³©Gy𪑳\x9a\U000e7b5e´&îý5w"\U00065d2c\x93\U000ce221Ý\x10\x87è\U00088a47\t\x95é\x80\x9c¼\x14ÿkè\U0008ffe2🄚d`\x0f\x91á<\U000e029eÀ\n}\x05o\x9c\U000668ea©#&\U000d1f10È\x00&ç\x0e·\x8e?êÄ\x0e\U0007fa2dÿ\x81"\x1f"âô]bûÍ¯\U0001ba70yÍÓE-¼\x04\U000d7c6b\x99ì£t\U00078e4d\x11c\x90_Ø\x17\U0005a4c9\x91\x11\x94\U0007549d\x8báÆ𗘦\U0009d2b05\x85\x8b\U00034987\U0001b45b9Àò\x8bL\x81\x0e¾ê{ÚÓS~\x1co\U0008b01e\U000cdbcb\x94\U0010a1caà\x1d𧃸ä\U0005946e¾\x9e|¤\x94®\U000f7987\U000c94d9\U000a6ba3\\\U000336a4\U00104eadÅ\x90I\U000bd1df3ÛÆ\x86\U000b0ddaöÄyẂê-\U0004a439¡n棱\xa0ùö4Èm\'\U00038298¦P_å\x12\x07L\x90\x0b½ÚÛ·\x01\x07S\x0f\U000c95f6\U000c4f0b\U0003808cL', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004536s
====================================================================================================
2025-09-18 23:56:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00356s
====================================================================================================
2025-09-18 23:56:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004173s
====================================================================================================
2025-09-18 23:56:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\x1d\x1b-£·û𰝁¢\x99$.ö\U001066db\x8d\x92\x92Qq\x7fÄY\x0cZ«\x06\U000904fc\U00036e7e\x00\U000efde7\x1e=jÎ\U00103aefw¤\x08𮨾µ1nø짍ä\x86\U000f544c\U0003aa55¤\U000fd796\U000b7858>Ä\x94?54\U00093842ñ\U00046038\x11\x19\x1aÞh¤K q𪿬4®\x08=\n\x0e\x92\U000b7d0fÌ\U000551bd\xad\U0008a4ba\U0008659fÅó\x9a\x14{\xa0\x8aúï𥠣\U0001ca30e\x9b31ö{l\U0009fc16|vVj)½𫫴ðò0)L\U0006d491¢¿\x12\U000d4087n\U000f8fe0\x0f\U0007acf3!îtpÜK\U000588a8\x1fE;û\x8a\x80Ü§>\'\x99¤V\x8d-\x89ìå\U00041284æ\x07}k\x91Ì\x11[\U00105b81o"ñ\x86\x7ff0Á\x96dZ\x97ÅÂ\x17[`\U00075b98ãØÜ|¥\x7f\U000f4c33-\U000f29ddm@<\U000d2dfa\x80\x97;\x06\x03r¦Ì\U00052828\x17\x1c\x9b4\U0003c0fbÁ\x83Æ.\x9bÿ\U000b1eedÿ\x90W\nÎ\x13Ã\U00031de1¸\U000c1943i\x8fÉÀÕ\x89X\U0005a7d91\x0e\\\x82\x00\U001044d8\x10î\x14müÝú\x16}\nÒ\x0e\U000cd38d\U0001976b\x1d?á\xa06\x02=!\rbP\xa0\U000f7bf4\x9f¡\x0c\x17EL\U000f1a9b`Y×Ë!ðÄ\U000ffc27²ä¿·\U0005ed3e¥,¿ꬃ\x8b+¿cM\U000de422\x06D\U000d584aL\x8b©\x9b\x00\U000d167dàÛ¯´àºl\uec3c%.\x04.&\U0003652b\U000c1209r]å\x88\U0010cfbb±êÄÑOÑ©OP£\x8eØõ\U0006822c\x0f¡À\x18&_\x08\U000113c0§$U\x0b\U000a0b46\U00083cddn\x0e\U0003bafcT\U0003774beË韥\x05\x92À\x8dÂKÝ$mX\U000ee44c\U000a878e\U000edcff\U0010441bÿ\U000908d3²Ö3¿²\x14nØ!#j³\U00078e3f\U0005b957aYsìI\U000bd2ffªxà¿³q0À4±a+ï¥\x89\x06vo\x03Ê\x1fØ\U000e23dd\U0003da6c\r\'tp\rõ𥭹fâ\U000508f4\U000677c3\U000ab50fCµÿ\U00058c44fý="\U0009b543ù\x03x\U000d5cbf\x00¸êã¢;Ì\U000a893c\x9cÁb§ç\U0008d4a8\x17WCE\U000e76cf\U00075dad\x04#\x8f\U0003179f\U000b7321𗅲\U000849ec¤\x83\U00100a16à_.ý\U0005dc9b>¨\x85<\x0c\uf091ø¹\x17HOìg\U000a86a9áxß\U00082206:r×J)c\x80\U000a636d-\x9f\x8a\x85}\x84Þ2v\U0001b53dù\r\U000f8717\x80\x1d\U000b56c1)±\x876\x8dö¼2ó\U0010fa55\U00047cba\x0eÚ\U0010e769\U000ded56ÔI\x01M8\U000feb6bè(\x11\U000de97a\U0005ae6cÔ¢ª@\U0003740f\U000db564T³\\?Ä\U000ec711\n\t\U000dc751\x9f\x1dîÚñ¥}\U000e82e0𥃘\U0010fb9dc1X\x0c\x07(¨\x18@\x05`8©×¨å\x83\x12\ue300Ú\U000b9f80ºªóö\U000a2dd1ì\U000f9c69\x8b\U000c8e56Z¼\x1cAq\U0002ef10Ëx\x8cÒ\U0008129f솲\x8fnçn`\x15\'\U0004da54\x87é%\U000a58f5\x95½ªÝ\U000b58058\x92\x82à\U0004a5fe®\U0003fe2aW\U0009cf6cùjP\x88\U00043971\x81(Æ9\U00109dd8dè Pã½Ü\'<䣀\x18uðÀD=¼BÊJR\x8e\U000b96e3\x16N\U0006c393ÍtÜ¶\U000ff4d0 \x0fã㌽<Aå褥²nÓ\U00081352Wrõ\U0003bd96ô08"¶¸\U000544ed%Ô\x10:u·\x9a=ö\x7fç\x1dv¤Z,¿{f\x1bîcË"\U0001157b\x93y`\x00\x83\U000c6bfc:*\U00086965R>£ê\U000802f7\U0006b716\U000d7915\U0004c990Ü×&Í\U000d148f\U00055584\x8c\x8a\x13\x85R~Ù\x81\rg\U00019bd85\x87=ÖÈì¢×0q\x84±\U000f12aaÖ\U00053f39ꏼ𦣂 S\U0008fa28\U00067e4b|\x9bZ\x8b\U00034c2cJ\x88ìû0Bg\U0005980dùð\x1a\xad¢\U000ee63f\U000e3e94WL馐\x7f.\U00072fd6\x89Ðé\U0010a71c-Ñ\x1d\U000e1015\U00058499ïÑÅd¡\U00042d3f\x99¦\U00096324%\x1ds\U000b2a43Û\x0e-ㄍãñ\U0004d653B\U0007d667îAH©¼\x01«N\U000c1de5\xadÚgRJ\U0010ea61\x87\x9ez\x1b\x80\xa0d\U000ade82Ãö\x05\U0004c40c*\U000f0d52\U000b1f17Dà\U00107b97^.\U000819e5\x00\x8a\xad\x8d\x8f𢗄Ë_ý\U0001b628\x0cç\n\U0004a5e2ó¿x\x13\U0009d207\x8f \x83Éù\x87Ö\x96á\U00012906Ú\U000ff6d2.q\x99\U000477c9bY\\hÝsÇ\U000e9e36\x9e\x00}\x93\x85ÞÉî\U00108ca7\U00044c14·º`í¿Vu^lø\x07è\U00041ef2\r\U0009e839\x00j1Øx\U00044194g\x0c\x8d«Ì\U001059c6\U0002fd50øNV퀂§ùØì \U000aaa02\x85<÷Ù\xadr\x1d¡6X\x94Ñ\x9bI\U000c8702\x93¤\U0003fd87áB\x80qÏÊ§o\x8aÚ\U000e2920\x1b\x03\x04>D\U000deb31iá\x97\U000f2bfc\U000e7a06\x10c\U0003a53cRe÷UGé}º\x0f\x91\xa0©1Þ4췦WÅ}\x0e´\x864Jf\U000ee2c3\x9cyAnÔ<\x05j\x13I¡6k\x022;õ\U000ecf10\U000c81c8a\x99\x89~ÆiÍ\U00062e1c#9T\x82ÈÑû\x02u\U000f4c28\U0010cbff\U000811c6\x06\x91\U0006d865\U000773ecoâ⯖\U0006d61fÚµdáÒ\U00071ba9l\x9c\x86\x0càíîi:\U000316baÞ\U0009c6cb\x98ê%\x07x𗃽nq0²ä=\U00089f03¯\U00093e77±\x9fç/\U000a9712\x92§l?\x19|\U0008b02c\x1c\U000f43e7a\x97\x01þ½\x91}\U0005dd73\U0008725an\x9e\U000e6be9\x00ßtÉ\U000b4551F\U000f6211\x07¶\U0007bad2\x96\U0005564d\U000c49a9&c\U0002ed02,𡮢\U000fc406\x92ö\x8d𤨆\x9f[\x16\U00058c6a\x9cs\x8b\x155\U00076ab6\U000e863a\x85\U000e22c6ô\x84\t<-\x1eº6ô\U0007323c)v¹¥³¹\x88\nh\x01\U00050f5d\U000823e9\x08ý\U000b54304ÃÔ_X(N}©i\x0e\x89×\U000d4f85\U000465b4k𐪕5ë\U000d3b21ú¥\U0008362e7\U000ce2222\U0009eacd\x10b\x98\x1f\x08Ú§åµ\uecd0&N²\x03Kgps«\U0006dcea\xa0DQÃ\U0003b197ºû\U00071adb?¶â𮠭𧵣~4É\x1aòëî\x18\x99\x9aZô\x0bÁp\U000cfee4|¹å\x82\x9bF()\n\x91Þ@\x06^rº\x04³\x86\U00077e0e}\x19Ü\U00044070Û𬦘'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003912s
====================================================================================================
2025-09-18 23:56:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003981s
====================================================================================================
2025-09-18 23:56:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': '   '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003553s
====================================================================================================
2025-09-18 23:56:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U00075729PqAG5À', '|ç\x97', '\x87Î©\x1c', '\x17I\U000f6c94:', '', 'pfþ\x10\x01´\U00099c11<ÇÁ\U000de7a5l', '©Å', '\x99ùØ', '', 'ÄÈÐÿ\x90\x96쑺²\x89Ý«è\U000e9021\U00088495çø\U0004f667\U00073c02$\xa0\U000c1225æ)Õ\x8dò\x00Ñó'], 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U00075729PqAG5À', '|ç\x97', '\x87Î©\x1c', '\x17I\U000f6c94:', '', 'pfþ\x10\x01´\U00099c11<ÇÁ\U000de7a5l', '©Å', '\x99ùØ', '', 'ÄÈÐÿ\x90\x96쑺²\x89Ý«è\U000e9021\U00088495çø\U0004f667\U00073c02$\xa0\U000c1225æ)Õ\x8dò\x00Ñó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00403s
====================================================================================================
2025-09-18 23:56:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003653s
====================================================================================================
2025-09-18 23:56:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '    '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003846s
====================================================================================================
2025-09-18 23:56:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': '\U00098833\x02\U000af1c4\x0b_\x07\x8dUD_\x8e\U00074a96xï\x97\U000fb61c\U0006652cøÀ×;Ìýgw\x88í\U0008a1ba*\U00091af1\U000a6c4aÀ\U000d5de0E\x86\\\x03\x11ᰝ¹\U00046271𤸡Ø\U0001aabc\x8d/zY-\x87\U000d1fd0DÜ\x92ê¸\x94뚇\U000f12c6ò;tY\x9c\x112ß>\U0008af1dO\x13 \U0003b307\xa0\x80\xa0\x1afÆ´U\x9a\x18ì\x1a\x0b\U000ee3bb\U000ed2dc%þ\U000a2c9d\x8e𥴻ðàó\U000a6f72Ë\x1aÖ\x02«ÐÎS\t𩑸\U000bcc4aÓú\x07æá\x1eÄ\U000cc9ac\x8e`(Ë\U00045e10\U00079633ýU;\U000faa7bÉ¯è\U000fd70d}Ì\U0001ea69¨È\x08ïæÖ\x8dj\x81\U00053484\U0001418a\U0009dd7e\U0009bdd80\x86áé<¶×¥\x05mk£P\U000bf555/Xï\x9f¶\t\xad\U0001dfd3Ü\x0f\x83¬w찧{\\pÃ/\x8a\U0010d0dd\x15\r\x18£\xad©\U000d4a83\U0008b2d3\U000f1975\U0004282dû]Ú·%Z8\x8e¶\x9c\U000129fe\x8eu¤ú7\U000924dc\x87Ìz+½\U000f12f8浌â\U000b6b5cÈ\U000806e6\U000ba1f3Ã\x84nC\U0008b481\U00041502툩¨fQ4)ð\U0008f6d1:ìÇ\U00042e83\U000ec156\x9b𥬨\U000f6daf¡)\U000e7bddM¹\U0005a96e\x16ñÉ\U0010b4c79#X𝝽\U000df1ef«\\ø5l®\U00053057´\x08d¯1\U0004c5a2,dMBÁOK\U001029cc\U0005283a\x13먲À÷B¹ô𐴖\U0005776dÕ¥>\x08ûýÂ\x9e\x18òåÓ𫰞𐜇.í3÷\U0003d7a8\U0007b1d5ÀhÑOÉG\U000d5565ñ\x871\x19\U000b13caÖeä\x03¬Ó\U000b91aeËPÝz\x11ë\U000be4f2@\x17\U00094695§µ)K®öÃÁ\U000afde5g\x94F¼í¶R}Û\U0008bff0;d\x7fãëÁ\U00011964aXTZ\x1f9𢛢×\U0007cfd6dF\U0008163du\x01\U000deeb6 \U000a1d3c§\x05\U000c3c65Îöð\U000fbbb8\U000f5c4cÊ\U00013ef1_\x94êÛðd\U000b9527\x17(\U0007a149çÔè\U00098141Å\U00035da7Ó¶^ïÃ/Êðr7\U000ff9dalNåÜN\x03\U000f3363)n¦\x95\U00107f47ñ\x10yù\U00065b46RÃÓE\x8aÃUd\U000b55bfK^\U00108144\U00032322\U000f96d6\U00018dffç\x8d\x85¾Ò\U00087b32É\x95ÐOÌ%%Ù\x11\x8d\U00092c76î\U000dcbf3b{\rt\U0006dc6b\U000cfb9b\U000342e3m\x19í\x9b\U0005761ds\x03\x98®\U0007d35d\x8aÈM𣀗Ðù\x05¢©§«õ4©\\\U00078db2\x86\U00064592Æ\U000c5103\U000febc7\x8diã\U0003afccGî_\U0001edcau¨V\U000b8046\U000fba59i\U0006afa3Àôª¢𫅽\x08\U00047a68\U0001abce\x89\U0003ec3c\U000b3023\x0eÚ\x14$\U000a333fÂòN|Ñ\U00042561¨ää\x92Ý\U000f5c94ù\x96!I7o\U0005bbed\x8c\x1a8s§N¤+MJ)Ë\U000c8fa5Q7\x9dNònW\x81\U0008cd75ÕÝÃ>\U000d5f50¦P\U00052933-\U000e11f6\x17akýP§c"ìò%Ø\U00095044öÝnïTO¸\t,ÅÞÒq¤\xadÖ\x82U\x84|w3q\x1b\U0008fbfc%ÓËt\x07\U000fea57ó)\x11;\U0010ac86\U000f5719\t\U0007a1d8m¹\x94\x02\x14\x96¹\x87bnÜq$Öz¶[\x02f]Ûfk\x9a\x9c£\\TO\x12U\x7f¾tÚA잽Pm^z§a¿\x94Q\U0010fcfbØ\U0006d0fa\x89ìò\x14Fü\x89\U0008868c\U0008e4cfÚ\x82òãꥋ\U000fc9d8\U000ae612èÛ\x9d\x8fÉ\x9adzB÷\U000a34c8\x0e@闡ì\xad\x94\x99S\U000f78a8:¤²\U000e2f4c\U00094323\x03é¾Ú\x03\x9b\U0003352c«\U001059beHÙ\x08\U0006fcf9Ry:\x97Ë\U0004a8d8Fd¦\x83\x84¾Ü:J\x06CTlð=$Ã`H\U000c46afoÛ¾Ô;\U000bb7bc,㲱\x8fÉß\x9eñÁ~\x98\U000cb253cÖ:OWÍI±Ë\x0ePð\x9f:\U0004a332\ue00c×,\U000cc72f¼\U0003cdb9;Æà\U000fc66b ¢aÃ\U001011be(¥\U000b747f$Go6\x83µ\U00056b25\U000ec6c0\x1b7J\U001021afÙ\U0001beb3\x03aÜ\U0007615a^¾r»q\U0006635fûj\x1c7\x9d⮤\x96\U0007e076ÂE\x8e\x02\x99\U00019f8c\x9c\x84äýÖ_!s\x1e¸\U0009c394ÙuÚ!§½\x97\U0001eb62\U00081ffa\x841TÉÿ¶\x04ö\x8f±\U000ed629\U000a1864»\x05\x9f×\U000bcc85£\x9aâ\x1aö\x7f𥽄¥´\xa0øü\U000bdfbeÿ\x9clÇ~5°«u,\n\U00091b7c\x00³\x07 ®¦f\x1a)\x1a\U000c4a05\U00049950¥\x82\xa0\x04û\U000c3e66®\U000856f4\U0009bb01ÔÊÿN\U000c8e461Ú=T*á±4¨"`U^§ª\U0007ef1c𩰲\U0006af36j§c\x0e𢺪\x1b\U00061de0èÈw\x06©\x81Ûè\x17§\x9d\U000a0425\U00011b43\U000d7844_É\U000fdbc5\U0006d7baÔ𘮝Ê`wïÒ\U000f1f38æ\U000efdac𘂸ý8ª\x15°Û«z!\U000c4c3c\U000d145d«¯Üá\U0001ffc2\x08\x0cHñâñ\U000a0112ì\x1a퍉ÀbyZcê\U000f4183\U0003b4b2ÆxÒ\x7fC«\U000e5e30\x9e\U0008ebfe\U000371c4è\x8ea{\U0004d7b22\x0f\x03\U000d58da9𧒫ÿêÍ\x01 \U000a5729\U0004f442h\x80\x1f\x03(\x15ò\U00089fa7ø\x0f+ì\x9f\x8bû\U0001eba0¼¬eO\x94L\x0e¶\x87\x94\x93Ï\U0008baea\x89C;\x93ìï\U000732e6\x18\U000f7846\U0010f454²\U000315beñ\x16\x1bzT\x92ò\U0004414f\U000fd98aVf\nn/\U0001b5d0ab\U0003930e^\U000adee9y}Ã\x99þB(J23¶b^;é!\x8c\x13ïAü8䠶\U0010b2c1\x10\U000d6f6f´\U000b0fc8\x082K]¶ Øß\U000974a5kØ\xad\U0003e03a\x90b\U0003fcb8\x9cì琶\x97X\x00Ù$Ï×\U0005f8ce\x0e\U0004dee0\U000ef59e㜄\x9bö©ë\x8c\x87z£í\x08.v\U00055072\U000983a4[ÙÀð\r¤\x96\U000343e9E±\x97\x7f\x99\U000d22f5\U00054f1b\tótQ\x9b÷ð\U000c1e92W\x02ãç¢\U000d4d85:Ü\x12òæ'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004178s
====================================================================================================
2025-09-18 23:56:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ö\U0008d6bdû\x04¥\U00090da2²ÁÁR\U000e3b22¹\t\U0004475e\U000da6fe\x06\x06=¥¤¬B¯D\x06[`🐹û1\U000e0f54½\x08îÍ¶F\U0009108e\U000a883c¸\x17Y𫜀¥7\U0003dd13.{é\U000874a1Wc\t÷>ýL\x07\x12{ßÝE\U000ae8e5\x87s&\U000b6627\x14\x19𥒈\x93\x03ßÆ\x03\U000e7024\U00093b35Ü5c\U00053b137ùm\x80ï\U000e47a9ìOôÔ\U000d7a20Êvø\U000e34ec\x91¼N㝳þ±nÔ¨Q´ó\x88»\U000fe9ad]â²êm\x1f³\x08\x16©\U000e1490\U000b29f4H·²D3eÛS\x15B?±𨦼Z\xa0\U000c4cc7ökí\U00079434½\x88i\x03𞡮à\U0004ecb3\U000b356bÓ}\rU\U00043330\r¬R\xadf\x1d\U000aae72Ö46r@\x0ft?ü\x9aV\x16;HÐÐTað\U000d0b06\U000dcbe6ý\U000d403c\U000fa4d5\rÁ\U00087c0f\U0003234c&\U000f3f5c¶¾j\U0007ff64ÏS𒀷\U000b7a66\x9a\U000fa773»ê\U000ea85f\x7f𡓨\x93&·\x14Ëg²\U000d8925¼\U000c8c88+Uï/큥ÝÆ1\U000f6a6c\x0b¸K\x7f{\x06rh\x9a\x8d\U000dc632𦴶\U000a8688Ê\U000eb2ac\U0003fa10\xa0\x9e\U0006cad3\U000c8316²\U0004fa10\r2yÁÍ\x97dÑöÂ\U0005a7520\x08\U000a0624\U000ae174\U00082322ÂÂ\U0003c268~\x9dMì\x0c¢\x01\U00098387ã\U0010daafC\x131\U000dcca1\x81i\x9f\U0008dafeü\x93\n\ue604o𣪑Ë=¦\U00036bac\U00032616~\U000a9e0f\x91𣘨\x9aòÏw\x8bY¿¹\x9b(Ó𠟢\x08\U000d57e8\U00089992𣓃}\U000dad5dß\U000723a4\U000fcb13\ue3fa\x8bT\U000dbde2_\U000d4610¶.mÀø\\\U00077969¼fµ\x13J¤Üq<Só$ó\x1dÂ÷ß$\U000e58b4¨k}\x84Å\U000cc2b5\x94²·\U00099559\x9c¼Qc\x0f¢9?\U000f18f9\U00062c86<\x81\U0009cce0-]+K>\x8c·\U0004e6fa\x02w=´¥nÛzH.\nX\x95\x00$\U000c7063³\U000f65b8ø±\x98/\U000ca40bÅúÆÅå\U000fe480\U000b8ec8Vù\U000cc037õ\U00048e41\U000b92f6~\U0007bb60åoæ\U00055cad\x97üÖl\x99\U000691a58Ã\x99Ä\x02nÓ\U000dd56f°\x92ßb\x91\x9d\U000dd62a£ô\x9f𥥥¤\U00096df5\U000a1cc7|𐂶\x1f𬆑\U00085901(\U000e4c5fí{øÚÃ\x0bÂ3𥪏\U00097026+I·ü\U0009c176I!é\x90\U0009a823\x8aYq\U000733b9@¯¬eJ\x8b±èg\U00039a6f¹·4\U000d7512Éý\x0cu.eX½µ\U000c4910n¤\U000ef43aP1J\U0007d13e9<\x97\U0009fb67B\x81\x97+;\x19\U001000bajpq\x97\x8e\U0006e746\x7f\U0009a431m\x99Á\U000f05f0ûØ\U0009c332\U000bb037c\U00080e74\U0002fc07äÓ\U000768e1h³¡¹\U0010fbf6ß\x02©\x93\U000d8822\U00063710\x9a\U000e4c22\U000ca1ff𨜪\U0010afefp¥Ô𢼯\x07I\x92𡊬ëªjîø×C\x9d\U000d9627\x9bQ\U0001551f.Ý¥¯C\tVS!\x7fwB3Æ\U000edcb9t\U000794de\x07\x90ó\x99\x9a\U00049cb9ÊÌ¨¿\U00087779ÄÇ\x05>7Å\U00107317Ñ¹¨\x11\n\x9b=ó\x82\U0010206a Ûh½«𦵛Ð2>\x14E\U00067712\x89É=íäý\U00046ec6&\x1dDm\U000d8a8d\x1d\x84[¦\U000ea6609\x10ñ\U000f5b15@/J\x856xÊ÷ú\x82áìVìR¶;\U00097514\U0009af33B\x08l\x82A\x05j¿\x95²¦\x9b\U000ab40e\U000f0e5bÌ\x95J𪆉\U000c4a21Ù\U00066f37ôÚ𦄳Àóvø\U0009403e«m\U0006d74a!\U0001fceb\\Ï\x99k\U000c6930#\x9f!ÎFêc\x95~\U00093974À\x83Çíùë\x9dÃÝ\U000da48bÆP\U000eb55f\x9a÷\xadf\x8fKï걮\U000814d5@¤\U0010ada0r𢲐`𬴌^ä|\x03®î\x01\x02]\x97¦\x9b\U001073fcê\U000877bf¼Qa\x0c£U¬¹x\U0008ac0eç\x99x¾ÑÒ\U000df515c¾\U0007aa59\U000d49c1Û\x10ò\U0006799a/k\U00058081<\x9d®\U000aeddb\U0001e50a\U0010de2eç_ò\x1d\x19\n\U000bb8a7\x01è\U000e186eß\x1f/~\U000da88d\U000fbf7f𡷦ä¾\U00102c18\U000761ad¿-C;\U0006a760\x8f"¨úé\U000ee047íõm\U000df720Çå¾\U000c4c37V}h\U000ce975*Í\x04v\U0005ca51\x8d\U00037659ð©öekóJÒÎ/\U000fa89b\x99\x14\x05®\U00065de5\U00108212\x88\x17T\x15á3\U0003db34\x93,\x06\U000d633e`^\x14Ꮫ7pôó\x9a\n\x12\U00057459Âf\U000484c9\U0009c009\U000f8a37Ü±6\U0007e91c\U000bd18e.ÚðÈ=\x19\x9aÒ\x0c5@æ-\x00\x11\x1cÏ\x97\x16¦R\U000f71f3B»\U000fbcabÛ\x91\x8c»\U0006ff48sG¹Ç°%D𢸲u\U000f5641\xa0\x82\x81Mý\x11´ÝK@¾\U0009a987\x82çàs\U00075efcù¬\x9e\x80|𡽂\x98\U000fc9a4Të¬í\U000a2be8\x13Â¢\U0006ac91²Êë£\U000c5d64\U000557e6\U000dc668\U000ac579\U0001ca05\U000c37fd°Ã]\x1c0ïb\x9d~A\x0fC9¿\U0008233e@\xa0*\x86𦚪²L\U0010491b\x96\x8b𑿠\x18vlÏC\U000a81d5F®(ú@.\U00109f3e¾\U00042bea\U00088bfd¡@ÍNk\nF\x14\x9e\x8f@\x1cþm¢\t\x80*µ𨎧\x14ªîä?\U00094eef\x81·´ﴱ\U000ccd1f%ÍÆ¥½\U000a5c8d\U0009f0e55Js\x1fà\U0004fa9c\x9aOcð\x82Ña\x06I\U000ce51e\U0002ffd0Ñ\x92\U000e598a0ÙbhÑ\x99\U000e9cf1\x1dRæbßÓ¬\U000ef0f3\U000d5a9f¡ǂZn¡h\U00061f7c\x8f\x9c\x06e<\x84V^W\U00046eb25\x03ùö\'\x8eÃK\U00081e82\x02\U00072f85\U000dda35XûCØ\x06\x89ÅË\x00\U000b2239\x91![â\x897\x1e\x95\\)\x03Tt\x98\x04ü¤\U0003e4fc𠯫ûm/³퓨ê@\U000c5d36ùÖ°2#÷uDëm\U000332bcó~', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003911s
====================================================================================================
2025-09-18 23:56:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ['<%Hõ¹', '´QÎô&\U0005b831ê¹', 'w\U000cb7c4\x8e', '', 's\x90!yg\x13', '4Ôg', 'zÏç3\U00033433\U000595c5k罊\U00037a32\x81\U00048de9²w`\U0009f79b~\x83', ';\x1c\\ç?âÖ\x97b', '\x82q', 'fvP\x92\x02', '\U000e2828\x0cØv', "Hçø阋¡Ñ\x05\U000a5039\x08\U000e580fÞ~\x11'"]}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['<%Hõ¹', '´QÎô&\U0005b831ê¹', 'w\U000cb7c4\x8e', '', 's\x90!yg\x13', '4Ôg', 'zÏç3\U00033433\U000595c5k罊\U00037a32\x81\U00048de9²w`\U0009f79b~\x83', ';\x1c\\ç?âÖ\x97b', '\x82q', 'fvP\x92\x02', '\U000e2828\x0cØv', "Hçø阋¡Ñ\x05\U000a5039\x08\U000e580fÞ~\x11'"], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003905s
====================================================================================================
2025-09-18 23:56:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x92\x95û', '³K\x1c\U0009af3e\x05', 'Ø\U00098f2e³\U0005a848\x81·\U000d58ff', '´擥', '\x06qqó']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x92\x95û', '³K\x1c\U0009af3e\x05', 'Ø\U00098f2e³\U0005a848\x81·\U000d58ff', '´擥', '\x06qqó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['\x92\x95û', '³K\x1c\U0009af3e\x05', 'Ø\U00098f2e³\U0005a848\x81·\U000d58ff', '´擥', '\x06qqó']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003644s
====================================================================================================
2025-09-18 23:56:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003791s
====================================================================================================
2025-09-18 23:56:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00406s
====================================================================================================
2025-09-18 23:56:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['\U0009eb60\x8a']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U0009eb60\x8a'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003491s
====================================================================================================
2025-09-18 23:56:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 2086071428}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 2086071428, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 2086071428}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003633s
====================================================================================================
2025-09-18 23:56:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x8d\x0bmc*I3', 'èÁ鑉\U000e7cff|#\U00066cfb', '', '¾\U000855785', '\x81\x9e¿\x90¦\x1c\U00108d75\x13\U0006e867õ\x1dLÂë'], 'password': -37}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x8d\x0bmc*I3', 'èÁ鑉\U000e7cff|#\U00066cfb', '', '¾\U000855785', '\x81\x9e¿\x90¦\x1c\U00108d75\x13\U0006e867õ\x1dLÂë'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -37, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003502s
====================================================================================================
2025-09-18 23:56:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003918s
====================================================================================================
2025-09-18 23:56:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00353s
====================================================================================================
2025-09-18 23:56:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 15440}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 15440}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 15440, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003864s
====================================================================================================
2025-09-18 23:56:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U00054123\x0e\x19À\U000f3a84§z\x96ú[\U00039c18m«¿rÝ\x01k\x87£p𦏶)', '', '\x02\x13', '', '[I\U0006ce16«KrA\U0010e696'], 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U00054123\x0e\x19À\U000f3a84§z\x96ú[\U00039c18m«¿rÝ\x01k\x87£p𦏶)', '', '\x02\x13', '', '[I\U0006ce16«KrA\U0010e696'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004016s
====================================================================================================
2025-09-18 23:56:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00414s
====================================================================================================
2025-09-18 23:56:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -1, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -1, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003658s
====================================================================================================
2025-09-18 23:56:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U00053de86ä\U00055c3fî\x01à\U000dc54cÎ\x80\U000f14bdÿꁘ½"\U000f979e\x9cj~ÇK±\U000fd499\U0005aebc\U000a24a79wëpü!T\U000cb612É\x11¼6\U00063dc2µ&\U0006f63fw\x88_\x99\U000bd08f\x8c\x8c\x16:â\x90b!\\𫟅\x81$L+¬y\x94\x81ï\r\x8aRd\x86Ñ8³\U0004da71\x13¦\U000f1982³Âx8\x9baÈ?\x98r6ü\x8a\x18<ÄN7GÙæÛ¼uå\\¹\x87`â\U0009f3d2ë\x9dm\U0008536d\U000d1d8a\U000a2361\x86Ú\U00076c33쳼\ue3d1Í0\U000a9c5cN\U000b3b13\x98¿´øÚ\U0008c7f2\U0005e5c7Ú\x8a\x07\x06´¹G\x18\U0007fb0d=Ì\x9c\'\U0010941cx\U00077d98»ÿ]\x07\x9eãáØö4M\U000c31f1\U000f1514Lµ;µ4f¦\U000eda29Èä\x138\U00070121kÂúýH\U0005bd8cÐ\x87;\x94\U000ebc05q\x1c\x18\x81\x0c\U000b2ca1\x97\U0005d9ea-9\U00096f98m¾\x8f\x18\U000a7e8b\U000d958brk\U00075e61í\x80½è\U000fe534w]\x03\U00052c5bç\x16.³q\U0009c97d¸\x8enA\x88±l\xa0=y\U00064173"KÒ8Ö\x970b}o\U00041bef\U0010e9ef\x96"p5\n\U000f697b\U0001ece5.B¡\U0003b5d8° \U0003a99b\x99\x11ã\U000c453añyî}\U000435b4Ó\x03\U0010490c_\U000c53a7\x9d\x0c\x1d\x8eö\x89×\U0005a291\U00013590>Ì-\x14\x91¾0\x86æ6Ó¯\U000a8560\U00045977\U000dd749Õ\x8aR\U000f1410Ñg@P\rá\x9f\x1c\U000de23bÑ\U0006d4ec}^"4Kwy{\U00014c68((\U000c3eb1à䖰(\x8bGûqç\x81\x15𢵑\U0005fb36\U000d8e2c#\U0009e3a1i\U000f7c7bLoàR\xa0þ\U0010540b¾ØÌ\x11\x01½=\U000fa1d4\x98\U0001626d\x8c\U000b6650𢶻:fòÔZ\'¡9\U000d95f4{\U000d706d\U000a80e5{_=£\U0010924cÂ\x99;\x9d\U0007f4e6zµÐÇ\U00039d86\U00019c2ae¯$\U000e436e\x10\U00037b72\x95=\n÷#ÿ*å0\x19b\rx$\x95é\U0008b11f\x93ó\x19\x01\x08Üãù\U00109280§OpË1\U000e473a\U0006addb\x97\U000f40b9AJ§\U0004d65cÚïº\x8f𞤲-\U00048734G\U000fdaf3𨩡\U00094257\U00049ed1\U0003e29e,9}\U000699e1÷TKÊ^\x8dFàeí<U³쨎}\x05³\x9coò\U0004ac28C𘎇mù𤤞¸×¶\U000451b2\x9aìc\U00107278æH\U000ecd0f§\U0004f49f¾E\x81Í¡𘪪_1\U00034abcÍ%Ä³\x8f*\U000e90acÐ8¤Z*\x0e\x88\x11éÕ\ue90c\U001098836Xþkõvj0箭\U0001bdb9+ÐK\U0005f65f\U000ec3ff¼\x08Õ\x89S\uea27è\x7fÀ´\x0bàø\U00096bbbt\x12j¤-𧬷!\xa0\x04\x0e\x18[`\x9e\U0006470f\U00086bd5sÍBÙÞ9y\x0f\U000658cb\x1f\U0006e034\U0004f7eb\x8d\n¤\x8e\x0b\x06?\U0006d180¾\U0005370fÄÌyÖÞ\x07𪛕\U000388d1\U000ed582Çãø}\U000cf89c\U000be6d0$Ù1Sù\U000a14de|h\U00066802\U0005f88c\x9fÚß,জ³Á.8i\x12Í?¢\U0006d064ã`KD\U000ae611\U000b6ac1\U0004b4aa\x7f4\U0004114ezó\x0b\x02¶Ø÷ú\xa0\x86\xadä\x05\U000f0e0f2\U00046065\x85\x10¾ô\U000bc41c;k\x90áµ\x08.6Ë\x87@¿\\ë\x9c3\U000ce872\U000592d8\x9a(oþ£ú \x1cas6\x1d! \U00039859$zq\U00049746M\t\x14}ô\U000c7cf4ûkk\U000a8a43\U000a261dFv\U000807d7\x03\x1c\x10\U000d1da5\x15(\xa0D\x93\'\U000f31b5²\x8cP*æ@rÒ¸¼â\x9f\U000a4566\U00071b6cs§áW\U00081e3fé\U0010cf7f\U000699ed\r\U00038338·𗪤\U000f21c9Wµm>»D\U0006f7e9ûÝ3\U000c8772(\x19\U000aacc2\x83\U000ca6e9¶m@\U00083215dPo\U0004a81bR\x12Û\x9ej+\U0007ab0b\U000e5db2vè¤Nê©Öëì\U000e405b😁P\x94Ñ©Å°5\xad\x0e\x1a²Q|Zÿ\U0004eee7\x1dî\U000a416b\x8fg÷ÖxÄ\x01@\U000bdade\x12ìï\x9cL\U000607dc{\U000f7568\x19KÖQ\x9f\x91\U0009a051d#Ê\x86P·ìQëK:\U00048d85f\x0bDD^\x93\U000c3de0i\\«ôQbp\x97\x1axU@)H\x82þ𭑑Ø\U000a2291煈\x8em%\x8eFw\x90\U000e1846qP\U000a6f00µñóæ\x9cZÑ ²\x90ÞR\x0c\\üÆifÐ\U000e0a95vÆß\U0004e057ªÈ+ý\x9b\x0e\x14§Mh\x9c\x08Xh\x03yL;HæQúÁÚÙ9\U0007db0b\x06\x10\U0007f6eaU \U000107ec\U000bed70\U000cc7ad\'\U00076c98¶;Z[\x97²óª?\U000a2cfc3\U000466c6ûùC\U0004cf334²h\x9f\U0006cb40\x8e\U000981c5\U000fb525¶\x11\U000536ad8\x95\U0010ccdaZ\U00081abc\x95\x0eg-#ú8eò\U0004822b¿Á\U00104928\U000a2f66\x8f\U0003f001𐘜C\n\U00065b63\x16\t¿]\U000afd5e\U0010692b\U0005ffa2ü\U000d4dd0QBÁ\xa0\U000496ac\x1d¿\x06&尨'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004313s
====================================================================================================
2025-09-18 23:56:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': '\U0007d205W?\U000633caA\x7f%\U0009f709G\U000d3af6\x9c\U0009df66<\x0c\U0003d8a2\x9e\U00082bb8`4TC\x1a\x98Û(\x8fùd\x08¾ῢ¯\x8bud«{Î\x1dÚ\U0009967d\U000b41acÐ»\x8cß\U0006eb52Ç\U000908ec\x9ea\x12\U000fd1f6\x87Ý\x13_õ \\\x87e³\x0f\U000dc7a3â¬å,\U000a77d5\x86\U000402ce\x13\x17I\x9a¬Î\U00059573À\U0005b23epz\x95𫋙I\x9bUNõP½(*\x99Ù\xad\U000a7aaal!¤\U00091ded\x9d\x15Hâ\x99\x13àzì\x9d\U00092acd\U0003cc81È\x9e@ÞU¿\x1aã\U0008644fI¼\x8cÉ)\x8b\U0001c6e2\U000ce8c0§Ä\x0c\x1b\U0009ae8b3\U0001c1b0\x08?\U0006ad53°¶\U000c2439\x17_ÝPQã\U0010ab22\U000fdf0fè\U000820ae`\x9a\U000a6e01\U00093dc8ôÞ\'\x8d?\U0005f5ed?AgëꪩÓC\x14à\U00067906\x17ë\x14\x04\U000e80a1\x15\U00046137\U000850e2\x8f렯ÇÏ;𧘱2_¡5Â5\x14\U00082cb3ÿ\U0006b517A\U0007707f-\x87¥\U0009a6d2*\U0009ae50×A.\x8f\U000f7527\U000e7303\x13Q±õ\x86\x819ℯ\U0006a0d7\U00048bb2i+\x11b\U0009d085\U001041dfÂ\U000e6e8bÙ\U00032542ûi¶\U00065b63\U000c61faë\U000a3eb2À`\U000645efOE\U000d1f82u\U000bd0fcI\x94\U000974e1\U000d7a2em\xa0X«òÍ{\x07ø\U0009ab6f¦Kø=V\U000638a3\U000bd1a3Ôa°ê\U0006fdfd𡙖\U000ac162\x06H\x1a\n\x96\U0003171em\x11\x04§9å\U00103fdb\U000fe3a3\x05O\x1d\U00057b67\x97\r\x00\x80I\U000b1965wÔÐz\x902»\U000382fe»\U00052872\x81@\x10Ý$%Æ\x1c×Í\x0b×¾÷¶\x0eå=\U00051359×G7Û¨𠻿\x8b\x8d°\U00050c8biÌg\U000f5407u\x1a\U0006e7b4\U000a3f04ý\x930C\U000bf82cEA£\x8fÚO\x11l\U0003e4c4\U0005779b\x98ãI\x92ÿ\U0010aef5\U000b6930%\U0005d4ad(Y_\U00100445U)Lh3Zd\x02\U000d288aíQ;.ÎÅí^\U000a8bfb\U00031709`G<\U0009d2a7\x0e:Ó\U000fd406Ïj\U000c80c6¼\U0003c427Ü\U00084e8cªÎ\x0eQ£ïÙ³=/ß°\U00056f03¦¶Ü\x0b\r\x9c\x9eÇ\x16r|%S\x98獥YPOV%ëÈ\U00107741\x98X¦wE𫤆\x0f»\r\U0010428bM𣇽\x90\U000c81a2\x9fÞ,%\x83×\x8eå\x19`\U0006c2da^ò\U00036f52Ê\xa0\x84\U000e711b;~öó\U00085ea7\x83/W\U000aee7b¢\x1c\U00076d50³÷\x87\U0003fb52v¾Y\U00065bae>\U00078c13\x07¦\x8c\U000e3cb0\x92\U00054c4b\U000e9b35\U000d51f5óx\x95\x98ë6"\x9a#ä«zÛ\x8f)ç\x03\U000b79e6në±\U000c1f0cQ¬4Å\U000a1c59\U000ba801Ês¸YÔÍýI\x1cñ¸¦Ñ)ã¹}𢜂\t!S§\x9dØÖ,Ò4\U00106071UodçÚ\x8eRn²\x0eY\x9fß(C\n7®\x03\tZ\x8a\x8c?\x11ÚÑ\x158\U00089714#\U00051929ä𰰩¸õ[à÷\x17\x12W\x07\U0007befaHzß\U00053df0ÙÝX\x95þ\x97\U000c829bâúmIÎ½\xa0\U0008df25n\x98ãúUã\U000e8159Q\U000aa854w\x83÷\U00052b00À\xa0\x0f±\x11FWà~Í\x1e»tóªÖD\\oy4áÑ½ARÔ\x15\x1a«¤\uf216Ùq_\x8dóß\U000b3785Ô0\U000a89f5]}\U00081bfa\U00048029\x8e\x8aÔ\U000d2ca9\x18\U0005c987\U000a43b8\U000f9346¯\x15ÖW\x0f\U0001c547õGã)¾\U000afab7\x83Ä\x7f °Æ¶x`D\U001016aaF\U000a48f8(\U00065cd1K¬û\U0009a735¤9\U000f0dce#È1<î\U0010dc4cª\x91\x17\x97O\nE^?~:\U000468cf2\'\x1d+Õ\U000524c5\'\U0008f061\x80ã©\x81%\x90ÌÓñ\tN<\x8fÛC\x9c\U000e3b1f\U0007e577D\x01å\U0008075fwÞÆ\U000b9ebf<\x80qsñ\x10~\x8f·0;\U00091c19\x8a\x96G\U000e80a3\x1d|0wìî\U000a5f80ÜÞ\x8e\U0006fcccT\x8a-\U000571b71¦ÉgTúO\x19\x1dR\x89\r\x84*\x9a\x90ñ\x0cF\x9f»\x07]"Q\x87é$\x91d*\U000136c0\xa0Òñ°b¿;ºÒs\U000893dc\U00032a82[éOF\x10#Üû\x8a&×𥤸\n\U000d5434t\U000819b1\x8f\x10îAÀú¾o\U0009cb7eúÉ\x16\x9c\x12\U000b21dat\x9a𦓏ïb(\x7f\U000d3c19Ï\x9bÈ\U000a3bbeᖤ𨞛êàT¬QÚ\x8d_Z\U000922d6àçºq\x92ÑÖ\U00074676ñ#\U000dcc02\x17øÚJZ\x10\U0005dcee\x15DPËm\x1f¬\x844\U001028bdvøà\x99¦ú?Æ\U0008484e\x10㠨_íè¢\x04𧳺ê}\U0008c5d3\U0002f628\x90§gRg\x0f¡õ\x17\U00105c2aÌ¼\U00057953{¯)H<\x19Hi¶Ï4j\x19\x1b\x12¦\U00090af6\x13\r^Ñ\x90ÓäËฎ\x8cTb\x13î\U0007ad4e|S\U0007c443Ô\U000c61e6\U00055487\U0008629e<\x91\U000a29cf\U0004e84f\U000cc2cd\'\U00109122!´\x01zJ32Â\tç-*>w\U000c174a¥ÿ¶Oµq\x81Æ×\x1eÜ\x08¤\U001047ac,\U0003bd9aèE\U000eb4bevü@\x1e\x9c·VÌ\U0005ef43±<>º\x82¢ù\x1c:\U0009bb82g\x8fgj\U000d0db5ú\x8fÇ8\U000dd402]\\\U00055205:\U0010fc75\x17gN2\U000fa06f\U000f3750å¦Ë\U0010584a\U000903f8b\U000353eb«\U000374f2\x93r¥𩚙\x7fs\U00059d2a°;\U000feb0e\U0003e829\U000feaf2𑅦9\x86µ®\x1f4h}\x9brß\x14L\U0004706aÄL¶þ\U000e7663\x98<\x88\U0008f621N\x8dm\x91¹\'M´Zé\U00068504\x07\x96\x15BãÎN\n\U000b17ec\U000418e80\x00\U000fec30\x9e\x14\x18pÕ\U000e80baþ\U0010dfbd\x16ÍÐlçA¥¬\U000e4e32d?]óÖ7U\x00鿜)\U000aea08¤èó`T*\x00\x80\U0006c84dÝ\U00088934\U0006faae\U00091155\x1a\x12Lø\U000e8bdf-£F\U000dec55ÿ=Úäro䱑sQ\n\xa0\U000f5563ô\U000da808G\x04ûàq!ó\x03햚A𒈞ÑxS,\U0008aa35\x86f\x87¤\U00106960AÔ\x17\x9e\U00095059¸\U00072460\U0009d5fa\x91_Aîញ°\x07\U00063c29ó銊àæd\x19¡p·B\U000f261bÉ\x7f!\U0008b555㞝\x04b\x1bä\U0008209cÏ\x15\x87ª\x19\U00099968iÙì~\x12Î´ä\U000fc6afÉp\x99G\U0004cd67Ì¿ó\U000e5ec2¢\x98T´cd\U000d7b25ò(\x0b<W5𠢋\\^s\x95&\U000bc93cC#\x1e\U0001ee78É\x85\U00046002\x8eõíøÚû\U000ec496\U000f4446\U0004e6283\U000a85f1º\x14ï:\x91\x9bÙIû𫫧©)n\x8f÷\U000cf1dac\x12Ý\U0001007dí\U00094e02°\t\x1a$\x96\x107\U0003dce5\t\x0e\U0006f71a\U0008af19cÞÄ\x19\x8e¬\x83\U00067959¦~\x1c³pÖÚ¡ÀÑñ8\x18ºS\x86´|B:Z\x8b\U0003b545ù\x0c\U000e9109¬\U000a8359Ýá\x83á\x03àµh\U00065e5c\r`Xñ¿U \x08\x93\x97R\x97RkL>\U001035d5r¾6\U0001627dw÷q Rnâ¬ø\x13ÞgC»[«:]\x8d\U00082fc2¯§¤e4\U000bb686Z\x98õ\x01\U00044cd9𨙺âº\U00044030\U00064ef2Öa\x19ÃîÙ\U000ec647íÁ\U0003a0f4¿ªY]Ê\x83ø\U0005e8a9a\x91t;\U00085b4a\U000a19d9\x9f[:}W"ô%\x0f¤èøfWE\x98\x92Óf\U000c2e6bó'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003651s
====================================================================================================
2025-09-18 23:56:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003871s
====================================================================================================
2025-09-18 23:56:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U000421e1ûÖUj\U000b3840Ä\x98\U000a20d1Ó\U0005dcd2\x10H\x84!\x98\U00075c6bÁ\x05\x05\U0007f914[á\U00085693â\U000669bcÇ\U0004c836\x9aÌ¸sz¬QSÇ«\U000f6c38=\U00019eeb𗸦\x06÷íO¹É\U0009e886NTç¯\U000529d6\U00109ddbK#èú¢\x11\x89\U000ce6c7Ä\x05@\U0010fae6\U0003e173h\x05cûVÞÕÏ\U0009ee53\U00107aabÝ\x91\x89\x8aî5÷\táú\r\x1eYdÙð\x0e\x14\'\x0eô\U00014969\x93\U000ad51a\x1clU»b´hG\x95ùO©\U00085e8e\U0008f2e4Ü¥\U000820cd¢\x9e溰\U000b9e64\x17¯l\x8bJ\x1cí*"𧙻\x94Æ&\U00063427d>Q\U000a1d20S\x84P\U0003911a\x86\U000a484c\U00019979\x06U@|\U0007f898Wý\U000160bd\U000128eaú\t]RØG\U000e1271Ç\U00049ba6i«d\U000a5351B}\x9f𡛥𢨼¹\x91<\U000f29e7\x06ÐZ\U00046a19¤á\U0007c3c0v¥Ù\x95\x0bu\U000c847ecÂZ\U00081b0a\U000a6546i,që\U0003fdaf\\\x1e\U0008624bM¨b{\U0006691d\x88釤éz7\U000c8101\x8b\U0009b036(\x0e\U00041b01tY~\U00050e25\U000d387elTÀñÛ\x81/õ\U000731bf\x87\x18ê\U000bdb9f\U000a464cé\U00071e90ôltn?\x8d\x89\x11\xad\xa0§Ý¸T1í7ìO\U000e8f97~\x1fô\x82\'Â\x1e\x02\U0006a623\x84&N\U000c40b9\U0010102f\U000d0929\U00056e89\U000ffccd\U000f3eff©ÁC3ÿ\U0008907a+\U000363fe\U000fdd11¥Ð»wó\U00033758¹,)\U00039f2e\x89£\U00014d03K\x16\x08Í\U000ada8eä\x07¼\x8fñ\x07N§\U0006be18\U000bd30aA\x10Ò?ª@ã\x8f°n\n½\U000becb3Ô24ø\U000953fa\U000dc422ZQï\x05\x0e\U000990f20%\U000a800d·\x8a\xa0,Á\x83\x10Z«\U000d565cAôØ£\U0008feb6(\U0004bff4nö\x99Ó\U000e4058\x94§\U0002eebe«$\U000a263d\x10ÄY\U00080d2eßÊòI\x0cÀ\x05£cE\x9b\x15²\U000d8f2d\x06¿¾\x14¹pä\U000eaf70×èVë\U00080858!\U000f70c4.\x12ó$ÖS-\x18õ$\x7f.\nü^Oy\x11ÈÊù\U000ad585Ó\x93qp5\xadîvØ\U000463fb\U000aa55a\U000e9caf±\x86Yë®\x9c\U000a57c9\x9c\U000a2fda\x95\x9e\x17q𤁻\x82Ý\U00059ab0\U000e4ef2\U00043903/9ì\U000a4047\x0b|2BM\x16e\x95)\U000a75f6wk\U00036e23ïå\U000486d0i¾\x03@1¤{\x9e\U00052ec0\U00013c0d~\U0003a836Î\\\U00099700\U000d4fc3a¹\x13eµ×\x01\u1977#Ê¢B\U00099314ò¬#ïmf\x86\U000b2321띄è%R\U000d233aX\U000e6097ByÕ\U0007271cBÆ𠅼¿@¶æHF𰤄\x14zQn±2\U0004e477\U0009c619ð\x042\x85Të\x0cT\x9d\U00049960\x00±\U000c85af\'¼\x9eD~ã\rÜ\U000cc7af\U00089f6bÀ\x9d1\U000d53f64\U0005f414ñvs§öøPzl\U0006c52e\x06\x19L\x8cD\'D\x8bî·Áß\x17\x0f\r·À\U000ff4eb\U000d4d8cË¹L\x97\U000d6cbdxlÇÞ²!\U0006f37a\U000c6ab3#r±%Õ\x93\U000492dd\x19\U00075f58îß \U000a127cØ\U000fcb90N,È\x93°÷\U000f7df4\U0003c450M\U000dba15þ;+\U0001e5d8º\x9fvõ®´ó_8\x06j_\x96\x8a\U000c2d1fÝM\U0008ab0aà\x9eÈ\U000e0e1e\x92[µ\x0cn\x98eç\x81L\U000bbcea\x18¨\xa0\x85a\x85\U000d4b0e\x9f\U000d5693\ue7a9\x1a\U000dd47a\U000bb4c3峺\x08\U000eb7bd\U000feadcÐ𭼈~ \U000537baw\x16Kå\x0bý\x8dk\x86À²\x82Ê\U000b1d2d\x89\x01h\x83\x03;\U000cf89fòÃ»\'𮤱t¤â\x80¿\U00086134\x8dõÒ𢜏\x04\U000361e9\x81\U0003d77aî\x03\U0001ada8Â^ð\x92í\x94ôÔ«¹\x85\U0004afb6;à\x8c\x11êÆ2Í\x16#\U000ff420(ûJÅ+Õ\x92\U0005160c\U000fa6eezÞqä@(£.\x07=\U00045cb7ðÎ\\\x15\x1bë&\x1e\x9a}\U0001a88f\U000651f5\x8f\x10\x91ó\U00086d69·@Å\x07y\x85E\x87)ó\U000b180f;e\x9eA\U000bd90fg\x9f\x10\x9f\U000df744[\x8b\uf7cbw\U0008bf7bL窿kx¢\U0010aa98\U000eada2\U000762b5¨\x82g\x07TÌ\U0004b7f8ë\x82JQ\x93\n\U00107a8b.º\x1c¦\x8dôò«\U0010f83eÒWÿ\x96×\x04^>\U00108c93\x98𥒐ÈÇ\x0e\U0010da12h\U00041047\n\\&¿Ä\tt\U00094c13\U0007c0aa\U00080957ýþ\x1b\U000694ed\r𖣃\x04¥\U000493b6\x95W\x9fTÿ¥`\U000fcf46拍\U0006c3c9+\U00049a14\x95wÿ]\U000cef9f\ue2a9\x96\x10¾¦\x82kög\U000eda39\x97\U0003e5bd\U00085ac9`\x9cÕ\x92ÆU.M\x0b\x7fU\U000df967ûL E5\U00107d3a\x94¼𝚢;R\U00100b52ÌDK\U0006b9f0¡§W\x12\x14\U001072d1\x95\x02óÙ\U0003a511ø\U00042441©\U000bd362uÈ\U0009a72cuÅ{óD\U00073fbf^\\ñ\x11\U00068f7e\x04\\\x11\x98Ö\'ùÉ|c\U00035466òN\x05\U0005f3bb\U0010c8f0\x8c\x1b=vr¶\U000408b5\U000411e6gb\x0c\x7fÐ\U0010f2e2÷5¬\x9a7f\x0b\x86\U000481ef\x18V\U000c5b80\U0006a9e3àq\U000eef69\U000cb73béÜÕ\U00100dca5¡\teFm|\U000f24da(À\U0001becfY?9¯LíK\x17\x9b\x1d\x11\U000e68f2\x9fᵡ\x86\U000c5d00\x1e?}#\xa0¿\U000f8dd3\x02\x9939,\U000ba8d8÷´Â\U0007aafc\x9b\x90<+Å)\U000ba163FÞí\x0cÓÌO¢/Þ\x9c\U00098755z\U000ac6feîg\x17\U00015614Ë¬\x90¢\U0007c975\U000e5eff\U00094c95¥Íá\U000e2f6d\x87䔍\U000f9b85e*\U0007deccHIÙ\x8d\x13\x13\U00080a73\U000fe6a9b\U000ca408\n\U0010f8b7\x06FS\x95ß/²\U000cf16eÓê\U000fd172öuåÌ8\U0006916c,ïÁæ2\U00104392\x06\x19O\x17à\x80\U000aa1f2ÍÆufÁ¬𗡝~u\x8c\U000a65cf\x81\U000f03d3÷\n\x81»\U0006aa7b\U00072bafB?ã\x1b¾½w\U000dc0b8\U0009792c«WW\U00102a23c\U000acfd8\x07M:NîjMÝ)\x99«ý7\x9e¶²\U000ee1c5þ®\U000b1686\xa0p造×Tª\x9cûâ\x04*F®\x7fI6ü\x8az\x9fº\U0007cd61Û)Ø\U0010bd90\U0006bccfõ\U000ae8a9Ã\x16*\x98é¶\x96ö\x1c\U0001ca3b°[\x95î\U00098c02\U00034bc9!\U000e4e03¹9d\U000d2ef8𰊩À\U000e062bI\x08\U000965b9\U000cb490\x1f2<N7<ûâ¡p°Ê\U000ff102\x84Ç¯6>Ãí\x91m\x8f=\U000934cc𨶘\U000afb29\U000688b4Àblü¥Q\U000a5347\x96;\U000ba312G¬\U000117c9\x14ëôÑ0F\x8f´Ê*_üT\U00048176\U000b6b30\x0b\x8a[û\U00078741Ù𪱭\x90¢T>=¢1\xad\U000d7725í´\x91\x9e7-\xad\x1e\x12B\U0007b562d\x8fmÀ\x7f[w0L 嵎Ièí¨Ä𦤓\r×<\U00043da0Ï\U00093a91\x99öLsøì0\U0007a694\U000b18e2\x0e¹\U000e0c502é\U00012adeXj?ÐM\U000a0a6f\U0009d3e6[\x18XFrÈª´%K)\x9c\x1d0\x07\x878g\x11ðpyOH\U0010b687Yñó×R\x92Á¡ñ\x9dô\U00096b49r_\U0005d714ßVöØ\U000e8978\x18-\U000d8639\x1afæ\U000da4f1\U000dc596»B\U0005af12z¸ÿ\U000beb2ftÍz\x0c\x97üÙC»É\x04W&3\U0006b49cÒ½\U000b5db9GïW¬7\x92\U000e3b1d\U0009c4f2E\U00075bf4xL\x82"\U0008e2fc\n;\x1a\x087\U0008887d\U00054e3ah:\r\U0007d4c2\U0008b642·\x85ÎN[Ë\U00014153î唎b\x0c\x04Åù𣰷q\U000e1cff0\x88£\U0006ff11Æ\x7fpâ\n\U0007c5d2EîØ\x12\x84\U00078686\x1a\x8dx\x94+5ô´¦§\U000e8d50\x89\x17ª\x1b\U000ef10c/\x8eÞüxDPÊ\x99', 'password': -2}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -2, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004134s
====================================================================================================
2025-09-18 23:56:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 22571, 'password': -9}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 22571, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -9, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004159s
====================================================================================================
2025-09-18 23:56:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00406s
====================================================================================================
2025-09-18 23:56:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004033s
====================================================================================================
2025-09-18 23:56:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003539s
====================================================================================================
2025-09-18 23:56:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': ['ä\x97¼\x8d困1w\U00096284¬\x00o', '\x12ñï\x88L\U000c5890\U0001ecd1¥', '\x1a$']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['ä\x97¼\x8d困1w\U00096284¬\x00o', '\x12ñï\x88L\U000c5890\U0001ecd1¥', '\x1a$'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003927s
====================================================================================================
2025-09-18 23:56:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x02\x8c¡t=±.\xa0\U000ed6403ái6\x86n\U0004d8aa[Ím\U000558fe\x9c\x9bÄßÁ\x05ËJ\xadU\x86,\x11Z\U00014819\x06', 'û×é', '\x84\x92Ìe', '\x97-ë>Y', '\U0010a847ß|d'], 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x02\x8c¡t=±.\xa0\U000ed6403ái6\x86n\U0004d8aa[Ím\U000558fe\x9c\x9bÄßÁ\x05ËJ\xadU\x86,\x11Z\U00014819\x06', 'û×é', '\x84\x92Ìe', '\x97-ë>Y', '\U0010a847ß|d'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003564s
====================================================================================================
2025-09-18 23:56:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['íÇ솃\x07Û', '', 'v𡕫\U00019a44\U000b2bf6¯\x0e+Æ\U000cdc60ìM', 'é\x85', '\xa0\x9b', 'È\U0003e598\U00100fe8Ï', '\x80 ', 'y\U000fe46d\U000e1e84\U0001bf97', 'n', '\U0004fba4ýg\x0fBt\U000ca598', 'h\x0b', '9j\x83\U0001bbf4u«Ö\x0eòÂ\x9a\U000dc067A\U0009b8a9\x92öX\U000bda3dS\U00093a0d\U000e61af¦2gbgÅQ\x1bì\\Ü\x1a', 'ûo:ò\x0e+¨¥Ð;\x90ç÷;\U0001af8aí«', "'\x8e:ó\U0003688b\U000733d1粥\x05¹\x9c", '\U0003fdd8', '\x8a\x08\U0008a1d1\x10\x13\x10¶¥', '\x1f\U000e9965', '\x82\U000cea1aIa«{\x0c³¤\x18', '', '\x08\U00097d6c±\x07\U000b71a5Ü\x1b', '¨H𡎅\x90', '\U00046984}/\U000153edÑ.\x8a!\x91\x1f\x12', '\U0010faa2\x1bÑ$a"', '\U000c253bÈÕ\x06\U000ca255\U000c0627', 'Çcª\x81', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['íÇ솃\x07Û', '', 'v𡕫\U00019a44\U000b2bf6¯\x0e+Æ\U000cdc60ìM', 'é\x85', '\xa0\x9b', 'È\U0003e598\U00100fe8Ï', '\x80 ', 'y\U000fe46d\U000e1e84\U0001bf97', 'n', '\U0004fba4ýg\x0fBt\U000ca598', 'h\x0b', '9j\x83\U0001bbf4u«Ö\x0eòÂ\x9a\U000dc067A\U0009b8a9\x92öX\U000bda3dS\U00093a0d\U000e61af¦2gbgÅQ\x1bì\\Ü\x1a', 'ûo:ò\x0e+¨¥Ð;\x90ç÷;\U0001af8aí«', "'\x8e:ó\U0003688b\U000733d1粥\x05¹\x9c", '\U0003fdd8', '\x8a\x08\U0008a1d1\x10\x13\x10¶¥', '\x1f\U000e9965', '\x82\U000cea1aIa«{\x0c³¤\x18', '', '\x08\U00097d6c±\x07\U000b71a5Ü\x1b', '¨H𡎅\x90', '\U00046984}/\U000153edÑ.\x8a!\x91\x1f\x12', '\U0010faa2\x1bÑ$a"', '\U000c253bÈÕ\x06\U000ca255\U000c0627', 'Çcª\x81', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003941s
====================================================================================================
2025-09-18 23:56:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -2061}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -2061, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -2061}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004071s
====================================================================================================
2025-09-18 23:56:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003918s
====================================================================================================
2025-09-18 23:56:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': '\x001\U000375f1\U000904f5´\x14ÏYö\U00071227°/ß\x9c\\\n\U000e8c52T\x7føðd+f5?Á\x1e{\x9fü&÷.gºó\rô𒂢tw\U00093dbc~y\x88\U000a2abcç\U0007895d\x04𠷜\x9fr\U00085c96ºù𫤅\U001059f5ï\U000e8155ÛËÌ\U00036826Û5ß@\U00072268ôM\x04\U000434ccÃ\x17\U00040101î\U0003987d\x83ÞMt±ñX2\x93uØ\U000e1a1eÚ[ t\\Íd\x18û\'Í9þ\U000a5677\U000949ca\x08\x03P^ß\x86Ùs\U000ef318«\U000f296eBU\'U0Á\U00097989ã/\U00042641\U0007888fª\x1e\'D㫒\U00045503Ò𰼪W\x04eI;\U000def98h;\xa0ØZ\U0006e187[F\U0008b11f\x9eÚ\x91Üø\U0002f5b7(n\U000317839\U0010560ewÆö{ûg\x85\x12Ù¨ìÝcÚÑ\U000e71c4\x1f\x8c¹\U00103cc0f\U000ca3ffeG\U000ee569\U0005e425¾\nHÍl¡\xadEn\U00015a0dz\x005\x81\x06ð\n\x1c\x91á½dõ\U0006b311¼\U0007692dVí\U000cdf33ús\U000576ddÏ»\x00É\U000a5344ã\U00104e79¥xÏ\nÿ\U0006bdc6lê\U000482e1\x98W\x8cãç\x12\\,Vc§è~zI\U000c1035÷|\U000d1fdfÑ\x03iÑ}\U00043e44å\x92Ý\x01hÉ\U000e7a79\U00092620à©àà\x9býjê\x15\U000dbe50\x9brð5\x18ªn\U000b7897B\U0007bc47\U0003f61a\U000ca820\uefe6\x9e<\x1dR\U00040252b\U000374f6íg\U0005848f_dI\U00068f4aä·÷\x04R\x87ÁêÅ\x92\x8dòV\U00074106¶¨\x96Õ1Dã%¿ᑫB/Ò\x1an\x80\U000fe517x\x1diÓ(îMÀ¥*\U000e541e\U000741fe<\x08ÕU솕\x10\x90û"B\U0010c67d\x91Û@\x8d¼XÌ\U000d9533o#v\x0bD»\x10\U000d2ba3éù𦜀\'\U000e1283×\U00072096\x83\U0009569d\U0008e9d9cÃ«\U00060f98\x14iAÉÐäW>\x90\x97hRöz^\U000fe493\x84D\x7f\U0007cf2c\U00068c604\U000dc960\U0008d878»\U0010ee84ìtâ\x91\U00107244^Ã²ó+\x1f=»\x7f做\x96-zÒ\U000f433d谆®º\U0006754a¶\x1ceð×8»\x0eÅ¯\x16XÚÛæ¶.Án\x9c\xa0\U000341b49K2L\x12\x04Å\x97ø\U000576f2òÄ3#{\U000f411e\U0003f3c2ý×ö\U000acb0a\xadô¾\x90kDÜm\x93\U0006d04aG\U0004500av\x16\x85\x04õºf\U0006f384\U000f578f\x93\U000cbc53\x8e]È\x8b\U0009d830¯n4\U00071588ù{$ª\U00089d2c µ2\x06\x99𮉺\U000cdcc5õ倥î\x17n\x02\x8cÕµ\x85Ìöé!Ò\x1e\x89Q\x13\U000b2a4dö\U0003cd1egO\U00081cf1\U00042fe2V𫒋õ\x0f\x01\U00042c77\U000b409fkÝ÷½\U00106af3\x06v\x80¿\U00077540a \x91\U0007ab45懱]🏰s\x12\U00052a59\U000d1062\x84¢¨\x82\U0010ad19\x04¤<𩝣\x13×\x85\x02É\U0009d6d9m\U0001edfe%§;þ,p\nsB\x8f𩫚¾Pb\U00084d2a徨ì\U0004048b]ú\U0004b579ø\x8a¤ø©g\U0005f0a6\x93^\x99\U00084a03\x95>7\U0003dd59BW\U00049f38\U00053d4b\x82\U00107707¾q¡¾$Mv\U0006170dªg8\xa0ñ\x0e\nf\x0f \U000b214b\U000a4321 Ó\U000fd934\x1dß\x1c×\U00060a21k\U0004629b¥¿Jí¿\U00068737\x15\x7fÈ\x90]\U00073905H¢\U000bea95`\x1däØ+nù8;𤗺Ë\x18\x0f\U0009c6c7è·𪣈D®æC?¦\U000f06e1ó\U0005c8aeHì\x8c\x13U\U0003b003à."¿ëq\U00012831\r\x9fº\x7f𗥝\x8alL\x0f\U00057502û/ùm\U000745af\x08\U000eb7c1UÃã\x87deï§\x7f\r\x8fn\x9e\nr\U0005add3RÔ\U00012746\U000316ac邏\x8eó\x04\x97\U000d271aN\U000f1f01\U00092229\x97\U0007e580\x15\x1f\x0c\x7f\U00050cbc\x19\U0004438eH\U0006d021è£ß\U00093626\x00âozd\x1b\x84𦘊çÐ\x86»\U0004572b¯d\x1bÇ6°*\x80\x8b\x0c\x18\U00081ba3\U000a6a04è@\U000702d0É\U000efcd0þ\x9d\n\rG¾·û\x0f𠱥0oY\x8f\U00053806÷\x89\x8bPiâ½«\x18\U0002f1a6Ê\x8elY\U000ecd87¿WÀ\x0b3\U0010b7d0"p\x84\U0008be9f\x9ch¾ü¸¤\U00051393é\U0004342f¬\x01\x83gþ)¨Ò\x86Ð \U000d9f81E®©ë&d&¦q狦¨𦫳f\U000935d6w\x99\U000ea7b4\x08g\U00085281\x0fe\x12\U00084149á\U000f4f1e|{-ã\x1d#⩉ð¦k\xa0\x1fv«𰖘^+\U000e7706\U0004adae¡O\x86¯\nh)\U0003e094\x0bÕbè\x9fx\x04\U000ff5e2\x91v\x17jL\x93p\U00056222Eï\ued66\U000f29e3éi\U0004f16dZ\x8cÞ\x1a\x11\x96UW\x84ßßIl\x1f\x10P\x81\x9c\x1d/4½v¶ß|\x92I\x9faî\x8d68\U000f8fa8~\U000b4845ÿ\U000fcc91ÖPÓ\U0007eabb\x86\r#U\x1eã[4Èü§ÒÙ·Éq@\U000afcae¶\x1f\U00046cf4ªè«\x8c\U000eca0fð𨟄¾\x8cU\U000375944-êæê\U000f2b6e\x05¼È\n.Þ\x9c\x1b¦ÍµR{¸|\U000730ab\'{O\x0f\x81Í\U00056283\x8d\x89IÅ3Ð\U0007aefb>\U000ecb12\x8cX\x89ã%1s÷𮒘\x9d[\x82\x8c\U000cc9c1\U00082f03🌽)\x0fd𩾕\U0008033b\x91|ºÝ\x82\x12^;|\x1f\U0005e4c2\x0b;æ±\x15G\U00052b4bP9\U000733e6X1ÙYBN1åd\x1fw\x14\rÕç\U000412e6Ìð\U000f7919\n\x11øÖk\x89\x90sr2\x0b3#¢°b\x19\x82[ðdÊ\x1ae\x0cèâ\U00074865¦\x0cÈ¦\U000aafc2É&\x84¸\U0009a411\x9c¨\x8e\x91i\x12\x1dúú¦\U000fcf61\U0009d917Æ\U0009050c\x16\U000412ca%¢\x1f\U000eadfa\x03á\U000b541d\x1eUâG>÷\x0bn\U000bfd80ÞÝX\x10\U000f168e\x16ò\x9e\U000bfa10\x89\x0fj\x89쁠\U000e18f1𧬘l🃩¤0𑐢#\x05\U000c3030\x92.\x88\x8f(\x0cÖB÷*\U000153b0Á\U0004ee3d7\U0008dfa2\U0006c760öoð\x91ö\x81R/\r\U00075dd5\x92\x1b\U0010f5afj³\U000923493J𤛹ÀE\tñ\x8a\x19\U000581ca\x85Ç\x04ÊN\x90"\U0006b25e\x9a㲒Ûß\U00032a21d\x91\x14\x86)\x85\x17w\x99Ý\x97\rÕ\x08~\x91Â»¢3a\U000da5994\U000d25cc¥×l¾\U00036ff8¿¾¤ãyp\U00047814<Ë\x18d\x06\U000cf0a6]!\x8b&§b\x12\U00104da3荏\x816Ï\'½3\x90¢uµ\U000eaace8\'!Ú\U000f5bdfÿÎQ\x10\x7fm\U00102b8aDÆâ\U0001cf77»³§:È\x91\x934ýÀ7\U000edc799\U000a48e93\U00046869t\U000d460fµ;A°\x7f\x99\x92Í\U000da085\x85Lt\U000c26bb\U000ddd43Þ¡\U000892eb\x13\U00036a10áÉ\U00052a86\U00100ea7Øå\x9eZ"£BÈ\U0008fe87\x82\x9c\U00053a3a$\x96ÌF\x0e»\\s\x94\U000fc50eÆ/\x17¸Â\x908ñ\u0e74T\U000c3aa4¿Ó?ùöÁU\x1bD¾\x93\x08\U0007f070T\U000d6cf4â\\\x99\x07¥꘡¤\U00092352y\x14ßÔïoñCN\x18Ø¤\U00086e12*\x1eáâ\U000957e0(%\U000aaa710¸§\U000539df\U000338ceñ\x1dZo\U000fe5a7âãË½É\x0e\x05gL\x8c9×4\x98£º¬𗻩Ý|ê{\x05ê\x90`ÿ¬*\U0001db83£F!^T\x0c\x0f\x9cúd笘{'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003941s
====================================================================================================
2025-09-18 23:56:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'I\U000539e4\U00033ab2\x98\x03\x8e[}ï\U00055a95\x05\x04Ï¯\U0008d8bf\U0004282fkm¨\x9f\U00091c7ed2)\U0007bf15Ë\U0006d4b0Õ\x06\U0009560bqK\U00043dfe¦á~\x9d\x97«\U000c0f24\x9c𐴖¿ß»¸èPÿetà\U000a936e\U000ad4b2\x9f±\U00107bf3T\x1f·ë\U0010b1fa\x8c\U000f0713æ\x9d$\x9b+\x05\nä¯\U000e53ad\x01\U00034d94%\U0001ff7e\U0006e91c\x17(ý2ß§4\x83èìÏ¥«¡"¿Á\x9dql%U(³°Í\U000ca002~!\'ß\U000ce98fQÃÁði\x95\U000cff94\x85\x14#\U000b6049\U0004107c\U000f474bå°Ò\U0005c2e0RÄ´\U000b0101\x8cÁ\n\U000e2d73\U0008f195\x8bÃ\x8c&\x088\x89Ê\U00088bdbc\U0004f141Q袡\U0005abb1\U000d3a86Öf\x87\xadâf\U0004880fú\x17\x9aºázä\x8d\x1d\x18ô\U00037849u\x92\x81WÜ\U00051961ø\U0007790cd~Å5\x02\x9dæ𡬠Î²éD\x86挧\x7fhÇ𒃅Ð\U00046a1fA\x1cÆy\x08jÐ±\x8b\x02\x827\U00041494?ò\x11\x10\x0bª\U0007bff17ñ헿\x1dÓjõÔo\x95O\x8fÅ\U000ade11²\U00033977\x08\x1alßæKV\\¶\x9d*`냶ì\xa0Ì*+\n\x8f\x90ÕÔ\x93®¦)½\U00049b44\x91ìö|\U000b0d40=u¼\U000ed660¬÷\U0006095cI©\x08\U000e8fecF\U00040612\x08\x01îHhèê¯òY?±~D$\U00054ce9º\x93\x93\U00067fcf\x9cV©V\x96¹cÑÎ\x1b\x86~-7Ì9©6Ñ\x95\U00011bc3y\x8eô\x9cîÑ]Æ\x7fÛ𩪔Dùí\U000c4f14\x19î Y¸Æ±栛h\U00014a91¦×P¨{\U000b4c8fLÕ㗍¶w\U0005ef60Á\x08Ô¢\U000fe585\x9c\x81Û\x8f^}\x96\x15¿Þ¹\x98\U000effeeb\U00099232m\U00058255\U0010a817u·\n\x99à\U000fb64b&d"úO\x1e\U0005ac14\U000f1fa7\U0004fc5f\U0008c4ef\x8böæµ\U000be193\x92ôµÒÇÐFF,\x86\U000c84b5®P\x8d\ue399^¨\U000899d30\x19¢]\U00053718È\U00067df1\x92\x872\x87\U00012d8fn\U000886a4´\x9a\x19«ýHÀºD!1\U000be8cc1\U000e6d94\x07\U000780aa@\x85¸\x0c\nÚ\x8f\U0005cebc\U000c2c43\U000cdb6c¤9¯&sû\U000165bcàÒ\U000a569aÔ~\U000b1049\x8c_1kí\x91¡7\U000a9514\U00093bc4\x1e¶Õù𥹠\\cË\x98y\x02\x00§\x98W\U000d9af3i\U000bcbf0SG\x9bº\x17aÀ³«\x08ýð\U0006717b\x07fÇ%Î(\x19\x9b\U000cd6e2<\U00036b28\U0008179aX\U000e1d5eoq\x84÷\x0e!G\U000556ea¦WDh\x9b$\U00033c63\U000a87e2}½tçü°\U000e1b2dÛm¨\x19D\x0c\x14\x0eSò~e4ñ\U0003ec27G°XÚá\x9d\U000ee649\x05*AÈ\uf88eÛ-\x9a\x17]\U00080dc70\x89´\U0007678bQÚXÿy\U0003921cÐ1]Èé°®¯\x8eê\x83¢\U000cdb57¾\x98\x87g\U0001c03f\x08wê\x1b\x17\U00083641\U00102235øiüÊôa\U000779c92\x84\x0fTDïþ\U0005bc96æ©\U0005aedf\x83\x8aòÕ}C\U000ffcd27o\x03XÒ\x11¯P\x8b%P𬝠Bã\U00055e0b_Ë/þaZ«\x05\x85\x94ä$\x83\x91è\U001064a5\U0008c1fe\x14\U000c1761\U0003e5b9\U000910cc\U0008a89e\x18𰥖\x86à?3\U00087392\x88\x8e\U00087de8\U000522beM9\U000b7e6f\U0003c272¯¿oyÔt7\U000d0aa8\x857 ÷\x14#ç\U000f7399ùl©hycY\U00074703\x83«ÏSf[\U000383c4\x06\x04\x91\x8f\x0bèë\x15\x08¼Óï3>Ó\x03í÷\r¬Ý_\x1e\U00061b48]Kè_\xad\x84é1ôm± \U000bb7ef\U00085469î𩶩tyò\U00086bed÷1¬\x18Ñ2\U000a1b59ÎY\U00042267\U000679d3T\x81â2X9ꞎ\x995\x0e¨¢¯e#Ç\x17þ\U00042c62DjË\U000e57b0ßõÆ¶ë½\U000e7100êÁº6Êa\x85î5$\x04\U0006090d´J\x02\U0009d3fa#Ê\x19ð\xa0\x94\x85lo{\U000c0fa7u\U0010d004\U0008fcda\U000760d0\U000ad553)È\x18\x84®\tÿv\U0009e31dH\U000ad37d\U0005f4e2\U000b559f¥\x8c\U00084e7ex8\x19Û\n\x89É8h拢s\x1c01é\x8cØ\U00037300\x93ïÇ\x92\U000c60f6\x83q\x9a`Ô\x1d\U0005b238b\x0e\x17\n\U0001265aOC\U00090deb¼\U0005d69b\x16îü9\U000a8b5cO\U0006da7dÿËÚ{\x11Ðàh\x9e&]×\x1c\U000d2dbe\U0006dfc9\x91-À\U00067c1aý2\x1f\U000c7c62îD\x05!\U000ba64cW\x8c\x0b\U0001ed76\x89ü\U0006e06d\U000f8c57;¶}£\x9b\x12pÚúÁ}\U00074f68_/\x9aVä/\x05¬¬\U000fd046±·z\U000ff7c8\\+\x0b£ÂµA°\x9d<Id¦\x8dd\x1a\U0006017ao\x19è\x1e\x9fÚ,à\x9c\x11\U00063b2f\x15Ñ\x00þ\U0008a6e1L{Pgr\x83v\x90¨Þj¿"\U0007731b6Ûø\x19ÿ±rM\x8e\U000c560fÅ\U000faa6eÀ\U001051ff\x13\x17Ì!\U00065328\U000cfa60\x93\x11Øk\x95Ø\\\x9eqäË\x0fBni\U000cf43e\U0005ae57\x8c\U000d55d8Þ5ÿ\x14^O\x87³\xa0\x82\U000493de\x8eË\\\x9d7b\x96«\x87"g\x94\U0005c807x\x7f\x951Ïdöÿ^溓~6î\x1d\x06»s\U0004385fਲ;\U000b3ffay\xad', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00448s
====================================================================================================
2025-09-18 23:56:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 13038, 'password': ['9N<*³Ò', '0', '', '\x16\U0003f40aÏ÷猄\U000c1c9a<çÄꇠ\x81l', 'U\\T\x89\U000f1b2c;í,\x17Ç\x12𮨞\x98\U000e5f0f»"\x11', '§', "e4åò'\x04ꌦ\U00059c59\U000e8fc0\U000f4f30\U0010891f\x99~\x13®n", '\x17Fx\x18U', '\U000388e3h:\x9c', '\U0005a504\U00054237I\U0006a815', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 13038, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['9N<*³Ò', '0', '', '\x16\U0003f40aÏ÷猄\U000c1c9a<çÄꇠ\x81l', 'U\\T\x89\U000f1b2c;í,\x17Ç\x12𮨞\x98\U000e5f0f»"\x11', '§', "e4åò'\x04ꌦ\U00059c59\U000e8fc0\U000f4f30\U0010891f\x99~\x13®n", '\x17Fx\x18U', '\U000388e3h:\x9c', '\U0005a504\U00054237I\U0006a815', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003607s
====================================================================================================
2025-09-18 23:56:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003944s
====================================================================================================
2025-09-18 23:56:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001625s
====================================================================================================
2025-09-18 23:56:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001582s
====================================================================================================
2025-09-18 23:56:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'valid_test_user', 'password': 'valid_test_password'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001614s
====================================================================================================
2025-09-19 00:00:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MjQxODUwfQ.9fB1EtPUQbBfpKSaoBqiJdZVseijxRjRNNEFDucPNDM', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.002721s
====================================================================================================
2025-09-19 00:00:50 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  },
  "dictionary_item_removed": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:00:50 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:00:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002061s
====================================================================================================
2025-09-19 00:00:50 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:00:50 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:00:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.006361s
====================================================================================================
2025-09-19 00:00:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.0037s
====================================================================================================
2025-09-19 00:00:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003626s
====================================================================================================
2025-09-19 00:00:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003817s
====================================================================================================
2025-09-19 00:00:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '../../etc/passwd'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003859s
====================================================================================================
2025-09-19 00:00:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': -278}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -278, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003748s
====================================================================================================
2025-09-19 00:00:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00353s
====================================================================================================
2025-09-19 00:00:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'tÞ4\U0008876c¶c\x1aoS\U0005f665뢷q-\U001003e0\x18c\U000d6edf´GÈ\x17\r¢o\xa0\x15_\x13\U000c06c9ÑyÆî\x7f\U000138a6MÎ\x07\x1b\\¶\x02¸z¼Ë\\\x98\x81\U000eb657\x1f|f:\U0004375cveWd&g\x07³\U0010bd7a\U000b0e92·ßÃ\U00095cb4©yÛ\U00080d602ä¥9a\U000945df\x0c\x12>B\U0001e04c;\x8czr\x93\U0004fb8d\x01D;Tî6§÷ðvêIã\x84+\x84;·ç\U000c48ccUá0ùÄ>\t}ä;\U000cdd44V×¤\x98\x16|\x9f𬯑/¥;𮫂ó0\x8f\x93ló&\U0001386dÎd\x99Â\U0007894b¥N\x9f¤çÊ𤗴0_üø\U000f7cddVW\n7?ú\x0b\x9aÍÚ\U0006106c¡uof7ÞÓ\x04\x9b\U00014e0e\xa05!ä\U000c4544ùÅ\x95\x90¹Rë\U000b05b7\x90yI\x90Q\x16"\U000ab099ª\U00044abb~úN¤\x86óM>\U00097eaf\x98ÛJ\x87\x99\x1côþá3\x19\U000595afÇ A\U00035383\x9dÄÏ¾\x7f^\x9d\x04Ç\U0007e499\U000f3c2a\U000f3ea9\x1eäÜ\U000c8fb3\n_\x053õ4Vo\x07\\\x0cóx\x891`æH\x1bh7\x88¦¼}·èÇÞ£\x96ÿ\U000ef608û\U00013684j\U000d79fdVMÎ÷\x8c\U000b82a8Z\x91\x9b¨\x98)\U000aab3fÑØnp\\\x19è\U000eccf8\U00055a5a\U000c8e74\x95_3B.\x1b\x14æ,z\x07\U000e765c?H\U000c5919¿*Ð\U000c760c𧔳_\x9aÃ>Ô\x97ùp\U000c9114<Hf£\x9fá¤\x991p\U0004f222ïAN\U00057e7c`l+NPÊ\U000e41d1\\\x9c\U000f9099V\x01\U0010fce4¸8¸\x1d\U000ec5a2\U0010e35f\U0002fde9z©\x02\U00014f1a\U000b85f3\U00051e7b\U0008aee1ò¬*\U00071d71\x03L\x85,r\U00012ecd\x0b\xa0\U0009ee44~\U000c9d4c\xad+ú-Ëê\U0006f7ca\U000f9d0f\x19¤\xa0\U000b89ed£\\<\x13\U000dddbdüÈ\x9dÄW;\U000d327a#\x88W|Ù\U0010fd50\x80\U000d12f7´ù\U00077683\n\x15\U0007da0f\x9c濖ûGp5X\x14\U000d6953𩻥ª°\U0008b405¤uÛ\x95º¡¯\x87·\x93oIÊõ\U000da096Óf\U00061f04\U0006fb96y沏\r\x05\U00098570\x83IÜ\U00046f821\U00041f37e\x1b\U000c53bc\U0004cfe4iG[ùè𭈙ú0FÍYB©ÏÊ\U0003343eþ#É¡\x9cÐ\x81ßQøÿ\U000aa952\x97|\x1aþ𦾭ê\U000f5865×\x05:\x81ûyWä\x15¡Þ𥸗Ï¥\U0008a0cd\x1f.¹ðì©ü\U0007fd93ô{¦ó\x98\t\x0c¼Ï½\U000b0deb×Ì\U000b0093:\U00033227\U0005cc03Ü\U0005f8abÑþêÝ´w\x0b6\x85\\\x97\U000773393!\x90I\U00018f5fÇj\x80𢏴ÀS²\x92Ôþ¦\U0003cb17r\U000cd879\U000fea43𗧋\x069\x0b\x8d ñ\x9d8ÆxOCA(~\U0004147673Fù\x18.¸\U0009c44dÊ\r 6\x017&씮¡\x1ehêâ\U0009069a¥¥/\x88\x8e¿þÈ\x0f/£\x0eÅGVÏ\x16GÑ\U00058091\U000aee66Îä\U000b6ebaþ\\\x81ÈsÕ\U000364d51ì¹ôe\x0c&´_ÎF\x9f!/îÔáÅ\x19o\U000a5956\x85t\x81\U000b61f1H\U000dc89eÌ¬\U00062cca\U0007f15cÄü½\x8cÌ=ø\U0007d889\U00095809ÍÿÁxØ¬Æ^\x1a\U0004c132]\U00092557\x85lï\x17\n\x8c¦\x8c\U00031c7d淼\x0f\U0006d024ÕãÖ®ÍÎt\x91À-×X\x0f\ua87abÀ\U0005fadcuÆí)\x85\x13ô\U0008e2b1 \U000e2600º\x08#\x04Úú\x08/\x93g\U000aaf54Õ\U000ff648ÓF\U0001b6fa\']£\x19\U00045ea8\x7fê\x9dg\xa0$±Da\U000a063aª*Åd\x03\U0007ae4cd\x9c\U0010f96fÇ\x9e¬ñE\x04\U000c439e\x12ý\U0008fa89\U00048843æMRÔÏs(C\x0e\xad\x99d[\x8f\r´2\x14Êà\U0001de88¾\t\U000f405eÎ±\x8c\U00016cfdûQ"³o\x01Ç\x93Ü\x98M´\U000333e4\U000fbe14\t\U001054bb\x9eY\U000b4b7d?Yµ\U000f50a2\x85\x8c\x02\U000c4cca\\\x9e{憍¸í\x16\U0009bede\x04ZÏç¥𠗳\U000df287\U00082796\U0008cd96bN\x14Õ\U000c2270\x91\x8a{-𐼿Ç|+\U000fe983àjÁ^É\U000a529a|0\U00048853Áõ\x15à\U0003d38e[\x82𢥺\x95ç§\U00079cc9\x00Î«\x16\x07I\x00\U0010f0c2\xa0zü!)æ\U00082280¤në\U000e976bÄg1\x8b\U000ba10eâp\x1f\U0004ee51;\U00092705\x17\x05J\uf87cQ_\x8cv=\U000c64d8\x95\x90ð\U000dd7f7\x8c\U00014162\U000f2ece\x84uAò\xa0\U0010be24\x15\x84㘧FP\U0009fd34ö𪤈\x15\x192Ý\x08\U00052f80¨Ï\U00069367\U00093b7bbÙ\U00037f32ÆO\x9eßnß!E¹¸\ue988\x17\x14Ï\'\x8fõ\U000fd16c3\U000bd7bbfïcôû\U0006e23c\x82Opì\x10\x99È_ár`Yìs\xadQ\U000c28112êÖt\U00055cc0b\U000392a6\x1e\x14iX\U000cabdeâà\x84vÈ\U00012f30_\U00071ff6ÆhÎÅ\U00040367\x08?饤Þ\xadµ\U000ef4bbþ\U0010101f\x83O0\x87\U00051430\U000d465b\x18ÒÚ\uf899\x14\U00045185\U00084d8a\U0004cf28Nx\U00067b3aäÆ)í$µ\U0009d327\U000a252a+\x07[\U00089718û\U00090c01Z)\x00Wô´9Ò\U0001ccf4Ò\U0003a191ÇDpQ»\x8f\U000bc69f\x0b\U000f54e3Wâ18bÀBö\\\U000dccd1%Ð1\x8d®\U001038afãâ\U000449fe_3ç\xa0\x8dh\x1eF^𘜲\x82õRh\x98\U000baaa3Û\U000be102MÛ-\x90ôÞºP\U000dd5c0\'pýß\U000938d7«\x16eE\x03¤ü\x8a~Á\rI\r¹z¹dÍ\U000d8c8aj\U00051137ë\x19\U00060bc4C\U0003713a\x19\U000e1822(Ý0t§\U00014fe2\U000c1a5aýQ\x86½ËØÆ÷\U000f6aacf\x07\x0f\U000630b3û\x8d\U000ca3d5þ𧅈款\x0c\x17\x99Å\x99\'\U000c3eb1è\U000cb31b´¨\x9bï\U0005cdbdjnÆ\U000e612dFl\x89*!\U000c8d2aÃ2ï\U0005dba0\x87M\x13Ô\x9b踧\U00066d45¯©=P\x1d\U00095834ÃË\x90,k\U0004b3b5S`\U000ea2c6:±yZT\U00012a71\U00088338÷\x08Ësf^2\x08¾²Av\x9dÄ\x90îjÃ|ü隤å·\xadã-\U000993ed£\x83ìJciÓh¾z\x90«QÛ:\x04ó\x9f\x17\x85\U00077462\U0001ff4bkz', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003837s
====================================================================================================
2025-09-19 00:00:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ÚqúÊuê\U000fd8d6\x16¦n'], 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ÚqúÊuê\U000fd8d6\x16¦n'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003646s
====================================================================================================
2025-09-19 00:00:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['f\x8c\x1a', '$', '\x10\x14\x7f8ÁE}²£:h', '4\x04À\U0006c1ef\x87Þ4Ó\x9b', 'h', 'YM_', 'Â', "'\x1d\U0006e87eÅV·îí¸9Y", 'M÷Æ(\U00052291']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['f\x8c\x1a', '$', '\x10\x14\x7f8ÁE}²£:h', '4\x04À\U0006c1ef\x87Þ4Ó\x9b', 'h', 'YM_', 'Â', "'\x1d\U0006e87eÅV·îí¸9Y", 'M÷Æ(\U00052291'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003964s
====================================================================================================
2025-09-19 00:00:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['û\U000357d6¹+Û÷'], 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['û\U000357d6¹+Û÷'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003523s
====================================================================================================
2025-09-19 00:00:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003962s
====================================================================================================
2025-09-19 00:00:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': -1747350528}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': -1747350528}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -1747350528, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003799s
====================================================================================================
2025-09-19 00:00:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['s\x8fÊ\x08\U00046424', '\U000322c0\U000a0042\U000e3934¬ª&g\U00087422', '\x98\x1dM\U000b5811Ió\U000362b4º\x1e']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['s\x8fÊ\x08\U00046424', '\U000322c0\U000a0042\U000e3934¬ª&g\U00087422', '\x98\x1dM\U000b5811Ió\U000362b4º\x1e'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003869s
====================================================================================================
2025-09-19 00:00:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': -3894}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -3894, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003762s
====================================================================================================
2025-09-19 00:00:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Â\xa0ÁcÏ\U00016071Ñ\x9b\x96ñé\t\x0c\U00015b8e¸\U000c7549䝁\U0001c5b2I_\x87\U000e752e\x1cÜ¶\U0004c141]v\U00083e7d(\U000dd91fÊ¡\x1e°»êi``qµ8\U00063c2dÝÂ\x90𩦰8IwT¡[I\U0003e5bc§H\x8d\U00014f4cçÖe/yÙ¦\x1cÚùR\x1f\x8fMoâoßW\x11î¯b!D3B\x84\U000b09da\x9c\U00034da4\U00038f13´\x00¨xV\x93¨È»¬Ô\xa0\U000e86bc2\U00084273\x1b\U0010e2fe\U0007b12cf,\x8c\x85\U000eb206¤e\U000accf9,\U0009800c-¼\t^vù𡷽f¯\U0003213fÔ\x1cÝ\\ñFú\U0009593e\U0003e1f1Ý𠐎N\U0005de04\U00016ffemÙÑd!\U0008fe74þU\U000c0dcaÅ胍£\x85\U00091863¥\U000f07c9\U00080d3e´DÑ\U000939f2êÞ\x1b\U000962c2\x06\x03\x13\x8e\x0f\\\x8bfÐ,½6µ,ß\x0eÍ%\x8cñÜeÅ\x92B\x8c´ÒÊ%S4\U000b0cb9ÿóV\U000f0e300\x7f4¢絜y\U000105a5²𠟬\U000d521b\uec12䩐\x1b7¿\U00043730Ú\x8f\\F-,\U00077621â¢[¡ø-5Ö¸6\x92«\x06\U00013f35ÔÔ\U0008fe38Ó\U000cf38c\U000de9c4Ä¯T\x95ÚL\U000c8029ÕÉ\x95|\U000d28bb\U00067f78ç["Mú],?í\x15XHa·µd(힂@Ýs¥\U000585fa\U000515c5[6\U000584ec\U000aa162\U00071ca2\rG\x98hÅ2\x1f/\x0fØÃ\x98»è\U0006544b\U00101fd5\U0007f847ÿ\\2FÐ9%8}Ó\x85\U000f63e5Û\U000688bc³cGNÃEøõö ]as\x8e\x19ÌÔ\U00098634ÝR\x84(JØÕW婍ÖÎú\U000816e2=ÓtU\xa0þ\x1fñA"\U0006bb11\U000f083f\U00094954\x04\U0004ccc0§r\x91$à\U000a657aÒE𡮾ÔCCw\x00©ÓÂd\U000ab9c8\x15ꇆö`\U0008ba74öõ\x98±:c§8\x9b¼3\xadR\x1dÇü,ZÊ%ßª\x80Ñ?2¯-\x01°\U0010eb67äjÀ\x1d\x1e\U000cea7d\U001065e9HÔZ\x06\x7f\U000f7b34Û4=\x90\U000bd058*ÚÈ\U001032b7cªÙ\x18𗪥£\U000cbc3fd¢\x9brv[BÁE\x04\x95r\x13ÌØ!\x05\U00043382=\x85Û2!\x94\U000e7503m\x1a\U001050df_\x16Ñü\U000ca1d1\U00019736/\x88¤\x1f\U000e8db5Ì9yBÐvÂõÃ\U00073daeÔ\U000f5916äÆ\x1fÕkrP\x1b\U0009777d"³P¡\U000e1d26µ:!çácñFÏ\U00108ed1$ªØx\r\U00101cbc\x92\x12\x99\U0005d831Ó@\x15³\tâ¨\x87\U000e459bÅÐ-íú\U00100f3a𢤾»z\x13🐖S\U0007a8d6\x90\U00013daaㅒÁ\U000835abµ\'M1{DÞ>\x98\x94\x84-&¯Ëì\x82F&\x8f\U00091603\x17\x8e\U00014a34\U000319d9\x04{º9\x8e:H\x1e°ü=\\\x83[Sʬ;\U001066cd \U0004852dL\x18pì\x8bÕ¦Kß\x0fñ,\U00032bdeÀ\U0006459dl5¸Ó\U000a3cccXÜ\U000de371d\U000e701b\x03\U00061f98𠭝.þYu\U00074e83cÌìíSp\x17ê\x00\x96\U00074cc7N¶yÓÝÄú"@\U00039687\U00035208𩥗%\x07\U000faf99Á\x1a\U00074b36\x10\r?w\U000a66c3\U000bdfeeu¯\U000877df}\x13\x0e\U00045ff6VÆ>\U00033753¯Ð𘖛\x1f\U00079c43\x83§uÔ;\tÕ<Ü\x1cw¥Õ\x1aR\x7f\x03bº\x0c\x18\x877|\x11\x9fJVêd\U00041c8f*\U00082401\U000c2766\x93ð"\U000455b6O\x0f\x8b𪄽\U000ec577¡\U000e69aa\x83æ«º\x8f\x9f\U000972acqb»\x15!\x83\U000a72c7\U00019328Q\U000a4826\U001055cbí\U0005cdf9IÙ\U000763266𬔔s~u\U000503a3ñy\U0007e3a8𦼄\x7f\x0f}}\xad¨\x8b\x0cÌ\U00010d6b©\U000c478d\U000ff549\x85D@tXùäü\x0b𩣬lgX\U000e9f14Ä·\x13{\x1a\x12Pì\x00@X\x11|¤\x16×®l\U00014310ÜzØ\x8a\U0003e1c7ù%\n¡ÕÅ÷âJ\U000d479eã\x19@\U000aef754\U00105540ä𡞏\U00081583\x9b`\U0009e8d3\U0010c603\U0005e5bfnÆh\U0009a3c9k\x14î4×\x0f\U00101ff2§E;5Ã\x8f\U000fe669Ä\U00053634²\x0f+\x02Ì\U000a67ae$Tá6½\U000c7742.Zà\U00086c04mC\x89vh\U000ed714m_ï\U0009d6de\x82\U000e592b©¨TO1V\U000f7040bl\x85\U00066048íG\U00071140b1ÿ_\x86u\U000ee1bcr\U000cdd33è/\U0006088f\U0009fd17\U00019659Ì`\U0003dc0f\U000a95bc.\x10\U000b793b&¦Ý´ì\U000522be\nA¶\x9aN\U000531dc\x02\x16X\U00012a5e\x00©\x89À¿\U000b931eJÀ×N\U00058ce8½LN~Ü\x05@ᾚ~\U000be7be°\t\U000715b2_&Ú\U000f7c7bÕ\U00047e50\x8fæW\x9aU_À\U000d35fe\x100³\x9fØ§ú\U000cc63f\U00042dc1\x7fE6*"\x91v\x18º#I*Faå\r\x928\x94c\U000bb2ebÂ\x86F\x8dE\U00106f20𨩸¸9🄆WJ\U000d6470¿1)\x03\t¬»À¡¿\U0003554anð2öô\U000dc5a2\x1bh]\U0005b420]B\x19î\x10\U00047f75\x18t\U0009411fgÿyI\U000a30ce\U00087a72\x1bñ~\U0008256cÏ\x08V\U00088c3eS\x8aÞS\U0007a29cÔ\x88\x14\U000836ac\x85\x97(ýi,÷J\x0eõ\U000a4457S\x1c\x19\x10s\U0010a053ý7\x15!\U0010fa8d2ê\x06\x96\x0c\U00059277\U0008b496·tFj\x8f\x95\x18µôDé[öuv¾\U000fe826\x88°\U0005fc6f\x07a\U000a7332\U000c5dbfå¬\x9b\x15\U000f1170vÎ ^ò|ð§\x85\U0010d408°\U0004f9fe\x9e \x0c\x19O¦ä\x17\U000db213\xa0$\U0003e38d\x87\x95\U000cb4d3\x10Zê§N|÷gK\x97\U0007012eV\x9f\U0004041e\x81𣴻\U000c875f\U00048c0e\U000400d7Ëg\x82\x9bd\x99\U000aec37È\U0003aaedÝ!ï\U0005818f»Ï\x17\x05Çè\U0009afba\U001085a3Ä\x8d\n¿\x13Z\x06\x1eA\U0006b81c臟Q\x15ÿPÈ\U000dea83J\x8b𢭢^2\xad^ã\U00040cda=UÈç\U0008d93dÜÍå\U000c4551\x15\U0006f80cH\x88ê\xad\x15«\x1dï\x8f_\U0004a36cÃü KZ|"_v P\U000471b8\x88\U000b78bb\U0005290d\U000ac48c\U0006770c\x14+èf¿ËÒ𓉏v/ñ\t\U000b8263X¹¤é\x94\x91ìhï"i\U000bde27\U0004dc4d>h\U0007495f°z\U0006a94b`fÄ\U0010c999Z\U00073ee1\x97ÛM\U000a9cfd\U000e2c7b\x9cÖ¥\x05\x06êÀ\x19Â¤d\U000d8e96\x1do:\x03\U000c539cì>±.¬8¾Z¯÷²\x15Y\U001013853𩩷÷\xa0n\U001075bf¦\U0004a128¸\x06f\U00012f48\x00HY:+ò\U00032754z\U00010bd0\x1fÂM2\U000aa5d2Èb\U0006315d\U000a312c\U0002f751d\x1f5\x1dZ\x0e\x95𥅧"7ÞTK_\x9eõ\U000c05be\U0010745fD 𓋪à-\U00077527\U00037bf2Õø_(Y\x86Í?\x05£\xa0\U000ef3c5l\x82\U00058215Q2Ñ³¯Z¨0\U00072e4e\x18pa3\rf«èJ\U00061630\x96}Y\U00108ecc\U000d59f1¢\x01\x1c®×\U000744b0ö\x17E\U000d871d\x81+;Ô\x14ÀD\x89\U00088e2eÇ𧉓¯\U00084170\U0009ee9e\r\x07\x9a|\U0007d07b\x87³\x91=鬹\x90Ó\x02p\x7f\x07N\U000be0ebÝï\U00060b74\U000d2f7c]\x05\U0004d335\x9b\U000804ad\x89Ð\U0009d4efªÙ\U00076484\x16bd\x15§t\x017g\U0005e085½\x0e\x8bHBëÊª\x11^\U00047ba5Ø£\U001096df\x87ïè\x0e\U0008afb1Cù<°Z\U00084dd7¦PzO\U00031c95\U000f393d]\U000b2f9b\x03煻\x01', 'password': '   '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003987s
====================================================================================================
2025-09-19 00:00:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003954s
====================================================================================================
2025-09-19 00:00:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x0cïu', '', '\x82Ì;4', '\x91 \ue5fbl\U00010e31\U000fdbe9yõ\U000a5df6J', 'Ï', '{+\\\x99Ý1½ª\xad\x18&dZ', '\U000f8878', 'K-', 'ó'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x0cïu', '', '\x82Ì;4', '\x91 \ue5fbl\U00010e31\U000fdbe9yõ\U000a5df6J', 'Ï', '{+\\\x99Ý1½ª\xad\x18&dZ', '\U000f8878', 'K-', 'ó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003974s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 27925}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 27925, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003956s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003811s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 4300, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 4300, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003573s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "<script>alert('xss')</script>"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00403s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 21880}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 21880, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004529s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ' '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003956s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003834s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': -16}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -16, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003904s
====================================================================================================
2025-09-19 00:00:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003499s
====================================================================================================
2025-09-19 00:00:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['\U0006b20d\n×\U000bdeb0\ue39e\x07']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U0006b20d\n×\U000bdeb0\ue39e\x07'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004025s
====================================================================================================
2025-09-19 00:00:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': True}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003537s
====================================================================================================
2025-09-19 00:00:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\x10\x8b\x98\U000ede48~j8ᾲ\x900\x98\U000f118d\U0009f81d\x82)\U000b2b82â\U0006d6c4Pµa*\U000a9b3c\U000a2bad\U000940dc\x97|ô㜸Ü\x9bØ澀ù𛁊÷!\x89\U000a5c72ÝÐõ\U00053792ýk2«\U0010477a¸a\x0f\'[2\U00014e1dÃþ\U00032d00ÆH\x9b¬\U000bd26c[zg\U000469b4b\x07𣢆?Â3\x91ÉÎð\U0009deea\U000d7205;\x01\U000b8b00«µÉ\U00068477.ÆC\x80\U000812b1¸\x80\xa0¸rT\x8dJl\x91¬ªÇäh\x9f>\U00076bb6P\U0008b12dþ\x81\U000f20b3]ù\x1e\x07&L\U00011e8dõY_Ë\U0005d12aÙ\x99\U0009d25eIX¾R\U000677c4ÆÏPk\U000b59c1\U000f2c0a=\x8d¡\U000f6eed\U000fba46æS¡𐆐Å\U000454c8ÒS\x864\U000db326Qý$·\n\U00033ad0\x1bÎ4ó\U0007f774õ\U000f39c5\x85\x9a\U00041f01@u\x15-o\U00086a2c\U000a4135\x8bT\ue7f5\U000a1b2bÏlÔ\U0006f4f2ÆÑ\x87ñ\x9b\x91d\U000b98c0#\U000e8d9a\x99\U0008ad1b\x14LS\x7f\x12𨮂N5ï©é\U00104685\U0010935eíºã,,è\x8fÕÆFË\x1fë\U000a2023\x98\U000d4d96mè[Y\U000790c7𥦚S\U0005ebcc«B/£\x9aOèb\U0008ded1Æ7M2ß@\U0006d8ee\x07¥\U000569f4\U000c4bb2^=E\x90é6\x11\U000a8ec5Ú\x1d(ðQ\U00074078Õ}".\U00060e59\'ê\x1bt\x1d\x8eôuî»+\U000645c4\U0004936c\U000bd1a2\x19,}ó«\U000c75dc\U000f1d69}\x9c\x87æL¾;&Ie\x95\U0001f8fc\U0007c14d`<\U000f8359\x02ø¢\x90\U000ad95f¨¹Ì\U0002fbca\U00039423𛅺ÃX.\x93¥=ñÜJ\U00077280\U000a41f7Ó\U0003ff5c¼ªÑ\x82\U00079707\x0eÀ\x82þ\x0c\U0005db67\U000e3faflvä57¿^𰳬\U0004a1e9û\x93í\x89\x9fÒ\U000580e9ÿ©Z\U00105602üÉ\x14\x19½\x18qX𬑭º\x92,X©Û\x16\U000c185b\U00048cfdT\U00043b7d\U00032efc\x1f0\U0007d57egHv\U0010a8b6Þ \U000ecf90_X\U0010c6e9?𨈫S\U000f8bcdsx\xad\x1fNÅ\U0003de49×ß³<í\U0009aa07\x82Àðzã\U000cfe46\U000553d46\U000d861b\x0cPò\U0008a262×Ã\x1e\U0005eac4VÉºW\ue612À\x03é/@𩷗pÔJ4\U00035fca¸©.oå\x11äásFÖØꏷ\x8c¬\x17:«\U0006ba40\U0007e11aℼ𬧮WPÃÊÌ\x10¨&k\U0007e419\U000b889bSâÌr`\'\t\x1c\x1e©rÆH\U000b1835\U000fbdff³ì/\U0004edd7É\x85Ú\x00¬!ä𬔒egÍJ\x9aÂ\U000487c0\x0c\x84\x83jMVV\U000b984b¸\x96ìÇK\x93\x9d\x86,ðÈV5°\x9a𩑺H\U000b3dff$Æ\x98ë\U000c8cf7\x9e¥Ç¦î3\x06$\x98 \U0009f070|æÌÏ彽c\U00090217𣊣Ùá\U000ba15fꓸ¢\x8b±\x97\x9a掊H¸9\x9c7Ô\U000d109d\U000dad69\U00041f6b\U0001de95u\x88¯£G\U0007bb72=䖡S1R¨\U000499d4óXÊ\U000a6aad\U0005e092c\U00084da1\x9cå,¬´F\r¾ííZ«ÇRÝ\x15A\U0007308b\U00078a4d«\x9b\U00094ba8O\x17G\x04\U0001a955\U00034107M\x18ìù\U00055149sþ¾l\x87ñ@¸¿©R\U00086b7aQ:ÈZ\x00~ÖC\U0005184cµ\x0fOÂD\U000b88af\U0009d3fd\x1f\U00088a10!ù\x10ꨎ0\xa0\x96¥Ø\x95\x07ã\U00106ab2!\U000c3c55r·Â\U000fdd15fM\U00109f82\x8eR³Ð¦¢ÈÍ¯¬\x9dÒ¢\x1c§"3é\x07ZÇI\U00102a1bùj\U00108e19Ä2x7áÛ\x19\U0007e45e\x8d\x13\x06¾ü#\x96\x8e\x11AU\U000e110c·\x88\U000bc175\x82\x95𧷋KrBé\U00104b2b\x1c>gã4íóÚÞ\U000ff38f\U00044a7e\U0008a5ca=\xa0\x17µU%\x9a\nô\U0008ae03[\U000525a3\x04Ô.4Ù½1À&å9\U00044d62ﷁ\x0eÐÃ\x98Áà\U000b72b6\U00092b67/\x0e\x0e®\U000759f0¯\U000c0026\U000ab193häQâ\x14po\x08h\U000b8727Ð¼~©Ô²½\x11Úô\U000bd2b6CÆÑèÕ@O\U000c335c\\Þ\U000c5de9\x8b廢\r\U0009dd66¢M\x80\x96\U000bb099à\'¾ÌKQÊ¸\U00045be0\U000fc16b²\U000e8264\x81j\U00101d36\U000d0917\U000842c2[±\U000411feë\x0f*\x9e\x9f\U000d7bbd\x1d\U00057a10D\x9aê\x06f𡁿R-JçFÇ°𮢷ÂgáÿÈûÌ5\U000dc684z\U00062838\x9b¾𦅢Gp\U0003ff1f\x10b\U00099959xú\x05ÕË\x88ÃÚ\xa0þ\U000de090\U000b561f¹\x193\U000d57efO¯\x8a\x01𭲑Ä¹åÓ\U000591e7\U0005b3f1Ä\x11°©\x82\U000e61ae<\U00078f96Ù7\x97\U00054a35\r]\x92¸\U0004f274\\»Àù\U000deb71À\x85\U0010679dª\U0009d19f\x02\U00084d99\x1cl\U000dc557\n\tÓ\x00ß>e:\x94\U0010a62cº-ZÎ\U00086a88á\U000b3b0e4\U00106395\U000365f4h\U000ec9a8\'à}\x98\x85#A¬¿è\U00040be7¤\U000969dfpñ]e\U000b7b0b\U000ffc9a\x12\U000ed3d3\U000c464e\U00035e0a\x15\U0004e26bÊ\U00103992¾Æ©ût\U000f1a65\U000f4503~\U00042e0c\U000c4341\U000dacfaâVþ\U0005d977\U000fce57𬗰\U000c7b63µ\x90󠆤-ÆÙÅ\x8a\U00086286\rp\U000c86c1±\U0001a07av\U0008ee8eI\U0009cdccµ\U000d5ec9<\x9a\U0004d166º\x91â~¹dG¸\x05+Á\r\x01ÐL=\x04Åâs\x0eèj\x1bWÔqoªüq $¯6\U000da18e\x91¢О㶐Òy\x8e\U000ba317Ü\U000a2162À95\x9dRL\U0005dadcK\U000b28ab³à\U00096fca\U00035a5c`Þ\U000a31bd6\x81\x1a,\x07\U000754e1L\x1bGÈ\U000c335c6Ö\U0007274e\tÍ4\U00101b78¬ò\xa0c\U000ea7b1&MÓ\x98F\U000e9850[\x11d\x0f\U0005c0d4𢎚²ud\U00086564𛃘p\x85\x82Ñ\x92\U001089ceàH\\\nnçDR¨E¯>\U000d70d8\x12¹\x91 äï\x03\x828áÐ\x81z\x88dG(\U000fc44c0&\U00105dcbÑ\U00064c0b\x88güÙ9Åõõ°\x19{%h)\U0009d2desÊÁ\'\x14\U000cede2\x95]\x9bÍï\U00056251\U000f5dab\x96\x82\U000525d4\x96\x17Ä\U000559b7°\x98®\x16\x9aq\x90Î\x1bá\U00098042Æ\x13&\U000d0d5fô¬ììèw\x81\U000b2072\U00086bc6t\x80û,Ü\ra\x11±âu\U000f1bf3\tf\U00079f08cI\U0007796c3\x10\x81ö\x18\x81¶\U00105ee7@»ß`v\U000e8a1a\x96¢\U00086160Û\U0009f76c\x97±P\xad\U000aa837ô\x94\U00060736ä\U00094fb3|\U000b722b\U000a33bbÉwR\x95í\U000ba3c5\U000bcbe24\U0009209c«V @\x12^ûUA\U000f9466ùÁg\'Aº\x0b\x84Ù\x0f\U000b79a5\U000c5e32__]þ\x9a\x04-z\x82\x1a\U00082582Ydk\U00033fe7Gu\U00039be4\t'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004073s
====================================================================================================
2025-09-19 00:00:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['6!', '\U000f9693[\U0004eabb\x96EÂ', '\U000c40ba', '\x19', '', 'D.½ô,\U000b1921', '', '©\x0c', '\x7f0\x1c\U000eefc5\x8aZ5', '\x15𮔾ãî]*·\U000edd97', '\x9e', '\x1d&\x0cÝsl\x15©', '', '\x1c\t', '\U00040ee0oô\U000397d2ê}\\½\x08¼\x9eÔ7', 'Zh\U000aaaf4GBL©\U0010849a', '', '', '¹', '×Ú¬\x16¯\x1d\tv', '%p', '\x90']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['6!', '\U000f9693[\U0004eabb\x96EÂ', '\U000c40ba', '\x19', '', 'D.½ô,\U000b1921', '', '©\x0c', '\x7f0\x1c\U000eefc5\x8aZ5', '\x15𮔾ãî]*·\U000edd97', '\x9e', '\x1d&\x0cÝsl\x15©', '', '\x1c\t', '\U00040ee0oô\U000397d2ê}\\½\x08¼\x9eÔ7', 'Zh\U000aaaf4GBL©\U0010849a', '', '', '¹', '×Ú¬\x16¯\x1d\tv', '%p', '\x90'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003873s
====================================================================================================
2025-09-19 00:00:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00371s
====================================================================================================
2025-09-19 00:00:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '¿`\tÞ\U0003702c^7Ù\U000c49d2\x06\x8cë»Âë$\U000ea5dd\x18þ}µ\x07@¼\U0008e67811§æÝä\x9f\U00014c53¬\x94Gq\x9e¨\U000c5152;\U0001bd56í¤\U000a81c9ä\x97¥\t\U00074eacs\x93\U000e8c8b\x1cQi\U000803ea\U000b8f48F{\U000e9783\x84kì÷j^\x06}ÎÃ°\U000a4632«ä\U0005e611\U00087916𣅈\U0001cfc6B\x02´g\x12\U0010741b\xad¡\x8a â\U00073f5e\U000d9947·\x9f崮\U000d4700µ\x07\x8aã\U00035768¸M´ÑÊÞ\tN\t\x9e+\x9d·ï\U000e7f3f\U0006df0cVà&o\U000bc81c𢌿\x97\U000801dc\r\U0007ce072¢\U000de958\x070\U00109c25\x0f`(Ù9g\x12f\x89\x9dÉ}B\'¾áí\x8e~M÷\U000cffecsh]¥\U000b2bbaÔbO¼\x11𤓓³\U0003bb46\x12\x1bj\U00041e9cjÕ\x99òLÐY\x0f?\U000da1f0\U0010736c#\U0005df05Ô+lQu5𡞏²\U0008a4c4\U000b6de3\x92\U000debdaP7\x93¨\U0006a8af\U0009d36e×\'ÀãKMó\U000cc744Ï"rïj)|z컻\x90`\U00100b5e\x80\U000cac36V*\U00095c52¹Ö,\x8d\U0003d42eß\x02\x9a×xÎÊîL\U0009bdb3Ï\x0e\x00\x1a{jY\x14m5È\x85\x9c\x81𐿲`\U000f9c90c\U0010c4c8+\U00075240\x08þ\x9f\\L\x85ð\'£ð\U000b0bdcB0%㮕pjí\U000a7743d\U0001ae90\x11\x06ꮻí\x8f\x9d\ræ\x1b·\x00Å|\U00050e8fÓ÷\x03\U00073839\U000b0673\U000685cdwm\x86:Gº\U000b70c2ªﰥ\U0004d3d2,\U000ff87b«\U0007d26e𤩹\U000a7d98n\x88\x8e§é\x11`¡}\U00046ee4\x8aôi\U000b10fd9´\U0009d3d5𨆭\x9f\x96\x03Ð°í\x93\n¿\U000ae39a{<Õt\x99Î\x8d\x8e\x01\x1d\U00039f43ïr\x94\x9a\U0010dd1f3\x9f\x06\U00032b32l㌣úi\x00\U000a19ad~=\U00040036\x8d\x9fµ\x1c%\U00098893𩳰\x1e\tÖ\x0f\x85ãVA\xa0\x83\U00069ca5\x9f±î\U000d7d71&0\U0004a25a\x97\U000791c0\x0c0\x9b)\U00083e88jµ\U000fd85a\x89£𛁸\x13\x07w^Z(ãL0&\U000329f8µÝÀ;𒑜\U000a7371¹\U0005fae1\x0ccÙ>3Ää[\x06=}᰷ÑÝ\x1f\x11\U0006a68cL\x95*^\x95\x11\x0f𐎁Â𥨲8\U00103cee\U000f12f5\U0008ee77aÕlmbꍢv\'\rÎ\U0006f8c0NF®S\U000e543c¬\U0003eeda\x1eV§>E\x9a\U0006b78a\U000c71c6Q\xa0\x1e`\n\\\U000e0d93w\U0004d8da\x9e\U000b28b1Û¡\U000d6f3dÆ¥ë\x82ä\x91\xa0Ï\x84E泝h\x8d¸Ë¤\x15\x97n\x88\x8ayu³ÐÐ\tdK\U000c0d2b\x08\U0004d89da\U0010ba06;/\x93<èpÏ\U000c7aa0·\U000e6409\U000979f1\x9e²Y\x02G\x16\U0003cc32S\x83®ïÛ\U00048939î¯lÔï\x01\x99Ბ\x89t\U000aa4f1Ù\x03@q\U000838e9f#ðÂ\xad´2\x0b+(\x86\U00054a9f£Ê\x97\x83´ú\U000e0dfe¯:úvt\x03\U000f440a\U0008725a\x07>\U000758d4d+9\U000920de\U00052e65Ë\U000a0a6f\x90\x80Vþ\x97\U000aa737~ú\x12㮀\U00084004}㈋\x06\U0010f5dcÓ1®m\x87Å\t\x03\x98<^\U0008538a¹xþ¬\x077nQÄ\U0005eca0Ð»\x97\U00038a0eê=\x90ïbl<AFÝ\x82YòIQ)ØöNÙ{m+{¼ÖO\x85\x1e\xa0\x8eó,èã\x1f\U000662b5\x14\x07\x06\U00014c1dz¦ß\\é0D=¹\x84\U00063697\U000447d7\U00016d7cÝ\U00014d67KÙa3<\U0004bab7ñTÚÇð\x90¡ð\x94\\Ð}èÎÉ\x86\U00097b67\x9f\U000c72a8I\xa0&\uf8613\x88V\U000884b4\x1cR𰲡\U000a5aaa\U0006c361bõ\x06®(é\U000ce9a9\U0006426f\x855´Â\x14(Å\U000c9577#\U000c9b46\x96h\x89FQó\U0008c049\x81v\x1a\x92Ðø𧠍ÐU¸cú\U000ddc6bÅ¬¾%\U00071bbaCí\x9aW\x0c\U000d2354ሚã\x1c\x88𩼄<ò\U000ebef9\U0005b5d3\U000e9d893\x9d÷çZ\x19\x9c«\U000cce1bB\U000f4fbf\U000ecfe1QzÆ\x08\x80>\x1c#\U00095971rF\U000bb9f5\x92ä𔐌í`\x14æÞµ4ñ|t\x1d\U0010a503\x8d¦\U000bbadad3ÖÔ\U000b384fjµi\U0008965bÀ\x90³\x81\x87鑔£\x07é\x84¤Å¡\x0c\x8b𩄾🞻ZuÍ\x12µïggK㊻\U000adaa6÷\x97\U0005a9e5î\U00079caaò9$|3¬oÿkÞ\x9cE\U000adee9A\x07,\x07ú\U00043b76\x0f\U000a3f30\x10·/3ñA\U000b3b99\U000c38d8_䊈\x8c¬\x01\U000f9137A\U0002eec4𫟀\x06¿F\ue0d9\x1f\tõ6÷\x1b\U00056861]!Øá\U0005913a\x17d\x02Jz\U000dcecfÐß$\x0e\U000e97a1\x0f\x14\x12\x8aR\U000bb4f2I4ÝN¥¨ÛlR掕¿\x04b\x17\U000ce60d¹Ö5\U00050740Ve¶k\x0b\U000457db\x1a`,\U00099b0cèÅÀ&C3\U00051f27ÌWIñ𝠥\xa0£\U0004afa3&ð\x0e`\ufdcbë\x8cdxí½¨\x9a\U000137d2;G]\x0e𩨿é\U00100dc3Vªç\U000c6492\x08\x18q\x99@©=þÛÓ!Ú\x06[|\U000d3383m""\U0008c6f5Á\x87\U0008b80eÇ\x1e¼\U000e6a21\x8f\U000b1e82\x98\U000bb10f\rB\U0004dc76Ø\x14\x10¹p\xa0;æ\U000b8be0ÆTÕp\U0007c055ñ\U0003bfed\U0005acca\x9e£}\U000a7bdeçAì\x18\x9cYIఆ\x83L¡\x0fÖjMÒãne\xad\U0003cdf7ì\'\U0009120cêᥭ\U000ef172Î\U000fffc9\x9e\U0007fed4Àt\U000338095v!l¯\xa0(ofᄺ¹\U00083c8f\x08\U0006818f(\U000c3c38?l\x19,¸\U000f1f34\x05'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004094s
====================================================================================================
2025-09-19 00:00:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¿\x90\U000f2561', '', '\U0009627fæ}ß\x13', 'È\x0fH2\x07', '\x06+\x8aa', 'Ñ\x95'], 'password': ['', '\x98?\U001053c7\U000ecc8b\U0007cd36\U0006fd8b', 'Ç', '\x1bë\U00038cef¾Ô\U000908a0®']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¿\x90\U000f2561', '', '\U0009627fæ}ß\x13', 'È\x0fH2\x07', '\x06+\x8aa', 'Ñ\x95'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '\x98?\U001053c7\U000ecc8b\U0007cd36\U0006fd8b', 'Ç', '\x1bë\U00038cef¾Ô\U000908a0®'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004109s
====================================================================================================
2025-09-19 00:00:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -101, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -101, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003608s
====================================================================================================
2025-09-19 00:00:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003488s
====================================================================================================
2025-09-19 00:00:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003824s
====================================================================================================
2025-09-19 00:00:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '../../etc/passwd'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003966s
====================================================================================================
2025-09-19 00:00:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004247s
====================================================================================================
2025-09-19 00:00:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003891s
====================================================================================================
2025-09-19 00:00:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x89jÇ?S\U000c5587', '\U000393abÒ\x96\n\x9d\U0003fedcJÝ®', 'Ý', '', 'ñ', 'C±\x9dº𝈕(\U00018d39ËS7']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x89jÇ?S\U000c5587', '\U000393abÒ\x96\n\x9d\U0003fedcJÝ®', 'Ý', '', 'ñ', 'C±\x9dº𝈕(\U00018d39ËS7'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['\x89jÇ?S\U000c5587', '\U000393abÒ\x96\n\x9d\U0003fedcJÝ®', 'Ý', '', 'ñ', 'C±\x9dº𝈕(\U00018d39ËS7']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004326s
====================================================================================================
2025-09-19 00:00:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': -21030}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -21030, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003445s
====================================================================================================
2025-09-19 00:00:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', 'ë', '', '\x0b=', 'n\x8cÉdz뺼𝚉\x04¯H', '', '\U00031925t\x05\U000bed111\x18', '~\x8f\x10\U000a121d', '\x9a', '', '', '¦9ÃÝ', '\U000cf8c0', 'Ã\U000d3c57\U00075da26\x88\U00048fa2\x18£¡A\U000af9f9N', '\x9eo\x81¾ðu]\U000680f8¤ï¿¼Ë', '4F\U000a552f\x98°', '\U00014eeaÝd𦂇𗯬æ', '\x18', '', '', 'Ðw\x0eµP7½', '\n', 'æý\x07', '\xadҞ𠛿ë\U000c3023', '@¢\x98±', '\U000a1406b¯\U000b3b88f\x05¥\U00079e51\x81\U0009f7e3Ç', 'D>|\x06X\x99\x07\x91', '(\U0004a626ÊÍÇ\x05\x18O\U000f2e34%±Á', '', '\x81\x8d\rº¿', '9\x19ÒË\U00063444\x04\U000f36e9', '¿\U00078cb3ýµ\U000dafcaá\x8b\\\x84d\x98\U000d7021\x1cÀ\x17', '', '\x81\x18çÂ\x9f\x961\U000918dd', '¼\x8c', '\U0010fa57\x08-ó¯§\x1a\U00087659¨b\U0005174b+\U000ad048µ\x1dókὑ·^Ð½𫐵\U00082d5fX¾', '²¥\x84', 'h\x81\U0003de27\x9dv>Ä®[¤'], 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', 'ë', '', '\x0b=', 'n\x8cÉdz뺼𝚉\x04¯H', '', '\U00031925t\x05\U000bed111\x18', '~\x8f\x10\U000a121d', '\x9a', '', '', '¦9ÃÝ', '\U000cf8c0', 'Ã\U000d3c57\U00075da26\x88\U00048fa2\x18£¡A\U000af9f9N', '\x9eo\x81¾ðu]\U000680f8¤ï¿¼Ë', '4F\U000a552f\x98°', '\U00014eeaÝd𦂇𗯬æ', '\x18', '', '', 'Ðw\x0eµP7½', '\n', 'æý\x07', '\xadҞ𠛿ë\U000c3023', '@¢\x98±', '\U000a1406b¯\U000b3b88f\x05¥\U00079e51\x81\U0009f7e3Ç', 'D>|\x06X\x99\x07\x91', '(\U0004a626ÊÍÇ\x05\x18O\U000f2e34%±Á', '', '\x81\x8d\rº¿', '9\x19ÒË\U00063444\x04\U000f36e9', '¿\U00078cb3ýµ\U000dafcaá\x8b\\\x84d\x98\U000d7021\x1cÀ\x17', '', '\x81\x18çÂ\x9f\x961\U000918dd', '¼\x8c', '\U0010fa57\x08-ó¯§\x1a\U00087659¨b\U0005174b+\U000ad048µ\x1dókὑ·^Ð½𫐵\U00082d5fX¾', '²¥\x84', 'h\x81\U0003de27\x9dv>Ä®[¤'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00369s
====================================================================================================
2025-09-19 00:00:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': -9277}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -9277, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003965s
====================================================================================================
2025-09-19 00:00:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004151s
====================================================================================================
2025-09-19 00:00:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004226s
====================================================================================================
2025-09-19 00:00:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 27326, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 27326, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003922s
====================================================================================================
2025-09-19 00:00:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.005802s
====================================================================================================
2025-09-19 00:00:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004602s
====================================================================================================
2025-09-19 00:00:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x95\U000a5335>ºÿ+\U000a232e\U000f26d6F^', ' \U000f1c5eã\U00080f7f', '\x96', 'ö\U000f5ea9ª\x15\x10\U00041353M\U00075c12\x08\U00056aa8\x11', 'Ì', 'ç¬Ô\U000ffcb6', '\xa0Ai¿7ÚØ§À\x8a#\U000475cc;', '\x9e\x0b\U000ea37c¸}h'], 'password': -3421}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x95\U000a5335>ºÿ+\U000a232e\U000f26d6F^', ' \U000f1c5eã\U00080f7f', '\x96', 'ö\U000f5ea9ª\x15\x10\U00041353M\U00075c12\x08\U00056aa8\x11', 'Ì', 'ç¬Ô\U000ffcb6', '\xa0Ai¿7ÚØ§À\x8a#\U000475cc;', '\x9e\x0b\U000ea37c¸}h'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -3421, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003863s
====================================================================================================
2025-09-19 00:00:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': -14166}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -14166, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003991s
====================================================================================================
2025-09-19 00:00:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '../../etc/passwd'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003825s
====================================================================================================
2025-09-19 00:00:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Á³\U000f90bf»éâ\x92[oÌe\U0008418e¢µ\x9b\t\x1b𰿝\t\x8bV¸%3\n\U000f429c\U0003a171è\U00089e73\x03ÅÎ¤ÿ<\xa0Î\x17HAþS\U000ececb"þ\x19\x01\x18\U00109af2þF\x1f\x01p5©ÍgV\U000b2dd6\U00102466Ì×\x19\x1c\U000e6df3S\\z\x96t.¤²\x9bÀ\\\x19oà\x10;ý\U0006e88e\x185Ý\x0e\U000f4191\x07\x98µµ\'ÿ£¸\x0e\x18)\U0001fe82\x10\x9að𘦙\x81\U000d93a9.E賒\x9eùk\U000fb380¦WhÓ&\U0005142d\x1c:Ewù\U00039f28\nì\U00101703G\x86½ùúè\U000d3433\U000eaf9b\x8d\x9a\U0005fa92\x1e¹\U00081834w S\U0010ef93R\U00075a2bH/\x19Ý\U00094eaeÙ\x05\U0007d37bÛ\U000c0ac4\U000f8992ø\U0009bf13ªI\x9a(\U0010612bÓZ\U0005209e/a\x0b\U00069ab1\x8f\U0006fa31\x1e¼G*\U00040fb9«Ä\U00033d27\x9c\x92a𓃬\U0006ea0cÇ\U0002fac6¶\x0fë\x16¾Â\x9e\xa0û;ÁÉiß\U000ffd6a%]\U0009f65d𣞠\U00052da7¦²;𥅊\x1f]Ô\x0f\U000fbbd8\x88Ç\x85FoG\\n±\x1c\x89\U000a5638\U000ef519¦>\x15\x03\x8dÞÑé\U000d1d2aæ\U000e9267¡1©\x899\U000ae013EK\nJ\U00055b1f\U00096ac3R\t\x7f\x9aS\U0003592cãóF\r<ÐC=\U00057d24\x14\U000f6a27HÝIIx\x10î\U00047ac6\x8d\U0008ea97íÌµ\x88¬Ø¥´f\x8a\U00109977\U0005fff9\U00058ccb¨dP\U000696faBQGqb\nñønZ£>\U000ede0e±4\U0005a2e3\U00107906\U0010bc98¹;\rç껫\U000353bc6øª\x1d¦\U00080220B\x99\x0e\U000b8999\x8fÕÚ\x0f(ã\U001044f3\x02\U000bad86Uô\x06\U001085f9RÙ¯öýÝÙ\x95\U000a9d18\x87\U000b2947\x9däÂd\x02M\x07\U000ef93aÔ\U00074260\U0005f00dT\U000e9e3bº\U00093646ß_\x9c²f\U00079076\x02¦Ié\U0004d08f\x0c\x8c¹\U0005c6a7ÀÙZ\x9b²°ST\\fÄZ.\U00038882Dh®\U000e86ad𤂴\x82ý\x11èæYÄÂæ\U000fb4a9뵣9\x164ú\U0003373aZ\x13\x1eÑ\U0005b021LßbU«\x9fyª?\U0004581d\x90y¥Ñ\x9a\x07𦶪\x83Ä린\x01\U0003b011ö\U000628f3Þôo[3¿t\x1c\U00074923¿àfeô;¶¸\x92𰊨𥭎M\x05ð\x90M\x99F\U000553e3é\x1b\U0003967b&뾌9\x0cÕ\U0003d18aá3\U000f31ee<DúP\x96\x01V🬀%í\U000bae5bh\x0eêv\U00014213\U00107787Æ\x93ÿ|\x13Gx𥀁\x11\U000fbf08\x1e\x0cWù³d-Xx\U000abc98\x7fÌñO´\U000dfaadr¥a\U0006af77\x06fqÓ鏏\x90\U0004faeb?e\x8cR\U000751ae=²\x0f{\U000f1e9f\x0b\U000da7da\U000e2bce\x058\U00072d00{2\U0010b0a4:ã|\U00035a6a\x1a|Î\U000f320e\x16yþå\U000dd8ff\U00063d5e]I\x11+Ý»\U0006f5a3qçÚ°Qc-CF\x10\x13|Ä°v7xaðåÓ\U0006898f\x81👕ªÍ\\Æ\U000ef5fe\x8e\x03\x1eÆ\U000481d1\x14\x14Æ7zW´]ç\U00067118¤\x1b\x08Dmþ]¨/.\U0005b3f7\x0e\x8a\x16k\U0004a2f9G𨺎\U00102e3a\U0010f9b2\U000dd1ed\U000931d8¾)Ù/ÁZ+®\U0007888c\x8b\x8e°<Í&Ê\U000a380aèFqì\U00046a21\U000a5f86 >A«²\x1cA\U000e9cbat\U000d1da1â\x025|\n\x950Ä\x93\U0006ab8d\U000c565eUé\x8e¡p\U000bef3bS\x15²y\x1c\x00\U0007c4c3\U000d4d5a¿\x15\x1af\x10°\x1cN\U00072513.ªÅô\x7f\x81\x1a.\x9e\U000413c3N|\U00058e22¦pMð\U000dabc1ùc\U000597ec\x8d\U00101695\x11[\x15Ä\x1dB"º9\U00037a7fñx\U0003c9ad\U000a1247&\U00084bb30QoÅ\U0004c41eDæ±P£\x0eàÑÿ$x\x96\n\U00048d41âÓ/5<)\x8d\U0003a9f5\U000ea83bH𣳢\x9bçÒød[ óM~¡Ì\U00042ef3\U000d5396ò\U0005b893nÙUí_\U00054690\U001012e8Zß\x0f ±\U00079e34\ue7d6L©\x01OTëÀ+\U0003a737\x97æ¶\U00010cb3¶d\U00100a89Qã=\U000a5b4d³þdÍØèé_\U000880fb¥\U0008a49a%\U000e5b9e\U00087b3d\U00051cc1\x88ä%XyÙ\x14\U0003b4f8W¸¢\U0008370bæ\U0006b467\x99§\x8c\x17knNßfwô÷\U000325952U\x06\U000f8ef9\U0003aa69ôNWp\U000af8dd\x0b\x9bûM\U0010500b\x8d\x80\U000b0853\U000d54d7+\x04êô=Î\U00032a37$f\U000de462\U00093c56\x7f\U000e4deed>½ߢ@ÊmB*\x18@®Aw5\r\U00037f6b!M\x1e;ìø:\U00090d73\U000b6711ßA\U000aa10aëa.ñLõ\x9f\x8eq\x02þm[wM<\x1b5\n»z\U00103876o\U00055314\x17\x9c&¡\x15âà.\x97E\U0001c9afB[\x92Þ,\U00091603\x9f\x07¶d£áO¿[Ê\U000890eb²\x83\U00046990÷E.\x8cÛø\U000ba635\x9a½\U000cbae4TÅ\x16q\U0010f5d5§¦\x10\U000715fa;\U00091a55\x85ªF\U000f6ae6®\x91\x84\U000aeae5~\x9f㏝\x89\x1b½-\x98¾ὦ\U000874de\x9b𗋋ÿq\x02Ñ\U0003fea9\U000bb90b\U00063781\x96\x1f\x9d\U00071b23Àã\x8cö\x14\x16¬뿋\U00033e07\U000a5889\U000d3a12má\x85Þ¸Î\x8bÈ¼Æ°²ÞWÄå\x11\x91{í\U00037453🐆\x10L㴖Ô\U000d139f-𐢯!ï\U0006ce0c\x17\U000a117e\U000dd450©K\x1f¿Bñ?Ãîñ\x89\xad\U0008ba95pg\U00098314\xa0\x0e\U000f039aTG\x9f\x88\U0001fd95ü\x81¡ðí\U00076206k\x8f\U0004bfc2ÃÞÈ\U000be5676B\U0007db3d_ô)\U00095ed5\U00074234¥wú\x9b\x86𰜘r/\x193\U0010eb69B[\U0006ff1a_\U000fc71fS\x8b\x12Mq\x99_ê\U00092f8cÆ\x96Sçý伽ÆôH\x17\x06=W\U000ea8c6\xa0\U00031738\x9fËÊG\U0006ea3fsè\U000e6891b\x1eÿ¤Éuë_\x0f\x97øMÛ\x04\U000f9b15m\x16\x7fM\U0003db2a\x0cL}\x19\x87Jû®\xad\xa0\x9aE\U000fe2fa\x0fz\U000d88c9\U0008fdd9;]/%3\U0004e6f4Ñ}ó𭊛\x94Ë|W\U00098fabÿ&c\t]x9lÉ=4º\xa0\xa0\U0003181b\x00çÑ]\U000ef9dañM\U00109593ª\U000f8ab0"6b\x1d𗙢ãPÇ¶ÿ:gj\U000a66ec\U000c38c1\U000950bb\x9ea±\U00069e23\x0f\x9e\x14\U000f9a41\U000e33dbÓgÿ\x8cÂ\U0006f391\x16\x8e4\U000ea59d(ÌÂ7\U000a69aaÌÚ\x1cØÑÿeÌ;sä)\x1e\x91G\x8eª\x1d\x13)ONÌ\U000e883f{\U000e9f08\x90è\x1eÛ}\U0009de51-¡m\x99§\rSÚÜz\r\x8f|ú?tZ\x13Hp\x9f:\x03v\x06\U000a3558\U0006e54fÏ\'\x98u\x9bQÝ\U000d43a7\U0004e086ùW\U0008dc8c\x95\x8a)Ì8cpÊ],¿Ç¢\U0004f08c<éÕ\x02Ûo¼6\x0f\U000650a4Ër\U000df829T;\x1d\x1fú\x04,X\\\U001047af)\U000d5779Å\U000d9de4@Bø\x18\x82÷\x1d\x816\x16䤽È\U0004c723\x01 ©Ã\U000a59a5»º\U0004500e\U000ca5f6-:J§Û\x8e*á\x94\x1eð', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003794s
====================================================================================================
2025-09-19 00:00:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004331s
====================================================================================================
2025-09-19 00:00:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003882s
====================================================================================================
2025-09-19 00:01:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003799s
====================================================================================================
2025-09-19 00:01:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U000a62dfð\x8d\x00\x97,\x87ã8i\x8b\x0c3\U0007c669\x81ÎÈ\U000c90c3z6ó°\r\xadµ\x16*g\U0006a5c7à\U00054253S\U00106539𘕕\x06\x8eÓ\x870\U00099bc6@\x15\x92uAû\U00079d57\x13\U000d69c9\x91;Õ\x89cZ𐍑VæM\x85\U00062e08\U00075ebct0\U0010b60f\x19è\x93v"\x8a\'\x04\x00\U0004b62aoX\U00034a51\x92Lã\x0f\x95𤟻Ú \U0009f8719ÀÆH|\U00065169렒{ëx¥Ë\U000a5953|xc]VÁW\U000840fa6\x84\x0e$xÎ\U000c7b30\x03\U0007fc17f2\U000f62ec§\U001061fb\\\U000f631d\U000afcd3\t\x1c\x04𮪝[,PÁär\U000d9c5c\x88=\'𬑖³9\x83\x0b\U000b039eâèÁT1\U000c5e56\U000bd5a5\x7fq\x10!\x9a[\x8d촍\x99\x10IC\U000b569a𢓒\x0f\x8dGØiûö\x08\x9a\x1aD>\U000541b7xr\U0009ef68\x8b¸\x98\U0003a893Ð\x89ìîÃ\U00012bfb\U0006ca2fuXïY\x105\U000c3189ôe«¿\x8fÖZ¹â\x988Ö\x07\U000cdffa\x9dJû\x9cÇ/\U0005d0d4|\U000a6aa8Ç\U000c3657ühüü\x9f\x8bo\U000b9c73J\U00097a82Ù\x0b\x15ÿT5D¹\U000b07edQ\x93Ñ<\U000fc5ab\x81¸\U000a2706\U00054474e¶\x96Qµ8Ô\U000e725a\x97\x11🁝V\xa0,-\U0008eba1¡\x14í\U0001f2cdà@\xad$u\x9b¯\U00019093C¯\x03\U0004474bÉÒ<çHëZ\U0004b31bü\x92Þ)Þ\x9f<\U000d716c\x8c𝡆彦\x8f\U00092028~\U00038a94\x03\U000b6a58\r𢫂肃²\x14ð\U000f8663VÝ¦ª\U0010c7afU\x88\x04\U000d86eeT🤓\U0007efc3\x14\x92U\x94¡dv\x06\x8f\x02z\U000ca19e\U0008a748-\U000bd889O>\U00074c7aL\U000a2714Ìåf\x9dÜH\U000b30a1U\U000f266cä\x9fQ7ît\x8c\x9c\U000c8709Õ]±XK\x17ß+;{r\U000b39c6¬¡\U0007f11e𥁤t:dq\x97c»\U00060cc8\U0006b0ea\x0cîk\U000d4dba𫚰â[uÕ3¼\x93L\U000523b6j\x1e\U000cb266\'\U00038c9c\U001004f3𪭅\x15Àô%\U00094edbó\x04»û\U00089547È\r\U00049e8a\x8dMfb\U0006a945\U0004ddd9\x91JM\x94\x90\x195ÚÞᯍ\U0009eb53\U000e0410\x0b×𩞼\U000ec64f\x06\x80Ë¾i\xa0\U000f1488AÌEâÊ\U0009589eë\U0002f017xÊfÎÅÚ(òÒË\U0008c621ê\U0003e950¹\U000f3ed3üµ\U000e9502%c\U00097e19ÑìïC\x88\x99à\U00094583Ùß\x96\';¡\U000f558eÖ{\U0010dd52\t\U000b67d8ìMBp\U000c3d32\U000c2046\x0c\U000e7ac2\x8få-J𐳃(Ð\U0007b173\x84r\x98\U000e818de\U000a8655þ\U0008d4d1m÷×÷bWY\U000fc7b9\U000eafa5Aî\'\x95!\x85¯\x11¿ò\U0003a8f2Ä\x1b~\x02ÿ\x153\U000f0b20\U0008af57\U0006ce01𦆆\x91m³\U0003e9ce]𡴼z\U0007c359\U00089f5f(y\U000d7a06j\x92ÈÉ\x1e\U00040820Ù\x1a¨\x8eæ巎Ú\x15®D\U000b7887¶åå\x97\U000a7d73\x04õÅ]ä\U00093a70\U0007d971ᯠ`¼3F\U000fdb64\U000b3a50¾\U00080c2bé\U000465e4\x9a]±ý¥¤\x10\x94\xad\U000643fa\U000a8d40\x8e&WÀñÌH\U000d3b4a\U00062412\U00064db4é}\U000a6e08Ï\U000745fbÙ¹𤺠ü×yÏät\x14Ù«\x9d\x871\x14©\x05!7#G\x881Ô³𧮷\x8dül.C\x89\x91Ý\x07\xa0òÖ\U000a98ffG¬\U000a0a2aÀ\U00035421º\U000459f7\U00074afc\x8cç\U000734b6\U0006be30\x80\U000cb989ð3P¸f¦Ã\x120\x89\U000d15efp!ê\U00034593i~𬺆\U000af71ajj}\x16|\x93\x8aè𨩻\x04½Qh\U000b6a11C\x82ç\x04\x19£\U00042bc7\U000ede1a\U000bd052\U000f5dcc\x91H\U00036a22\x02yñHC\x19¢\U000e7409f\x18d\U000c5423\U000a6f2bpH¿Ñ\U000ba781\x93\x88\x0b\x1e\x11~\U000ddf3e\x80\x905Ç¸𢩡¥\x8a𝔴H\x06Õ«\x915\x02ÁFô\x15j¼2ÄNå\x18mò\x9c\U0004201f\x03\U0004a634)\U00098545]Ãþ\x82\x8bË°Ê»\U000dac7cá\U00053058ÿlO ú\U000bf82e\x9dhÞOÆ¡\U00013df2E+\U000a5c61\x04$\x00C9\x97^c Xo\U0007ff798÷¨e\U0007373c\U000a82e6õfàÌ¨\U000740c5Ü\x02\U000f6253*¨âûzÜ3Q\U000ad8ef\xad\U0005bdcd\U000c180a{\x12ô"Â\x00ÿ\x08Ù\U000b4e3aO\uf260²\U0005a864w,³\x7f\n\x14÷ÝÍ8tt\x93Ä258\U000e8e88n\U00080a1b\U001093c7\U000c61f1\x90ÚÐ³\x9ai\x1f\x95\x08°Þ\x11\x16\x07ûî\x1eô\x9c\x04\U0008e050Ëî¹XDjQ𩜛\x0ee\x12%o𐙟\U000673b3+x\x00\x9d\U0005d102\U0004ea02ùä©j·\U000f15a0ù\x82r\x1eQ\x18hj\U0004c865\xa0"\U00040ae1\ue7a1\x11\U00086e48R\U000a1cb5\U0006d2c9\x06M\U000fffb1ö\x1bàëÇ>\U00081976\x1fþí\x0b4\x1cå:\U00072dcb\x1f\\\U00076241L\U0008c6a6È»íÒÓß0ø1\x9dy¨\U00095c59\x9e𝗞q\x84\x9d\U000f9e45G\x1b\x1dà®ï;yÇ3\x07S\x8f¾🍻°i\t·»ë\U00043d50×_ØÉÎ\U0005d904\x18v\x0f\U000b8570\U00109e26\x02«éÍ\x1b\x1a\U0009dbf9𰃿\x03GIP\U0010c4f8d\x84\x88¼¹Zeæõæx¾\U00033c6c\U000f4353\U000da54e\x90\x93×\r\U000129f6\x92÷E\x9a\x82\x99\t9\x83$ï¤ó\x08:>C\x11\x83b\U00051978==ÂÃv\'1¾%7\U000aa3ae\x83\x0bÉ\U000e6b5bÓ\U00045cb9ä\x19𝚱#\U000f0f93\x9eéVjÚÚ\x9f\t>𭿿1\x99¡u\U00091aa8Ç¦*ß=*7\U00107a09\U000d204a4¶¼àÞuÉUj\x93<V\x92$\x9b½dð\U0004b0f8\x11\x87Ç/\x9aÐç\x89ì\U000f8a58©\U000434eaÓùzd\x11fZ¿qÐRV<Î\x92A¶öâNj\U00074670\U000f1505\U000f6f1e¬ÐEOol\x93\U000a46b6±\x8cªMÍ¯*Ô\x8fû\U0001a99d\x18\ue48f\U00075ec8(\U0008a887O\x1f½µ\U00062185\x85¢Ù|9J¤\x03ð°\x85\x82|\x04\U00072029V\x84𭚷\U00092410\U0005995en[}{\U0003383b·\U00035707', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003721s
====================================================================================================
2025-09-19 00:01:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'EøaÀ-T:\U000bafc410\x0bÇL\x82Ls\x94\U000bf31bØKM\U00056ea53¨Ü𤑃Ò\U000965f3e+a\U0006d9e7\U000807b2\x16×èý𤷉6Þé\U000fe65d\x87@!<\U000d28a327[\x0eçÒÅ\x91è\x92\x06\U000e206f\x9fÓ3\ncÝ\U000ee7f3àru«\x9bú.p\U000ed91c1DêÂ\U00076accY¡µôÓ;i\U000bbdb8K¢\x00\U000688c6R<\U000e8da0fM2bè>A\x99\xa0 xBv \x1c]\x13¡v\x12\x16\U000d3b64\x12nøìF\x04¹𐨵ï=\U0006e346¦\x8a\x04ÙS\U0008f299\x1df9p\x7fcOý\U000a74c1\x97\x11𦩠\U0002ee52A\xad\U000d15ed\x0c®:\U00103bafö~âpuk(\x85\U000d0891\U000a7352\U00035f36hã)𡫇\U000751ef;í\n\x8a\U00042741õç𝡉\x15\x15\x16_\x95ÿ\x97\U00037a09\U000cde21\U0001a8d5\U000db921rÒ\x98Ò2\U000749c9U\U000e9017ã,\x1e\U00054b6d´ø𤬽§f\x9agå\x19\U0004c7c1#\U000a1839[LîRrg(¤_\x804\x92\U0004846er)Ða¥\U000f819d\U000e1515O\U0001b74fBã¡\U00065e70\x07\\ßY\x06㸍àA\x06~\U000c27e3\x9f\x02eãÉv\U00103587@\x8c\x86Õ廥\U000ae0ef\x0ev\x9f~§d\x83¯\U000df10a\U000d358eÒ\U000f161cn\x94\U000c09d1á¼\x9aÕ&òìÅ\U0004ee7f\U0008a768\x8d-S%Í°\x08:m\U000e81ce\x9eª\U000c5f20Ë9\U000e0cf7\x00\x91\x85_Â\x8c\U000e35a8ó橔\x18\U000d24f7V:\U0006f50b0»æ¦\x0c£\U00012e3fÿË»ð\U00079011\x84ùr\U0004912aÓÒiw\x86`è\x1aô\U00046685\x8c\U000d87e3°\x1c3\U0005fe46°\U000abeaa2ÔÓã\x87\U000b117d¦\U00048678ùQæ\U00088206Òã¬óÿíTÈÇ«\x0bY\x8d²\U000bb815ø\x82𦭒\x03nZ\x8e\x95\U000d5f81\x0eþp?2q坺\nõj\x9b\U0008b924w~0¢äJ\x8aþ\x8c¶\x9c\U00103a3eë\x97I,³\x932.\U000d37d6cz*Q\U0003e22d垳\x04\x03\U0010b0e8\U000f7c58P³e\x98\U0010b2eaW\U000ee3b9Ê\x94\U0009575dñYÁ\x92âéÍ튤\x06\U0009c467<íA\U0009b490/\x8a\U0002f37e°×\U00085ddfÚ\x01?0«¹F\x0e\U00061c61XÉ\x9a\U000d714ep\U000af54f\U000914eb\x0c\U00033319ï\x85K$\x9fí\U0005b7cal\U000a8f8b\U000f2a92\x8e\x9e/\'Ä\U0010917a\U0004cd79æ\U00102cef¡\x9bP\x9e\U000efeff\x15\U000a9a71\x98Z¯3¬\x1aëᘊd𰜾㲤¸\x0bÙ\x03£\x16}\x01I\U00082414å³移\xa0l\U000fb6aa~oº\x0bã_\x9f\x9aÖ-I®\x11\n.s_*HºÏ\x06}Hu¼©Ô1\U000424fa\x85\x10넛¤ÿU\x88Ã¯*\U000c029ai\x0c\r=ÕÅ\U000c34abV\x1aÈ@Qc\U000a870d\U0009f9b9\U0008f292\x91\x9c{B\U000cceefF\U00100441\x10|q\x17\x9aØn\x9aþ\U000f9f574\U0006fe8cøl%¶\U000ec622N\U0005fcabsP\U0008873e\U00102a72\x15|\U000ceba1Ã²\U00077a0e´\U000ba8c2¾]¦£×¥t\U0004664c\U00071b79ÄA\U0004fea6ËÌ+¼\U00093393v±Zj\U00018eda"\x1a\U000d5d57h{\x88\U00052e1bª\x8cÙ\x02/V.y\x12\x16-é0FwB5ÿ졨&\U000565a1ð\x05\x92L¼¨»¡\x7fjõõ¹ê+¶Íwà\x86\U0001cfb0\x02^r\x9eM\x85ízÈ𮄕\x14¦a\U000a8dce(g:H\x90þ3w\x05\U0006a73fàv\x98캃㫆_\x91ý)ø+zb\x97ªYÁu§>n$+>&n\U0007e629𤋤L¤\U000bd116l&\U00010eea𧬲ÅA[\x1e)\U0003a7d9\x1fnç\x97¤1\x1e\x13X\U000fbbc4fð\x93\rHH¨êå\U0008bc59ëJfÛ6궫\U000c6b9d¨\U00035a0b\x13á~ÿÑÿvq¤»\U0003e054î\U000cbeeaÖ\U000d715aðú\x91\U0008b63a\U000dccda¥\U0010fc0a\xad×Ö\x01^ì+òrÛ\x88|#\U0006fe42ÔQé¢]+Â\x01x\x1d?\x97»\U000e74fa\x1cÒ\U000b61ef\nQÄAKN\x87Í\xad."\U000ce7b3Ñ{\x9di\U00050f06\U000f6460RÉÕ»\n\U00031590ÿr\U000de19cÒ\x0e\x9d\x01@\U00089f5b\x8fcR\x13\U0010a02d\x18\U000d5d6dú𡅇Z\U0006cbca®obF)@疙d\U0003279d7í3Ê2\n\x8a¦ü.\U0003661d\U00041183\U0008d978j@\x07\x01¥7¨4¼ÀX\xa0𞲑\U000c7c25\x1e\x82#q\x9bO㔕®s\U000fa115\U00090e0f𤻫\x0f\U000751a9\U0007e3fc)ì\U000d81cdZ\x05³<¤ß¡\U000aa381\U00089c5a\x06Æ\x1fì\U00072f22𗢽\x96\x80\x11\U0010f3fbêúÈ\x8aj\U000aed3cZØ\U00098f01\x92\U0003df57I*Ö\x90.\x1eÅ\x00Î\x91\U000479f3r·𰓀\U00032ea2x½\U00079639\U001032f4\x1cm\x0f,\x89?\x0egÏÑ;\x1dï\x00¾Ëbfåb-¢\x10𛉙\x91\x04\U00042804WI\U00040841\U000c40ef\x19ãû\x9e\x9b\x0e\x01324\x12\x03i𥿊v¸B\r\x95\x16\x05ª\x82\x86\x99R\U000ab50e\U000e9184\x89ð𢥃;5æÌGG\x1d\x8bPª\U000a4480\x96C)j\U0009c34d\U000afa9e8lÚ\x05W©\U000f9345ë^𩋢\x7f\x9d;nì\U000f5025xá¯\x14𢲇\x85½\x179*\x02\U000c2992R1VÝ$\x19^\U000128a6\U0007661fx7\U0007cacb\U000ce2f3ðx\U000a7e1fÁt%\x92üz9\U0010216ezd\\Ì\x17𤌻»þá~K\U000efc7dê\U000e259dG¶ßÆ\x9fe\x04\U000cc512/?\U0006c9cb\U000dcc7fK\U00071a71}©çÝ\U0005a6b6\U000aa3e3þH;÷AÌ]𠡃\U0009103aë7Íg?ÆS"\x0ebd\U00077261ñ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.01185s
====================================================================================================
2025-09-19 00:01:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003925s
====================================================================================================
2025-09-19 00:01:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['\U0009bd06']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U0009bd06'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003475s
====================================================================================================
2025-09-19 00:01:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003566s
====================================================================================================
2025-09-19 00:01:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 6504483654577210348, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 6504483654577210348, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003637s
====================================================================================================
2025-09-19 00:01:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['Óþ', 'ìãik\U00077fdf'], 'password': ['Ù\U00050fbf', 'è{Ó', '\U0007f211C', 'E\x97\x11J\x90¥', 'T𦗶', '{\U00014a40ü\U000354c0\x1déÆº#(9\U00078b249Rá\x8b', "¢ÊBâOç\x8ca\x89J'â", '', 'dï', 'ê\x12/©N\x01\x14', '\x92H', '\x97T]\U00092805\x1b\x17\U0006b3e3Òú\x00b¼H', '\x8b', 'F\n0', '\U0004e899z\U0006654a', 'Ã(Ü\U00053fefË/\x84Ú', '', 'm\t/þ', '8|s=Ü', '¬\x94\U001018c9A³\x13']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['Óþ', 'ìãik\U00077fdf'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['Ù\U00050fbf', 'è{Ó', '\U0007f211C', 'E\x97\x11J\x90¥', 'T𦗶', '{\U00014a40ü\U000354c0\x1déÆº#(9\U00078b249Rá\x8b', "¢ÊBâOç\x8ca\x89J'â", '', 'dï', 'ê\x12/©N\x01\x14', '\x92H', '\x97T]\U00092805\x1b\x17\U0006b3e3Òú\x00b¼H', '\x8b', 'F\n0', '\U0004e899z\U0006654a', 'Ã(Ü\U00053fefË/\x84Ú', '', 'm\t/þ', '8|s=Ü', '¬\x94\U001018c9A³\x13'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003931s
====================================================================================================
2025-09-19 00:01:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 16451, 'password': ['\U0005ccf1Û\U0003e5c0Z\U00077814\x18t\U000d340e¯©\U0006134d\xa0\U000a979d^', '_', 'ëÝ', '\U000ed923rH', '~2\x9b\U000ad4d1\x14P\x89\U0003379b\x98\x81𐎅', '', '¿\U000d37f5b\x9f$Í@¢ÿþ2', 'W\U0005ed46Ä,n\n', 'Ð\U00032e93\x0eE#\x14\U000ab6df¿', 'Ý', '¼Û\x9f\x93\x83', '÷}W', 'æ', '', '\U000c7df0\U000a0191\x93\U00070f41Ä\nL©\U000b6865;³\x84Í<Ð', 'å\x1d\ts', "[\x82\xa0\x90é鎰\x9a𮫷\U000e812aé\x93á\x92Y¾Ú𠅅\x03'Îù\U000f0382\U0003ec95^\U000142ef\U00100ca2ª®"]}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 16451, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U0005ccf1Û\U0003e5c0Z\U00077814\x18t\U000d340e¯©\U0006134d\xa0\U000a979d^', '_', 'ëÝ', '\U000ed923rH', '~2\x9b\U000ad4d1\x14P\x89\U0003379b\x98\x81𐎅', '', '¿\U000d37f5b\x9f$Í@¢ÿþ2', 'W\U0005ed46Ä,n\n', 'Ð\U00032e93\x0eE#\x14\U000ab6df¿', 'Ý', '¼Û\x9f\x93\x83', '÷}W', 'æ', '', '\U000c7df0\U000a0191\x93\U00070f41Ä\nL©\U000b6865;³\x84Í<Ð', 'å\x1d\ts', "[\x82\xa0\x90é鎰\x9a𮫷\U000e812aé\x93á\x92Y¾Ú𠅅\x03'Îù\U000f0382\U0003ec95^\U000142ef\U00100ca2ª®"], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003763s
====================================================================================================
2025-09-19 00:01:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x0cîU', 'ôW^+', 'M&¶÷ò\x8d\x17𧿢\t', '¹'], 'password': ['\x00\x82$PM\U0004d63b¶\x9fØ', 'r\x85DÏ¿\x07\U0010461b\x19\U00064e27Â\U000687b7\x8a\U000f42f6\x02Z\U000dcf3e', '\U001017b4\x0f', '', 'ÔäC\x92¡¼ì\x80q\U0010eb76\x1f', '\x1d\xad3𤌮Îck(öw\U000e2e42Õ\U000e9878`', ':', '\x9b\x1d\x14P', 'Xí\U000eae7e\x8aM4V\xad\U000ff091\U00090b4cê}\x92¦\U000d51e3à\x85j', '琱\x86\x97,\x97\x84Æ\x0e.Þí\x1b~W\x9f', '\U000d04c0\x1aÏ', '\U000adb9bà\x8ey\U000cba27', '\x1eþbeX', '8.É&', 'Äj\x96\x86', '', 'møFÅ\U000b5572Ó7\U00089884ðè\x90¼i<\U000538c6\x18(ÆbÚ\U00042210}', 'ÕkU\x82ï®f\x88\x1b\x97\x80\U00099ba8', 'Ñ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x0cîU', 'ôW^+', 'M&¶÷ò\x8d\x17𧿢\t', '¹'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x00\x82$PM\U0004d63b¶\x9fØ', 'r\x85DÏ¿\x07\U0010461b\x19\U00064e27Â\U000687b7\x8a\U000f42f6\x02Z\U000dcf3e', '\U001017b4\x0f', '', 'ÔäC\x92¡¼ì\x80q\U0010eb76\x1f', '\x1d\xad3𤌮Îck(öw\U000e2e42Õ\U000e9878`', ':', '\x9b\x1d\x14P', 'Xí\U000eae7e\x8aM4V\xad\U000ff091\U00090b4cê}\x92¦\U000d51e3à\x85j', '琱\x86\x97,\x97\x84Æ\x0e.Þí\x1b~W\x9f', '\U000d04c0\x1aÏ', '\U000adb9bà\x8ey\U000cba27', '\x1eþbeX', '8.É&', 'Äj\x96\x86', '', 'møFÅ\U000b5572Ó7\U00089884ðè\x90¼i<\U000538c6\x18(ÆbÚ\U00042210}', 'ÕkU\x82ï®f\x88\x1b\x97\x80\U00099ba8', 'Ñ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003872s
====================================================================================================
2025-09-19 00:01:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['+ôó\U000d0dbd\ue0da\x8c©î', '\U000dacaf'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['+ôó\U000d0dbd\ue0da\x8c©î', '\U000dacaf'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00415s
====================================================================================================
2025-09-19 00:01:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003546s
====================================================================================================
2025-09-19 00:01:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 7337692201494113123, 'password': '\ue2d9\U000cf477\U0009a9b0ÔX¨Úî¼\x16¸\x80\U0008b489\x1dçÔ\U000c7859\U000af707\x12\x1f$µâ³\U000f700ay\U000c1e3e\x13¦\x1e5ÏÊ\x14Ï삌\x80î\U000bf423?§\U000a59b8\U0005e18b\x85*\U00062b0d\x98\x8cøZªÖC\x13À𰑗\x14î/Xéý\U0001ceb6눺kEE\x19\x8d\U0003de86\\\x86¡Ñ\x1c\U000b1a13¬\U00039975\U00050f45¸d\x00\x8b\x80f塭C\U0002f4dfa¡j꽘×\U00045144\U000149e5pµè!\U000b38cf\x98s\U0008cef3öIè\x92\U001052f4 \x14é\xa0p\xa07ë\U000fec7b,\U000956cb3qáí\x86o\U0003d752@Þ\x9bÍ§\x91}j𦂬\x13\U000ac68aS놰\U000f359eÉ¹\r\x81²\x9fV&\U000e6b3b1ꐚ÷³\x89\x98\U000395e3\n\x16\U000e7cb3JÌÿ\U0001dabb>ÊÙ\x80ò\x9bK:^\x7fû´XºÏÞP\U000a6b3b:¬\x9f3\U000a8d8b2Ú\U000aed11A\U000e287b\x02\x83\U0007269d\x8cñÔ\x07Kçª7Þ\x0b\U000ca90a\x97\x8e}^äcÚ\x83\x9d\U000643d0$ü\x8a\U00042b7f°\x0eGqàØ\x96\x96\x14:UÏ1\U0009fdacã£\x93¿ÿ@þa\x83ð7\x8a¾ç\U000b1d83Å\x99\U000e9b3f_\\(Öl«<nÍ\U000fb3c7\x17q\r2þ¾V\U000b668a\U0010c9d0\U000ae9ad\U000b08a8ÇrX\x06¢\U000de869E§\U00109377\U000b466c\U0008822c\U0005aa00\x86n𖩞ãÆ\x88\U00108005Ë\x81OaÃ\x12\U000baa42辸Üæiâèý\U000b51f3\x8e\x81¤³(R\x8a\U000b01ae\x91!4\x8f\x04¦\x8b\xad\nFÇ\U000be459_¸ì\U00094aac1×Çj¿\x83\U000e2ce9÷\x95\x99#ÇXN\U0005ce01:\U000e64b7®#U\x0bpÓ\x03qG\x9a\x85ìBÂ6\U00051de3Á\U00067b7cì𢋈<Z¶:îÃ\x06\U0004741f÷}«=yºÂ\x12þììa¢𡉘þ½þÕ¡\U0004c099©°[%\U000c3408:\x07𬶺\U000cfbd8\x16hË/Ó\x8f\x9b\x93\U0004d840IÊÙhÜ\U00071275ÿô\U00053bad\U00042d6cæ\U000d05e1\'´\x15\x8ft\U000c9ec0a\x04æp+½𗊳·$\x12Zï \U00081c2c\x95b\x14\U00100c95MÎ\U00044174\x89Ih\x8c댩säFM{t;£KP8\x8eWÅn𣤫\x8c5hÕ\x9d𣧩$q\x1e\x13a:\U000c25aa\x00AvCÔv\x8fû\x0e_}\U000a9fd8\U000b4b7d©Ñ;ñ7\U0008bdfañ"\x91\U000599b8z\x085>õ´\x01MQ\U000d9ba3Þft\U000d6460Û,\x19B\x9b\x0c\U000c073f,ã\xa07\x1fÔä\t\U000f6d15áI\x80\x16\x05Ö°ËÊÍ¿Yg\x80\x11?\U00089a5cª¢\x9f:7\U000a1a66\x98\x91¹p\U000c2ac1\x9e×\x1d>Uxè\U000b6108\U00059dd25\x80÷\x06\xad$äj\U000eb835½\U000de061\x99\U000d20cew\x83\U000edd00\U000f1c89±¬\x93ÜP§\U000d4670×\U00101ee3>\U00065768\x81ûÓ𮇡/E\x06E?O\x944!\x95\x06Ú\U0008ad52¦\U00088ac7Ë\x1c\x1cÀ\x82Þ\x0c\U00049bccÞ\x0e\U000895e9;\U0007ec1dÝ鹍O⭀2ÏØJ0Í©Áß\x99+\x102éð¨N?¿cW¬?¾\U0006fcbf\x81\x86\U0006af38PäI\U0005b5c4æ\U00041b86\x1eü\U00091f4bõ\x1aÀ©4êøML\U000b9447\U000746a3®¿\x1cC\x85\x98~Fa\U000c71be\x05\U000c4168O\x92È\x0bÁcuL»\x93j¿b³Îwc¸\x91\x89\x1d½yÈ\U000459fd\U0006f8b3\x91\U000bad47L±¸µÉÜô\x19ÌÎ\x99¹\U000bcf6d)?a\x99D!#\x0b\x8c\U000717bf[Ò\U00100f15쟭\U000925b8Y\U00071cc6ZÏ¹×\U00013c92»þ~\x05\U000cdf50ìÌH\U0009edc5ú\U0001a163¾Bó\x19\x12\U000957fa\U000711c8\U000679e0E\tõ\U000d3abe\U000d6ab4\U000b61ae\x15\U000d9538\x9aA\U000905f4LT¯«\x1frâ}F\x10H筺\U0001e375÷\x1f\x96\U0006c4be\U0009c30b\U0004114f\x0f¹ \x1e@$%z^X\U000a66b9©Ú\U0009e1a7\U000fca39\x17»\nî!ªÖ\x1b+´.\x96ù\U00090ab0\U00033b43cmÏ\x948%\U000458b2\U00036b20\U00077050Q3\U0005c02a\U000a61ff\x8fK>\U000a73b1\U0007f0160\U000a0f9dvE\x06\x98¼𬛗\U000aeec4\x80\U000f6e74\U00061d8cö\x10ù\U00080606iPB\U000647d8P\U0005fca8Ï\x1c±䕆-\U000d25deÛ íU"å𩂸6å¾S\U000e8bfa²Î}¾Y\x8dR\x90Ç\U0007ce2b\x8b}ðÍ\x99³\U00106086-\U000d6381,@\x81\x92\x0f\x1e\x98\U000f219eÊBÐØï@»;c\U000a5a37\x96jÕ\x86.É\x06y\U0009c9b4\x80¸n¨[µ𑚨\x1e\U000c8015)\U0008a397\x8fPl\U000a4a2c1\U0003626af\U00076775\U0005e85dsÐñìÅ\U00094665\x15çõ\x14\U0001c686\x068\x88º\U000f6202DGÕ\U000703d6ã¨þÕ\U00091482A\x16\U000b1e9fS\x15±¶\'\x82\U000f78cdv\U0002fa97\x18\x86_-\U000936a8\U000e57dbºaþ\x8eä}ÉwÚ\n\x03j\x19ª%Ts¤X\x9f\U00058cdf\x10\U00082808\U000e39ba쬓\U0009a711TÛ\U000df785\x9d\U000f4424\U00068277ý䐔\x9e\x9d¨\x9eØ1\\\x06\x16mÒÆ\x1b\U000bc481Â\U0010832d\U000d95e3\U00046268Ìª\x93:^t\U0007bd24¿\x91𧤊¡\x00Èô\U000f66c7\U000622e6\x1f\U0003c90dZ|\ue8e7C·\U000f6940\U000f431a¬º\x84𰏕\U000386e6\x11¾\U00104445?6ÂÎ(\U000bf95d\U0007514aý\x00\x98¡D\x10𩍳\x85ÍU\x9fE\U000818c3\x02v\U000ae7e4\x88§\U00081aa5ýÛ\x86ý\U000435b7ýæt钗½MÃ¨W5âöwçÕ\x94\x00V \U000d0de4¥e\U000cfcf6\x18Ó\x10L𠗓2ûØ4\\\x1ftÎA\x17\x13\x9aý\x91\x16ü8ÔÄß\U00066533zô\x13\U000e4b65ÛÔlµ«³\U00104b19\x0bÂÑ\x16\xad·ï\U000a4637\U00055455\U0008cd3c\xad;F\x81æð\U000cbb70o°\x07\x86×\x9d\U000d6f6fÔ\xad¶wøD¿𠫡ÙZ\x14}ö®ï\U00077e41\x18#\x7f(H\U000daa5c%ã]\x8fl\U0008a607\U0008ce70\x07\U00039adf1\U000fc5e4\x1d_Êà\x05®\x03.È\U000b7c87ã\U000d8623R🮶\U0009179b©ÖÖ\U0009f93e¨Ûî\x83wÒS\U0001907fÊ\U000c2c50Á\x05~âEªªäÂjÀ¶|\x04_\x04\x1d\U00107dc8°Zç\U000c3032\'\x06ÀØ\U00032186\U000fe8bb\x90¢AÝἁÏ¿Ì\x0cô}𨽼\U000bdf3c\x96õ`T\U000adc5akÿ¿»Áf\U000391ed\x84\x1eï·¶\x9e\ntT\U0010977a,®:&¡N\U0005cd739/¨Î\U0008b346\U0004ff77eD\x85\U0003f39bÞ𑤓©\U000f9066¯{Ã\U0007a05a\x06Ì\x02üè\U00046405\x92\U000ee652Í§\xadÓ"\x92À"\x94Ê°·¦»[Ä·\x00\x12·¯Â\x00\x81\U0003b6713E'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 7337692201494113123, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003637s
====================================================================================================
2025-09-19 00:01:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['Æ«\x92ëq\x14lå\x03', '·\x8fÏùV:áw', 'È\x1d#\U0010c6a8Øþ', 'è\U0001c532s', '/\x9f\x9d\x82\x95/B\U000f9e6bꑫ㈺\U000968e03²TÄ¥¼\U0006a75b\U000446d5.Ø\x9c\x9c\x96'], 'password': -88}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['Æ«\x92ëq\x14lå\x03', '·\x8fÏùV:áw', 'È\x1d#\U0010c6a8Øþ', 'è\U0001c532s', '/\x9f\x9d\x82\x95/B\U000f9e6bꑫ㈺\U000968e03²TÄ¥¼\U0006a75b\U000446d5.Ø\x9c\x9c\x96'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -88, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003874s
====================================================================================================
2025-09-19 00:01:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -6788, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -6788, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004675s
====================================================================================================
2025-09-19 00:01:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 7591895832241273847, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 7591895832241273847, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004246s
====================================================================================================
2025-09-19 00:01:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '𨮅UX>É\x87\U0004b9ecFf{¥\U0008a81e%ü¨\x8b$\U000103e6\x86\x93Ëêð\U0003cab8zóZ\U0004ad55\x81ÅÇ\U000abb83ú\U000ac215\U000ffa08Y;r«bÜâ\U00039b60I\x98¨\U0005ef61ä\U000dddabG\x07¼|\U0006f298C\U00086d69h\x9c;n.\U000fb072â"î-\U0009ff2d\xad\x1f𭮨\x1d7Ã¹¢\U000e6473ü¦pØ¥d)\x84\x91ì\U00068eda\xad:Þ𬰽\U000d6376\U000647f7]\U0001654eèl}FY\U0008640cE\x1eÄ\U0001ce15Âj\U001061fdX9W\U000c7db0\x01\U0006e5c3+¼\x1bÆs{è9B¡𫚃ÿq\x0fÿ¡VEºÆ\x9e\x05\x98è\tyçvó\U0003882aãÛ\U0006539e𠃥¬Ò\x11\U0003b7c1»z÷\U0005ef62\U0003d7ef\U000dee1c·æ\U00098e06ÿv\U00066c4a\U000b047f«Ú\U000c1ddc\x0e\U00106521\U000e88a0¡ 1\x91æ²ÚV\x14]\x92`+¥\x15AÔ\x88\U0001a28a\U0001ef2e¾\U00057e82z𢆣\U00015949ò\x12m\U000995a2k\U000baa48eü}1§Ún=0ìà\x13d¿]Ö\x96\x98\x0c\U00083677N\U0004aca7\U0001e37a´\x163\x99Ï\U000c5207z\U000742f3õùbB;¿\U00072312A\U000f2ab5¿P\U000f2beal\x87A\U000750d0çüð\U0006d659\U0008243c?óAh\x87(¼x¾Y\x0e\U00064a67ä\U0001909d^\x98´\x13`\xa0돳\x1e\U0009f5087\tû/\U0001eb12\rk~\x99õ\x9e\U0006b9f2áÏÐ\t\x89ÅF\x01\x1er\x0e\x04aª\x95\U000cea85[\rE\U00093ab5¯ÐZ!V¸\x9cQ\x00\x80V\U0004077f\U00079a64\U000eec9f\x02¬Ú<T\x8dW-W\U00059d20\U0010c12aÛ\U000ab474p\U0010bc2d\U000bc541\x0e\x88¹\U0002fc4awX\x86ÝoX\x93\U0010c40bX¥P©`ÛL\U000baaa0\r\U0001dfe2Èé\U00069d66zZ¬(\x1a/\xa0*GÓ\x8ch]\x7féS\x0b\U0006cad5\U000882ba5C#i⢯cl>+K\U0005f2b0\U0001e28dJj\x88𗃍\U000d440c\x94\x18F\x03E\U00039aafÆ\x85\U0008d653\x0fÉR¡çßu\xad\x81f´\x0e\U000c49c3tÂ]ª\x93\x8ekj\U000d963fì×\x9e\x89\x83HK侮Ð\x81Yd\x08<ñÕ&ì\x8c¬\U0004108b\x97\x97\x04©tÿ\xad\'PM\U0008d215OÛ\U000ebf12\x0fb_Úhe\t\x1b\U000b9a76$\x02û\x1dà\x8a𦧁iÑ<\x15÷\U000a751bwáû\x17âMÜêq\x13\U0004b779\'O\U00049be0\x07\U0003a564\U000ea61b\U000723f0bIÇ\U000a4292><B\U00012a21ü\x82Ù434 \U000d611dÒÆ\x84\x04\U0007b010¶¡\x01\U000b73bfº\x18WÎ\x0e\U000a7f37ú¥è𫔵ÐÚ\x9aê×v\U000ffeb1\U000a57b3ã5\x00ê\U00052c0f¶¬\x9cq\U000e08e2Xí\U000adefaÅ*\U0004d147)\x92¯O\x99ç\U000a816fìYY#¸\U000e1aeb\U000c660e\U00042783M𪯥\U000f0f8a\'ÀL\x0bÞ»𡂉VA\U0003cfebÑËc\U000c17a6;õª\x82\U0007f38b\U000392eb\x93\t®öL¶ö\xa0ñÝ\U000d6813\U000ffa9aMÆ\x1e¢Í\x99÷\x1b»ÇZ\U00103702\x87𠙊$ûim\U000f8d55¥âëo\U0004d994\x14Ú\x0f\U000f4a7ap©\x06;µ"i\x8aE¶¥+R\n;c\U00069149\x94Î\x1aÞ\U0007ea1e\U000b8f28\x8c\xad&Ø)\U000c235f\U000a94fb\x95\x8e\U000d32fe\U000def20SXXØ£\x90¿\x10Ça|Äx\x1cß\x1d\U000c739b\U000c3083c]nM\U000f92b5\x95Ôè\U000a59cd"ó\x99\x00Ý\rà°\x82½]Ïwkã\x0f\x03\x06\x89𤢮ÇÍ\x96\U0009d61bæû\x13\U000d6b05\x9e\x17]¤æ=ýþ-+\U00087c99ú@Þä\x8f\U0007b43dÈÅÐ\xa0\U00044914dt\x18\U000acaa2Ñ𠭧Îl\x95\x12\x80r_\x05\x7fX𭾹\x80 _´\U0005685e\x0côQ\xadp#\U0010f336ö0Ý𫺚À8ßI\U000a4266C\x95?\U000b9f89íc\U00093136ô\x7f\U000c7cf5ð¯ç\x92\x9e¡\t\x9e\në;xnÐ\x7fK÷\x160\x03\U00011e91º\U00056d52Òân\x7f\x9c£PòJ¯\x0e\x95Ësà\U000d5f21àWq\x1d\U0005537câ\x12üñ,A.õ\U000d4ed0²\x18¹\x04´\U000b0bfd\U00076064𥍜\x9cæ\x7f\x0e\U000d66d1ð»·\U0009a24e«ª\x05^¢\x94\U000ffe20´R\x12\x03oI¥\U000fbabb\U0005fafbd¦z\U00109282·\x00\x16{\x18¹\x8bÈ\x0e\U000724e4æ\U000952cb¦%Ï\\Ïù©\x14\U000be7a4\x9b\x80Þ_¼\x1büôÌ\U0009e317"\U00101265\U00081487VÚ\U000a04ceNÉ\U00033757H®\U000eb090\x8f\U000fc554\x10@=Èü´ÕÇU\x0b.á\\\U000da578\U000ef6192Ó{#Ë#\tû\x12ÝO\U0010ea04\x9110\U0006d89b\x06ú\x93µ!ÀÇ\x1cYzÌ\U00013ebb\x95F\x8bö\x16\x83ó\U00073d10þÛ\x0e{Ö#$\x92þ½\x96\x03{]s*P8\U0004afddçéô\U0008bc6e\U000c6992\U000a2405\'\x0er\x967\x19?𫑺\U000f704bTp_#µ?øØ\U000da4e4\x9a\U0002fd79w/\xa0\x9a\U00085027&\x83\U0007717b\x9f\U000c29a3g\x95\x85䮒Ø~\x1aé\U00062e31\U000a0fae>\U0003753b\x83±\x1f4\U0008fea7\x86Ëë\U00044222\x08\x12z\U000addc1;`\x81[Öv½\x83E\x9a\U000efa62𪇷\x1aᄾÍ\x9cI\U0009a2f2\U000f8466.2Zû\U0010d5ee¤\n\x9c\U00102a22\n\x16\x81\x83o\x10É\x9c\x91°c\x94 Êi\U00091cd8\U000abb02>\U0009af48¬GRÿ\x1cDï\U000efbfamqZë\x14__Î¼Õ\U0009b100\x00\xad®JM$ÐAäX_\U0001e0b4j\x18\U0006b062Gt\x84>gö×\x1d\x8cﳇn쑇\x0c\U00086a06TÇ\x15ë"¶Æ\x01\x84\U000f2fec\U00093db5\x80tôý\U000c88ba\r\x1dꢫÔ\U00104436\U000e1136Â\x87\U000b04ec½ù\U0010f249)Åg\x05÷´ýæPÑ𗕮J(𗂶\x15\U0008e79c|ÚÍÒ\U00032663ö6\U0001fd18\U00094444\U000efe9b\x8e!\U00066078ᒹèqÝ\x08^𥓰\x9b¥Q\x00UáûÍ\U000863d4~\U000375f1vø\U00096c5c\x94g%§£Oi<ꆨ°\x1c\U00011e6c𨴫\x82Õ¡\U000c06ec\x1a\x88G\x07쐢Ð¦\x9e\x0f\x82\U00035a3d\x99ìr\x8ft+´òja\x8bß\x18éJpÕÕ\x12\U000b3ff6#&çyaè\x14ÊÍß2+\U0003c7c2\x99÷¿\U000bbdbf@cË`[a\U00056945\U00013b40#ÕW·\U00095456Oo\x93ñu,\x90IÿnæRS`\x8fOß\U000d843ds2\U0004149fj¯z\U000cd11aj*(a\x95æ³Â\x0fæ\U00097da8o\U000c8015L\x8c\x10\x07\U00072601Ó\U00078826\U00037938\U00093845\U000d92aeoÅÉ\x1e¿ÓÄä\x12\U0005da52\x17ñ\U0001b5ealÐ\t\U000a1bfcÙR«\xad°n`\U000824bdù\U000a900b\x9c\U000ef583𥒖\x99\U0009bc4eÉñ\x87}ÇȬ\x13\x0e¸`d½ø\U000dca1fÖx\t\U000383e1𧈩h\x02\x7f\U000cdd66mﭤ\x0e\U00062567F.㼂\U000fef8d{´\U000bf910·v𪧀'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '𨮅UX>É\x87\U0004b9ecFf{¥\U0008a81e%ü¨\x8b$\U000103e6\x86\x93Ëêð\U0003cab8zóZ\U0004ad55\x81ÅÇ\U000abb83ú\U000ac215\U000ffa08Y;r«bÜâ\U00039b60I\x98¨\U0005ef61ä\U000dddabG\x07¼|\U0006f298C\U00086d69h\x9c;n.\U000fb072â"î-\U0009ff2d\xad\x1f𭮨\x1d7Ã¹¢\U000e6473ü¦pØ¥d)\x84\x91ì\U00068eda\xad:Þ𬰽\U000d6376\U000647f7]\U0001654eèl}FY\U0008640cE\x1eÄ\U0001ce15Âj\U001061fdX9W\U000c7db0\x01\U0006e5c3+¼\x1bÆs{è9B¡𫚃ÿq\x0fÿ¡VEºÆ\x9e\x05\x98è\tyçvó\U0003882aãÛ\U0006539e𠃥¬Ò\x11\U0003b7c1»z÷\U0005ef62\U0003d7ef\U000dee1c·æ\U00098e06ÿv\U00066c4a\U000b047f«Ú\U000c1ddc\x0e\U00106521\U000e88a0¡ 1\x91æ²ÚV\x14]\x92`+¥\x15AÔ\x88\U0001a28a\U0001ef2e¾\U00057e82z𢆣\U00015949ò\x12m\U000995a2k\U000baa48eü}1§Ún=0ìà\x13d¿]Ö\x96\x98\x0c\U00083677N\U0004aca7\U0001e37a´\x163\x99Ï\U000c5207z\U000742f3õùbB;¿\U00072312A\U000f2ab5¿P\U000f2beal\x87A\U000750d0çüð\U0006d659\U0008243c?óAh\x87(¼x¾Y\x0e\U00064a67ä\U0001909d^\x98´\x13`\xa0돳\x1e\U0009f5087\tû/\U0001eb12\rk~\x99õ\x9e\U0006b9f2áÏÐ\t\x89ÅF\x01\x1er\x0e\x04aª\x95\U000cea85[\rE\U00093ab5¯ÐZ!V¸\x9cQ\x00\x80V\U0004077f\U00079a64\U000eec9f\x02¬Ú<T\x8dW-W\U00059d20\U0010c12aÛ\U000ab474p\U0010bc2d\U000bc541\x0e\x88¹\U0002fc4awX\x86ÝoX\x93\U0010c40bX¥P©`ÛL\U000baaa0\r\U0001dfe2Èé\U00069d66zZ¬(\x1a/\xa0*GÓ\x8ch]\x7féS\x0b\U0006cad5\U000882ba5C#i⢯cl>+K\U0005f2b0\U0001e28dJj\x88𗃍\U000d440c\x94\x18F\x03E\U00039aafÆ\x85\U0008d653\x0fÉR¡çßu\xad\x81f´\x0e\U000c49c3tÂ]ª\x93\x8ekj\U000d963fì×\x9e\x89\x83HK侮Ð\x81Yd\x08<ñÕ&ì\x8c¬\U0004108b\x97\x97\x04©tÿ\xad\'PM\U0008d215OÛ\U000ebf12\x0fb_Úhe\t\x1b\U000b9a76$\x02û\x1dà\x8a𦧁iÑ<\x15÷\U000a751bwáû\x17âMÜêq\x13\U0004b779\'O\U00049be0\x07\U0003a564\U000ea61b\U000723f0bIÇ\U000a4292><B\U00012a21ü\x82Ù434 \U000d611dÒÆ\x84\x04\U0007b010¶¡\x01\U000b73bfº\x18WÎ\x0e\U000a7f37ú¥è𫔵ÐÚ\x9aê×v\U000ffeb1\U000a57b3ã5\x00ê\U00052c0f¶¬\x9cq\U000e08e2Xí\U000adefaÅ*\U0004d147)\x92¯O\x99ç\U000a816fìYY#¸\U000e1aeb\U000c660e\U00042783M𪯥\U000f0f8a\'ÀL\x0bÞ»𡂉VA\U0003cfebÑËc\U000c17a6;õª\x82\U0007f38b\U000392eb\x93\t®öL¶ö\xa0ñÝ\U000d6813\U000ffa9aMÆ\x1e¢Í\x99÷\x1b»ÇZ\U00103702\x87𠙊$ûim\U000f8d55¥âëo\U0004d994\x14Ú\x0f\U000f4a7ap©\x06;µ"i\x8aE¶¥+R\n;c\U00069149\x94Î\x1aÞ\U0007ea1e\U000b8f28\x8c\xad&Ø)\U000c235f\U000a94fb\x95\x8e\U000d32fe\U000def20SXXØ£\x90¿\x10Ça|Äx\x1cß\x1d\U000c739b\U000c3083c]nM\U000f92b5\x95Ôè\U000a59cd"ó\x99\x00Ý\rà°\x82½]Ïwkã\x0f\x03\x06\x89𤢮ÇÍ\x96\U0009d61bæû\x13\U000d6b05\x9e\x17]¤æ=ýþ-+\U00087c99ú@Þä\x8f\U0007b43dÈÅÐ\xa0\U00044914dt\x18\U000acaa2Ñ𠭧Îl\x95\x12\x80r_\x05\x7fX𭾹\x80 _´\U0005685e\x0côQ\xadp#\U0010f336ö0Ý𫺚À8ßI\U000a4266C\x95?\U000b9f89íc\U00093136ô\x7f\U000c7cf5ð¯ç\x92\x9e¡\t\x9e\në;xnÐ\x7fK÷\x160\x03\U00011e91º\U00056d52Òân\x7f\x9c£PòJ¯\x0e\x95Ësà\U000d5f21àWq\x1d\U0005537câ\x12üñ,A.õ\U000d4ed0²\x18¹\x04´\U000b0bfd\U00076064𥍜\x9cæ\x7f\x0e\U000d66d1ð»·\U0009a24e«ª\x05^¢\x94\U000ffe20´R\x12\x03oI¥\U000fbabb\U0005fafbd¦z\U00109282·\x00\x16{\x18¹\x8bÈ\x0e\U000724e4æ\U000952cb¦%Ï\\Ïù©\x14\U000be7a4\x9b\x80Þ_¼\x1büôÌ\U0009e317"\U00101265\U00081487VÚ\U000a04ceNÉ\U00033757H®\U000eb090\x8f\U000fc554\x10@=Èü´ÕÇU\x0b.á\\\U000da578\U000ef6192Ó{#Ë#\tû\x12ÝO\U0010ea04\x9110\U0006d89b\x06ú\x93µ!ÀÇ\x1cYzÌ\U00013ebb\x95F\x8bö\x16\x83ó\U00073d10þÛ\x0e{Ö#$\x92þ½\x96\x03{]s*P8\U0004afddçéô\U0008bc6e\U000c6992\U000a2405\'\x0er\x967\x19?𫑺\U000f704bTp_#µ?øØ\U000da4e4\x9a\U0002fd79w/\xa0\x9a\U00085027&\x83\U0007717b\x9f\U000c29a3g\x95\x85䮒Ø~\x1aé\U00062e31\U000a0fae>\U0003753b\x83±\x1f4\U0008fea7\x86Ëë\U00044222\x08\x12z\U000addc1;`\x81[Öv½\x83E\x9a\U000efa62𪇷\x1aᄾÍ\x9cI\U0009a2f2\U000f8466.2Zû\U0010d5ee¤\n\x9c\U00102a22\n\x16\x81\x83o\x10É\x9c\x91°c\x94 Êi\U00091cd8\U000abb02>\U0009af48¬GRÿ\x1cDï\U000efbfamqZë\x14__Î¼Õ\U0009b100\x00\xad®JM$ÐAäX_\U0001e0b4j\x18\U0006b062Gt\x84>gö×\x1d\x8cﳇn쑇\x0c\U00086a06TÇ\x15ë"¶Æ\x01\x84\U000f2fec\U00093db5\x80tôý\U000c88ba\r\x1dꢫÔ\U00104436\U000e1136Â\x87\U000b04ec½ù\U0010f249)Åg\x05÷´ýæPÑ𗕮J(𗂶\x15\U0008e79c|ÚÍÒ\U00032663ö6\U0001fd18\U00094444\U000efe9b\x8e!\U00066078ᒹèqÝ\x08^𥓰\x9b¥Q\x00UáûÍ\U000863d4~\U000375f1vø\U00096c5c\x94g%§£Oi<ꆨ°\x1c\U00011e6c𨴫\x82Õ¡\U000c06ec\x1a\x88G\x07쐢Ð¦\x9e\x0f\x82\U00035a3d\x99ìr\x8ft+´òja\x8bß\x18éJpÕÕ\x12\U000b3ff6#&çyaè\x14ÊÍß2+\U0003c7c2\x99÷¿\U000bbdbf@cË`[a\U00056945\U00013b40#ÕW·\U00095456Oo\x93ñu,\x90IÿnæRS`\x8fOß\U000d843ds2\U0004149fj¯z\U000cd11aj*(a\x95æ³Â\x0fæ\U00097da8o\U000c8015L\x8c\x10\x07\U00072601Ó\U00078826\U00037938\U00093845\U000d92aeoÅÉ\x1e¿ÓÄä\x12\U0005da52\x17ñ\U0001b5ealÐ\t\U000a1bfcÙR«\xad°n`\U000824bdù\U000a900b\x9c\U000ef583𥒖\x99\U0009bc4eÉñ\x87}ÇȬ\x13\x0e¸`d½ø\U000dca1fÖx\t\U000383e1𧈩h\x02\x7f\U000cdd66mﭤ\x0e\U00062567F.㼂\U000fef8d{´\U000bf910·v𪧀'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004367s
====================================================================================================
2025-09-19 00:01:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004451s
====================================================================================================
2025-09-19 00:01:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "<script>alert('xss')</script>"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003894s
====================================================================================================
2025-09-19 00:01:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '\x8f¼ø\U0004361fï/Vå\x96Éú\x14\x13í¾\U000ec724oð\U0001e322ì\U00015dd56\x00-\x87ï\x14ç\x8e\x1cú\U00109d94\U000e7a79\x12\x15\x05éÌ\n\U0004d0e87á¤Ã\U000f336c+\x88a{\x1d\x130\x14Õ÷r\U00089f49\U000d769dA\x16Î£\U00060737Ü`÷OÛ\x1dÞ\U0005f7ee\U0010fc97¤J\U00044bb5\x9fÇµ\x12&}èª\U000954a1\x06q\x07;ã\U0003e09aè\U0005a762\U00093a31ëõ\x812\x90\U000b29a1ný\U00074598-\U000b3e8b¿ò\U00037d56\x81²\x83ô\x87w\x92Pe ¥ÓÌ\U00034acd\x90\x85Ø¼ÞÖ\x01\x93íøµZ¥±\U0006853e\x99Ñp\U00106a8cÏ<µÄÅ²°\x18\x1að𘮒G¹\x03\x02ª°ËK:Óþ\x9dP\U0005779c`¬\x13ýì\x87\r\x84E\U00054b95âÿ\x834à|\x98g/\x03D3\U00069bccË \U0007db34㌡\'\x9f\U000c4242\x82\x9c:\x90¼䁼\U0004a5f3\x16\x06\x9e\U000938271°ÏüÁp𣺹Ô¸\x0f\x81\U000fe945Z#6\U000f2492é\U0002fc5f\x02«{RP\U000672f4Û\U000516d4\x83ª\U0001e8de\x05uà«\U0003d467aé\U00108d52\x92út\x12×ü\U0009c9e2\U000b2547Zý\U000107b2Jpñ\r\U00088dc74:\x8f\txÅ&𰓃¿\x17â\U0004b45f6\x1aJÉ£¼DáJ\U00068de1𢓐\\\t\U000aafd9\x9b\x8f\U000bd566\x99\U000685b8& \U000c5b64\'Î\x97á\U000ec14b\x95\x06lüÄJ\x97\x1aÄ¿\U000d9a0c𩙲\U000a3de5j\U000a1a6eÖ=L%\U0009737eú<Ï\t\x15²\x9bð\U00075658Õh\x8cF𒀥l\x89\U000533f6\x1bÇU\U000cbedb\U000ae81bÏ\U0007e00auÜN¥\U0004d67e\x83§\U000f7e81KLºïròk}𨷘F´7Æ\x93:\x7f\U0009d486\U00031b9dÞ\x8c\U00064c68Ñ´𬀍¢]\x93Bà\x11¥u\x1d\U0008cbf1ws▙\x0cö\xa0Iz\U0005daa0\U00106932é%𢞛&?í¼»\U000e1e53\U0009c0372n𨷈ô\U000143d2é4\U0006d465\U00103df94Î\U000138f0\x80.U𩹹§É\U00083e75y|\U0006f4af^éuMm#~\x9a\x12¦)\U0006c145𗽋¼\x10g\U000b1c17\x03jïMVH\x02A\U0009215bt\x88¸7³𧅺gWM\x9e\U000378c6\x1b}\'\x17#«h,\x82®¶.\U0003f8f3l\x01Q=fÆ\x94\U00040343Oyíð½½\U000ecd56\U000e8d3eMJ\U00056af9\x11±\x8d\U0004839f𦠛矡:\x89A^\U000b6159\U000f81a6]\U000e416fßN\x84`\U0007fd47\U000c35f1º[mÁ諫Äßg³\U000a34a3\x02\U00042788\U000928352`\x88\U000918cc\x1fZ\U000dacba\U00089874³ \x83~\x91\U000ea87bH\x9að\x9b§\xa0\x14\U00060c43∺õ\x07\x82cQW´\U000412b6\x83Á\U00056db3ß2îÑ\U00063853\x06Ì𭩒ó³(\U00084ae4\U00092faa\U0004a38a𞹟≧\r\x1e\U000bea25\x87©Î\x04\x83\x93¬\U000aaf6cyX¥ÿ|ÿ\x87\U0008f409êf¼\x83\x18îÓ\x0e\U000d4656\x19\U0008ff6f¹2\x96CØ\U000e97a2>E\x1c»ÜÆ?\U00088065©\U000f8720 m%ð\x1c🞚ìW\U00031a5d³°ÑL\x8fï\x1f$Ç\x97\U000eb254\x87\U000e6109©f\x8aO/\x93Ò\U00033f16#\U0003e0ff\U000d815d\x88\x7f\U000cca12\U000e888d\x1a\x8d±BÎÁ¨㗡\xad:aß\x19\U000b4ea2\x80\x8c殘\xa0:\x80@YpDë\U00052b79ým\x9a\x07Q\U0005140c%HÀ9§?\U00100bb7n\U000dd766Ã+\x02\U000cb26a\x13\U000947fc\x8aù\U0005e598\x11¸Ð\U0005b906$\U00056e69\x81\U0010bb1bvð"\U000892b9Ð\x14}ø\U000395ae«\U0004bce4‾£#ô\x8f½»¡\x8fx\x96»^\x81\x88UYdÂº\x14\U000ae3afZÊ\U00051b327P\x8b\U0007fdc4Ô`_À\U0007ad05Óèù\x97Æï\U000b0e01\U000b59f8m}p\U000683bd0\x7f\x06Ð´Å\U00057fb0¬Ö\U000c1d44\x14QKrÅöù\U000a4aa72î\U0006a4540\x8a\U000e23f4è\U000722be\U000fd05f𠑾ú\U000eac38\U00054022K\x1cö$Ï\x8eÙ<¢,\U000e29a7ÚÑð~\x9a\x19>&\x17jS¦¯»\x99F\x04\x1c2\U000e04e2£ÔL]\x97Ù𤩌\U000b48fdh**\x8eIïÒZ\x19ùqw\x98ò\U0001d3e8?饕Mc¨#\x05溙ö\x99z~𬯡G"Þ&ióÁ{\x12ò>\x9c\x82\U000980da\x80\x99¸¡¿j\x8bÜD^u÷\x80Y\x8b;\x18"\x93\x11\U00082af7\U00070e92\x9b\x04Ëq\x9a\U0001a936w\x92\x0bßÈÝÉ\'¸\U0004324d\U00082176\U000f3028æ틊ùØ\n\U000b2b2e\U000bb50cZ\U00083ccb\x87\U000c8107\U000b8491gjØeæ\x89W\x01ß¨5iÎ\'\x14\U000be864\U0005ae94p\U00078e60\x91ÞÓ\U00067f6f>v{Ñ\U000e2ad5Ý¿<\x113%¦ÊæRG\U000c61bf\x9a #-ëd°\U000ae7b3\x1a¡¹\x06\U00109575£\x8e>\x1a\nÙ\U00033c9f\x00\x04êⱲuQ\x82\x9bª\U000fdada\U00069f58\n\x85«䀧\x03ãæ\U000c090b§}\x14Vµ3¦pg\x9a\U00109867¯©6\U000916c3\x17\'=\U0004b9cb\x80\U000541c0\x13\x11Ì\U0001117a¢p𦞆Ñ»\x90\U000a8305\x8a\U0008515cù\U000b7ae5\x83\U00091fb6\U000ee5b2³×7-\x9c\x84ûn\U000c2df8\r#YÙ]i\ueb10Ýº\U00014bc0\x85åÍ\x1c\x14©\x0b´\x05éK'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003851s
====================================================================================================
2025-09-19 00:01:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 43, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 43, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003918s
====================================================================================================
2025-09-19 00:01:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': -517240818}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -517240818, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.055415s
====================================================================================================
2025-09-19 00:01:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['%b\x95\U000b31c3'], 'password': 'Z\U00105100\U000aa8d1þ\x0c\x00\x00\U0009a5d4é겸¢ýöÈ\U0009e7c38r\U00042562𪲨§\x86\U00065898-\x0b\x04\x1d\x8c\x91é\xad\x88ö8Èæ\U0007e0f0\U0007e56bHÖ𤎯\x9e\x8e\U000ee51f:±ìA¨â\U000195d1\U0004be01\U000b0a1bB:ã\x8b\x13IGE\U000f8d89Meé\U000ff97fgÎóS\x9aá%𫴑ÿ\x84(Æç\x04\x89\x00 rª\x17𨴅\U0009836cùK÷\x9bþ\x10\U0005e687Y\U000c04c9\U000365e7J\x88\U000aee2f\U00094db2&\U000874c4\x9b\x9cý\x11\x8a*\U000e255d\U0009f1e6Áý\t\U0009d240\x18\x89\x9aRz\r\U00100c349¯\U000df977°\\Ô\x1fÞ\U0003da34}Wách\U000e6080\x91\x90\x0c\'\x10\x12\'\x10\U0001b962\x86~\x9c𩝌\x99I\x04t\U000adee8¢\U000e6663\x0c\x0c\x12Ø\x95ö÷A¯\x83\U000ca6c8\x00²\x8f\x87?4?´\x84\x81z[V?§¿)\x00E\x88äÅà1\U000b9142\xad¿\U00092a35Á\x83]\x7fEFßMÚd6\x86La_"]7«Ý©\x1f·l\x1d\U000c8046^5¨öË§E\U000da476\x07\x8f\U0010a817F\x9a\uecfd\x9d£\x8b\U000a9fb1\x00\U000a0112Y\U00096ebaüZ\U000763ac\U000dd867\x88Ì\U000392f9&\U000190a5\U0010028b_\x1e^,Ì\U00082dda\x8eNV¹õ𠡙ýhõ°êV\U000357deÑ\U00053a61\U000b5b3d\x90K¦\U000a4915\x85\x97쑯ok\x12Z\x82W².\U00085004\U000726a1éØµ\x16ä\U00082ec2\x10Å\x85Z»oA¹¢Ó\U00087f56äÂ9\U0004f485\x9a\x1fY\U000bb3daÈï\x89d\x85Ð8Qó\U0004443bÈ²\U0001e743\U000e6475\x19Ó\U00031c70n\U0007e5e2Ûn\x15\x1b\x05\U000de675\x05dB\x1a𥕹)\x86\U0009a6f0Ð<\U00075e1a\x91\x02\U000d2556\x8e\x8bÌ<´F^\x84ç-úl\U000eaad5Ç`Þß\U000610952Ö\U000bd6a4),Oª2@qÈ(𭬈;R\U0002f2c1\U000dcf9f\U0006607f\x0e\U0001bb34ºº\x1c^P\x93\x8d\U00059320Ü\U000b55de3Å*\x1b\U0005bbe8\x19Õ\x12\t\x1cÍ\x7fÛ𫌵;\x14Mì\U000b2c2ak\x0cI\x1a7z𥰱\U000dcea8´\ue813ø\U000a890a¦îÓ¤\x863¹\x1d𡪽éí\x87\x00ý³\x17\U0007cbb2ù\x90\x82\x83j\x12\U000d38f0\x10\x8a\U0009c4ff\U000fb163¡\x07\x94|Ú%\x98\U00044439\U000a6622nõ\U000f37cf±£Ñ-N\x1b\U0003922fÜB.Ó\x8f\U000a6e8d\U00086bb8\U000aedd6Ö\x08È\U0007bcc2\U000f0f2er\x00AET\U0009485aî\U00077707CVÓ\U000e6290\U000d891f\U000a16d8\x0f\U0008bbdd\U00091ebdÙ`Ô£\x9e\x10\x89¾£ûê\x19ÚûÛNb\\©æ\U000599ab\U000d5b2bÌ¸\U000af6fa\U0001b91e\x8e\x9fÒ¹\U000c8661\x17\U00033547\U00074191½t\U000d4a90Va\U000850e5\U0004537bÓ\x04^«\U000f7fe6"o_\U000c0303\U000fb4a0§:øÜ𠬌«Ëõüh\U000dee71þ\U001077a1\\\x10\U0003555e»Ù\x9c±Õ^r»Iãý)æ³\x96\x99foeY¸ÿ:\U00015dc7®KYç\U000538af\x1dÙ\x8f£\U000467cfì&ïet\U0004fdc0\x7f\U0009f5b0ð\x0b\x80V\x94\U000c3e75\U00084027¾\U0003dc15\x10¨C£O\x1c0`\U00066798\x1eÆ\U000553e2\x15\x9fÙ\U000c3024\U00012a45\x04\U00072eed\U0005d8b7\U000f7cfa\x7fÓf).Jí\x07\x9fAÏ.*\U000ce694j\x7fë¦Ñ\x8bæüT¦%Ú=P\U000a2ffd$\U00012cefI\x88A\x9cùq_R\x8d}\U000c5531\x88ª\x07xø\x01ûÕ\x84¬.\x83\x1aý\U0003dcf8.\x1f\x95ûe\x00×\x99i`.2={\U000d73e8¹\x88\x83\U00089509\x8ch>é\x9c\x98Ã\U00033824\x84RÉ\x17-\x88ú·Ö®\U000baf43©ëÄbã\x92\x93\U000a2ce4ÂõãoH_𥦉Ê\x11Zz\U00095937¿\U001004e3\\0{\U0003984dOvtHìed9W\x1e\x0b¿\U000c2f21\x04\U0010808b)V:ñ@&\x07µ\U0009a9fdx¦\x9d\U000b2614MYÐ\U001044e5ZÇ(ý\U000a2fa5+Ã¼ó\x8e\'Ð\x96\x02\x99\U000621bb\U0005f97c똯\x94Ñ½¡\U0009db81l*qH\U00057ae5%<Ih\x86b¼I¯¸ï\x14\x9e\x9b¾ÔïÇî5\x01ÃH7\U00049116T\x02G¸\x19´\x81\x17\x18e\U000aca7b\U000cd94c$+[\U00058114ù\U00045aec!\x16Â\U00047d37\x94§¿8\'~y\U000446c6tjæ\x8eg\U000b65d9\U000a7ff5Sv\x11w\U00073948ó\U00033fdaÌ\U00014f12ìá\x16\x8d\x95´\U0008153d\x19\x93-yáó\x83<\x07ª𤟨AB\U000401bf\x02\x8aP\U0007e904\x90\x11\x8a+Ö\x9fT×\U000729c4ºî𘖒\x0b´ãY¸\\>\U0005201bÚá\x8aÎ\U00099382]©ÃÂßF¦ô^\x96e\U00104f1b\U000a0e00ì\x1do\x8bö\U000542ecÈ\x8d\U000a04a9\U000824d7´¾\x1dX\U00046e9eÿ\U00014a3aE6\U0009b623\U000b7389\x9dÌ\x1aÒú\x87ÊaçâØæå\x90<ºD\x9e\U00087e05|¶dÏ\x7f\x82𘑀\U000d2608~\x87Ø\x7fÀh\U0005a12böÝ\U0007c8d9«8\x7fÖÁNÉÝ|+¦\U000ec198Ï\x8d\x88Â¾\U0009644fåá\U0004bf67\xadF\U0004883fB\x1c𛱆\U000920ef\U000fbd55à\U000a178fZÐYëRû\U000d75736\U000a7ba0NÈ\x01mÂ\x8e~!T2\U00085b27`\U000b7aa4iv¤Ö>\U000f3e7cB\x00yÀ\x84M]\U000fcfbb\U000d699düw\U000a35ceÏ\x95\U0005886bA\x9eBu\U000ed9f3\U00058b44\x02|è6\U000802af\x9agW\x02M,Fì_\x82𩊕Û\U00061e0f\x88<\x18\x97\x0f4\x0cÙØÒ\U00074c2a\U000b06467\U000a13f2Ç\x83\x9d\U000ad211gKÖ\U000a575a@$\x10sC\x9e\U000fa11cØ\x1ax^\x0bæ\x8c\'/[]}É\U0008deb3v\x17\x82\U000433eaÒ\U0008bed9=\x1a\U000d6011{0Ïß𑿕ç\x82¢(²!\x10_y«\U000f3edcNù\U000f2617Á\U00085219\x15\x04ú-pI,ÑI70@ XVñ÷×.t¿\x9b\U000d9d49Yî1|#\x1e\x8c`\U000c42bb'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['%b\x95\U000b31c3'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00368s
====================================================================================================
2025-09-19 00:01:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['i\x08\U000b8e60Û']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['i\x08\U000b8e60Û']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['i\x08\U000b8e60Û'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00373s
====================================================================================================
2025-09-19 00:01:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '\U0005abf0\x1d÷\x8aÖ\U000107c9z={µÎ\U000c6384%RõGc\U000a0f6a0a\x87\x0eoU\x8b\U0008b8023\x19\U000bc441\U000e0083\U00063949{·B\U000b9994æ\x92E©T\x92½Ò\x1b%ò\x88K\x95\x0eO\U000f560bþ\U00051ffd\U000ddd84ªu=c\U000e2157.𤪇\x98Â\x18t4Aûäd©)ea®\U00046ace7L\U000ace6e> \U000fae0aÚ𤙴NÓ\x08@O\x8a²ñ\x95\x8ab \U0010321a\x01\x99´¼W±G\x9f\U00045952\U00075303s\U000ebdf5\x15?ð\'©\U00074958qù+\uf4e2\U000d86f2嶏ú\U000c48ec»e\x8c,-¯ûV)\U000f0b30æ¸Ê@+ó\x04 \U0010808e;çI\x8e®åÑV\x12\U0007128f´-Ê\U000baed8\U00036026\U000b5e12=uø\x82%Ãè鉦\U0010abc8\U0006627e劜nÈËó\x8fÑ_kvS\U0001bbbbG\U00040d6b~\x180þ\U00048015\x0eE\x19½\U00081bc2\U00072e29\x89Ì\U0003e8a9\x1eAn¸iÛ¥\U0003bae0?ÿ\x0bÑnüÅ\U0010a9a0\x88èGÏÞ\U0003dfb7\x1c9YqùQÇo\U000f0474\U0003397e«ß\x95¥û\x1a#\x90\x97¿«𧧞\x9c\U000d6735nk\x7f\ue550?r\x97P¥\x7fM&W\'\x00ퟨMû\x9a¿¥Q0\x9c:åßÃU\U000ff977.\x88³\'j/4Æ4\x97ÖMz4G.\x15\x16PÆ¸\x9a³\U0010f6d5\x8a\x9báv\x0c\x1cí#\x1d\x1do£½ô\x9d\U00042a77\x1d¢\U00042025\U0007e711\x8e¦\x81³\x87½ÂL\U000d3706ÿꙩ\U000796d8ÅÝ\U000d560e\xa0G\U0010851d Øqç\U0009e06a\x1f\U000e4487ô_ç\x7fãü\x8b¸,±ÍïÍ\U0008e0c4\U000458c4O\x96\x83;Ë_\në\x8c\U000b10c5\U000f6997\x1cÞ\x1f\x91\x19)tg\x06æÈ[\x1b\U00087704\x9c\U000b00bb\x97úÇåÃ¸X$\U0003b4edê\x1d\U00012d87ýÓ\x97\n¥éqµ\U0003aac8\U0007df3d\x07Uã\x97\U000da693"Ý1\x8e\x0c\x80q\U000e918bñ\U000e9f9e¡°ü𦂶%.½{\U000ea28d)²&\\.½\U00084751¶ES\x81Í«\U00058cecªÌ\U00088ab3𨞷\x06\x9drÎ\naEL%\U00046fd8,Ü\U000b044b\U0003da60iÛ\'\ueb63\x8b\U00076ec9\t\x93𥏳\x1e\U0009b858\x1b\U0007bbfa¤\U000ff3ac¸惇\x82F£\x91´\x9e\x12\U000e00e0Hu1 õÂHÖ_\x13i\x15Sz[Ö\U00078a68\x8b\U0008f7d8&\r\x8cx©\x07\U0004b557𢵍\x01\x06\x08\x94ðöÖ\U000deeea2ö\U00085104¯î\U000e5568%¹f%\x7f\x18sÿ½t¦R\x18ßd(¼`Õ\x9d\x86Nz\x93&N\U0004d1ee0® \x9bÑÎ\x9a\x15É\x83\U000df81f\x10\U000ef515👜Ä`æ\U00018ede\U000cd8cb\U000dd9aa\x99\x9bF´\x94é\U000be817ø~U\U0003e554nv\x94§\U0008ccc5KqÌÀ\x12\x06\xa0åõ\x97°~\x95W\U000d6cf1Å\x00Æ^@\U00107ed2+\x88sª\U000a9cee\x19ìS\x8d,\U0004b185\U000942ebØÄfú0\x04\U000bc0d1\U000bf248\U00071616\x0fª\x88\U00074435ä=𥷠\x9c\x99 ç2\U0004084f\U00069690\U00064584\x80\U000af8dfë\x9b\U00040849%í\x03Fy.\U000425bdPQø\U0003616f鸊¦ç\U00079ebfûã\U00057e60ÎZg\x93<6\U00015db3þ®?ãÔ\x1d\x1d\U000524fb\n³\U000c6015\x0c\x9dú\x0eò\U000ee960\U000f7049Nö\x99±êzZ)\x7fF\U00078715+@\U000f72f3Õ\U0009a58f\U000ff818\U000c7333-nEÎ\x83\x9c«âO\x83XÚÞ\U000c6f0cÂ\x98+\U000990e1à\U0005c5be\U000cb83f\U001090d6\x98\x7f\U00069a6c\xad\U000629e1\x8d¬y\x17\\îSÿ\U000d6c31\x02\U000e04bbG~\U000f4ede\x13\x1dQ\x8c¹¢\U000f6db2\x10¬é\x86"\x13p\r"\U00014fac\U00073d61\U000f9e97Ñ[ñ±ù\U000a4dd5-¼\U000640fb\x11|\x0e𰻧ê\U000d9274h䊶æAç\U000d3292©k\U000bb22e1\U000b3d12\x94\U000f63d6Í5¤\x03)\U000c1117\x9a»+\x87¡\x8d\U000b248bö\U000c8802}\x91\x8f\U000669be\x98\x8bq°\U000ee477¨ÅÅ\U000b8b82No\x9b\U000486a0s¯Â;,9ïsü/Í\x87=£\U0009a623Ñ§\x82\x10Ñ@î\U000a34f3\U0007b405\x85ò+d1º\x08~𨗜𬁘|\U00109dffô\U00070203\U000f7edd\x85\U0007d943q\U0003d6d8«(\x1b]\U000d3113\U00107f5b´V𨂃\x0bñ\U000dec66\U000cf5f6Ï\x10ÒÉg\U00064cfd𭒴ë\x9b\x95ç\U000e6135°Iý\x84Ýg\U0008f488Ñ\U000b4d47\x00ã!a×Ì\U00051f07\xa0è6\x9c\nòÕ«\xa0mê>2Üó\x97\x1a$!k\U000e160e𔒴\U00059f15Ý¤î\U0005b631ÜÅꔗ\\%\x03\x92BÓ\U00078dcfzVñ,>ï\U000da0d6\U00108b96m.æK®Ï\x0cyûÚ\x11𤮧\x96(\U00037a66\U000462bfÿ\U00073202ü檓nFw9XÉ!\x17ì£\ue567\U0009a7e0$e\x8f\U000b7b6c\U000786b7\U00034457è¥qq'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003649s
====================================================================================================
2025-09-19 00:01:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': 8065}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 8065, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003497s
====================================================================================================
2025-09-19 00:01:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 20334, 'password': 'âa\U0007cc66\x86\U000e632e}\U0007af69\x13Ö\U0010718d}\x0bæ\U000afbd9Ìú\x16F\U000af19a»|¶©ÇM\x0bv\r3sI\x97¼³Ý\r;¨q¦JãªßÊ¹g5f\x9c\x8fr\U000c2aa7È𬺱b§\x11î@ñ¬\U000bfae7\U0005ff9d\U0006a484\r\U000b2401\x08Î<¥\U000adc41¯ÀëÁ¼\x1b\x88𔓀®TU\U0009d345\x8fSlø\x8d#\x19\U000a901b\U0010034dQ\\ë¤\U000cd296\U0008c861\x8c\U00077f29\U0007441e\x88\x8dT\U000b9bb6ZKO\x14\U000ce88bIú\x84q\x7f\x85\x80\U000c23f2øÖ\x17\x19ø³0;\U000aff84Ã¬Å\x85äo!\x08\x12^\U0009237eò#\x8eÏ\U000999b0\U00063e51R\x07×\x9d\U000f1d28\x7f2\U0006b122\U000612d4\x13ßË\x0cÑº\x957\U0006155b\x8cý\U000e4bfdÉ¸a¿Ò\x8f¹\x81\U000cc596\x00÷G³«s3j4°7´\x03\U0010bb1eêË\U000e1382\x8fê\U000c4747\x88\x07\U0003ecd1𭇄E\U0009988c𛀸\U000e13dc\U000cc624ó\x8aô²{«å\x98W<\U00099ad7ç𥨳C\t²\tÆ¯𝝰\x9ctôÅ¶Ï\U00019f33\U00066c12\x9d\U000f541bHÉ\x0b¬}èó\x99ØYÐ\x18ãì¢\U0005dbf4µun=\U000d3c86\U00063790ÿ\x19sA¤kvìp\U00043bae\U000eaf40Ô¥\x12\x9b\x93m\x86\x95¢29ù×ã뿕\U00085ec23ß*\x16Ôº>\U00067ee4\x92\'#·\U00090aadY¤:\U000a5646Lïº\x08\x1d»\x1bë|\x10\U00034c49w¡\x1f\U00042011¬còU\x86\x16ôQ;é´Ë5+\x06Ä\x89q«\x0e\x9a\x08\xadi\U000cabe5ËHMÁꦧ𭦁\U000d7310³g\U000f5f5fÒ\x1e\x12«Ô\U000e5634\ue5ab\x8a\x03÷Y5𣹡\x08¶é¨[\U000777a8\x17g\x957g¤\x04\U0001a79dXÏ\U0005ce85\U0001cc63𭑈\U000cfdccÙg®´P\x7f\U0007e7ac6Ã^\x9fÛÏ\x0e76Â\x1aí\U000a65cd\x14\x9c\x7f%¤Æ\U000a8654ïO.\x9c:ìN\U000cfd8bî\x8cñ?Þ\x85\\È»\U000d0164¢K\x93î\U000a8572hR\x8a\x8a±O!\U000735e1\U000502b3µ\x05\x1f\x9f\x15$¿\x9c\x9f=\U0005152c]\U000edd4f\U00053cdc.c^|dq!\x8c\\*\x97\x18\x06\x08¾õ\U0001a841?ý\U00097ad5\x07\U00052fae\x08\x0b\x94ÏC\x12»\U00090477Îäß!\U0004d260;è\U00095040\U000ffb28fý0\x858¬q\U00071166ÿ\x95Z🛗\x98ý÷îrº(\x8dÞò\U000bacb0:n\x14\U00072d23µµùâ\x07\U0009bdae\U000ec985Ó´\U0010df41F¶[Lk\U0003e2d9à\x01\U00101b91+Ê\U0008d91c\x0f\x9a±Äðñ\U0004d5c3±\U0003a865b\x82 \x0ekú\x9d\U00062860Çµ«°\x16öÎ2Ë㝳uò¢\U000edd11\x1a\x80¿ÍvÏ\x00\x8f\x8eU\U0004c2af\x94·4Ï\U000359e9\U00043c26h\U00069482½\x13\x0c\x89ª\x8dÛ\U000e1087ì\U000a534d²b\U000ae3e9Ä)/GÏ|\U0005034b\x9e\U00109e65\U000c4f47\U000913c2\x01趏UÕ\x08¯\U0001b405x#ì\x83ákÞ±ð\U0007b652\U000bd225CÇZ\U001085bd¼?)\x1bÌ\x08ï58\x13Y\n\U000ad6cb(\U000b14438RL𬨇\x1d\x17Ä𛈠Ç\x0b\U0009083b^ÏãQÓ\U000d2925Dõ/ö\x9c\x02\nrØîìQ?Ò5\x9aò\x0f\x06¼\U0001a644\x99\U000153e5\x0b\x9b ÖÍ¥ùyE\x1eª\x87\U000a01e4\U0009ae34W\U0007ddbd¹ÄÀ\U000bb119½§\x12\x84é\U0009d42e;æî\x95𗬥\n\U000ec090\x94Ú$\U000572cc\U000673c3\x7f÷\U00100da6L\'´:+ÿ\x10b+Ùý\x8e¯\U000c1866ÓÈ$íù?¬*\x85ª=\U00035653ä¢ý6%\U000376cb/Q\U0006a71d\x80\U0001a1d5\U00041cf7\U0007dfffé°¢)\x7f\U0004bcc7ï\x04\U000da4bc\x8cnÁ7\U000d38b7\U000fe046\U00054570%K\x95\U000c868be\x86«\U0007a5c3\U0004e0ceD𰷆\x1b\\°¸iÃ\x10ØnÆ\n\x03\U000b0cf7²ËFocç¥\xad\x9cc\x03õ[[\U0005f71e\x93ÂüÚF\U000632e1Óû\x10¾ç\x91;\rMª¢d0\\Ï\xad\x88\x15ãº7\x8d\U000c8f85g¯\x83\U000774ebcµ]\U0007d742\U000b71ecÇ°{ö\U0010a4f0\x17\U00047714!ä\x0cGþ¥\U0003b837\x13º!Q\x84^Ñ\x95Úô\x01\x81¯-?_\x04\x1bØÔ5\x80ì¹\U00078a77âÖjt\\\U000ee1ae\x85\U0008baecÛ÷\x8c\U0001368cú½\x891\U000cc8f6Æ\x18$¨$Âu\U000d2330æÞVK\x1a1\x89¼\x95çwb\U000fb6c4]\U0005396f\nJ&\U00103088 \x82ùÂ#Ü\x99éE\U000523eb\U00048cd3\x99s\U000e4b43𡘬Iiø\U00032e64Û5°\x9cÜ\U00084933\x8b\U000cb8adTìÖ!\x88\x19ã\x80\x97ûÞô&\x17Û¼[𨩂À\x90\U0003a9a4ÐF\U000f2d65𐿃òÚ\x7f4ãô\x11Á\x11tÒQ¶çr\x9d\U0001eafc\U0008b9bb´¥\x94õ\x9d¾î0®\xad\x93\U000f3c6b\x1dFK\U000801da\U0003cb94胵ý[\U00036706\U0010ec76깑\x88¾\U00067ea0\U000c2874«\'ß\U000e8a2e\x05l\x1b+\tó¼\\æ\U000ac4fbP\x9d9[â8ñ(ù£L\x9e05\U000734d3c\U0007bc33\x8c\x89C\U00080c82\x83ªþ6\U0006056b®Õ\x1fÕ×R𩊼Z\U000e6942\U0005c4f29c=\x16c\x98\x00\U000c8ed7Ìc\U0009ef60\x95¶\U000e6299\x97\t\x99^\x1eÿ²¤\U0004ba18ú䵿\U000758d2þ\x83,Ø@\x192QÕ}\x87\U0008176d\U00107862\U00065cdc\x9bE\x8e\U0009fcc2²¶o\U0001965fù\U00089018ÌãÅ\x89\U000bfbd9\U00019ad7&\x99%¹\U000402adU1\t¨𨴜\x8c\x81\U000848a01=è\U0004383fÚ\U0005a471^\xad\U000a8e88ý\x92\U00068a01⣽|\U000cdf5f;\U000e97c1Á\x10TJº\'\x80\U000750bdBþü\U00019f035\x15\U0007ea00i\U0007d762Bdâ𠟞\U000fd9ca\x0c\x8c\U000fe7f59$\U00097c0cÞ\U0002edc8pÍ\x10\U00103276o75½s\U0001481e\x89BR𫻚\x85»_xXå®𗵭OvÐ🅙\x96">ÞD\U0008b7b1²È\U000fdda3ï\U000b20e7藩µ\x00¨{®\x93颾\x7fâ\x86?9\U000c14e9\U0009d02d\x15^Ý_ôëñ\U00049505(tᄷ\U0008e5670<d>ÓGöã\U000631fcCÇ¸\x1f\x18J¼\U0003a89aæ\x8d\U0007568a\x01\U000d8821\U0006520e\x019\U000e0063HõèÄ\x94k\x87\U000ac559Ó\U00077afa\U000e0c0b\U00090578×\U00042f4cÎ\x98\x99ææ\U00089ef6NNM\x1eÖF\U0005e03e#v\x13\U0005a4bcöß?\U000d03a8\x02¿ª\U0007b951Qâ(\U0009a307õs\x89\x11庶\U000383e6Ïî\U00098a71Í\x97\x98´¹Ã`É\x19\x90nÔ\x16Énª\x08\x11\U000a292b;¼\U000cf104$n>Ø£}]\U00079822þ\x00\x10\x84îÝp-'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 20334, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003965s
====================================================================================================
2025-09-19 00:01:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '   '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004088s
====================================================================================================
2025-09-19 00:01:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x87ø¾U^¾èU\x1c\U000fc9d3§젔§åÔÌ\x0c\x1e¬ÖU\'\U000bf97b_F#\x81¡a=\U00064dce\x80\U0007b65d\U0007a5b4j\U000fdd8bA½^y\U0005bc2e\x02÷Z\x87Â\xadyr½À¹8YÛÔI\x14ÝcÈaÄ$\U00089d3b*Ê𫗋ò\U000d6a60Y\xa0\x83\x18.Â\x98û\U000a2ae9ÜZ\U000864fbÐ\U000d1c24î´\U000c4b9b\x97&¢\x85s\U000d294e\x1a8\xa0þ<óg\x817.\x1d_$\U000f89cbî\U0009ae05\U00054137\U000e431b\xad\U0006f669ð1𡛐<±\x85RÜù\U00044500Á\x7f\U0005251c©á\x9d|P;\U00012604Ý Û\x1a\U00019f66½¯\U0008b7de¨ ¾\x9d𫠘¢âÐ8æ7\t¾\'\x99Õ°\x9f%½ã\U000c453bÑ¨V\x82\U00032104Í\x1c\x86\n\U000b05e1¡\U0004f7cf𡶁\U000b6769\U000aadfb\U00038fb9è\ne\U00040269\x1f/v\x80"âÁ[\x81\U000690a0Û\x85\x0c\x95\x08\U000420f6yP\x80ªk\U00048471Ù!vÝ \U0008d492\U000123b9l_k\U00063cf7\U000dec8bÙJ!éfG@Í·ç"(Ú\x93[e\U0009576doÏ\x83Å¿!\x05*\x83¥\x05ì\x8a\'»ls¨Gâ÷\U00101cfc\x18Üì\x1e:Fß\xad¿\x06ù\'¯B`â6Ç\U0010b460¸!GÑ\x06\U000d2514µ\uea4bJ\x1c+\x7fÝ\x8duær\x95*\x81Ïí@á.Dv²hw\x1cý\U000f9ecbäS[a9\U000e06a6s\x993\x83\x84?P\U00082ed3Í-\U000c397e\U00037463þ<ÛZ\U000a78b6P\x12\x88¦6\x06\x8ar|\x13!Åfú\U0006ca8eF\x07\x1e𠕉\U0005ae9d\x17\x14âÐ7\x1a\'43M𫐛·2}c\x81Ä©\x17óÀU\x8bo,æä\x80\x85\U00097b5e3Z\x14\U00054214³Ã𠿇T\U0006b397*\U0008bf4f\U000f250c\x8eÊlPûÒ𦄰\U000b9a10\'Ö\U00090050n\x00 \U000ac393\U0007a5d4ít\U0007898d\U000924f9\x18b\U000710d8°Ö\x03K[N\U000955a9d𓏸a\U0008f657\x1a£®\U000e731b¹\U0004b617b\r\U000b3d42\x92\x19Xì/£\x8dÅ\x9ao\x86\x87\U000b054eÔ\x86\U0001d551,ý\x1e¾Þ\x7fÎçÂ+?C\x80\U000e955e\x1dä\U00109204\U0007b0d2±\U000d6bf9\U000e8747[<\x1bÎ\U00075762Û\x8bÒb\U00090dcf6\U00055920c\r\x85S\x9c\U00014823\xa0s_6ªê딥\nÎV\x1bíZî\x96\U000dca82f\U000521d7ZÌÙuËB\x0c\x83E\x85ãr\x95]\U00068d2fB~Ð\x812\U00063f98ü\x12\x7fZ%Ô)ª\x85.ÊD\U0005bab7ª]\x7f>Ý\x97\x81N}\t\x11\U000ee24aÊS·±û\U001064c9"\U000ae25avA¦\U0010e1e5LP\U000631d4ñ\U0010515f´8+\x0f\x9e(L\t\tâ\x9c\x8f¯îU\U0009a7a3ÜÓL\U0009bd0f{\x90¨Ó§\x86g.\U0001b93eñ\U001055ffU¯îå\x16Ä\U00101020®U6\'\x8c\x1d\x86\t\U000eb563ã㼷Wß!𠅀4\x1c\x02\U0010554a\U000b352bó\x81é𤪸\x11Þ\x05`Ø\x1e$Ã@|¿\U00055f12ök«)G\x8f\x93,\x1b¾®\U000bc46aF\xa0¤IKw\x8aÉ,\x02\x8a\x90\U00084d20\x10^Z®\U000f04bc½\x0cÈ\U00074bac\U001017d2«O\x1f\U000d570a𮭃𠢛u\U00049ef3ÌÆ¨a\U000b1de9~\U00054edc!\x9bÌ®\x8dúª\x18\x9aT^¨ú诋\U000c5bc0D»\U000712db𢒑§\x05\x15Í>\x9a\x81\U0003b98b,\U000e07e5uª<\U000ddd64! ð\U000cac9c\x8c\\âAq[Yep®\xadGì ¬EK¢\U000c5474ô\xad\x007í⬫um\x97\U000af365\U0009f3abØ;¥\U000d6bbf1\x04|\U000f5381+\U00099f92\x8c\xa0Cä\x9e¾\x9cå¯\x94\U000ebc6b\x1c\x15$òäÍèãb¼Ú\U000b0959îE\U000625bcm\xad=Øfß¦À\x8c\x91´©AæÜÿÊ*\x06l\ue1d4\x82\x19E\U000d24f2\x9e\U000c188f\U000ad205¸I£\U0004f1e8䃅\U0004aaaa+-\U0005fcd6®\U00065b59\x8e\x87\U000750c8\U00013a49?ú\x83Gmcì±Æ𫃬Qi°\U00081b5b+þG\xa0è\x1bqê\x91\noaQt\x89\U0005933bqâm|ì{ÅqS¥w½cÙfÛ{\U00066f0có\x84óåãÿ«\x9d\x0eÖ\U00034668¤\U000e78d0\x9f\U000bdf68Ï\x84O¸\U00062519È𘋧Ó \U0006a455\U0010804e\x98ñ\x05×§\U000a6403\U000b62b2Iç\U0005a6bd\U000bab556P𪎸2¢Ë£\U000dc566ºËè梣±«±´éh9\x7f\U00090c15d\x1bA\x05I\U000d2322\U000fc6ceîÄ¥i\x99\x85Û\x9a\U000f92cd\x9e\U001040b3#º\x7fY&\U0001e3c2Ycù3\U0006a3a2^\U0003c18e{N\x85𥩓èÀ(,\r\x89\x03\x19ò瀽\x18õ\x7f(𠋁³\U000a4974\U0003813fÕû\U0009209a\U0001963e\x8c÷T\x0b\U000b9255\x1bßÜý,a\U000e7308\U00065681\r,qv\x92\x18\x9bö;\U000e5a56á啔Ó\U000ee448Ö\x9c»ÿ.¼8ºÝ\x0b\U00109753\U000155d1<\x02ô¢Gg\n\U0008d1feÞ\x07þ\x10\x1b+ß¬Ì°\x9d6\x00\U000ecceb\x9f²W7×2\U000e3997\U000fc6fe%\U000cfa02ÌÅ\U0010143b³>', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004199s
====================================================================================================
2025-09-19 00:01:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '  '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003792s
====================================================================================================
2025-09-19 00:01:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['\U00041736µ\U000a0b43𝙨U\U000e8967wÏJ\U000e06f2\U000f0768ÿ', '9\U0007871cÿ<\x01Ìe¼Þ', '', 'þß¯ß', '0%\U0009bf9eÂÿµ\x02\U00063439C\U000ef588¿)', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00041736µ\U000a0b43𝙨U\U000e8967wÏJ\U000e06f2\U000f0768ÿ', '9\U0007871cÿ<\x01Ìe¼Þ', '', 'þß¯ß', '0%\U0009bf9eÂÿµ\x02\U00063439C\U000ef588¿)', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003803s
====================================================================================================
2025-09-19 00:01:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': 9712}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 9712, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003547s
====================================================================================================
2025-09-19 00:01:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003891s
====================================================================================================
2025-09-19 00:01:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '¯\U0003fe88\x17,\x16\U000d9594\x9d*¥%\x03\x9c\x8b\x9es\x08\x1c\x92w\x0e\x0bð\U0007296a*\x06\x10삌+\U000b845c2ñ\x1aéÂå\x17u¿\uedd3\x8dÒ½\U000e4d2b\U000f696dZ\x8cÞ\U0007597e\U000f94f0\x81\x7f¶\x12\U000ae2ec\U0010b595%¶\U000c621a\U00100974Ä\U000812e2\U000c668c\x12\U000f33eaL¨\U001082a0ù1$Ò\x93^Ò\x80ý\x8d\U000dabdd\nî\U00046f7c¥\U000d4a60=\U000421b8¸µ·±_\U00055667iÒs6%\U0010ce68:Põ®\U000815c7\U00087afb\x06\U00093ae2\x99\x16UÔ\x14\U00088ed3\U0003f961\U000d4d8c\x8aB\\k\U000e4c99\x01\x87\U0010c1b1\x1f\U00106e9f³/ñ\ue0dfÉ嬔\x939Àx@\x0bá\U000e369e\x81æ¾\x87\x03¹\x0f\x88\x93ó\x8a\x95´\U0010c175ó\U000a4bab\U0002edebw\x01å\x9e$Ø¹ù\x7f\U000f0171\U0007dcbe\U000327c5\x00\U00105243à\x9bJ\U000517881ïk\U000f5fb87\x9c\x13\x81\x97\x7f\x16\U00036bafÅ\x95%#Ï\U000678f0l\U000e26e0Ê\tÑã\U000e2452\x1bm\U000acebdõÜª\x9a\U000f4554\U000f2e41¾&\x85Þ}ò.\x9a\\îk_7\x16µ\U0010e608Oؼ\U00072ff1\U0007cc22kS\U000cfbdd\x0b巐\x98%¯\x9a\x18Ã\U0008d1d1\U0006e917ô\xa0Ùj\U000dea66Ã¿/D\U000890f8Í\x94=oÍ\U00035e78¾®+\x96Z?ß¤\x17â;êIz5$𩶸\x81u\U0006b486i+b¦\U00037487Éö\U000a2b1al$a4Ð\x1cÒË\x88\U0001499frWö«\U000ea79d)\U00043a2c]Õf\x17\x13\x9bû\x10 \x17<Ø8äJpú3\U000d8ec4H\U000aeff0\x01;£ofI\x91"64Ü\x83Ü2𠸈\U000ad26d\U000389ddù \U00064ae2\x1f¬¨\x84\U000abc0d\U00049ca7\x144\U00062146¼U\U000852aes1ó²궬\U0001bf9a©\U0005d2e6Â\U000a2982è\U000a7622\U0010009a\x87å\x84\x80Ö·\x11\x8d\U0007aa97M\x0f얗\x93-\x9b\U000bb4d8¾\x8bÃ\U0006fda5Á®\U00043c97K\x94\U0005084e¹k\x1föÚ\xa0äL}ëÕ\U000b8848\x02ùhûüj\U00080d8f]\U00088a9d\U0002f0d0o\U00082cc0v\U00067ba5Ëþ\x18\U000731cf𞠤\x14Q\U000355ddRÓV\x16QZM1\U0003174d\U000cac60\U000e2d49\x82\U000494a7𭡁\x82ë\U000741e1÷@\x9dtzñxp¥\U00053e72ÂiÓzåó\\t\x02\U0006b984ã^y\U000bf3ae\x11Õ¶TV!½\U000e54bc9É,É :}ä3ñ\x88ùÞÎ\U0010c7f75\x1eX\U000706be¬7fûçå¢5%𨭧mpùQ\U000cf743è\x98\U0005c909\x1b°\x874𭔀á~\U0007d383n{¶â\x15P\U0007a0d0¾÷=\U000d82f99%\U0005adf7Å\x07ó\U000cb34c\x99IJV\x94\x95Hï\x1dUÄþ¸k\x98\x1cá\U0008dea4$sà,®\U0009ae6b\U0003db20\x1b\x14>`à\x899磲\x8a\U0007ee3a\U0005a31dx\U00060dd2ý8\x99}/\x85ã\U0005ed582\U000cf6f9\x92ã\x86F\U0005ca4f\U00084e13qTἘ\x95Àü\x15¿𫑦ìîÉ\x07Hx&S!¸XíÎõ3ð\U0009a1ac𠀳Tæ\x9dRß]ú\x02\U0009baf8\U000f0865\x95\U00066870\U000e13edø×°\U000405ea\x8e\U00072f96ó\U000a2b997R²V\U0009505caLÇß\x06«iu\x17A*𰙿\x0eMãè\x98\U000996e7\rÂK\U0003a710iV0cª꯭¨\x8dÕ\U00047b7ec\U000c837b\x8eãµ\x10ê\U000cb6d5\x88%²WÎïñ4«ºäZ\U000b203b𢠄\x0f\U000f409e*>\U000ba3bb\x12Z\x1d$á\x9e¢\x1c>\U00046c98\x17a\U000d33d3Æ\U00091a40Ìl!f\x97ÿ\U000dfa04Ö𝨉\x12~¶Éº¦ 𐩑Ç\U000c93f5\x1cÒ36êª\U000d72ac\U000d7258¸*#\nü]\x17g7þO´\x08¢\x19Ö©Ꮏ\U000dfa90úW|- áíôWm\x02Cn\x99@ºQÃç\x12\x16Ð\x8a|\x82\x10ÖH%E\U000b9ebe\x02£ó\x86µ"\x13_¥rF\'\U0002f517\U000bbc9fã\U00109cab\U00093f3f\U000cef8bº¹Ý𰖀\x9dõ\x90¼\x8e\x7f¶.½ÔúÀ\x83|O\x99Þ$_\x87`\x81å¹\x1e-±ðé\U00094d5f\U000902a1ª]\\\x90\x92)9\x81\x14T\x03︊\x9bæ\U000dad49t\x06¸ogB෩\x02\U0007cf43ÝÖ|¾ûvÔ\U0006158b\U00065e98N\\\U000d30c6Ò\U000a287cH#\x86l\x10h\U000c8493\U0009d568õ¯}\U00057aa9\U00103d86\x16ú´û^\U000442bdÃ{\U00050aa8¼Ù\U000d18caV\x7f\U000be127D\x01Âê\x1c\U000bc63bz\x98Z\x9dH#*º\x04Q\x95\x9c7\U000136ce\U000c79da𝣓uX9\x1a\x1fà\U00041619\U0005d4f4\U00039e30\x87d_\U0001e5fe\x110Û\x8ff¸£û\U0008eaf8\U000c4891lÔ¼ÿEËD7b\U00043156mòt\xad\U00108526wºúïa\x90\x0fsk𧫼â²\U000c6209Ãv\x0cp\U001072af2ÏðrÃ9\U000dc790\x1c\x9a±ÁÏhzg\U00057ae4\U000694b3\x11%rP¯¸\x02QhY`\x06\x9e\U0008e1da£×r𮈬IT\x0f·\x15O¦¤szÔ¤\x8d\U000c3206·$á¦\x84D\x00Ú4d\U000860e1\x0fÏxQ\U0010df51\x96Û[8À\U000cf34d\U000cf06cð\x92«\x1e\U000b67e4\U000b9102î\U000149b3\U000bd112𣵰ᗳ4ù\U000b180cKz\x9a\U000881f5𤖙¾õ¾\U00101a4fu@af¦\U0008c01b\U00093f55n!\x02ú\x12Àà[ä?TõÿW\U000b6223\rn\x83\x95¦Øýòo\x11m\U000bba57b¨ñê\x16·êtyr\x9c\x17\x8dy\x9dvß9\x04𗁉1¡òÃ\x92\x18\U000c0112\x03öÊÓË\x80k\x93÷X\x0fd\U00097f1e.𭹅ÿ\x0b\U0010636cÀåòð\U000bce9dÐ·!\x9a\U000d5961,£¡\x96\U00067d03#\x94ë\x11I¯\U000e4db4F\U0002f357\x99\xa0\x07þ£²1«§^¦\U0007b6aeÌ+\x96áá\U00051e6f\U0004cffb¹´\U000fa2cfv\x04MI\U000440ec嫎ýc\x9bèi\x80\x89𪫍\U00038848\U0004b4edOÜ<w\U00077e1b\U000b3354Ù\U000c77fc\U0009709dì³|\x941¿\x88\U0001502c\x90AæóI\x17\x93\U000c45e2\U00088714Ù\x8cæ\x9c-\xad¹\U00076c5df²𥯨äØ¢ø\x0c\U000a4f41~0õ½äF\x9df¤î\U000d35cfu\x99Z÷pIÒ\U00080307¯\x9baX\U000ab357UèÒ½e\U000f3dd5붳DP\U0001f84cÿ\x84v\U00067351¸â\x1e\U000ad819e\U000f20ceÞ\x9e\U000737e0w!\U000e3fed𡲳F⯅UÈÆ}\U000f6de8s\x1a\U000cc5db3ÿ$*\U000f4255&\x1d&;\U0008e552\x89\U00035b17\U0007fc57k\x8aw\x9dZ\x88\U00063643𫱫\x04\U000f9ddb\x88óæ\x06\U0008597b\x06\x13gÄ:ñX퐈?iD\U000e6f64K:K|[mDØh\U00035807r/Ç¥7U\x01\x98Y´\xad\x171M\U000c28d4\U000342daêÀ\x92i\x7f\U000d7e68«\x9d\x81Ø\U000b2846\U000c8e5b\U000614d4ì\U0008d4d9Ú8êtÕKVªo\x8eç\U0009baf7\x8e\\àû\t\x99¼\x97A\U000f1508&ø`áë\x1f$Ð¶ñöë\U0007c175ó\U00091646\U000ca826Ô\x02\U000199a5Ç𤺇´ÁB«¼p\'k\x8e\x02\x0cÚ~X\U0009c8d3ë\x8e𦳗Fㅋ°\x85Ô\x13asòê\x89\U000a9fb6>\U00037982'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003799s
====================================================================================================
2025-09-19 00:01:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': "\U0008a907\x14\x9b\x14\U000611f7\U0001b9b4\t¢Îd\U0004024f\U00074a4a뇄{w\U0004629d±块õ\x9e\x96\U0010ea0cÊb\U000633bdðI_Þ\x18\x1bw4\U000ebcc0Ä\x16\x8d\U0004a7ff»x\x96\x12=\U00044eadQ`\U000e9d28z§õïQ\x0cû\x1c\U0007dbdb\x01àß\x81Ã,I\x8b\U000c30fbh*ÊòP£«=\x1e\U000b6b69\U0005abc8\U00083609\U000df37d\U00098f02î\U00045b1fý\x12>/ÌÇ×L𠝂ü\x8e\x1f^CÓ\x0f\x86琢\U000831a1uÕ\U00019160Bd\x02\x8dV:Á\U0001ba64«\U00099dc2r\U000105cc¿/Ò\U0004790cò²%å\x1døH\x91¶\U0001a3b9§+Ìã@Æ\uf3f0'Å¾§\x8b¢óF.\U000a2e5d³\U00012a98ÿ\U000829bb$£ê\x07ÐI𢺔¬°´ë§Æ\U000a94d9W\x99\U0003d7f1,\U00014125+ð\U00077c4e\x9cW\x91ñ¼ch\U00043159-ÇRR\x89-À𛰈;\x02\x99Õ\x14\x1bx\x8f5\U000b312e\x04\x13\U000e7e6bÁB\U000e680es\x1e!\x04HF;\x0b%\x85\U000bc98aØ?\U000774d0zà\x0e\x11Î\U00098123O\U0001cb39íS¹\x1e\U000ec03bí\U0009cab7±Ú5È\U0010e321mz1ûÜ,\x1a\U000fc30a\U000fb46fDú\uebf8v\x06\U0004cd2bßm\r)Ö\xad³\U00074ba6Y\x97X{H\x9b넷\x07Nâ\U000d3dc6ýíòzä\x7fN\x9fà\x12\x7fEâ#\U0009748b\U000dacffE\x10\U000492ebr1\U0007ec1c\xadN#c8\r}Ëó¦\U000627d8Ov\U00073855å.rÚ\x99°æ]C?o\U000926b7¼7#Ì\U00104def\x8a#øT1\U0010e898úæ\U000443db¨\r¶\U00052eae¼\U000cba4c\x99\U000c45ceÄ_Fq¿\U00107855î¦¯Ò2à\x8c\x1e\x81\x9a%\U000ea92dá\x84\U000ec19b\U0004fddaD\x12o\U00081012ðÓÑ\x9d\x82¯\U000eb466V𠀱\uf4a1\x15µ§Rs¨\x911\x9f2+\x97\U00069a6c\U000313b3{\x05òô\x17®^\x0c^¡·\x91\U0009d404ÌáX\U000eeb52¶\x08?\U0004c7e3òÒ\U000b93d9ìbB\U000d7c68Í\x08Óu86d\x7fóPÙ§\x87\xa0Uá\U0010d211\U000dc315êâ®\x0f=i\uea39\U000eaba1^ý\x86\U000ae2b2©%Rk®\U000d383aãè閿#x\x9b\U0006d6a8ø¦\U00060912sí\x0eY¾\x06»ºÖÐ\U000d80bb7¦(Lup\U0009ed6bJ\x99\U0005c2a0\U0003da8cÀË\xa0 «\x8fñU÷Â@û\U000425cbÞí¸xØS\x979J\x8a\U000bbf5a\x8b*°,\x8cà\U0001fdba¼\x12\U000c3812\n\x83\U000be903]ï \x147ü.ðe\U0004e1cb¬\xa0Ï\x03ä\x9a\U000e3bfbîe_E\U0010db04Dç#1ö)\U000ee00aú¥oÎ\x81\x19aB\x1c4É¾\U0004ce23\x16{¤\U00106cdaòàé\U0010cec0\xad\x84\U0007fbd4\x14I\x8e(D·𥆊\x8cøP\x0c\U00045c6a?¤\U000d4811\x10\U0008dc15\U00065bbe6!6äñj)\x18\x0eGDm\x07\x1f±\U000123ba}\x08£8\U000a949a\U0005791d\x82<ÆÎ\x17\x02!5\U00044d20ÂpâÝ\U0007fd49·Í\\Ò\U000b3fda\U000a74c9\x16\U000673fe\x97äö\U00103c9c\x8dÛ\U00054838\U000e3c0b@àTä\U0007fca8\U000d240d\U000e562c)kr\U000cd232!@h÷O\x9e?T÷âÄÔÿ\x97öÄn\U000ad664+;L\x99j(k¡\x04\x8b\U000f53b6\x9a®¨~\U000beaf9𨹃\U00049d7d/R\x83s\x9d\x8b\x8b×\x8cº\x99@\x00F³\x89\x99\U0009b997\x14¡Ô\x98\U000dcc33\U000d4edd\U000be4ae\U000e05782\U000f8401e3%\U000e44c0AÑ\U000c129f\x1a\x08\x96\U0004d397\U00019e03𭷳>\U00049381\U000d220eÒÑÀg\x1dè[HõÓê)𞴹\x18\x07ªÁî\U000c644b\U000d82a6xË\\®ã\U00015bb9\U0007e36f3F\U00042ba5º÷7{»b\x94Åß<o\x06Á¸\x8f_½\U0005ce07 \U00062ea1\U00081178Ç\x08¦\x0bÊx\x1e\x1cy\x9f𧶡K¬Ø𡗇\U0001ef82\x8b\U000c5359\U0009c609ö#\x91\U000ed84eÕ»\x0e\U0001cc83!Ü\x99\x04𧝹ᔰ\U000325d2\x14Ï)D\x1b¯\U000b5e36£\x83q$J\U0005e1b7ëÑ\x1e\x15\U000b0365¼/\U0001247d\U000a5cb4\rò\U000c3a67òr¢\x05\x0c\U000d02a9?¸\x07÷\x0b\U000d03ca\x97¼\x100\x01\U000d2ab9\U000ecc5dÍj\n\t2e\x1c¥/ØP\U00094deaú¿𡷺ￆ\U0006de55\U0006f599ó\U000bc6be\U000e8a59E±A\x99b\x04Èz\x0eb\r𑿭ÿn\x85,_e\U00106f90©$\t\U0010042dðî¯2$(¯𭑜\x07Úg\x93\U0003a1caæõ@¯\U000a10d8輽p\U000ea0ac\x8d\U00077f37®\U000ad8dd\U000337f6]\x99¶Ü@¼AO'±\n¯0Qì0\x9a'\x93\x8d\U0005669bc\x11ú\x82𥬓\x06Ý\U000dfe04\x97.g\x1f¹S\U0005e111Ó\x0c\U0004745cM\x88<`;D!\x8aÃ½d',¸갆\U000703c5猰¤7\x08»\x1b\x83\U000dff33.4è\U00070c9c\x836>¼~r4ÖK\x86Û`â?{\x92)\x89J\U00032377¯\U0001ba63º\x81\U00050ecb¥ë%\x15gÀâ\U0005bb07YL>s\U00054cd3H\x08Èd·\U00109fed·\U0009226e𠒏\U0007368bµ«z\U000b9736³L\U000bbf6fÖÒö#â6ý\x05\xa0\U00093126\x10©\x03C\xa0k|\U000e2320%\U0003c152\U0005a099\x94\U000e6c4b\x82\x9bÒ¿²\x1d¢\U000326d6\x99\U000ee21b\U00081a17î\U00083893\rC\xad@³\x9a÷Ò\xad'¤^\x97\\{\x90öX\U000f6aca\x0c\U000a4d2cæ\x81s\x8b\U0002fed9Tþ\U000405f5;\x01\x0eã¡4ú\x16Yb3hf\x8a=\x1dôëÁ\U000543e1à´u\n/\U00085819µq\U000752ca⁄\x05\x01\x92û\x18\x13q;áA©\U0010f1fbV\tÙ`9\U000328de\U000b25b3l\U00103eac\x93Ð\U00092662®ð\U000ace53𣏧á\U0006897d\x1f\U000891f4 \x1e\U0001670bT\x14\U000dc314\U00052f1a´kûs\U0008ff1a\x0eØ\x86#E}\U0006f4feY)ﾃ£+ãî\x94c¯+\x85ûÜ8óWãêØ4\U000d2209\U000ed62d\x1d\x18\x08Ï\n\U00075dc4öUÒB\x12ñ\xa0â¯\U000dd65e/\x15\U000907cdÎ#YÉ\x8e\x00\x89\x9c§\x85)Ï\U000d3fad\U000b7804\x1c:Fo$_\x99\U000f6f1e\x05\x1cÂh\U000ec6d8«\U0009eb82\U000fcef1\U0008d9d7\U0010f3b6ÝÎF.Y\x83´Æêí\U0006fc39~\uf7dbä\x85o\x91\x8f\x1f\x18-Ê\x7f\x1c»±hJ\x0c\U000885dcBÿ\\ÄV6È\x10\x02Â2¬ªX\U000e33fd´\U00090848ï>\U000d7566\x1aV¹𣀕ï\x02\x16vÈN\U000dc1ac\U000abd77\x13"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003909s
====================================================================================================
2025-09-19 00:01:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': ['Þ', '\U0001e160u\U000b3fee³g\x98\x16', '«ÆÆ', '\x13dÒF']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['Þ', '\U0001e160u\U000b3fee³g\x98\x16', '«ÆÆ', '\x13dÒF'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004099s
====================================================================================================
2025-09-19 00:01:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U00085ea5@\x84', '÷', 'ï!àù\x08', 'í¡'], 'password': ['ÜäA\x04·', 'ÿ¿\U000c9d20\x83\x11¸\x0cÎ"¤D', '', '', ']º\x874\U000594d8\U00070545¡\x15', '', '÷#»\U0005e356¹\x88\U0003f8ec', 'YC±', '\U000a6c68Þè', '¥\U00049b2e7Öú', '', '\U000c058ck«𧘺𦉕\U0007799dÇ½', '2ý\U00085e5d\x87ÙÑK', 'Â\U00075b1d\x8cs\U0010a199\x9c\U000e181c', '\U0008ebec\x13\x13I\U000b66ba\x17\U0004ddb6\U00053836\U00014fa5©¥ï\x1fy', '', 'C\x17ê', '´{áÎ\x1b', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U00085ea5@\x84', '÷', 'ï!àù\x08', 'í¡'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['ÜäA\x04·', 'ÿ¿\U000c9d20\x83\x11¸\x0cÎ"¤D', '', '', ']º\x874\U000594d8\U00070545¡\x15', '', '÷#»\U0005e356¹\x88\U0003f8ec', 'YC±', '\U000a6c68Þè', '¥\U00049b2e7Öú', '', '\U000c058ck«𧘺𦉕\U0007799dÇ½', '2ý\U00085e5d\x87ÙÑK', 'Â\U00075b1d\x8cs\U0010a199\x9c\U000e181c', '\U0008ebec\x13\x13I\U000b66ba\x17\U0004ddb6\U00053836\U00014fa5©¥ï\x1fy', '', 'C\x17ê', '´{áÎ\x1b', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00435s
====================================================================================================
2025-09-19 00:01:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004131s
====================================================================================================
2025-09-19 00:01:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¯M', 'ñ', 'K', '\U00104578;\x9c\U0006976f\x8bFc\x04ô\x14\ue43a½:È\U000ba016', ''], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¯M', 'ñ', 'K', '\U00104578;\x9c\U0006976f\x8bFc\x04ô\x14\ue43a½:È\U000ba016', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003491s
====================================================================================================
2025-09-19 00:01:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003714s
====================================================================================================
2025-09-19 00:01:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00347s
====================================================================================================
2025-09-19 00:01:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003775s
====================================================================================================
2025-09-19 00:01:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "𛂴Ì\x07\x9a\U000a0ebb\x98\U00039c51\U00045861\x95ð½\x8e𝞌ð𰽬\x9a!\x10Lú硫\x95°2\U00096042\x90\U000434ec)öK𡊩\U00062d10¤Çpx}Ã\U000e665alª\U0009500b\rJ\x01\U0003da70Ç\U000fbfdc\x97Y\U00073dfd7\U0008231aÒ\U00071112±ßJ\U00078c08Jëña»\U000e9b62𨱔Æ&ÖOÃ\U000b6a5fÙê\U0006cdc7á\U000d86cbX¶y\U001006d1\x98÷$\x10ÌÂrø\U00038621\x8d`\U00080f80\x8c\U000dcb4e\U000a5d4b\x15\U0008d021ú¿©òâ\U000f1844ó\x91ôñ÷\U000f6c45ü\x06h|u°🩢\x87Õ¿¸\x08\x9ag\U000e85ba^\U00051b1b\U0006c956NQ+ Ëª25ê\x9d@\U000db26b\U000574dc\x12ë×wAð\x85ÒÍ\U000659c6\U000fc8a4\U000a1455ª\xa0tc,ï\U000d304f\n£?\U000a22bd\x89\U0010e608_0\U00064d1b*\x01¥\U0008509bý\U000d89f4\xa0n¡Ã\U000cbee7G}R\x18ËÑà\n+È´\x1eP\U000662f5\U00096bb3\x1enéÖ戌Å\U0004a403\x9cýÌ\x94\U00096d83𐮬\U000668f0q\x9e×é]5;Ä\x8e\U000de821[{\x00ÓÔ÷`\U0009272bL\x16MXí\U0005d167ô\U000e0ed8U\x99à𣦺䠀Ñ\U000e0b34\U000648b1?Åé)d\U000f7debBÚë¨å¯\x11x)\x89QN$çê\U00086aed\U000c506evG\x0e÷L\x03,»D\U0005de89\U000a50b4\x1cÏé쟴\x80h\U000e1249\x18MS𩭼\x8a\x01\U000cfe5c\x17\U0004718ct|Ä½\U000cd072gHià³Û\U000880c1Ã\x9d\x97ûÛ`t\x90ë\x17\x1b]g®\U00097be2\x9d\x13¬í:g\U000db823ÿ\\Ï\U0008b5d5eb:\x81(\U000bc34a¥\U0010f942\x9b\x9cÊ\U000b6106\x0f\U0008bfea\x86g\x831@r\x8dæ\x85\U0001ed46\x1d'\U000ca610\x03dÂîhi\U00071757\U000432df\x7f\x93\x8f\U00086a11¼ÞoÞ\x81\U0004d7c0µ\U0008f00cÿ\x8aÎ*\U0001c44b\x81\U000c9b56\ue719\x1e\x11¾H\xadqð¥\x08)\U000b7e6a\x943({o\U000d7ce4Ù\x05\U000ac5d4\x8bð\U000dd89f\U000fed60\x16hOW\U000f257e\x8dû\x02\x03*\x19\x9e§q\U0008e843\x8aNE\U000f12d0\U000cb27e𗤟,0¼Æ\x91\x1d\x1e^g\U000b11b8yÕ\U000d9633\U00043ab7\U0005a891½\x19𭱏𪣰\x9eSTh].vy\t\U000f8f13¬f\x89Ë7\x88\x985\x86Z\U000ab911æÚ\x0b\U000975aaæÔÊ\U0008dc81\x10wø\x87Â\U00082b3f0\U000a46cbÊ\U000c2251\U00093c4f𧱭]\U00047716\U000bacea\x83\x8d\x92G\x90\x13æ\x85\U0004f32câÆ\x1açk\x06t8C|W\U000b32791\x7f\x9cúÒ\U000ab93aÃ¥Q\x86\rØ\x82ô\U000bea69Èÿ\U000b1553\U0007c6e6ÛM𪟻H@3Üÿ\x1bó/`ÆM×\U0004d70d\U0009f10e\x16\x93*ÜÒ\x1eNQÜ\U00037c17E\U000dd296ð\x03N\x0bf Þ\x83艃°Ü.Jk\U000e2266Ï\t~\x07Ä¸&?\x96ÓY\U00061b42S$\U00094350F\x9f\U0007ddb4Æ\x0f\U000b5b95×8\U0005e67cÉßÎiL\U000f96cfÁ\x85I`\U0010859f𦖳\xa0ú-÷°\U00056202\x94\x99æL\x0b\U000fafffG\x8fp\x07g\U000b0c59\U0008f0c0\U000ea7daV\U000c922d\x99\U000f10adì¤\x91snOÏË\x11\U0005e76dÏ\x96áB\x89\U00099b27\x14\U00105c8c\x88%\U000f9857Ú\x1ezf\U000fcbf2Í~k\x0f\x9b\uf4cbÇ\U000abd7e\x17\U000f451b\U000d7cf4#𡔿\U0008328a-ØP\x1dà9Ñd^ÈêNççc\U000d6ff6s\x968ïÎsloD\x9a\U000852cd\x8c\U000e3f37I\U0009730fa·nÄ\x8fm§\x84\x9f;o\U000e58ddïT\U000e8299\U0010ea0b\U000a1f4f^\U00061d3ap\U000b76ac\x83\U000eba47Ø\U0010b5e8\x8a»\U0003b399+9VEt🕬\x9d¸-#×\x81𗍻\U000ec424\U0009c2d0³»,\U00083a27\U00097e062+æ]vL\x8bÀ0´\x04Ü\x9a\nN\x82Cl\U0006a738CBlg\rË}í\x85¿\x7f\U000d9bf6\x07\x98\x96©uä\U0001a416k\x1d\U00015d76íñÒ&ÀRyõ8嘷\x91\x11Fk\x03í\x00³Õ\U00101fdf\U000d251b\x04Ê*AÓ\x97ª\x1f\U000a94a7\x95þ\U00015fd6\x1fhå\x9f\U0007a103\xad\U000db7c9ß\U0009a57b\x8f\r\U000a1b2e$Ã81l\U00068373¸\U00088203SNåNT\x15î\t0-îå\x04ß:º\x13u,\U0005e219ò\x06\U00095927\x84¼µª\x0b;?w𩶌\U000a01b6\x03Æþl}\x7fåm\x16ÂP]\x05þ\x93î$Jå²s£\xad»\x9bvñ#*~\U000c23f8\x7fwûVvVÆÙ.!O\x07ß{\x97Ì1\U000b5477ÀÈË\x1cé\x9c\U000fbf5b'd\x9eÙUåÞXõínÑþ\xa0\U0006fa62ö±쌬9\U000f6c5d\x97\U000d2097\x88\x07Á\U00036ce0\x8dí\x81ÿD\x92.!q\x07\x89¡\U0008f2bd§\U00057be9\x94\xa0Ð~ⲷ#þó\U000e8399\U000f9110\U00076d6d-ÀGs³]ÒÏ¯\xa0Z&\x03\x19¸&\U00068df5\x98\x97\U00046b13#Ë𨫍ê\U0002f6b7j\U000e4abbæ\U000e4ae1O\x9d\x8b«\x08\xad\U000162a6\x82â<\U00019509C\U00050571yÉ\x0c\x133LÇ\U000a5e8b옞x[\x89t\U000406ec6ì\U00051d24Ó->Z\x1fÍÙõ\U000fd79f`Yfµ\x9cBáé\x9b\U000ea426àéöi\U000c2981åÖvJ;\x18\U000f3808ë\x99\x15Fzº\x99\U00054769j¤ë"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "𛂴Ì\x07\x9a\U000a0ebb\x98\U00039c51\U00045861\x95ð½\x8e𝞌ð𰽬\x9a!\x10Lú硫\x95°2\U00096042\x90\U000434ec)öK𡊩\U00062d10¤Çpx}Ã\U000e665alª\U0009500b\rJ\x01\U0003da70Ç\U000fbfdc\x97Y\U00073dfd7\U0008231aÒ\U00071112±ßJ\U00078c08Jëña»\U000e9b62𨱔Æ&ÖOÃ\U000b6a5fÙê\U0006cdc7á\U000d86cbX¶y\U001006d1\x98÷$\x10ÌÂrø\U00038621\x8d`\U00080f80\x8c\U000dcb4e\U000a5d4b\x15\U0008d021ú¿©òâ\U000f1844ó\x91ôñ÷\U000f6c45ü\x06h|u°🩢\x87Õ¿¸\x08\x9ag\U000e85ba^\U00051b1b\U0006c956NQ+ Ëª25ê\x9d@\U000db26b\U000574dc\x12ë×wAð\x85ÒÍ\U000659c6\U000fc8a4\U000a1455ª\xa0tc,ï\U000d304f\n£?\U000a22bd\x89\U0010e608_0\U00064d1b*\x01¥\U0008509bý\U000d89f4\xa0n¡Ã\U000cbee7G}R\x18ËÑà\n+È´\x1eP\U000662f5\U00096bb3\x1enéÖ戌Å\U0004a403\x9cýÌ\x94\U00096d83𐮬\U000668f0q\x9e×é]5;Ä\x8e\U000de821[{\x00ÓÔ÷`\U0009272bL\x16MXí\U0005d167ô\U000e0ed8U\x99à𣦺䠀Ñ\U000e0b34\U000648b1?Åé)d\U000f7debBÚë¨å¯\x11x)\x89QN$çê\U00086aed\U000c506evG\x0e÷L\x03,»D\U0005de89\U000a50b4\x1cÏé쟴\x80h\U000e1249\x18MS𩭼\x8a\x01\U000cfe5c\x17\U0004718ct|Ä½\U000cd072gHià³Û\U000880c1Ã\x9d\x97ûÛ`t\x90ë\x17\x1b]g®\U00097be2\x9d\x13¬í:g\U000db823ÿ\\Ï\U0008b5d5eb:\x81(\U000bc34a¥\U0010f942\x9b\x9cÊ\U000b6106\x0f\U0008bfea\x86g\x831@r\x8dæ\x85\U0001ed46\x1d'\U000ca610\x03dÂîhi\U00071757\U000432df\x7f\x93\x8f\U00086a11¼ÞoÞ\x81\U0004d7c0µ\U0008f00cÿ\x8aÎ*\U0001c44b\x81\U000c9b56\ue719\x1e\x11¾H\xadqð¥\x08)\U000b7e6a\x943({o\U000d7ce4Ù\x05\U000ac5d4\x8bð\U000dd89f\U000fed60\x16hOW\U000f257e\x8dû\x02\x03*\x19\x9e§q\U0008e843\x8aNE\U000f12d0\U000cb27e𗤟,0¼Æ\x91\x1d\x1e^g\U000b11b8yÕ\U000d9633\U00043ab7\U0005a891½\x19𭱏𪣰\x9eSTh].vy\t\U000f8f13¬f\x89Ë7\x88\x985\x86Z\U000ab911æÚ\x0b\U000975aaæÔÊ\U0008dc81\x10wø\x87Â\U00082b3f0\U000a46cbÊ\U000c2251\U00093c4f𧱭]\U00047716\U000bacea\x83\x8d\x92G\x90\x13æ\x85\U0004f32câÆ\x1açk\x06t8C|W\U000b32791\x7f\x9cúÒ\U000ab93aÃ¥Q\x86\rØ\x82ô\U000bea69Èÿ\U000b1553\U0007c6e6ÛM𪟻H@3Üÿ\x1bó/`ÆM×\U0004d70d\U0009f10e\x16\x93*ÜÒ\x1eNQÜ\U00037c17E\U000dd296ð\x03N\x0bf Þ\x83艃°Ü.Jk\U000e2266Ï\t~\x07Ä¸&?\x96ÓY\U00061b42S$\U00094350F\x9f\U0007ddb4Æ\x0f\U000b5b95×8\U0005e67cÉßÎiL\U000f96cfÁ\x85I`\U0010859f𦖳\xa0ú-÷°\U00056202\x94\x99æL\x0b\U000fafffG\x8fp\x07g\U000b0c59\U0008f0c0\U000ea7daV\U000c922d\x99\U000f10adì¤\x91snOÏË\x11\U0005e76dÏ\x96áB\x89\U00099b27\x14\U00105c8c\x88%\U000f9857Ú\x1ezf\U000fcbf2Í~k\x0f\x9b\uf4cbÇ\U000abd7e\x17\U000f451b\U000d7cf4#𡔿\U0008328a-ØP\x1dà9Ñd^ÈêNççc\U000d6ff6s\x968ïÎsloD\x9a\U000852cd\x8c\U000e3f37I\U0009730fa·nÄ\x8fm§\x84\x9f;o\U000e58ddïT\U000e8299\U0010ea0b\U000a1f4f^\U00061d3ap\U000b76ac\x83\U000eba47Ø\U0010b5e8\x8a»\U0003b399+9VEt🕬\x9d¸-#×\x81𗍻\U000ec424\U0009c2d0³»,\U00083a27\U00097e062+æ]vL\x8bÀ0´\x04Ü\x9a\nN\x82Cl\U0006a738CBlg\rË}í\x85¿\x7f\U000d9bf6\x07\x98\x96©uä\U0001a416k\x1d\U00015d76íñÒ&ÀRyõ8嘷\x91\x11Fk\x03í\x00³Õ\U00101fdf\U000d251b\x04Ê*AÓ\x97ª\x1f\U000a94a7\x95þ\U00015fd6\x1fhå\x9f\U0007a103\xad\U000db7c9ß\U0009a57b\x8f\r\U000a1b2e$Ã81l\U00068373¸\U00088203SNåNT\x15î\t0-îå\x04ß:º\x13u,\U0005e219ò\x06\U00095927\x84¼µª\x0b;?w𩶌\U000a01b6\x03Æþl}\x7fåm\x16ÂP]\x05þ\x93î$Jå²s£\xad»\x9bvñ#*~\U000c23f8\x7fwûVvVÆÙ.!O\x07ß{\x97Ì1\U000b5477ÀÈË\x1cé\x9c\U000fbf5b'd\x9eÙUåÞXõínÑþ\xa0\U0006fa62ö±쌬9\U000f6c5d\x97\U000d2097\x88\x07Á\U00036ce0\x8dí\x81ÿD\x92.!q\x07\x89¡\U0008f2bd§\U00057be9\x94\xa0Ð~ⲷ#þó\U000e8399\U000f9110\U00076d6d-ÀGs³]ÒÏ¯\xa0Z&\x03\x19¸&\U00068df5\x98\x97\U00046b13#Ë𨫍ê\U0002f6b7j\U000e4abbæ\U000e4ae1O\x9d\x8b«\x08\xad\U000162a6\x82â<\U00019509C\U00050571yÉ\x0c\x133LÇ\U000a5e8b옞x[\x89t\U000406ec6ì\U00051d24Ó->Z\x1fÍÙõ\U000fd79f`Yfµ\x9cBáé\x9b\U000ea426àéöi\U000c2981åÖvJ;\x18\U000f3808ë\x99\x15Fzº\x99\U00054769j¤ë"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003962s
====================================================================================================
2025-09-19 00:01:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 31162}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 31162, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 31162}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003882s
====================================================================================================
2025-09-19 00:01:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004235s
====================================================================================================
2025-09-19 00:01:13 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['I\x00Ô¥35Ê\x86¯Õâ', '\U00101198e\U0005cf0c\x9a', '\x87æ\U0009857b\x9edÇ', '^'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['I\x00Ô¥35Ê\x86¯Õâ', '\U00101198e\U0005cf0c\x9a', '\x87æ\U0009857b\x9edÇ', '^'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004233s
====================================================================================================
2025-09-19 00:01:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['·ó½/\U0004fe59', '㉁ß', '', '\x07-}\U00104216\x86\\á']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['·ó½/\U0004fe59', '㉁ß', '', '\x07-}\U00104216\x86\\á'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003725s
====================================================================================================
2025-09-19 00:01:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003899s
====================================================================================================
2025-09-19 00:01:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': -1302673101}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -1302673101, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004122s
====================================================================================================
2025-09-19 00:01:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '  '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003805s
====================================================================================================
2025-09-19 00:01:14 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U000e1a2fÔ\x90SñÕñÕ\x92\x99\U000e5697¤F_1A\U000e6597k\x8bä\x9d[\x99ç\x16.\x8a\U00033c33\x10±bÛÁ\x8b×\U00032818¢×𭞒å_\U0010a28d8\U00078a83\U000de953ýÖy\x01\x18±Ë\U000f93a3\U000ae9e4Z\U000578200\U00107ac4Ð\x87*\x84Üò\\xP}\U00058227ú\x8f𨨂Ê\x8c¿\x8e\x96\U0009f0e2Ó\U00054abe\U000cde08l4ÐÁ\U0010b1fd\x05\U0001dffd}è\U000a665eVä\x8e,\x1f¢±뤅🡥"ß,\U000928c0\U000d09b8ì捺)-y\U000ebc1b\x1d\x92]Í\U0009f39e\U000c4facR\U00092253\x9b|\x87¨§\U0006a58eÄ|ØáÁ\x0fK\x1d\x07°\x94\'ïF\x01\U00091742\x83\x8c\x9f\U000915b9Ý£\U000d7d48显D7q\U000a6abb¾Ns\U0008437e£\U000c5408\x9c\U000f295e\U0005deacaü\x7f?\x15\U0003399am\U0004e8b6\U00051b64\x1aI`·,çäX\x03wq\x05ð~\U000d53b5S¸\x9d\U00037195ò\x96å}\x14²*z𒃔,\U000a6eb0\x9dN\U00097302o\x81nº\U000584c8¼\x0e\U0003b43elw\U0010dcc80é\U0010fae8\x12º¤@ø\n\x03Ç\n:ß¿°\x19Ús N½\x86\x9c`r\U000c0b61>\x7fÃÕ\x17\x00BE\U000b0caa𱋡Â\U0006b4eb\U000986b1\U000a12e9\U0002fc2b\x167r!\x1b\x13\U000e4754\x91o\U00037234\U000d17e8fß\U000dddf7ÜF\x11\x02ñ𘔗P𝔏\x99FÌ\U0004047aÅnú\U0004b4ccÌ\x83õ\x8fr\x07🨉Ò;HP\x1c\x0b¿\x12Ã\x1fiG\U0007445f¤Ú\x80Õ>-\U000f427cÑý\U0008aa7fé³s\x9bu\U00013d15\U00085d88\U000af3b3º\x89䖃:\x86,Ô´N\x1bBÉ\U000c3c34\x80hÇ¾[\x1a\x0c\U00031802þ\U0009bbda\U00038f4fGr\U0009ec0d|\x1f\U0002f755\U0007907cl5¿ØYñÉ\U00078ac4\x16T\U000d22c8ÆÍ|&þ\U000d5582\U000bfc0f\x14Qß\x850\x08ø\x94\x84\U000cda2b\x82¤Þ\U000534b2²\x0c\x18Uø\U000ecd84\U0005fc05\x12ÞÑY6\x12\U000f0e85\x8aíº\U000bdb36µ¡¦\x1cÁ\U0006ff74\U000392e4\U00077601§¥⯿Àß\rjÜ\U0003d538Tü\U000cf393l?\U00035f57\x15\x91E\U00083f2d\x07y\x16yE\U00090d46üÞ³\U00104b89±æ\x10ßÔ6s\x1eÈ3ô\U0001eeeah\x88zò½|:/\U000a0f58\x0c(\x99\U000cf069ùN\x8a\U00087e85I\x8c\U00099c9aûú\x9fÈ\U000f53cd¥\x9a¿÷Í¨´O¯ÖÇ\x1f\x1dµð§\x0fÉ>\U000ee3d2,1g3¨\x01=\rØ®¥¾\x91ä\U00014e07Û\U000ccadc´¸\x0bõ\x0bri\x9e@\x07\x1dõ\x01\xa0\\Ã#{¦ó⩽Fâ^ò\x17Ú5\x0b\x80.6©\U0008e13f\U00094b5f\x13-uî¡\x96Y\U00068959vW+ø\U000641f9«ë6ÏÜ\U0008ae17Å\x99-¢}a\tâ\x08^Í[\rgF«Í\U000a90ed\U000b79ab.ËÚb\U000ec347\U00059f99:\x83\U000167af;½lãÂeçD\U000d3b10\x05t\r\U000dd344\U0007ecc0ì\U000caf9cyçõ_\U0008c5e6\x1a\U00076ae4ôj\U000ccd9c\U001065e5ô\U000b150b\x86Ï\x17\x07\U00079eb1j\U000f9c91>2³\U00032cb3[1\x9aÊF«\x15]Ú\x9d\U000ea863L\x9bp7½¿¿\U000351ed|2\x0fþÖy®\U000dee06\xa0èçß(Î\U000906e8ª\x01\U000a7c88\U000fb2de\x0e÷;t<\x14\x8bs\x1avÇ\U001075e0{\x16ja+ov\x05\x1d\U000dd200\U000ec34bB\U000e3ff5w\x93\U000ac964\x81\U000f22eaf5ÌbZj¨\U0007ed14¿°\U000fa3539\U0006c07f힐\x96"\U000f7163\U000e2dd0,¯𦨾\x85â\U000b772c\x9fò¦\x8fOþ<\x12_\U000fb8ae\nQAÑºí¶æªò\x89T\U00077d85\x9cÛ¬\U0002f519\x89N\x82\x9cØ\\L¶bü\'\U00078e02F\x08 ôÝ\U00060298\x1a¨sGï½¦\x8f\U000a06d0ær@c\U000fb058𗫎\U000c7c07\U000c21b2\U0004dd7d\U000843bb\U000b066f¾\U000b3510\xad÷Ðp\x06z\x8bÃã8ç\U0004e1b3\U00054f96\x12Ô"\x9béª,\x17ya\x99å\x94\U000902a2BF\x15*ÎÅ×RKcÌR\U000c9cbd\x1eE\x92\U0008d3c3nR\U0006eae2Ë%Ⱖ@¬ø\U0009559b\U000893f67%\x96bT\x0cè\x8bR\x06ªÂ\U000aa09dy_\U000fa0cfÏ&VÄ×!\x0f彵£z#äÚ¸\U00072c24\x03\U00101efdä\U00098893¨\U000add85\U000eb97c>Á𦖭ç#0\U000a26abh\U0004c34cªvG\U000fba66\x8e\x94\x00\x7fð\x0cvÉ\x96\x82\U000c8d95\n;¿𘇏\x9cCß\U0003cd678~\x11PR\r\U00015e64\U000b27f0s\x94\U0003caf8\U0007725d\x04(z\x91Ù③ræ¼%K\U0005a94bó®\x9eÊ\x8a<\x8cóË-]½r\U000eaa6c\U00032c3c\U000cc6cd\x8dÖù\U00093c7bÚ\xad\U00068341\xa0\U000647c5\t\x94þsÕ\U000fec22jo7\U00079ae9F\U0004e2a9ÏÎS\U00043001\x1ak\x05çI©H\U00071f1b\U000dd1efð\x04÷t\x05\U00104e97¹\U000b8dfaÝ\U00108d1c\U000f0503Jã\x95\U0002efdbqEè\x18\x15\x9cÐ<\x83\x9d\U000fac2eFÍ\U000a69aaa½,\x10)ÎìÐ\x1aæ¼¥¢ÛY\U0001b634÷í\U000bb7e8\t\x16Q\U0007599d´\x92_\x9d\U000e0957ã67úÅèÛÍÿ\x9dnàåÊÄ\x01\x96\x00\x85\U00044d1e¨Õ½\U000d48d8îã¡k\U0008337c\x07v\x9b)\x01îi8c5', 'password': 25444}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 25444, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004144s
====================================================================================================
2025-09-19 00:01:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ª\U000f05a0\U001011b4}û', 'B'], 'password': -32}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ª\U000f05a0\U001011b4}û', 'B'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -32, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003964s
====================================================================================================
2025-09-19 00:01:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': -44374301562885247074802799518876920018}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -44374301562885247074802799518876920018, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004153s
====================================================================================================
2025-09-19 00:01:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['', 'AP¨3äþZ\x85', '', 'y\x8eO¸m\x93\x02\x03÷§A\U0010dbd6¿𬘊', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', 'AP¨3äþZ\x85', '', 'y\x8eO¸m\x93\x02\x03÷§A\U0010dbd6¿𬘊', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004086s
====================================================================================================
2025-09-19 00:01:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', 'ðEñ¬~\U000e6b33\U000cd408~\x7f\x01ü\x8ccÈ\U000e07cc\U000ddd21&µÙI\x08åÁ', '\x7f쨃©_', '\U000c0b26\x86%×\x89\x02C\U00091eb5GÉwô\xadÍ\x91\x91»'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', 'ðEñ¬~\U000e6b33\U000cd408~\x7f\x01ü\x8ccÈ\U000e07cc\U000ddd21&µÙI\x08åÁ', '\x7f쨃©_', '\U000c0b26\x86%×\x89\x02C\U00091eb5GÉwô\xadÍ\x91\x91»'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003848s
====================================================================================================
2025-09-19 00:01:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': -27}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -27, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004118s
====================================================================================================
2025-09-19 00:01:15 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "<script>alert('xss')</script>"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003782s
====================================================================================================
2025-09-19 00:01:16 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U000d4c4aR/\x9a\x0cG\x97\U000ce633', '¢\x91\U00085a8a\x14', '', 'Ó\x03äHü'], 'password': '\U000d58ee\x18ûù\U000aaeab\x8a\U00056534_ì\x1bî<\U000152e5䎼\x8a\x8e\x18\x86ñ\x1eF\x8f3Cºî0\x18æ\U00011d394ák&J\U000cc869𥖟\U00062667«\U000ec4aa°#Ùnò\U0005567f\U00085ddf\x13L\U0010d7f2´\U00109962¾¯"q2T𣩽\U000882cf×Ó\x0f¦\x1c³\U0009fdcbFî[鑢M\x98!5Ø𛰙{\x99gý¾Å\x0f\U000cfbfb\U0006c8ea\U0008e62b\x9e\xa0\U00051666î\x9e@ø÷\x8e\x87\U000d773c\x8a\U0006e287ÓE\x7f\x0e\U0004857b\U001046da\U0010480b\'\x9aé¦ó\x8ff`忠T\x8f:\U000ecdeb%Ó\U00073b71n\U00040ad4\U0005f5a3JÏ¸ðn*\rmR¹\x8f¯\U000e680dT\x86ÀÝ:\x1e¼¨\U0006649c¹\U000baaa4\x0f\U0006da77\U0010e0b1ഛ\U0005a9f2s\xa0Á\x9e[\x07Ê¾\x01u\r¶¸\U000523feé\U000804e1¹î\x8f\U000d8bd7\x7fù\x08:éNø&\x85C\x98yi\x9fy\U00084aebØ\x1b\'\U0010b620ák\\t6<\U0003bd8d\U000909ac\U000cd6f6î\U0004a3d5_\x17HÆ$\x85Ô¡TÏ \x00\x93𡭠åÖ÷uÆ¸\U00067be1𠕢H\x8aç\U00089510ñ\U000ad0baõHºÝ£^\U000c268f#\x86\U000439ebÂ㯅\x16\x80w\U000d433fËì^ÚL\x08\r\x84\tO𡼺ÿ0^ÜÓ\x8aR\x02pnú\x11\x89\x97É´)Cv\U0004053eð\x8a\x1båCl!\U0008f804½Èx\U000c3265Ãß\x9f\x0eïe𭅭\U0010fc82(\xa0l½\x0f\x9dPp?êûBC+`¨\x02\U000c5b60=y苎Ã\U0008ceacuÑÀ¥ï0£;\U0008ee4b.\x7f\U000a3678\x90䳔à\x08𞢅Ð\x7f`(9\x98\U00041e77ªcc\U000a13ff\'5\U000c5c1fÖ»a²_±\x8eáÌ\t¯\x89½ëL쪟¸\U000d98c4ÔÛ\n\x03ØObr{Ñ\x85/1\U0002f519D§\x92Ø\U000f89a3Ý\x88ù\U000b6b47\U0010f6957\x18Cç\U00072e55\x91𰍜u\x15îé\xa0têêOÿüSá\x85?ý\U00038eeb²\U000cdcbf(7\U000e8aafD\x1eN\x9b:\x81Ó\x86ZH\U000ab441È\U0004f798±©.âÛÑ\x93Æuÿ\x93¬TÝ`Xà¨\x92ô\x08àÿ6\x8b\x08.$\x99ºy\tZ\U000675d9[Kæ¥$ðc¡ü¢\xa0¥\U00097abb\x82\x94Ç\x132*Á7M𣨈q_\x01\x96e#»Õ\U000be2fd\U00040ccf\x9d\U0003a74a\'Ü\x13³Q𩥅²\x97\x04\U000a2bd8ó§\x155\x84z\U00060003\x83¬ík^xh\x9fÒ\x1df46}ÊõËëÛ7,µ\U000f8aea\U000728df,"xø\x8b\U000e5dce\x15\U000158e8XTÐ\x1aÄ\U000b022dÂ³%Hq÷\x90¾n \U000b4a09nâ°\r¨æ\x86úÆOFI\x15\x9e\rå𫋤ðKxপ\x0e\U00058cb6"Â\U000eadc2\x0e¨¶²ÿ𩎼\U000af8e2¢\x1e\x15\U000e3a40\x8e¤¾\x8aÙûX\x85&\x9e\tÐÝÂZ½Ò @FJªøé\x03\xad²\U00052e1d\x96åô\x07\x9e£Ëá|\x05Y\U00033332ß\r\U00073704ë=r¥IÙ\U0003446f\U0004fa86\U00084436\x90f\U000e6335[?õê\x03\x81\U000cf394àÑN¶S¼C\x03%\n\x90\x12\U000f1852[{±¯\x8dTµ+\x81Þê\U000f63b8Tl\U000b6bd7rl\x01I&IËýw\U000165b4ìtA\x1e[R´\x90V\U000fb8b8¨\U000a6681\U00092e0d¦fcVüÕ\x83𪂖\U000e2223\x8d\U00058b7f\r\x12tÂ\U0001391fø\x86\U0009f08c\x88\x91\xadu½§\U000cfe00\x1aãþ¬\U0009bd47\x14\U000b5730h\r];(¶ÒËY\U000c55f0¸þ:@"Í𥡽\x83`|Â\x11vû\U000f84bes\r,ö\U000e1e3bBA\U000b4aa5Ò\U00094f12â6\x92%l°f\x94IÄ£\x98-Ð±m³¼\x1bý\x18¿\U000a3403럟@\U0001aa0b \x90rU\U00093512JÝúÚ\U000cfce1Ð\U0008e031Úmì§õ\U0003156d\x9aF\U000ded39v\U000f445a¾u%I<rFö\x1f¿4\U0010f033\x80G\x86\x0b\x9eè\r>¨ê\U000ba3adj]Uµ\x93zQóí\U0005c47e\r\U000a484dh#uü\x96û0jØ\x11Måï¶Ðu\U000e45a1\U000939fd^¤\U00083330rq õ¼×\U000abc32ûRA\U000a1095\U000bb2b9ð3y\U000f7a20Öë}ý\x8a\x0c\x10ÝÞlÖØÞº\U0010add8ùW\U00078ae0\x98\x9eXç\U0004d663¾É\x7f3\x13i³Ú\U00084114P\U000740ea\U0006da1a\x8d\x15wK\U000cbad8dR\U000386a9𠥁ú\x1b\U000f0c0c\x13\U0007565eêÆã3@½\x08¸=\xa0ᰘ\U000a7663ä\x1a)¼𮅏=Þ\U000e0b33쐔\x8b<㚄=\U00044e607©r\x18ïÛ\U000dd8d7\U000f63a1Ën\U00060b92Z𤩐\x069ø¼(hÓ¢öô\x0c]j;\tGÄ\x92bÆ𫲹\\Ìp;8\U000f9b46\x9eHÐûú£rövÃ¶\U000b93e8z\U00044cadI©Z\x0e\x1dÈwç\U0005307e¬Ó)½D$À\t]W\U0006bea2𧹄\U000ca028\x17\x8e\'\U000843514¶\x8ek]\nðµ\U00038b81\x17§\x80Ù4\U0004529a\xa0ï\U00092901ÏdHô²\x102ù&¾\x0c\x17r5»K«xW§µÉª\x83𡙈²j\x12Å+ìôr\U000d6cbcRv×\U0004c048\U0003dabf¿\U000ce9d2à¨ù¥\x04x\x8b\U000f24ab\U0007cc07g+\x98\x97\x91¶Ô÷îu¡3𞲀¡\U00084cf9Ü\x93ÕñrÌ\U0006fc10\U0007aa29\x00\U000987bd\U00014920\U00055cdcµóªWä\x81Bj»\x0b¿\U0009b172䃰þÝ!\x8e\x9b5Î\U000c3b57n\U000b218f(°´\x9fzÊJÂð n7LP^\x10ß\U00047c47\x17÷®Á\U00043eb1\U000e9f00\U00084fb3>+\x8fïÐM>\x96:\x16ªy\U000fa60b\U0008f5b4Â1\x01n\x1bp\x9e\x7f\U00086d87-\x82\U000d1359\x18Þ\U00102e21¬\U0008e545𪥍l^uÁ\U0007e8b9/Li\x9f\x803k@\U0004b2b5\x18(ä(o耊\U00040b78Ñ#<÷V\U0010c603\x0c¯Ä«ßÛê\U000555c6\x06Ý\U0006afc5F\U000c9bbcåzs#±\x93y\x97J\x0f\x11Í[eu£\x84\U00045140vr^òù\x16\nq.\x84.Ï`5@\x92\U000bd72d\U0003c2ea6å\x99\x88\U000e85c6Ý\x9b\U0010d926ô0À\x9e±¬[\'\U00060fb5\U00069911qµ\U0003daf6Î\U00107954ú#:\x91V\U000db1a3R\x98\x94\U0009a725Ìã+léx𥣵\x14Ê\x02\x93\U000e8d1d ÿ\x8et\x08Ë\x97æ\t\x8e¹Å굍𓁪2Ëí(?el\U00109235S瑲S¸ç\x9d\x1d²rN¼ê\U000a230eS\U000a25d5\U00069539øC\U000b92a0N\x92"Ï#𪜿&𒍐\x01¤Â\U00098556\U00064080\x94\x7fM`uJ\U00050260¶\U00091e59\U000649eeü𬑩rAâÌ\x8c\x17Ó£,ÈÙKý\x19Òè\x92\x13[+»\U0004cabd\x98\U0006f023\U000d2ad3Z\x0fë¤³\U0002f4f7ì𒊠vò?\x95w\x1aã\U00038911Ð\U000efb32\U00077460Û"¶"ËÙ¥y&\U001010caä\x9b6¬X\U000b3a13\x11¥ñmV´\x18/õÐÈ\x81êÏ\U000c2c98A\x91ôg\U000d8f86g\x02\U00048b31'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U000d4c4aR/\x9a\x0cG\x97\U000ce633', '¢\x91\U00085a8a\x14', '', 'Ó\x03äHü'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004025s
====================================================================================================
2025-09-19 00:01:16 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003902s
====================================================================================================
2025-09-19 00:01:16 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U000a7a40µ\x96£\U0001bea0\x9dU\U000982a1\x8fÓ\U000c8fb5']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U000a7a40µ\x96£\U0001bea0\x9dU\U000982a1\x8fÓ\U000c8fb5'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['\U000a7a40µ\x96£\U0001bea0\x9dU\U000982a1\x8fÓ\U000c8fb5']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003782s
====================================================================================================
2025-09-19 00:01:16 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -17395, 'password': -80}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -17395, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -80, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003637s
====================================================================================================
2025-09-19 00:01:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '?ú#\x8d\x1c\x8f¼\x91ì`\U000ff0d3\x11¹\x83Î\x96Ü\x8a\x1b\U000b5293>\x15\x9f𬪽§-\x9a\U0008db0c<h\x1e\x16åo𝕦ÂjáF,ã\U0007ac8a\x05\x80j¿±\x96\U0004456dTa\x1a;\x84¬\x88\U00014c75\U0008555fâbÀv\uf726\U000482b2·ûrY\x92Bññb$\U000c4cb4\x0cá÷ôèù#\U000528c7=Ðó¼$m\x9d:\U000efda2Ý,¾å\x97Y\x96|\x0c\U000ad92b\U0003e42fæ\U0008b998\U0009bba0EÙ(\x0b /\U0004f995à$¼-\x8dË\U000a560eV\x9e±Å½øyã\x14^\x03ö\x05xDྥ\x07\x98r\U000fd0a7~ù|ø\U000cc072\U0008f1b8\U0007fd7ebúä|\U000a9a96\U000932f0\x91c\x81\U0002a6fa0¼\x8a\x9fáø\x91ïÿ¾\x87"w¿v\U0009abcb\U000b9f3b&¦p\x99\U00035913\x00ì\U000a961e"\xa0A\U000367e33\U000c7237\x91\x08hÈ\U0003785cÃìö\x8f\x11úmà\U0001a8ec°wipÙÛ ß:ý \U0010f863Ã\x88\U0008578b¯f?b\x83q\U000a24d6剧®\x18°\U00061b85Ý\x88_\x9d\U0005c312\U0006df18}\U00061611𭊑á\x82[NN7\x13\x7fö\U00031cc23Ö\n\U0001c288<èp\U0009f837/\U00048bb2|\nkÅh,VÌwf𦻪c¾\x06\x13<Ã\U00043fa3ÔÖ\x94}\U0002efc0\U000403c1©Ø\x00\x0c~r5\U000837d7¦?\x9e\x1f¬\x83\x0f𤒌×s\U00109b4f\x88èr\x19k=\U000ef36d3%\x02\U0008f286â{\U0007d43a\x99¾þ\x0e\U0001c5ee\U000e5a64𠱱rꢠX6<i\x9f\U000128e3ÄÔR\nïn(³\x9dÏ\x86\t\U000bab23çþ\x08¶\U00010953\x86ï\U000d9c8d\U0005b672ì\U000f2f31ó§U©\U000c3a53Ù!û1\x1e\x14𣉀\U0003de9a\U000afd00`\U00108810w\U0008351f\U0007e018¶\U0005d03cßR\x19-\x8dv\U00075966ì\U000c6d8c.pÒ-[K(½¸ãÍÇ¢\U0008947eC\x06f\x0b_Rt\U00034ebczC\x98\U0004b48a\x03\x8cÃ{\x1dóÓ¹»\U0004aef5Ô:¹7@\U00056058bºÛ²0ýPì\U000b17e9¼*\x19*\x81\U00041a95\U0008ac20\U000a6c48\U00074d96𩡯Ã\U00089d9b𪏸ÅÕ\x9aÇ¿À\U000e84f9¸÷ÃËæ\tü\x81\x97;v\U0001c0e6\x89\U000890cd\U000e7b16sé\xad\'1í`\x8c³\U0008cf1a\x8a\U000e0ccc\U0009e5fd\x1et>ÉÕ\U0004e4b0Íêá\x12\x9cIÄ{T\x90|Íi\U00076b1a\U000c5c98ø\x87\U000ed163\U000d3ce1¦j\x0eT§ê´\U000cd4d4Ç\x94\x9f\xad\U000f8b6b&£äuK±\U0001508cL鄉#ùÖÖÚZQfÏÄ\U001038a7¹\U000ec3a4Ü»ø\U0008fcb4\x06\x97p\x0f𦲘ø\U000447f4\U0006dbfe\U000f4e30=öC¦ÿN\x85\U0010b6a3Ö\x15\U0001487bÚ\uf1f7ç\U0009aa0a¼Ý\x05£\U00080955a\x9c\x01Ô\x16\U000a4ab8K\U0004de93q¿r\U00058a39qß/\x88{\U0005a3dcõRï\U000bc3ffnÐ4\x90£[\U0006b3ba$\x82\U00042b16\U000a635d94ù\x9d\x90·£.\x02ÝÏ±\U000e8ce7\x1e》Ý\U000dcb28\x82¤à¶9ò\U0010528f&Ö±ðø\U000e8fa4_\\qM\x92\x1az0|\U000c3150+y\x04|ÛªuQl\U0010d781\U00071f538ËP\x1f\U000bf69fs,\U000bffc4ïÖ¹\x97\x01\U0004d811\x88Ôo꜑\x98c°¬\U0009bb6d\x83\x9a\U00083961\x83\x17\U00105208Ê\x16\x12áE£jP\x1b%\x16\x8e|\x0c\x17𪙓á4!¨ÓSÓ𡮛ø\U00104194jJã\x17\U0007c8efaÔ\x00~ø?\U000a05f1S\x87ÑyÏÜ_\U000a8cab¾\x9cX¯©ý\x0bÖ\x07Ç\x82\x92\U0006d949d𫣘È\U00109079ÐÕ\xad1^\x95\x9b\U000ae28a\x83!ò\x1f\x04\x15\U0008c060\U00037fac\x8f\U00052bb2fRÜz\U000d43c0î\x02Ò¹ü\x01ªál¨rQ[´Û´¡ûÈ"ýùõ\x9fm\U00091e53_¡\U00083100㰉\U00038bb1ñM\U00080da8\x89\U000edc3f\U0009d084\U000c496c\U0007c439fç\x8a\U000ac1d3\U0010fdd7ò±Ë)f\x7f7\x81×\x8c엓}\x0fõâ\U000a9880\U0010c00a\U0003dda9\x9a\U000420be\x1dÈ\U000a9514\U0005acca¤ÒÚ\n\x88\x07®o\x84 h^\U0010e942´QU¼úy¬\x84ì³±Êg\x02fx\x1cr²ঁô\U00070956Ï\x8f\U0004ea34\\\U000fa703\U0003260fÙ\x89÷\n\x07\U000eaeffr´#\x90Hó©ªæ\U000ca41dÀ7\U0004d90b\x13\x11zõmz\x9cðZ\U0003af3c(à\x1b\x81,2a𫈑\x18^>\U0003aa73\x08«ø\x1dª\U000a4186ç\U0005cfc0\U000d5e1eÞ,\xa0\U0002fbdfC\x90ï\U000b1ec2\x8eÖl\x9f\U000f0210ÊÃ¦Î\x0cØn¡\U000a4bdbSôἙÎ\x99\x91\U0008ee8eÞm+\x9f\x87\x00BZQ\'6\x1aJ¡\U000f0f82ê\x11\U000a9108³_á\x94\x99°GÐ7\x03óõÇãµèi\x89\U000f5d65\U00109940©\U000c2b9aÒ\x82³&*ÀaæÊPÊO4\x03%\x1f\x9d\x1b*\x02:\x86j\x1f4\U0004878c\U00104996\U0005c599Ã\U000dde74\rÚ¤Ka\x97pý±Ý\U000ef047\U000af1a0\U000598ee\U0004d8e6G\U000125cb8E\x82ᡖ\x05\U0003c79a\U000a133a\U0004d036eÉ\x10¬ST³\xa0â9µb\x95컪\U000de3efã5ú\r\U00066532¤Î\'øòÒñ\U0004ee91f~\x8dÈ_\x0e\U000f9f7b\U0005e922û.\U000943562]s\U00098371\x04c\\±\U000984e0\n`\U00100044kX\x8b\U0002f769\x88(\x83K±ÿ§°\nø\U000f409e\U0007d56a\x96\x05w÷\U000f55dbÙ\U000a3c67Z\U0005f7b5RyÁí\u17ed\U00089072Ú🪰½¤\x16î,;È>\x07ÀûóêU\x16\U00084895\x19L\x87²𡊟jÛéq8T÷\U0005758cÐ\x9c{\x83Ä\U000cb935\U0003c3c9½SÄ(\U00106f08텗Â&l\x99¯\x07Q!N\x9dâ\x05`Æ=\x8aHÐ\U000194ebÞ\U00084c37«\xad\x18W\x99o\x033·\U000daafb\x04Îù¼\U00066558±è\U00081130æ\tg=XBñ\U0005b051Á\U000ee85a\x12𬁠f\rW\U000cf30f´\U000ec326í\U00072eae\x01\U000e0cc1´3\U000b339e~C-ç\U00108e772\x939Ç\x96Lp\x91\U0008cb8c\U000f7a47ßÑ\x95ÇËµ7\U001000ce5\x1c¥ùÓ\U0004f197Á8)\U000d4c4cçãí©Û\U000d2fb0ï\x88\U0010fc13=\x0b«¦\x13\U000399cbäR½\x93Ú\U000ed800\U000fae38zj\U000d5773\x84·ÿ9뷺\U00108f14\U0005eb43Ó\x88AØ0\xa0N\U00085641\U000ea818\U000dc78b\x80É¢ü敨\U000ff5fc¨\U000da60c$\U000ce12aÐC¯ø\x00æ\x8fO𗘷\U000f7834É\x8d\U00066adb\x1aë¦_\x9eß\x9fÝ\x14ÉÊw\x8b\x97\U000e79c0K\x03ùh\x87首(Of~ÓÛVä\x02\x86!\x80Ra&¥]\U000abcd9¤7ò𦥖%𦁤\x90f*\U0004e5f7ô\U000cbe69÷¶1ñ\U000b0881ô\x8fj\U0004a948\x11\U000a9cc3\U0005a3e6O²Ü@Îd;r\x1a\U00042ed3ø þ\U000114e5A\x14\x1e\x07¯ÈpÛMä\x9cRÎ𧺿\x88\x03ïÔ#º/\U00077cbf\x86m\x8dóá¥\U00082aafS\x15ã\x8c\xad\U00013b80\x0ckr5óÑQ𥣁\U00035531\x88á¡\x18𦛩\U000b76b8²à[\U000745b4ü&þÞæ£§L\x0e\U000c5869\nÄG\U00032478µÜE?dA¿Ìå\U00086660±ú__Å𬦺0õ^ZX\x07í\U000632be'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003786s
====================================================================================================
2025-09-19 00:01:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004557s
====================================================================================================
2025-09-19 00:01:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x93\x1d\x1b\x18¨3\U000a6629\U000e3fa4\x85', '\x9a', 'Y\x00¼A\x14ºÎ\U0004b53ca', 'v\x8c\x05', '\x93𪁦', '\U000fd2f3', '£', 'm', 'â', '\x10\r\x12x'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x93\x1d\x1b\x18¨3\U000a6629\U000e3fa4\x85', '\x9a', 'Y\x00¼A\x14ºÎ\U0004b53ca', 'v\x8c\x05', '\x93𪁦', '\U000fd2f3', '£', 'm', 'â', '\x10\r\x12x'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003828s
====================================================================================================
2025-09-19 00:01:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004102s
====================================================================================================
2025-09-19 00:01:17 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003748s
====================================================================================================
2025-09-19 00:01:18 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '"繕«\x02·\x9d\x87\x8aÛ`\x89AíYG\x9cb\x9eÔ«b\x95ô𑤵i>ø\U000d0987\U000a4120\x9c°\U000eb829𞢤ªxÕ\U0001efc7\U000c2147\U000c4c3bH\x94Ê£\U000a003d\U0001a0c6Á3\U000364cd<¿ὢtÜ×\U000e291eöb=\U000f4a81\xadÊµ\n4\U000e2f4cª\x19ª+\x8bÀRï©¥\x99\x03buw\x0f\U000f9d90Ø\x9bNà\U000e32bc\U000155ad\x08´\x0b1\x1b\x1c²"|\U0001bf34\x824\n\x00jh␤ô,MÄY"ñH!𣬂\x96,?PÅ*\n\x0fâ¢\x9dÏÆâZ\x8døÝJx`5l\x16q\n\x97ß\x86\x19ó\x88\U00091e37èrS\U000e365a\U000fc879\x0b¿h·a\x98\U000b7210\U000dfdcau;àrÞÙ\U0001be96Iµª\\\U00068476\x00\x12=µM\x83\x7fÔ𗻆bFgÀ»G¼|L*\x91ç\x8f<;\U000c7752°[á\U00084d6f\x00\U0006578ew\x94údoü jGè3+Ö\x05\U000498600\x00+\U0010c48aºù𗯋\U00104ece\U00093b1b f𐚹¾\U000ccc43¥\x85|\x1eFß/òã\x9b¿ÉùY¼\U000c771aXü\x81\x19*\x83\U000f8f2fêãYÃØ¡\U0001eaaf\x02æw\U000ded80Ëñüo\U000d5f3c\U000fd8bd\x12¿n\x7fiK\x89\U0009ea1d"+2öyÒ\x1e,\x89Ä¦ú¾w\x03\x98\x92\U000bb2d0\xa0úÍÃåí¢þy\U000bb671\x12Û=Z\U0004f3cbÙCWëä5÷ä\x8b\U0008aec2𠂦\x84$\xa0\x99Ú\U000b0557\U0004a8fe;\x92Ç<\U000e9c8e×!\U000b3b6e´Ö1&\U0006ef99Å\x05\x9f\x0fl«×ìd\U00057f46.\U00058762\U000404d6²Ðà2\n\U0006a347H\U0006192f\U000813bb\U00013f60·¿\U0001e790\x95\U0006d1bf¢J\U0010715e\x98w\x17(\x98\U000f8dcaµ×ò\x12\x8e\x83Ê꠶\U000ab761Ø𭍝\U000e330bTHQ"\U000fb3dbIÉ\U000b071a29\U00080a81õ\x80Âì\x1c\x0fS𫗵¤ÏÍùæ\x81M!²\x1fÙ²£m\U0009f822é<\x1f\x81\x12\x1eåa\x0cE\x91\U000b624f\U000367b9I¿2ã\x0e5©\U000fce31±¹zã¢í𑇂Ô+\U0006b2b8\x92\U0004b457\U000b374c\U000c05d0\x97\x07\x8c¥Sr\x82\x1dº\U0006bb75\x9a{(\U000962a7ØG\U0009b291Ú\U00045f62£\U000708263ê+ñ\U000c6867Ê\x8fÎ\x0ci~\x85¾ù\U00105957\xad\x91\x1bú#jÊ*Û3@\x0e\x9e\U00040225𗰿õ(ÑËzûp´𭥀Í\U0001ad6f\x90ÞH´\x12É.\x13\U000635e3O\U000915bd,W=\U000d0d5f\U0008a928\x98\x85\U000b6f17ÈD\x8a\U000f8a12z"±𫛾*跬xB¶\x9aý\xadª¡0\x0f\x95\x1b\x02QUíR[hQ\U0004458a°Ý\x85$¬\U000ef3bb\U00086218I\x88ç«·¬?\x9c\U000b4f9bÕ¬;r\U00036954C¾\U0002f5c9òL\U000a022eÚ«P)çGÓ®ó\U00043d30\U0004c9aaø¿üáx\x1c&\x04l"\x18\x87Iqµ\U0004a8ab¯î\U00066f9fý\U00039433\U0004ef7aÎ©\U000a39c1}\x8d\x1d8G\'s_7\U000e3519Ô\U00045bfbøè\U000e86dd\\\x9c\U000e6cb0²uF\U0009de4eÄì£çô#=lLÞ|j\U000415aeÂ/\x9b\tÙ\U0009da89\U0008b3f3ú9\U000f5d3d\U000538b0Ýº\U00010ba0ß\U000c3dd4»\U00089f89"\U0005f41eáÌ倬Ï\x81Â\x85¾¢GÛÈ\x94à"W¼ú§\rA\x01óùîÄ¨Å)Up\u0d84\x1a\U000ed8f9[\U0005491c\x98\U000f3daf\U0001d3c9\U0003fbf2Ñ\x85\U00108c43zoû\U0007ca54\U000b8927\x9d£÷\U000cc282õ\U00078784*\x91WÊË¥®mó\U0008f3c0h\U000aef2ajR.ÔsÍ\x08\x0c$\U0002fe31½ç\x9c&¾Ýë\x8cµánz)\U0005b466\U00038975ô¨NÞ\U000e0fbd\x8c\U000e962d\nÞ2\x84ëhuÇ>\U000c0984¨\'ð\x157Ï\U000bed8b+Öpq\x01ªÝ¨𪷓\U0005035d·\x90i\U0006af11Ô\x9b\U0008985e\x95\U00058962£X\U0004ceccÇ\x06\x1d×á\U0003beaa\U0003c13e\U0004f47e\x072ÈT\U000acfafþ\U000d5832_\x135~Ý_{Wôf\U0007663eonª⥪\x82<\x9f\U000f8e8c\U00075391À\U000ce899\U00072586\U000a0811È®௴\x06ª\x9e\U0008c040\U000dd293Ñ\U000816f25J鮥\U000f71adÁ\x93𫨉\x89\x9d¸À$Ãz\U000c08e9Ö£ëÏ\U000f5bf5𭟠uú4kxu\x9cÎ\x98/hÍ\U0003414d\U0007fdc6}\U0001b946O\U0004de6d=\U000cf3dc\x9e\x1f\x0cÈ\U00090067í*\x90¦\x16¦º\U0009b166ÁÓ\x93§\x12\x0bü¾õ3\x15¯\U0006c0f2õ\x19\x05\x04@6\U000d536e Ï\U000b6fa8¦Z\U0008dcfe\x1eÊ.=µÓ\x8f~\U000f113e\x97M\U0008495b굌\U00067d2f\U000cd287hñ_½\U0006245e\x80\U000f20a0t&|ç¨\x9f\U000c0da53«W\x04\x03\U000c28805Ò¦H%\x89\U0009f888NQõa"´\x99\U0001aca9Ø÷¦]𨾗qM\U00032278u0$"\U000f5555\U00092a62\x01\U000a1833No\x11ì\x83p`\\^À\U000455e9\x1aA\x05\nN\x14K唹§\x03a\x93fG\U00048053\x88\x99[Ùÿ\x04=4÷\x92R\x17îç8A÷5J\x8a\U0003b991ø\U000f31e9\U000eac28¿1ÿ\U00057f33\U000e78b2»\U000ffe6ejÑ/Å\x04rN\U000b36115Ø\U00032346@\U000fd994Ó:\x15ÕÔ\x18e®Ìx15lØjET\x9cõU~9\x11¨\x1aß¾\'Å\r\x92\x88\\_\U0005fe02𗨜vk\x9dµ\U0009fde7𩧦ÇtÁº´\x13ícU\x8bùU£XË\U00037e48pMUS¥1\x1bñ¿áYQ\x8bºª\\V\U0006c746§o\x9bî*\U0005016a\U00043bcce!<ÿ\x0b\xad«\'\x10Ü\x17v\x12ï\U000f9407jW\U000b7bf6\U000d6a2eÂ_\xad\U000cdf5dn\xad\U000cd132\x8b\U0010e080w\U00012efe\x14\U00094ba8¬Bx\x96Â©\x8d\U0009ab56Ð\x13\x8aãI\U000c8165\x86\x9d\U000f51e0\x841\U0005a6597\U0005a0ba\x88ì\x82\x1b\x14\x1d\x1b\x17-µ\U000e0c0eì篫Ò', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003616s
====================================================================================================
2025-09-19 00:01:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x9a\x0f¹3\U000e7e0a>\x94Á\x9c\x1db\x96\x9dR[T\U0009ae3cÍÕ\x1c\x01½\x04\x7fv0¥p\x0e28B\x13ÝÓMûïÐ2ê\x95=*\U000941db»Ø𬕑×úà¹*Hï\x93\xa0P1\U00031e2dÔô<&\xad\U0009b1e3ý8괋tFú3\x83\U0001dadc\U000330cb\U00105c6aR¢\U000e8fcc\x95ä\x80Óèä\x96\x17ìx¶û\x13\U000ba14f\U000e67ccê\x90¬°³𢜫\U0009b92f\x88æ,\x1euêÒÁ$\U000679cfþñÐí*áf{ÂÓ\x13k\x06\U00078242õ}\x9a\U000afeba\U00040180\U000d24ca>H\x91\U0009c290\x11(Y\x95\U00062c53k\x8bca¤ÑÚF\x1eÔ\U0010d121!o\x06\U00048320æO\x03)\U000aacf2\x1e\U000ce012\x8fh\x9d\x119\xa0ø\U00109cb7\x94!\x99eÆgº\U000f6e78¬RæAì~\U0009a5c7𠌻EÆ\U00046440³\x0bå\U0010e6aa\U0010c31dÎÍ7\U0002f327]𠌢·\x9a H\x944=|\x8fÆ\x9c¥v\U000512a9\U000e9f87Û,i\x05ê#\U000357db𫹭,Íì\U0003d519\x10X»\xa0NvÝ\U0006608a\x1f\U000befdd\U000bc280\U0004f5c0\U000879c8¢\x93\x95Ï\U00063c21a\x99\x9f\x1a¿b\x80´\U00060dd9a\x84¥\x18\x83\U000c926aÌñ\x86\U0005500cæ\\𗣸\U00095a5a\x0f\U000ed92e\U000847f6\x17\x8deÉ\U00076c09\U0004c4d0Å\U000d0511\x18\U000910ecä=\U0004775d;\x81H\U0004227d¬â\x04\x82Å穣\x91Ù}\x1d\U00032548ë\x8f@k>4hì2\x1f¯Í\x1c\x1d\U0007c895\U0001a752\U000eba23\U0005b928º\x05ë\'\x92ê\U000e23aa±çu\U000f0888\U000e0e6c\U000a88a5~»\x12¶\U00106f29\x87!\U00015489.×ôû$\x0fº¥\U000f4d9d/\x02££Â\U000ac1a6\x1d=\U000e2126\x13¹÷\U000ae0f1ú#\x7f\x15Æü\U00042554£¤þê^D®\U000cec9eôu5\U00065cab\x92¬p\U000ed55e\U000dfdb0\x94æ\U0004ba7dî\U001068ccÓC\U0004f74ei\x9bÞ\x87\x84\x1aEÌ=\x8f\x05\U0010b938«\x17\x06\U0010d471ù\x0bH=x/Âðòa\U000ed207\U000c3820\ue319\U0007ed5f\x0cì\U000cb4ae\x98\U000e005a\x07µ\U0007a47d>u\x11\n\U00070119\x9c\x00\U00091003þÓÕtù\U0010bd6d\U0008ef65]²0hð\x0e\U00098f97j\x88\r¦Àu\U00031720𥑸\x98\x84euQ\x9d,§´½\U00043896\x9f>\U000b9d6ck\x94\U00107efdðá\x94±õÑ\x1dæ\U000f05b7tØ\U00073fadæ+öÅ¢=óÓTà\U0009ba65\U000aeb431\U000eb931\U000d2609n\x9b\U0006804eÚ🎫ÒQé\x9d\x1f𔗃\U000b486aMf\U0001ad8e¤6\x07\xa0VÄoúüã\x94\x9c««\U0010f1f5\x06Û\x16\x8dg*4,¯\x12\U00055962\U000a081b\x7f1\U0005fddc\U000c1a6e\U0005e552|(\x89\U00066913Â®Q\x07\x99ü£\x96\x17À\x0b\U0007855d\x12z[ÜE\U000d72deá@\x0e\x8c\U0005eecd*\x1eâM\U000efe92\r\x14\U000cea43\U00102807\U0003bb72né\U00044892Çeg\uf3a7;\x1a\U000e6671¸Ä\x17\x98㒦\x0eÿ\x10µô>ax\U0009bc02³×}FôX\U000ab84b\x19¿É\U000464b4@\U000bf97d¸\x18\U000f959a\x16𠅖+ã\x00FÁ;\x82\U0003f971ó\x9b(\x16\x9bU\x8aÃn\'\x93\U00057da9\x13ù\U00048f07V¯a\U00013c61*\x19U:\x7f?MaÅp\U00069498\U00054130ýs\U0010feaa.nÉ\U00092bb4x%ÓÚàt\x9d\x7f🉡\U0010db13Ö§ô\U000de99bE\U000941f6@AX\x06mñ\x8dA\x17øá𗉳¥\x14ç\x0e©\U000cdf12º%sß\U0006e6d6)<÷\U000dab87û\x93\x93Æõ1\x88êÎð\U000aac5d¤\U000f37e8Ï±n%Ôú\x12`K\U000b70cbI$ùïÖÆ\U000ca6b9m\U000fd9cbÀ\U000ef213\x0ffÖ\U0007ea47ý\U000b6e51f\x88ï¢´¥\U00070e9eTµ\xad\U00069b1a\U0006f7d5𬑴zpQ\U0009aaaaÁ$Fo\x95Pã>\x02±\U00045286\x0b\U00010e28¼\x9f\r\U0009437f\U00078812Äæ"\U000d886c¯\U000ab2fbò£§\x8f\x1fÜI\x9fáIØ\x9d\U000b90cdy5 £¾]5=\x84NS\U000ec986S¥\xadõ\U0009a7cf8h>>0ß½\x8ai\x17ÿ#䉇¨×\'컽ß\U0003233c\'\x97\x8e\x18\U00100af3ËÇ²\x19\x7f@°¬µÞv`\U00101da0£Òâ±/I\U000a0a31\x16\x7fòÀ\U0007bee0\x19ªT\x95s`Ü;\x9a\x99\x8fâ\x1bª=£u\U000fbe24ö\x86!ÖÅÂ]㈬\x12Jëì®\U0006959eªS\U00073644\x16>\x05Þ\U000cb08c+yÕÊÁo&\x7f\U000abff6ãu\x00\x13\x94F\U0008dd21¸\U0003e5ea½Ö#ß\U0001dcd5^3O³òÜ\x8b\U00098bfdBÒ\U00109e6f\U000eea9f¹\U0008cab8&G쓒;)$fÇf@¥nw¸G½\U000792ad\U000ea0bbáÃZ\x14铬G\x04\U000faab7¶Ä\x8eæ🭲\U00072626|\x8f\x16d\U000e81e3n\x8dY}p%Ò\U0009ab78U©ù\x0fç`飕\x18d\U000ed208\U000be172Þ=\U000f1433º\n0¹øù#$«\U00031ce5\x08/z(Öe𨞉ö\x98\U0003fcf2\x08Y=ÖCokÔÜ\U000cf439\t\x93\x08¡\x9edR@!¢넏\U00058d85L\U0005e66b-vþ\U0006aaeb\x11\x7f\U00071ffeÎ5²Y\U000333a0𫮠\x90\x87vëþLK\x92r:ô\x1c_³\U0009b8e0\\â\x94\x1eï\x1b,`ßu£\U000aea57¯\xa0𣟶\x1bÒ\U000e052b\U00094fd4G\x0e£\x83?\U000963ff\x15U\U0002f12c\x0c\x92JÞaX𫿦Ú\x1da8\x9b,Õ3?ß÷+V\r\U00109282â\xa0}Áä-½>Ä\x99𭝂äÞ=µ\x8bC\x18q\U0004e3c3w\U000aa95bh7\x0c𝖕ñ𘂪\U0008536fv\U000726c9\x18C¢±w<\x0b´\U0006d7b4ý\U00059d1bG{é\x9a|\x17S\x8d\x05©LÓF\U000ba170\x95\U0009277c\x9d)Ô\x08eé\x19\x86\n§¯É\U000355330\x88<\U00015418\'¸\U000b1e43Þ<½X6@ì\U00041cebÆÉ/HÛÂÍ\x8b\U00076d24¸\U000e95a25\x8e\U00101769\U0009a533,\x8c\x81HË\x19\U0005eb17ËW3)\U000d04cdGx\U000f93e4]Ïq럭Iv\x99Ô\x98\x8c\x0b A\\\x0e\x95\x95\x1f\x0eÊÙ±K\U000f2cf6\x03\U000b97f3ü\U000d2810𩵽ò\x9f\U00092bc8#\U000b7d38\x9f"¨\x81\x17\U000b0c45\U000736c7#Ôª\x91\U000487c3Å\U0010637fp%\U000ba55fq\x1b\U000bc793ʉv½±\x12æDÅ\x87¨û*cñ\rµ\x1a\U0007ee73Å\x9ar\U000deafaÅÿ\x14\U00089bd3\U000f2479\x12\x97\U0006b09c6\x10ë8©-\x8f]L¶\U0010b1ceüÎ\x96\U000bb720uË6\x1c±\x0fà\x96à\U000d7546\U00081fb3áU\'¦\x8a9ü\U000e9cc4?¸_\x9a\x9eH1ç\x16Q\x08\U000b9020z©u¥¼\x9cm\U000d404f¢"Ê¡\x04\U000eeebc\U0007a31cÂ\x9f\U000d1edbd²¼𤈧çË\U00014397,\U00105b72\U000fbd1b\U00107be4\xad\x91É^竩Q×\U000525d0\ue763V©Tªò ޟ\x9asýK³\U000bfa7aäkå\x13𪿒f\U000dffe0\x99J®\uf305\x88¹\U00049311ðÛ¯æÛ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00379s
====================================================================================================
2025-09-19 00:01:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': True}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003588s
====================================================================================================
2025-09-19 00:01:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003568s
====================================================================================================
2025-09-19 00:01:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 4845, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 4845, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.073539s
====================================================================================================
2025-09-19 00:01:19 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['_\U000d51da\U00066688Ñ0W\U000fb7fc\U000f83f1©?µ¨þ', '\U00093958è\x99L\U0009055fW§\x17Ñ', '', '', 'úLÑeo\U000d9c2a\U00080a88bºª', '½\U00089ba7í\xa0£ÂÛ', '', '\U00047421\x88¶\U0006a875']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['_\U000d51da\U00066688Ñ0W\U000fb7fc\U000f83f1©?µ¨þ', '\U00093958è\x99L\U0009055fW§\x17Ñ', '', '', 'úLÑeo\U000d9c2a\U00080a88bºª', '½\U00089ba7í\xa0£ÂÛ', '', '\U00047421\x88¶\U0006a875'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003719s
====================================================================================================
2025-09-19 00:01:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -15271218349695763958237910755951036551, 'password': '\x81W#\x83T\x07\x9c\x8a\U00062ca0\x8f\x8aÈ_\x0c\U00069510òF\U0010cd5c)°\r\x91s\U000b4478ã𒍵ªíÅ³\x96Ý\x80\x16VÊé\U0005415e𨢎\U000555c3⿻\U000b9f19Ò£k\x7f𱈳\x11$Ú5\x7f±\x95\x87㌆D\U00012e1aS-\U000fca38¥<±\x14\x87¶\x0cÓ3¤\x9c𤁃Ñ\x0cÉ\U000c52b9ì\x0bôi¦\x10Þ\x9c\x8d¼7\x11G¯Ð\x8aTãüN\x11\U00016c50x\'C)Fp²ö¥\U00039a3cÎRÈÚ5j\U00043bf4«\U0009908dÌÃ\x87ÆC𠅞\x8f\U0004166a÷\x04\x9e\U0009da98àæ\x94 \x9eÝ\'P燄¼\U000f4cafÞa\U00099c63Ë¼R\x82©ÕXÙ¦\U00065e2f藽Ï\xa0TÖ+\U000944ed¦\x8aé\xa0艣o\x10o\xad\rt\U0004dbb1\x8a±;\x8bq\x00\U000165ef\U000a6ab2\x96éuP𐒚\U00068974\x9aFE[ýY\x13\xad\xad\U0005f372\U000bd20b\x0fJ¸îÇª\x89Y\U000c0809§\U00092e9b\x12ü\r\U0003f65f\U0007a8e4Þ»\x0c\U000b249f\U000b2b18\x80¶ÂÄUÌÌLi\x9c¿ý\x15%D\U0007caae\U0009606dË\U000ebfea½¿𩕘\x1d\U000ff077\x18\x8aÑ\x04)\U000c9371\U000a7eabKG\U000d7d31\U00108abc0\x9e>ö\U0003346døð𑪡â\U000bc03e\U0008ddfe=\U000c8882b\x82B\x9e¯:\x8c#-𛰔©}Ù\x89á\x9a,P\U0007be55\U00106c35+\U000cb8ea\x15¦\x15×$|Q\x1dg\U000d20b3õÞ\x11\U00091780\U00012f29A\x80+\U000be7a9\U00046531¶Ç\U0010fae3\U000afb5aF@\x93º\U000cb491\x82\U00070e37Ô_ Ä🁱2\U000ff624\U00083dafp\x01·\x99W}£\x07}B+`\U00091f55@\U0010073fº\U000cc22a²÷µÉJÿ\U000e7565\U000f7fddG\x8e\x95øöÜ\U0007f2d7QÁ\U00039a4d\x04\x19´\x94\U001036ae^)Lá\U0004dfa9S\x8d¬;\x9f\x8c\x12\x04Ós𗟊Ä\x99ÍÃ¥\U000954cf\U000afa91Æ\U000f3442\x19\x82\x82\x80Ó«l\U00074ba2n\U0003b3e6^ñ±\x17È\U000eec85\x81Ì\U00063de6ì0\U00034928#>S¬𬰓\U000e855c\U00056873¿÷\U00079ce1ÍtÒ4\x00\x15\U00082b7b\x14\xad\U00037a74\U000ac1a4ã©\U000a4c30V~ö½\U000daec3\x7fó\U00074664öý\U0008032bkç÷\x15Qß¸ã<o\x003À·𗮤y\x1dÒ\U0006a869\U000fe3b9¶\x80y\x91B\x82\x01´ê7ô\U00106fbfrዯ\U00050712^ã\x1ew\U000e3a5c\x0f\U0009e1d8칍\x85ý<\U00096382\U0005e156¡"𫽅\'}\U0003d7154Z𱆟(\U0009aaaa;Z?në\x91¤\x8d\U00092ad4\xadUo*©ÑFã\U00016568õ\U00063ae0\x1d\U0008c9e9öY«\x9fTþÖ!\x1eù.\U000cbab85ìYcLspÎ«×cjdÞ푷Vla\x8c\x10\x8b\x8f\x83¨\u218f\U000a02d2W§JÊ\U0005b5ac𐐝\x0b\U000906c3\U000fb7b5\U0003ed6da\x86\x7f\x98\x94\x17W\U000c45b6𨰴ï\U000dc59f\x95--l\U000d0c20ÊÆ\U00033639\x1f:Ó"Ae:\x93¯°_»;\U0006175b\x85\U000824a1\U000bdf53Õ©.Ý\x19®\x96\x18\x85ßÞv%\U00076cb3\U0007cd29}5\U0008f18e\U0003c016ß×欌\x08î²ÁÞòdê9\'\x88\\»𢖌}¯è\U000aff08Õ:_þ¯OýT\U00085b7f´D#\x07\x17Hëñü\x8dÝVÊ}\x0bÌ8·\x80°\x92Æü\x87ò\U00050442v3\x12¾Òß\x06aã𩲡\U000c459al\x88§l$MØ\U000dc256\U00064a56\x0fÊz\U000b37b4\x8b\U000451a0Á:áÐ\rÌ𐂏ÛîP\x91GÃ\U0006be21\x13\U000f7a8e4È\x04\U000dd1fdÛp\U000164af`\U0010e40a__(Ü\U0007fe7f\'\x1a°痍}\x7f𗗸Âô4\x16ô\U00033d78>\U000b0800ö*Ô\x8b_\U00082a38·tô\x19𬼲JúTc𤸠I\x182Ør\U0005951c\U0010a28a𤧸QWº@🈻\U0009c749Ëßk𣆪ã\U00086768»Ô\x8c\U000da2cb|Ã;\x18(\x89L74\U0003c9c8𞸈°\nÊ]\x02Z³\x16M\x86\x88\x11ñ\U0007e814Ëâ\x03R>\U0009b9d3{ó\U0007ea9e\x9d8\U000685e0\U00060bb4OÏ0x©\U0008846d¹n\x15¥øSï\U0001aa48\U000b11f3¨\U000b396e\x80erÿ\U00070968]\x9bê\U000ff604A\U0004a02a\U00050a61\x07¾/<\x9cqu-ù³\U0007475aÂ-\x8a\r¦Û\U00051aa7\U00061cf9\x11\x0b\x01À9÷\U00060042Ú\x9b\U0003eaa5l8àº\U00065f594nAi<òU?\x84Ì\x9e8i\x1c\U000cfc81\U000b9bd9d\U000af65eåÔÅöµ-t\x07V\x80#\x8b\U0005941fOyBI\x9f0牏ºl\x9enÉ\x04|M𩟫@\U000c649dj\x1bk\U000954da®c\x04Â\x065Ét\x95´Ìã\x8e\x0f\U000f7ecc\xa0:\x90cÀ\U0005579b\U0003944d?±¶\U000f809a{𭡾aóÃ\x19\U000341a0ÿÇ¼\x146²\x8a\U00033350\U00032b2f𬳦1°:[ß?𪽰ê:³|\U000a6ea5\U000c5bafH\x04káU\x0ei\U0009058cG8ùa\x00H\U000ddf07H\U00046482qè¦뾈\U000f01ef\U0005eb15¦c\x106ì\U00034ff9\x81\U00094c1bÕ⯞í\U000c0828\U0010d2c0\U0010dee2v\U000dfb9a\U00090d8a\x10P7\U0004386d\'®\x16Ú\U000426abÍ¤3\U0008c798\x14ä\U000c2277I\n\U0010b950\x89\U0007e93cÛq𓐣\x03\U000378cf\x98tðÀ}\U000c5911u·0t~Të\x00\U000b3d42Çe\U0006b563\\\U0008b86d\U00010d9b\x19\U0001deddpù¯\U00015bd6㞮𤌦\x933\x80B.\U00012b4b{\x93û𭡓㦷\U000d973aù\t\U0006f332\x90;ÿÏ¤ºRy\x8a©(W7\U00074d7c\U000c27b9£\x97Ô\x88\x91龧p\x0ba\x8fñ\x99\U00013d0f\x03\U000a4062\x8a\x075AÌ>\x91)ý~ø\'\x1f\x83\x7fý}År𥺪VÏ£|à¤é\x8e\U00070cd4%\x08XÄ8\U000e801cÇûIê\x82¿%Ï\x14ÑA\x9döÀ9o0\'\x9e\x81.{H»Ç\x93\x02ÊH\x8d\x98¸¨Ln\x11³\x7f\U0004da0eI:b{\x93\x81Í¢\U000fd651\x1fµ\U000438dfý\U0003b0ac\x16\U000e14e7\x95\x911ì\U000d09a3\x891\x82\U0008b13b!\U0006dc690\x83#Ì®ë\x7fÌW\U00097784·\x9d\U0006961c8⁇$\U0009ed78\U00057f04Å#¾î\r\U00050b17\x1däx\U000cbf46\x1c𧘼<}\x12·í\x9eÀd)/\x92\U0009c6d2TàÞù>¶\x89snT\x05½0*\x8ec\U0005b9ae\x01L\U000a35c2¬\x9a&´\\Wa»\U0009d9e57g\\\x11𬠷\x9e\x07rSXd\U000f4fd6õÀõ]Q\U000407d3\U000555beK\U00073c220GÃä¦ óõ\U001039ff&²Ó\x0b¬¯é\U000d3389\x0f\U000fb08c,c\U0007a31c\x0f¤]\U0001ecf1o\x93w\x93\x1fv\x8cS@\x02\x82æ\x19|thE!\U000bf9a1n{\U00094383êæ\x92¯¥\U0010f776\x10\\\n\U000837df\x03\U0007ed49\x8e¨\x17V\x19Fì\U0007238d¤\x96\x98¡\U000ab45b¯\U000c8fe7#Ü\U000c7461òÉÃ\U0004dcf4«Çe"\U0008bb79\U000b924a\U000ac82f½\x1f\U000b70d0:ÎÀÈ6\x1fRÍK\x88µ\x8dx!𫍬jïælÛP×ÃP]\x16\x93á\U0001604d\U000393e2㔟â\x0eiÉxI·Dü\x93\U000e249c&\x80H'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -15271218349695763958237910755951036551, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003807s
====================================================================================================
2025-09-19 00:01:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 106}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 106, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 106}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004289s
====================================================================================================
2025-09-19 00:01:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', 'Ý'], 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', 'Ý'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003626s
====================================================================================================
2025-09-19 00:01:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['Þ\x87ð\xa0', '', 'Àw\x12×Ej\U000d462eh', '\x11', '\U00102050îé', '~\x95\U00040a4cÜ\U000a3c469\x9fì', '°àx\U000f5249\U000ae4ab\x95\U0005abf8', '\x8e\x02}\U000d4cf7ãö\x9cp\U000a83caì'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['Þ\x87ð\xa0', '', 'Àw\x12×Ej\U000d462eh', '\x11', '\U00102050îé', '~\x95\U00040a4cÜ\U000a3c469\x9fì', '°àx\U000f5249\U000ae4ab\x95\U0005abf8', '\x8e\x02}\U000d4cf7ãö\x9cp\U000a83caì'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004411s
====================================================================================================
2025-09-19 00:01:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003488s
====================================================================================================
2025-09-19 00:01:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003607s
====================================================================================================
2025-09-19 00:01:20 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004063s
====================================================================================================
2025-09-19 00:01:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003627s
====================================================================================================
2025-09-19 00:01:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003577s
====================================================================================================
2025-09-19 00:01:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -112}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -112, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004016s
====================================================================================================
2025-09-19 00:01:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x1bdØ\x10', 'G\x92', 'Sµg \U00087111J!\U0005d701^\x11ºú'], 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x1bdØ\x10', 'G\x92', 'Sµg \U00087111J!\U0005d701^\x11ºú'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003792s
====================================================================================================
2025-09-19 00:01:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 32090}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 32090}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 32090, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004101s
====================================================================================================
2025-09-19 00:01:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004372s
====================================================================================================
2025-09-19 00:01:21 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '  '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003786s
====================================================================================================
2025-09-19 00:01:22 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 'Ë \x83>\x18\x88\'z¼êü\U000b402e»Â鷠j\U0005aa90\U000edc31¨\U000319db\x0b\x84âC뾳ñH½\U000dd3ecKß\U0001eeca\U00014850à\x0b𬑧\x86_þÔ\x0f\x14\x85\U00066461§\U0005b734\x8c¯]𨨃\x9a\x9b\x1c\x80r\U000d4db6\x80»\x0b\x8e}\U00077b53\x02z#6>O\x8d\U000c9507K＼\x07\U0002fb32!±\U000dfdf9Þ\x15¯\x02¿À~C¬tv\U00058d8bW\n\x18ã\U000e37b6\x8e]ã \x97s\U00096d95\x91F𰬲i\x9aࣅi¢â:\x05\x89ñ\U000e09bc\U0004c18cæ\x8bÛð?\U000750f5\x8bÏ\x8c¤\x0ch\U00070f86\x1f𬕂[\U0006762a¢\U0009a566\U0008e00c\x82ð\x0c\U0007a5d0þß~!\x18ª\x8b\U00083d5b\x96\x17¿\x10Ó\U000f24a5¥\U0009ffd50\x9cw\U000b6395Û\x9e\U00032945bñ\x1a¸\U000b6c77\x18\x1f\x08Vc\U00048fac«Ð\x7fd>©Æ\U0009078e8+\xa0\U00043b26Ô1\x91§v\U000c7023é\U0010f70aÅû¹^¤¥\U001065cf\U00078f7fT\x95j\xa0\U00049ed5Æy5Ò\x04\U000983a9\x04\x93ùá\x96\x9ej÷\U000bc40b\x03Ö\x0f\U000a2b35Î\U0004f9dbË\x88^\U000edefe\U000ef596Þ\x07g}\x19ûÉ©\U000625d3@x^`w8+Ç\U000aca7b»\x89j\x19¤ýRú\'í\U0007aab4\U00060727á¡öSçl𗬽\U000edfcb`ù2\x9bæé\x8cVz©¿\x03brön\U00108f74\x92\U0007f6d4\x08\U00076cbb\x94Ì𒍂°\x8fäO\x9e`\x8c§\U000a6dc7X¶A³BÇ\xad\U000a27e5j\x1el\x05ôD{Ý\nÐò¤mõO=\U0005f772¥¨,x%\x10S&Á\x9aàÚ\x9fãq\U000c9042ùn<\x03P\x03\U000d9192Ó/`Ê¼𩧇\x08\U000d4230BÂ¢Ñ\'\x05sê\x88\x1cxø\x06`h𧟱7vmØM\U000c42c2\U00069935\U0006c6ba½\x19é6|\U00078781Oq故Gë\x1cz\U00072576jqéOòH\x8d\x8c\U0006d48f\nÐ\x05\U000b3f29Î=U=@\rIhª\x7f\x0e\U000df207\x86â\x05·EÎd\x83\U000117612\x9f?SèØ\x18\x0fiw\x9al\x80>\x85\xa0G7æT\x92È\U000e430eêÃ&\x13?\U000830de\x8e\'$¨\U00059e69ÿ´ô\U0005720fç\r§\x88\x18\U00045719\x19\x1a\x96*L𩍹þK\x04;\U000c2a0f\U000838400t¨\U0004d1d4\x81\U000551a2»\U0010b0c7Ó\x86Ñ\U000cbacbÛ³P\x1e9â\x15n\U000dafab\xad\U000d749c)\x16)\U000caa69\x9b\x15ù\U00066571M\U000a708ef\U0005a159gk\U00056d79Ý\x80ÛIZ\U0005ec01^\x92\U0009a0f6𩯆mx\U000cc0c4®¦C\x1d\x06ïxoÉnÍ\U000d7baa\U0001ebc0>\U00094826ÄÐóìåj£\x19Os·Y\x00¤𘥑\U0001c9e9DåßIiÃt\x89±_Vv\x8fþ\U0007254e\x12Ô\U0008d2f2×\x08\U000bc3d7høaä\U000b1741;\x1b\x84\x1a\U0010a167뒔V\x84ï¿Ûme2¡ü\x16ÙÏ\x91¹à\x91㐁a)\x06zÙ¼Ý9\U000b860a¹Àtä\U00072024o~\x04\x1a釓\x9b\x0f𤃡³삢\n\U0007c13cks@\x02EBu\U0001c581\U000879d3²\x0b\U000c4994hZ¡ÿ\U0008a14a\x88\x0f\x12\n\x01i\U000f1d51Ã\x86[\U0005c8dd_X\U000e4a9b\'ò\U00097df4\x0f\U000494adåuäê\x8f\U000aad18\x82{\x03¼q¢lò\x80\xad\x0c\U0006b2d1\U0006a8e0Hº8¤\x85\U000ea242PEoÒ𤡔1§\U0009871c±¦¼\x867A(\x97\x84z³»9*3\U000c1c59~4\x8c\x9fÐ\n\x15\U0009b8a5\x0bh¾ËHS·\x8d«댤,æ\U000ed2e7Û\x18ùó\U00042812Æ\x91~h¥FS\x15\x0e\x8aµ£`\x12útá\x16g¡\nºrÈäú«k \x1b.\tP\x16]w\x92\U000a0235é=Ø\U000a30e5.\U0001eb41»\x93æ\x147ß\U000a5170=ÿHp;\U000e2e8a\U000e8457)\x9a\x94/Ûð4[Ék\U00096783\x0coµÈ)\tÅ8N\xad\U0007f0df𠈠\x15ÔA8<ß쐬A@w\U000beeaa<\U000e2040¶£\x8cûi±dð\U000acc09\U000a256bäÛòN.ü\x80\U00103d16\U000b4e76k\U000f80b3¦\x8cù6\x14\x87Ë¼úìþ÷\x8a\x95\U0005faef\x00lÈt.Ö#\x9f-<\x1d\U000fc146ä[_Ë+\x97Z\x7fÍl²Û³²Ø)g!\U000967d8\x05\x12\U0001b70d\x00~\U000ae466^À\x12yÓ\x89\x9bLûG¬\U000bd57e\U000f8305z\x8eàÊÄ:\x08𤰺¯;Và\x12èÌ\x07h\x07\x0fÐ×AjëÖô\U000bd2469u\U000edbc1\U00100ea4\x957\U000a124bù\U0008bb1fK\x15\U0001eb2b)\x13\x9d\U000f15765×¶\x88ÿ\U000ba281h\x83¶²\x07~Bÿí𠃒\x85êµ\x06\x1cS<7\U000ac660Ø.ü6\x8aUa³x/ô««®a\U000efc48ÈXµ\'=`\U0004717f\U000fa203\U000b18b9»Uï\x0e\U0001cd46\U0005fda8𗉊\x08×M4½Þ\U000cb97c<\U0008a8817þKÚT\x1aÈ,𡇭6𩈨3\x8di©è½\x80XfH)þ«x𞺢J\x18Ü\x18§ÜL\U00045af5è\x8a\U00105c7bw\U000ce04d¾\x98À¢(\x1f*Õú\x8dÎ\U0004ac39\x9e\U000549a0?\U000eb9e7¹\x0bÑ`\rZÚ\x8b~hV~¸\x9fÖ\U000d0d1dâ\x16MMàh°0{zF\U00031b85A$½\U00040301s\U0001c8ea-ᰧ¨\U000627dfï\x98\x08\x01;2Xå¥¡\U0005a2f6\x8cë\x0c\x1dñc\x8b\x192𦴺°´_Ä\x1f»Ò¤SÌ\x15*\U0008247e\U000fc4111\x05\U00063e78(3%\U0004b534\x94?÷\x97ø\U000ac2aa\U000e1a92R¬p.\x9b~Û\U001074abwQ<\U000dc77d»C\x9ef\U000f96e8🉄\U0007ea42Ú\x81Ô\U0006bfc6\x9bFÿÌ\x1f^-\x07_\x9b$½Sp¸\U00036f2f²\x87\\\U00097fdcÍ\U000340d0óKó*\U000aa68d\x8fe\x94s\x0f\U000e6a8e\U0010d916²\U0006292a}eo\U00093279þìN𰛉m°\x11㊖Ï\U00079bd0q\U000a62bb\x80\U0009c698쿒´r\x80P\U0003ed71D\U00067e67§\x8cQknæK\U000e07b0°-\U000795cfLdR9\U00070be6\U000f6a03U8\x7f\U0007485fÍ\x18Ïs\U000ff467\U00053a8b\U00053669\U0008f724L»«àéOò\U00037092\x8b1\x88¤±\x87º\U0005605e>m\x13ãb4¹\x80wÞEE±\U00091a23\x80ãÛCØ\U0007bf16P\x7f\x0c"Ó\U000aa8ccãvÓ²Ú\U000c77ffA\'C\x96\U00013a56\x07\U0008139d\x14P\x8dB\x8d½{ð\x9cu\x1b>q\U0005b128\U0002efeb\U00070571Ê±\U0010bf5c\x81,²$\U000ca975ñÚ¦ñÚn{â9\t\U000b1ee8ÚHí\x0e©\x0f¸\x06Fh\x08x\U000d9ba6Õ\U00012d7fÚG`¸\x07Qß\U000d38f2\U000b9459\U000fcc81#\U0006b864ÜüÞ\U000a0a6c¼jv𰶂\U000ed8b2Üê\x9f¸\x00\U000e10e0+\x99X铂µ\x9e£g¥ÔÁ®\x9f\x16𭃫{\x1d\x7f,Õ\x0cû¢|\xad\U000cf42c\x0e\x07\U0006c3f9hꩀÜ5Ò\U00062f15Ö«\U0005ce7däöU\U0009d1f1¸Ãý#\x84Ç£\U000ba970\x0bÎú\x85àR\U00088b37\U000a7bab\U0010c954\x89§!\U000e93378ø|(4𗓛À)D\x126À\U00105d08¤Ü#\x1c\x9fáVª>\U00089b46:\x88\x16N#O\x1f\xa0Ð\x00\x8aC\x1d\x85\x1b\x9eÖ\x1d+]\U000f3c32\U0008a39fä6\U000f6453~\U0009ec8aæ\U00107cc1\x07\x0bwì\x97§x\xa0ûÍ\U0007be2e𝞹³þKd\x1b9\x9c\x0b\U0008bef2ª\U000a7086ò<\U00108efeK\'¾UE\x1d\x1f\U000385bd\U00043959¦\x8cÂM|Æ8\x86\U00075314û\x01A垼'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 'Ë \x83>\x18\x88\'z¼êü\U000b402e»Â鷠j\U0005aa90\U000edc31¨\U000319db\x0b\x84âC뾳ñH½\U000dd3ecKß\U0001eeca\U00014850à\x0b𬑧\x86_þÔ\x0f\x14\x85\U00066461§\U0005b734\x8c¯]𨨃\x9a\x9b\x1c\x80r\U000d4db6\x80»\x0b\x8e}\U00077b53\x02z#6>O\x8d\U000c9507K＼\x07\U0002fb32!±\U000dfdf9Þ\x15¯\x02¿À~C¬tv\U00058d8bW\n\x18ã\U000e37b6\x8e]ã \x97s\U00096d95\x91F𰬲i\x9aࣅi¢â:\x05\x89ñ\U000e09bc\U0004c18cæ\x8bÛð?\U000750f5\x8bÏ\x8c¤\x0ch\U00070f86\x1f𬕂[\U0006762a¢\U0009a566\U0008e00c\x82ð\x0c\U0007a5d0þß~!\x18ª\x8b\U00083d5b\x96\x17¿\x10Ó\U000f24a5¥\U0009ffd50\x9cw\U000b6395Û\x9e\U00032945bñ\x1a¸\U000b6c77\x18\x1f\x08Vc\U00048fac«Ð\x7fd>©Æ\U0009078e8+\xa0\U00043b26Ô1\x91§v\U000c7023é\U0010f70aÅû¹^¤¥\U001065cf\U00078f7fT\x95j\xa0\U00049ed5Æy5Ò\x04\U000983a9\x04\x93ùá\x96\x9ej÷\U000bc40b\x03Ö\x0f\U000a2b35Î\U0004f9dbË\x88^\U000edefe\U000ef596Þ\x07g}\x19ûÉ©\U000625d3@x^`w8+Ç\U000aca7b»\x89j\x19¤ýRú\'í\U0007aab4\U00060727á¡öSçl𗬽\U000edfcb`ù2\x9bæé\x8cVz©¿\x03brön\U00108f74\x92\U0007f6d4\x08\U00076cbb\x94Ì𒍂°\x8fäO\x9e`\x8c§\U000a6dc7X¶A³BÇ\xad\U000a27e5j\x1el\x05ôD{Ý\nÐò¤mõO=\U0005f772¥¨,x%\x10S&Á\x9aàÚ\x9fãq\U000c9042ùn<\x03P\x03\U000d9192Ó/`Ê¼𩧇\x08\U000d4230BÂ¢Ñ\'\x05sê\x88\x1cxø\x06`h𧟱7vmØM\U000c42c2\U00069935\U0006c6ba½\x19é6|\U00078781Oq故Gë\x1cz\U00072576jqéOòH\x8d\x8c\U0006d48f\nÐ\x05\U000b3f29Î=U=@\rIhª\x7f\x0e\U000df207\x86â\x05·EÎd\x83\U000117612\x9f?SèØ\x18\x0fiw\x9al\x80>\x85\xa0G7æT\x92È\U000e430eêÃ&\x13?\U000830de\x8e\'$¨\U00059e69ÿ´ô\U0005720fç\r§\x88\x18\U00045719\x19\x1a\x96*L𩍹þK\x04;\U000c2a0f\U000838400t¨\U0004d1d4\x81\U000551a2»\U0010b0c7Ó\x86Ñ\U000cbacbÛ³P\x1e9â\x15n\U000dafab\xad\U000d749c)\x16)\U000caa69\x9b\x15ù\U00066571M\U000a708ef\U0005a159gk\U00056d79Ý\x80ÛIZ\U0005ec01^\x92\U0009a0f6𩯆mx\U000cc0c4®¦C\x1d\x06ïxoÉnÍ\U000d7baa\U0001ebc0>\U00094826ÄÐóìåj£\x19Os·Y\x00¤𘥑\U0001c9e9DåßIiÃt\x89±_Vv\x8fþ\U0007254e\x12Ô\U0008d2f2×\x08\U000bc3d7høaä\U000b1741;\x1b\x84\x1a\U0010a167뒔V\x84ï¿Ûme2¡ü\x16ÙÏ\x91¹à\x91㐁a)\x06zÙ¼Ý9\U000b860a¹Àtä\U00072024o~\x04\x1a釓\x9b\x0f𤃡³삢\n\U0007c13cks@\x02EBu\U0001c581\U000879d3²\x0b\U000c4994hZ¡ÿ\U0008a14a\x88\x0f\x12\n\x01i\U000f1d51Ã\x86[\U0005c8dd_X\U000e4a9b\'ò\U00097df4\x0f\U000494adåuäê\x8f\U000aad18\x82{\x03¼q¢lò\x80\xad\x0c\U0006b2d1\U0006a8e0Hº8¤\x85\U000ea242PEoÒ𤡔1§\U0009871c±¦¼\x867A(\x97\x84z³»9*3\U000c1c59~4\x8c\x9fÐ\n\x15\U0009b8a5\x0bh¾ËHS·\x8d«댤,æ\U000ed2e7Û\x18ùó\U00042812Æ\x91~h¥FS\x15\x0e\x8aµ£`\x12útá\x16g¡\nºrÈäú«k \x1b.\tP\x16]w\x92\U000a0235é=Ø\U000a30e5.\U0001eb41»\x93æ\x147ß\U000a5170=ÿHp;\U000e2e8a\U000e8457)\x9a\x94/Ûð4[Ék\U00096783\x0coµÈ)\tÅ8N\xad\U0007f0df𠈠\x15ÔA8<ß쐬A@w\U000beeaa<\U000e2040¶£\x8cûi±dð\U000acc09\U000a256bäÛòN.ü\x80\U00103d16\U000b4e76k\U000f80b3¦\x8cù6\x14\x87Ë¼úìþ÷\x8a\x95\U0005faef\x00lÈt.Ö#\x9f-<\x1d\U000fc146ä[_Ë+\x97Z\x7fÍl²Û³²Ø)g!\U000967d8\x05\x12\U0001b70d\x00~\U000ae466^À\x12yÓ\x89\x9bLûG¬\U000bd57e\U000f8305z\x8eàÊÄ:\x08𤰺¯;Và\x12èÌ\x07h\x07\x0fÐ×AjëÖô\U000bd2469u\U000edbc1\U00100ea4\x957\U000a124bù\U0008bb1fK\x15\U0001eb2b)\x13\x9d\U000f15765×¶\x88ÿ\U000ba281h\x83¶²\x07~Bÿí𠃒\x85êµ\x06\x1cS<7\U000ac660Ø.ü6\x8aUa³x/ô««®a\U000efc48ÈXµ\'=`\U0004717f\U000fa203\U000b18b9»Uï\x0e\U0001cd46\U0005fda8𗉊\x08×M4½Þ\U000cb97c<\U0008a8817þKÚT\x1aÈ,𡇭6𩈨3\x8di©è½\x80XfH)þ«x𞺢J\x18Ü\x18§ÜL\U00045af5è\x8a\U00105c7bw\U000ce04d¾\x98À¢(\x1f*Õú\x8dÎ\U0004ac39\x9e\U000549a0?\U000eb9e7¹\x0bÑ`\rZÚ\x8b~hV~¸\x9fÖ\U000d0d1dâ\x16MMàh°0{zF\U00031b85A$½\U00040301s\U0001c8ea-ᰧ¨\U000627dfï\x98\x08\x01;2Xå¥¡\U0005a2f6\x8cë\x0c\x1dñc\x8b\x192𦴺°´_Ä\x1f»Ò¤SÌ\x15*\U0008247e\U000fc4111\x05\U00063e78(3%\U0004b534\x94?÷\x97ø\U000ac2aa\U000e1a92R¬p.\x9b~Û\U001074abwQ<\U000dc77d»C\x9ef\U000f96e8🉄\U0007ea42Ú\x81Ô\U0006bfc6\x9bFÿÌ\x1f^-\x07_\x9b$½Sp¸\U00036f2f²\x87\\\U00097fdcÍ\U000340d0óKó*\U000aa68d\x8fe\x94s\x0f\U000e6a8e\U0010d916²\U0006292a}eo\U00093279þìN𰛉m°\x11㊖Ï\U00079bd0q\U000a62bb\x80\U0009c698쿒´r\x80P\U0003ed71D\U00067e67§\x8cQknæK\U000e07b0°-\U000795cfLdR9\U00070be6\U000f6a03U8\x7f\U0007485fÍ\x18Ïs\U000ff467\U00053a8b\U00053669\U0008f724L»«àéOò\U00037092\x8b1\x88¤±\x87º\U0005605e>m\x13ãb4¹\x80wÞEE±\U00091a23\x80ãÛCØ\U0007bf16P\x7f\x0c"Ó\U000aa8ccãvÓ²Ú\U000c77ffA\'C\x96\U00013a56\x07\U0008139d\x14P\x8dB\x8d½{ð\x9cu\x1b>q\U0005b128\U0002efeb\U00070571Ê±\U0010bf5c\x81,²$\U000ca975ñÚ¦ñÚn{â9\t\U000b1ee8ÚHí\x0e©\x0f¸\x06Fh\x08x\U000d9ba6Õ\U00012d7fÚG`¸\x07Qß\U000d38f2\U000b9459\U000fcc81#\U0006b864ÜüÞ\U000a0a6c¼jv𰶂\U000ed8b2Üê\x9f¸\x00\U000e10e0+\x99X铂µ\x9e£g¥ÔÁ®\x9f\x16𭃫{\x1d\x7f,Õ\x0cû¢|\xad\U000cf42c\x0e\x07\U0006c3f9hꩀÜ5Ò\U00062f15Ö«\U0005ce7däöU\U0009d1f1¸Ãý#\x84Ç£\U000ba970\x0bÎú\x85àR\U00088b37\U000a7bab\U0010c954\x89§!\U000e93378ø|(4𗓛À)D\x126À\U00105d08¤Ü#\x1c\x9fáVª>\U00089b46:\x88\x16N#O\x1f\xa0Ð\x00\x8aC\x1d\x85\x1b\x9eÖ\x1d+]\U000f3c32\U0008a39fä6\U000f6453~\U0009ec8aæ\U00107cc1\x07\x0bwì\x97§x\xa0ûÍ\U0007be2e𝞹³þKd\x1b9\x9c\x0b\U0008bef2ª\U000a7086ò<\U00108efeK\'¾UE\x1d\x1f\U000385bd\U00043959¦\x8cÂM|Æ8\x86\U00075314û\x01A垼'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004101s
====================================================================================================
2025-09-19 00:01:22 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '', 'xµ\U00042ad1\x98|', '¬7', 'o', 'RL\x96\x06\x05', 'T', '\U000b334ef¾\x9c=ó.'], 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '', 'xµ\U00042ad1\x98|', '¬7', 'o', 'RL\x96\x06\x05', 'T', '\U000b334ef¾\x9c=ó.'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003874s
====================================================================================================
2025-09-19 00:01:22 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': 24164}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 24164, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003464s
====================================================================================================
2025-09-19 00:01:23 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '\U0005b75cj4\x03Ï\x9ds\U0009b141ñÓ\U000b9c87À\U00063948\U000def6d\U000d4576𗃑\U0008752c~Ò\x00)y^Äòl2·Ó(~V©Ñö9\x16\U00086a56®£\U00056bbe\U000c022a\U0009c0a9\U00053a61\x83\U000b55df¨=ø\U0010bf8eB\x16\U00040d72®û\U00092b06é²\x88o\x87?lx\U0009b36a5Ç\U00015e06\U000b4be5\U000c5a8fï\x98\U00056327\x08|Z\x06;«²ï²\x9cU\x9c¢ÉèB\x89\U0010e4b3ã\U0010663a\U000ffd61\x1a\U000954a7jª\U000b8399\x83Q×¯\U00107804Åº§#1^îd\x8cbµ\x80Òk\x16\U0004dc01\x90\U000b6e81\U000c5fa2Ù\x94䠯O³WlÔ\U000f9d43jé>INIè8\x90\x97_GQ𫕚Ä\U000dc2bd¾ß\x02½\x99<\x08S\U000fd69eLÃ÷è+é3\x87§7¸ù\rÊ\U000df7b1ð\U00080c82\x1b\U0009906bã`%H\U0008b34cá´\x9bÚ\x83cû°yË\U000a29f1·[I\U00011560\x88À\U0009ead6÷F\x82ë1ÐYõ7¹\x92\x92W跫ÉÂ\U0003e47b\x9f\U000a3eae\n=\xa0n¬j\x83É\U0005f21c\x83\U000e701fj繆cÙ\xa0¨\U0004c2b1\x1f:íò\x05\x97Þ-\U0004cc73Ä\x80\xad\xa0A5\U00068f35½5Ê÷Q\x9f\U000555c6\x94ý\x8bῠËA\x9f\x95\U000a4b5e¿§\x0b¡6\U0007dae7\U0001b99c G\x00ä¼vÏðü\U00036ff2¹\U000fc7bb\x03mÖµ\x18·\x99\U000d78ef\U000caac9\U00049395\x06Ë\U00058522\U000f858dG+á®«kzW\x9f¸@à\U000b24b3pµ´]𬒧×»\x1cá\x17k,t𗢊\x0c\x0bi\x98\U000cf2ae\x92Þ\x0eómsÈ\U0005db39(9Ù\x0e¡L¡¼ÉÉw6\U0009f30aÕ\U00097968©\x1d¨\x87䨖[d\U00071d58\x9cøXû\U000e14a7¼Êµ¨»b)\x17A\x97\x83y»m\U00100081\U000d4607ËÀ^\U00109d92\x81m\U000420feg\x01ÉÜ\x988×D\U00043eb1\x8f!Wxä\t|\x12ú2ÑD&µ¬5\x88\x06\x18¨\x0c\x8f\U0005accd\U00096ef5P\x85\x01«¶\U000db08aÍÜqÜ\U00043115\x1c\U000dcde8\x89\U00048857\U000f3bb9ç¼\x80¹\U0003f75e\U000bde05ÓBñ¹ÀÕ\x9cÛ-l\U0007e19dý~\U000fa01ekâ»\U0008dbcf>$4\x81æBØ²\U0007b676*\U0008e5e3M𗬰\x8bës\U000aa227u¨ |u\rÃ\x11\U0006e0f5\U000adf4ewí9 \x1cÿ!E\U000665dfÊòL\U00109677\U0008e624³\x94L&"f\têÔ\x83\x8a!\U000bd646qÛ\x8f\x99\U000794c5\x03BGJ¸×æB/lÁ}¶:Fꞷådÿ-\U000efbb1\x93\U0010c29d\x87Î×¶\U0005b7d3£~ë\U000421b9n\x19\U000141b2\rz;\U000c9b2eÍ\U00052d62\x0bZ\xad\U00056e71.\x84Ù\U0010f6f4\x89\x85ÒBðÜÔ\x11KÄº\x83s\xadÞÝ,\U0010c182\U0006a29c7\x03iÒ\xa0MG\U0008357c𬞉\U00095df7\x1dÜ<Þ±¡WU?ª\U0003860dºà®Áè\x9a\U0009d8d7LM©!C<\x98!𢄵½WÚÎ½\x01\U00063568Oéq\U000ee99cËØú\U0009b9aeC*ä\x17b\x05aê°ïÈÐ\U0003ae32\x06\U000a2680ÙÏ\U000758bf\x07¬\x06502KF\U000dba42Üø\U0006423fUX¨\x8fÓ\U000805e9\U000f2eab\x16ܸ\x9e\U000686d8\U000c872c抚É\U000690ec\x88Ò\U00069e64V|X\U0008768a\U000cbc964ÅÁü\x80\uf813癦±Ó\x08*¿\U000be4cf6L9\x0f_\U0005be05𩚧\x86\U00103d6cÅÀ\x02\x8aâ\x94t\x87wø#ôÑ\U000195677\x82eÚ\U000b1c8b\x91\U000a87f9j>Ë2î\x16OÖ\x18\x9e\U000611f2\U0009073bVÎ\U00053b03\x7f\x0f\U0005df71\U000906ddØ¤Ï\x88}䁏Âe*\U000862db\x16»7CDÓý(\x07¤\x0f\x9cX[sæ\\wYsYÐ\U00077885köof\x07<͡<k𡊃\U0006bb4a\x18\U00013b89Y\U000efb83\x8aÀÿé¹\\\x899XÅLÓ\U0009b8e9O\x94I©\x85q%\x7f;\x91ñ\x0cì:¬ï\x82à,ç\x15¹\x04\U000d3601~¬\x18ñû."\\ÕÒ\x19\x16ÿ\x01ç\x07\U000d2d4dñ\U0008c506Ô»} ÍXÝz𮛘𝧋ù\x1eÐ\U000d9d01\U000e48ee\U0010244f\U00042b53F\x9d\U00035c29\x98w\x1a\x12\x02Ù\x13\x86\U0009536c¢\U00095cc6\x82W頃í𒁬\U0005ece6ꫠ\x99µ:\x1a\x92à\xade\x00\t[]\U00109b97\x0c@D\U0005a8127\U0003b6cc2pu<\U0009f032×±\nÜ\x89\x04p𱊱\x95\x80\x87îÀ«\x08å|EÖL\U0005dc0e.Ð«G\x13\U0002f67c\x1d\uf194\U00036760\x93Àú;c\U000d3152\x15\U000fccdd\x81O\x88¥ÍÃ𤈂\x00\x1aa\U0007eee5µó\U0004114d\U00096e00\x9eYÛ\x8b×\x05_FÚ\x93\U000e9df1r\x01¾\x91>\U000841af)ÓÈ]\n\x04\U000c0a35¨ö\U00041728¯ó\x88\x94𘣌õ9=Ý\x13\x8a~E\U000eafe2\U00013fbfå#Ú\U000d696c\U00012a5aæc\U00046d38V\x9a\'ù\x98Ô\U000dd2a3\x98\U000d3ec3®*u\x1a\x85©¥\U0008362bm\U000e535e¤=\U0002efaf\x94Áø@\U00105bdc\u31ef䝺K\x84Ôl\x90À\x1cQ𤩎\U000f552aG𢹰w\U000a78fcw£\x86\x96\x05ebÎ\x8fö\U000b84a6\U0007ba4e𠇝ãy\x9aÙ\x8f\U0004b582𒊊/Ä𘍇ÿÂ\tkå :\x04í\U000737dc;\U000da7a7¶'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003659s
====================================================================================================
2025-09-19 00:01:23 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -1255548921, 'password': ['\U000f6589#', '\U0001958b\x18\x15,\x85A', '4']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -1255548921, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U000f6589#', '\U0001958b\x18\x15,\x85A', '4'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004097s
====================================================================================================
2025-09-19 00:01:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ')~\uf1a3b\x14¥\U000571a3\U000598b4\U000b5527\x92\x91¤l\t\x99º\x97\x8e{\U00066a59ó\tÿo\U000c9687ê¶iµR!h\U000e4816à\x83\U00105a05\U00089d6fô\U000e900ck蟚𧔌,\x84\x1dµP#\U0003bc5eè\x81Ñò\x1ddx𑇨Ýä\x08¤]\x13\U000d4c0f\U0009f7f8I,x\x9dçõ©Rw¤蓊쏡\x08<\x1d&K뫭\x0ce\x93\x80¢\U00090c4c\x05\U000ba626忀Í¤\x85\U000b15bb§]ôU¸\U00064c81\x90\x1a;_U\x8aã\U00034a41\x88\x00ï\x0f-v\U000e44e5àe\U000f527a:ìûßç\U000efdd5\x82/³qý»¶Ñ#l^ÜE\U00060dad\x0bãq\x90Ôµ-öKÁ\U000fa233\x86@oe¼EÐ\x98\U0005a589ÜàL\U00048fe2ë¸\x96\x01\r\'\x03ù\x9bô\x83\U000aeba4\x8d>5èÔᦠ\x10_)\r7~\U000e68ee\x13\U000e44c4Ö\U000630cb\U00085ed3U·u¦²)ûT\x90\x11²\x8a\x08â\x1e\x9c-Æ\U000d0f67\U0004b9d1£¾"nM¿g\U00091e2d\U000bfc46õ\U000b4e3a𤀒\U000af677Ó\x91{®\U00101fc2æt\x12\U00061402èé&pæ\U00085262\x96\x10ÆÒ8vT\U00082695ÿ𘉈\x8d\x9a\x14¥\U000ad4f755é\U000abd60o"W½𮭶\x10ô\x95\U000e3694w\U000e5512:ø\U000f6fa2\U000bd5166¯O\x96\U0004c331°ð\U0004a07ff&Ê©M©§w\U000c7122FiLô\x86\U0007b176FÛᩑ½\x8dÈ\U0003c686ø-U\x0cÎW\U000b67e7ù\ue339Î[\U000f848eF¹Ä\x92c\U00070eb4\x05\x0f\U0001a881\U00059818\x87g\U000aa662cÍÅ\x03[øA\x00Ìz\U000c8960\'¯z\rÕº:¶ªýõU&Hº¹\x1f\U00059c9b𢴯°á£mb¸\U00045895\x824\U000b0225\U000d28c0Ãü)åF .\x88ã¥\xad\U00034755À\x9e¸ò\x7f¿¾%Ý%m\x84\x0b¶.ê,ó\x85b\U000d6682\U0003d7985&ü©\U000ce9061\x87Ì¯ç#ª[÷\x18\x08¹V\U0010df26Nt\U0001cf70#*\x9bº\x16\U000b8ce0Pòµ\U000dc469c®Û\U000fa8ad4T¤\U0003f692\U000e4e3e\U00049a20ÑÃ¢𬆯\x01ã¦QÑjyf\U0004c4c7ú¾𫞉þ\U000d51fc\U0004ac53q\\Øl\U00068c8e\x9a\U0009b1b8\x9eÎ!ÃÉM\x8dw\U0005898b\x053\x81\x87\U000df3b7쒋\x96\U0004c588¥\x835\x98Ó\x9d§\x02\U0008f007ÐhL\x04\x824\U00081e9bu©\x96\U000441d7?4ú\x92BÞ\U000747ef)\t\U000fad71´\x94]ñ\'\x95\x865rÛ\x8c\U000acb51@\U000f3283C\U000f885a¬\x00Ï.-|>\x8c5se¶dÑ+\x87\x81"\U000e8b81²\U000b5742\x87H\U000965d4ö\x11\x0e²µ\U00097099\U00033080uëb\x9b\U0009dffe㭉\x8c\x88äã𑧁\U0001ac15酜íª\U0005b23e¢\x9e\x8f²\x9f𮑾\x19\U000e0291\x14\U0008b63aÔb9\U0005c5cc\x9f\x92¢\x86\x95\x9c\U0010695b"0í\x7fh\U0010a92b\U00056f77zÏ\U000e3346u¾ºº¥ÞBÔíg\U00036ed2±ô¸\x1b`/\\}`ÆcIÍJç;\x1bé\x06\x1aí\x82\U000dfa33\\\U000daf9c\x1c®\U000f1a28?gô]~K\x12\x0b!\x12\x07¡\U000df37b9\x14\U0006c05a\x02·4\U0006f546\U000dfb62>h\x18>\x16\x88Ç\x9fÄÁ|ò²Õ\x88\U000cc51c_>ë±\U00074d3dü\x1dÑ»\U0005560c\t\x98|¿\U001055f7\U000b3b13\U000b99e0¶\U0010c8b5é\x0eh*j\x0cæçx\x8dkf\U000aacd1§r4±\x1cÞçL5D\U000a361fF\U0002f760l\x95á\x03{𬐍ï±\x1d\U00052705îuä\x95u\x10$\U00082d4e3\U00105507Ó]cwðÜÐ)ô\x16nRý÷»\x8cÕ3\U0008924d\U000590a0\x96¦aX\U0010504cN[¦\U00095211\U000a95bf\U00080088í|;\x8fÛ×4|\x15\U000e9606\x99>úõùï!V\x01©îÐ\x01\t\x922\x9e\x83ÊüXø\U0009cdecxEÙ\ue834\x97\x9fòÆÞa\x05´\x06ô>𥍺\ue303\x04ÙË\x823h\x80\U0007f4bd\x1de\x98Ôf%\x0e\x16\U00075e10&Ç¿\x8a\x14¿½\U0008efde\U000ccf23lI\x80\x0cÏÁ\U000821b0𠕻LÔLIÈ\x917>Pß¢\U0001953a鼄O\U0003716b:B\U000c5d60\x95E\x17[ÍQ\x0e`Í\x13\x10Ö¢Æ\x99\U000b0845Á±\x19©ób\x84ì\U000f9cee¸\U0010359aò\x08\U00088b9c𨯻\U000bcb89\x8b\U000c7af0\x00\x0b\x14&\x85قäÕTè\U00083679\U000e342fa\U000dc65eóô\U0003d058\rÑ\x98Rv\U0008ec3aÁµ\x86\U000dce24\x1cF\x81È\x07÷\U000bc2ed6§)\U00085427~\rKú,\x95ô²ýPæ\x1eö7×\U000c6a06³Fþ±ù\x8då\U000148faª\x1eZ±¸ß\x97ïhïÒ\x0fj\x00&\U00062af5XÀ\U00034b30𢐀\U00015594\U000ce963AÜⲬ\x1d6J\x93ZE\U0006cd68ï\x0b\x08W=Sñ\U000339ffË±Ì`\U000bc696*Ø\U000a8422\x8e\xa0{\U0008067a\U00045d2e\U0010b19b\'J\U000e8ca4\U00042e1dt𮖁U)\U001021a9\x8c\U00089ad2M\x82ªE¾º\U000806fcê\rYÂº\x8d@×\U000b6f1acAQº\x83ì¥8þ}È´\x18¼Z\U00059ce1±Ac¥§\U0001ce79\x84Wìð\U000a93d4»à\t\U00013602\x84ßI©Êÿ÷?\x82{\U000c07ec㤃hÂ\x94\U0010733a\x92¾`3´n\x11\U000384ba\U000cf10d\x10\U001061610c\x14\x9c\x83\x82\x98÷\x00¨\x82\x8d\x84𫈈\x15?Ñª\U000595a0\x932\U0009f87c \x16\x9d\x02\U0010f1fa¸^\U000b4dc8úN\x0c\U0005efb9\U000e6e8e}\U00061fb9\x9a«𭵯\x93R,Yõ\x1d\U0006b94bË\U0006d4392\U0003eef3\U00104580y;\U00087719ía^¨\x8eP\U000b7c0ezÉt\xadÖÿ\x1c\U0006a0d2\U000d8f59ï\U000717b5\U0004ebca?P\x07¹\U000dca72\x08\U0010844c\\\U0005eb74墣7}\U000b6a9b\U000f91e8¹[Y\x04㪩ýÜPÎ\U000ac9f7\U0009c222ä\x8a7Ê\x8bÚ\U0007f7d3@è\U00016502\x0bÂ\x98¦\x8b\x9dà\U000bc829\x98\x7f\U00108ff5\x8f\uee6c\x15ü%6\U0004962bPè3òÔÃÈÃüÌÕ£젡Ñ\x12\U000a0971\x10y?Ä,\x15\x1c*ì\x9dð[[B\x96\x1cÉ#z틴ÄÅ\U0007fc7d\U000533c5Óß¾𧯆\U00083998ã\x91w<\x10\U000ca0c8y¬1U\x19$K\x03\x88Î/\rõ\x11\x9b:\x9a\U000dfe79\x87%7)\x80k/\U000c404c»\x1aó\x84¯\U000929bdei𡝎\x16SExfP\U00065ac9\x17ÌÑ\x85\U001099e5L÷\x91\x04\U0005878bo\U000a2039\U000d6817\xa0ÚIíH\U000c7563\x13Ç좰\U000fbe97\U000c139fØ\x1aì-Íï\x92Ö\r(f\x0fq\x95u¹Þ\U000a772d\U00078f45Î\U000c0546\x18\U000b1754\U001017d9\xa0¦ýÎ\U0001fe23\U000710d1×&\x7fN\x1cV\U000d89a5\U000933fb\x00¦\x14\x83a5»\U000e3af6FÏ\x0e\U000cfda8J\x18\x86\x9d\U00057aadVgw𫒀Ý\U000de1a8.\x04½\x90K\x12\x97;𘛟»èÌ5\x02\x88aC`øäì~\x91Æ~\x9c\x1a\x9a\U00077fa3\U0010848c`\U0003ba96\U0003f7c8\x07¨ÐHZ¨Ø Ç\x07k\xa00\t𤹒Ô%n\x17𪚜\x16ÿÕ\U000ba586÷\x1d\x98\U000f3761Á#\U0005b394H3å¾ýíf\x90È¶\x19ª<\x12Z\x81𐄨B;s\x8e\U000a4bc9Ü7\U000c6177Æá4iç\U0006206d졵\x0e\U00096a16\x94b\x01\U00051b4e\x97uuö«'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003909s
====================================================================================================
2025-09-19 00:01:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003687s
====================================================================================================
2025-09-19 00:01:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003983s
====================================================================================================
2025-09-19 00:01:24 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003851s
====================================================================================================
2025-09-19 00:01:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '큍\x99Ýy~?\U000f4d1b½7W,b\x83\U00101dd5Vüè\x96ÑM¯\x06\xad(s\U00062f79Y%A\x91ÿß\U000cbed1ê3³𥃤¯\U000bf33f\x92éÛ\x95\xadè\U0007bb6f¶\x99\U00091f4d\U000c7f8d\x04\U00015766\U000fbcf0\x92%°\x98Ì\U000a625c\U000f7746\x1b\U000e90d3+¸²\x9e®®ÎÁ\U00042164¼»³9<·\U0005220c\x01¢\x9c)IFÏk\x9dÒ\U000b01f1WKf<\U00084e36Í𖺌6\U000c122dæAÐ\x9c\x00µ\U0006d4cfS德]\x17T;祖ñ\x95ÞB¥\x9d\x9b¸9\U000a0a31õ\U000991a1\U000dd22bU\\\U0005fd4aò\x87\x94\U000a8eba\xadäL\x1euß\U00084ba2º\U0007d5cf¥ë\U0003d49dÜ? G¾`0¸\U000a4b4a}\U0009c7a9茒©°\U000abbf1û\x0b0Ç\x9bmEá\U0010cbe1M¯ÏRg\x0eð𬏎@§X\x81Â놈¼\U0009afd61\x15Í."\U000d7c35ºZ\U0006732fØî\U0006f800¼?Öï@\U000f85ee⮀\x8eÓ:U\U00101167zÃÑ\U0008ee6b\x9f\x80O\xadì{\U000c4d2c?È\x0b+\x9d¹\x18³,\x1b\x81\U000caeef𗍃xé=|\U000b9d95\U000c60f2\U001017a4Æ\x86ç\x05¬å𦟞\x84Fh)\U00101bc9\x86\x01Ç\U000cae815𨠩\U0005272bo\x04\U000b300aÀAF\U000fba24[C\x1e\x1d8\x81_q\x12\U000cfd0a,ã\x16\x06\x95&\U0010d28a\x13\x98qÒ÷ÒO]\xa0\n\U00079d11p\U0003c56d\x83ᔧ£連ÛÃ\U00015577\x17e\U0004f4f3@÷\x1d\U00049925\U00083e94\U000ef561\x0e𒒷\U000b0dcf\U00109ce4¼\U000cafccÝ\x93\U000d14f6T\U00037070\U000bdf06\\¿U"pÿñ\U0009d39d\x19ä\x1dûE»\U0008791a\U00070e7bü@¤Ìcr\x97ßçlwd\x89\tÊ\x8dÚDâ\x81Ö\U000b2a82·D¤ÊÖõ¿Í7\U000f0e36\x98zB\x8ep\\·Ù\U000f7695\U000ce5a6Â5𢝼\x07\x8a´«\x8d\x81\U0004d0e5Ð¸;\x92¢ꗀ\x98\x1aÀ*𮚒\x8ef\x14𭎘\x99Whð`\U0009ed6d4\x03Ô\x1a0\U000619f7¨°\x80ôb|÷\x82\x88÷2I\x9d%í\U00051252\U000a05f2&äQ\x1aÛ+ÖªÃ¸x\U00102538lÆx\U0003a132û:\x85Â\x07\x16\x98\x1f\U00032cfa\U0008b3f1T\x06;\U00081cc1\x16s\x11w\U0003e836\x18\U0006aecb\x9dZÐ\U000e359a8öè𣶟\U00065c5bv\x93\U0007e6c3¥Äô½oR=\U0001a0dc±ñ¨#\x9eÑ\x04:³𧧺\U0009e732\U000d2fa8\U000dbee9]Iø𬔎)¢_t\x88Ý2\x16E\x8c\U000770ce²\U0002fa87.V¯l\x08dÖÙI¸Ýlua\x16\r)1\x04ª\x91\U00057021\x17\U00063dbeÒÃ踹¶\U00058a22PB\U0004c59fl\x9fü\U000d55a4&D\x9aÉç£\x9eÁ}\U0007bea2\U0009727d\U000434be¥Æ\U000a4f48îý\x10N\x06«ÞÂ\U000ed4fcZ«WÉ\x8e\x9d\U000829c2éÊ\x7fóâ7m\U0009c6e2\x03*!\U000a8d71\x82úe³\U000605daî\x93V\x82×áI\x96¯3©\U00089c5c9Y\xa0#§W±\x19Ú\x0eu@\x85\x9b:k{🐯á»caN\U00060be5âä\U000acb990\x90¬\x80P\U00109908\U00050213ð×HJãM\U000d7094\U00080e4a\x83\U0003e1a4\x8d\x9f\x04\x8d\x1c\U000103e7¡$f±e\x9e\\¸yÓ\U000fc9e8©ìª\U00062beaÕFÄr\x88·ý_6\x92\U0006cb9b\U000ee8b6·(£¥·\U000ad3fcj?øý\x8bg?\x99@ÉZ!p\x1aUÔ`¦\x10\x7f\x97d\x19Tµ\U000fde47\x1e+5\U00041994\x84r\U000adda52X!\x18A\U00044f18¥\x92ÐÃä\x8dûàéë\x88î¢ì\U000ee9e34-Á\x8bå\U000747db|\U00106d3a\x92\x02\U00037a95÷mc¤¹Ô£Ü\U00084c02\x1a\U0006ae37«\x17\U0010813a\U000d16a6V+rí\x07\x04\x03\x00\U00044c6eR\x1c\x1f\xadµ:o)\U000dd80fÉ\U000cb501\x0büÑ\U000f49d6Ò©/\x80\U0008c362~\U000d1df2º\U000dc7c1ድçëú\U0003165b\x02´\U000660afk\U000b00f0¯>\x0c+\tmë\U000ae8aa$M\U000698af+\x8dÈ6Eé\x0f¹[øE\x10\U0008af08\x0bè\U000f3f7ftÀ.gf2_\x13w\U00040b64\x80\U00079417ñ\U0002fe24kx=X)çåÙÏ\x1c\U00015a20\x87jîWç\x16\U000b9a1d°\U000c3099;y\U00035b5fvØÙÎ趋º\U0008d5d4X\U0004bac0\U000ca4e4£#Ô\x0fj¢\x95\U000fa2b3\U000123c0#\U0007ee96À\x19\U0010b79a\x9c¤Ví\x8e\U00101331\U00077f4e\x82aéSRá&\U000797d1\x821tF\x85\U00032dc1\U0005f16dß³\U0003246a1}¨\x06RyÍ\x1d⛰L\x16\x88Æ\xad\U000e0e6a\xadg\U0004514aÞ,\U0007ed57[\x02\x04\U001056b1\U0004ebae\x82¦X\U0006b5f1\U000d70d0÷\U0007f91b\x18\x92\x97×䡠\x1fÄ´\U0004cc48E\x83f\x15\x01\x03\U000b19eaRí\U0006fabeG%Ógªûb\x88x\tè7V%夁mBs\x89á,¹\U0006b38ciôw¦1\r\x82S%½A<e\U00053c9b\x91{â\x83\x01\U000eecaf\x01\U000b3c3b+\x8d_=\U000e00dcf\x18¬\x13\x92ë\U0009e797\x80~¹\x9dnX\U00087e9bôØ4\x9c\x14Ì!±\x00A\U000448ab\x17ï\U00080926¨\x83ë\x85\x17\x89Ä\U0003310eÙJÀ\U00063f90\x96Ä\x15\\G½\U0006765a\x00Lû\U00085fefÑ|X\td\x11Ù0\x13áX\x01\x07\x9f\x0c𢏩°\U000edb6a\U0004b03b´<31\U000140ab\U000bf03c\x14¸nw\x06\U000f70326\U000938caæ\x80\U000f334bTÞ(9Y\U000cab7c\x9d\U000d529f3ÚÔ\x12ÂéÐ\U0004dbc4\U00107d54\r\x8bDt\U000d4b0f\U00087713\U000626c9\U0004f0aa$𧈘`Ý\x04\U0003adb5zcOa\x0f\x17¦BÆ\x96ó\U000b1a9b¼Ï𞺌\U0010a086æë\x10aRß𑰈Û\x803Í\U0008ee3f{\x00¶m]âá\U000324f3\U00101a8e\x08\x92¸$ìTÐÍh[¤ªtn\U000cffbb\U000a807f9Ë~Í\U00039d24vU\x86\x87Ð\x01\U000c23f2\x14\rF\x16ùFÈ\x9e\U000ca0b48\U0009f63e\U0008ea95\xa0ì\x96ÔIª\U000ec7f5\U001046e5·\U000d8fbc\x07\x81\U00087b94c\x18\U000e34d7vé\x19\x8d1ýBÔ\x13\U000691b0\U00012e4dÒëÏஜX䪞è\U000a727a\x9aª´ßZ\x13V\x8c\x8bbÏÙ\U00095477É䔈\U0007459eUe\U000a98a2¿T?õÈ𢈌2¬Þ.\x7fÅ5©¨$\x9bTÛ½\U000e14aaöf\U000bf3af\U00096655~E¢Ñz\U000cb7a0È\x06\x9f$§\\Êt \U000ccfa4I\U00036a93\U000b4547#VÇý®ï\U000b9171\x81ì\U00051c5f\x9d鼋䥠\\\x90\x8c\x88s[ê\x03¨\x87\U00031941\U000c1649a\u1ac2ö\U000d7146\U00035bb0\x10\x85<´ñU\\\x80I\x81ÄÌ\U000d41ac\U00082276Ò稊\U000e13aee\x99ê\x06¨r{Gô\x1etY¦\x0f¼F]2\x0c\x04=\x1eaa:Y%û\x0bÊ\U00052f07㏐l\x00\U000f18a8Ö£\x8aÞ&)\U0010a761ù·F®V6ò~f\U00064855\x7fÞ\\\U0006b001ÍIê½\x8c\x14sæ\U0007758e\U000c8041IK\U0009cc5d8i©DB#\U0003e2aaº엶Í¹Þ«~dïâ\U0004aa44\x13¥X\x96\U00087b31;\x04ú\x0bå𨉡\x93\U000eaa9c\U000194ec±\U000f9177²ö\U000c7a0a]×5\x7f)\U00043fc1äxB3;[¶Pv\U000a52c4𫶌åíÓ,cÊ\x12Ú\U000ebbea\U00038c6d\x9c\x1d\U0001c9a4\x7f\x89ñì.]2¹¹\U000d0f364dÚ\x0c[ü\x98\U0003d8d4à𖨝\U000b8a80\x8cö\U00015a38ᲁ\x83b¯\U000346fcT\U00092e5fÕ\x97ÝÉ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003797s
====================================================================================================
2025-09-19 00:01:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -25933, 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -25933, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003848s
====================================================================================================
2025-09-19 00:01:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003916s
====================================================================================================
2025-09-19 00:01:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003816s
====================================================================================================
2025-09-19 00:01:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['iÅ¾Ü', '\x00\U0006b6c3\U00067c77', '¾UZ\U0009b8d2\x0e>|(\U0003fc64]V»', '\U000d9d28', '÷\x82K', 'Â\U000a126c\x98¿x³L'], 'password': 62}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['iÅ¾Ü', '\x00\U0006b6c3\U00067c77', '¾UZ\U0009b8d2\x0e>|(\U0003fc64]V»', '\U000d9d28', '÷\x82K', 'Â\U000a126c\x98¿x³L'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 62, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003967s
====================================================================================================
2025-09-19 00:01:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': -11472}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': -11472}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -11472, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003513s
====================================================================================================
2025-09-19 00:01:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003714s
====================================================================================================
2025-09-19 00:01:25 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 18700}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 18700, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003883s
====================================================================================================
2025-09-19 00:01:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '\U00060f3a𣝫ÜäG\x83\x063ã\U000d94d1\x81rÅ\U000a998fr*û\U000d313f\x1a\x93°\x93´Ë\x06X\x18Àýe\U000a9dce\U000dc0f0m\x9b.\x04j\'Ì\x8e\U000f7a2a¯¼\U000b6194n\U000ff819¸m\x9f×ðÈ\x11\x8b\x1c5\x88\x88æÀ!ÅïR\x8f\U000c255dÝZÔ§PÑà\x08\x12\U00084023&\x86¦ó÷ÐK\U000b2ca3¿O\x16\x832Æ𝚹&\U00042fa1ª*É\x1cM["\U0009c8345\U0008a321lÀ9\U000b2283\U00060e9axU\x11\U00038a11¦U+\U0008a5e5\x87\U000dee68\U000e86e5Þo\x05#ybÈ¸À\U000c515bð\x8aÐ\U000b1df1k^¤zF\x04\U000894b8\U0008f713Jú\\VþH\U000fcaa9Ò@Èõ9BÞ\U0003a581\x93\U000c2decX[\x00d4\U000e418e\U000ffe1f\x10\rÙî#T7\x0eî\U000a8190ö\x92Ç¯`8¥\U0004da121hÔ\U000d6bac\x89®\U00057c469\U00044453\U000fe0ba_\x97°T\x17´\x9eúÙq}\x1f+6´8\x01·\U0004dca1ò\x9ew𦍍i\nHÌX³ß>qó\U0001cb6b\U0006aa81\U000a8916«\xad\U0009f48e\U0005df01Gr \x81ùà\U0007e5dfx©\x82ß7\U00093151Y]ò7Q\x18ðNtÛ\x94\x84Ç¶\U000b77697zþµ\U000d24c8é\x134\x0b\U000f152eè\x8e¥\x06d\U0010e9e9\x1føa6\x10z/×\x82\x90\x9dù¦ê\x9c\U000fe0bc\U0004b910\x19ôï©Ó\U000c83a1ÃÞ\U000796d4\x8a\x18\x94\x9eCOí\\SØ`=2\x1a꒲\U000db763\U0007727a\U000e0c25\U00074402¼«öL\U000bc92b\U00079a93à¹\x9e\U000b99b6\U00066d35\x83¯\x96ý\x8b\x0172\U0009fd33\U000d8ba2ïPç\U000ecc59ðê\ue44e\x1f\x08\U0001fd1fÓ\x14Ê\x16©\x1d\U0009ca19T«ì\x02©\x9a¦ß\U00071973\x91\x10~7\U000dc4f1ôG\U000779c4\x00ÿ\x84ÿ¸Ü\x12s\x86ÝV÷瘷\x1e\x13R\U0009de9b\x07\U0007ec2f\x7f\U00091ce90\x9fv\x1doTÍ\U0004491c\U0003808d\x17\x0cÎ\U00074aach\U0009c0b0aá\U00084d20\U000a034d¯Ë`\\\U000a09f9\x81\x1fØx;\U000dcc1fðx\x14\x85;Ä\U00016705ø\x0e\\\x88ñ>Æ]\U000f30bc\U000957d7ÇS𫴶\x056#6\x16\x91\x8d\U000d3a18ß~h\x18è\U0004cf1b\U0009710cJ\x02á \x9a\U000e3fdbLB\U00019ede\U0003446d)Åí\x9d+-\U0003a0d3_\x94TQ\x80úðî¼\U001094e8,2\x01\x80}ôaÅD\x0b\t\U00014ecd\U0001dd04¿𡾀Þi¡°ö\x95£\x04Ì³\U00082d0e\x13\U000aae71Ì\U000e93fc\xa0\x87\x95\U000b5bfaÃó"𧅪ä\x17䅛\U0010a4fd\U000f74c1ø\x84\r."\x88&\x1a¤Ú¿\U00071cdf\x1c\x0e\x91Þ\x94\x0c\x13\U000d954f\U000334f2\U000da0f8ñ\x11èW¶\x94*ãFäqv\x0f\x14\x07\U000d02bdÊj\x8e¡\x91k÷J𗴖Þ¤\U000fecb1\x1d\x0b\x89\U000de3d0\x13¼ÎòA\x98\x87\U00058a57\U000c5f31\U0009020c\x1e\U000f6b52\U000b688a¤\U00104e9fo𱊕\x95öi¶©\U00100f9de>\U00061182\x84ö\U0010b2e5\x9eÿ𓀉\x9dô\U0005fad1\x93|Ö$\U0008fcadHÒ|Óæ°\U000c42dd\U000c7980ö@ñ»\x85\U0007f596\x1d®\x07\x80\x0e己ât\x13Îp{|ýI\x83ãIÇ_©\x82~\U000ea231hV\x90\x03,\x9b\x04,\x86Y\x96Q\x94\U000ea480\x87s\x9fôÚ·X.§Ò\x91\x03M¶\x9bI\x0biWô\U00051189D]/D¸àmcT®ÖÉ牊S\U000c2b37vè\x83ÿ\x06L±🙻^\U000cefc6\U000c23eeíðÜÈÇ\x01$\x97\U0005f07e\U00100a46·\U00052aa3ocoø:;ÝîÝ\x8dµ\x87z\U000925ca\U000464012\x19\x81âàwQ\U000f8da4¥Ýñ¤\x16\xad¯S¡9HÉ𠞩\U000445fffOhÂ\U0007e992.\x97F\U000e0dc8Î\x03(o\x07"\U0010943a÷O²ëÊ\U000dcd97SG\x96¯ÂNg\U00091b11b\x0c\U00071efd$»\uaaca\U000be782Nf\x97\x96ê#,©%\U000a6726ø\n?¾¾\\\U0008cfb4¯\x88diz\x81$𗬄\U0007a9c7\U000cbec2\U0005174b𠂢s3_\x98/D\x02m[QG\U000afa66\U0005b26aeÇm\x9a\U000cd2a3㊶\x14:\x1eZ\U000f0d79|ý\U00081056L\U000a89d4¢õ\x81\U000a4fb5𠿗¤V\x17\x0f\U000afa00\x8fVÌ\U000138a8þ\x0e\x85fî\U00079e1dçføH\U000f2c52®\U000bd928\x1cåÈFçÇ5𫸗\x9a\x06\U000ba2c0¯𛀗\U0003ecd6\U000e92ff, \U000a2247\U0001c531L;Vèã\U000a8ea7â\U0007bc65¡\U000f2893-l\x88\U000d1cc2«\x19fÍ5\x85#\x90É\x87¦Ô<Ù뒄ÈàÄ¥\U000c4118\x0e\U000828ff\U000a2111仔\x8bú\x97\x08\U0007cef8R½å\x16YÚ\x90\x11z\U0010c507L\x05!u\x08¾\x1d\U0001ecf3\U00105d8fðýý\x0b~Å\U000abe89\x99\x08\x86\x83^"¼+=\U000d3dd1\U000a7faf\x7fz:CÑ\x1b\U00091314.\U00105fbci\U000ffd24\U000781afW\U00092f11\U0003a488I¢𡉩\x9e𘅵(q4\U000560f9'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003735s
====================================================================================================
2025-09-19 00:01:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 17886}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 17886, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004663s
====================================================================================================
2025-09-19 00:01:26 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 1027351085, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 1027351085, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004001s
====================================================================================================
2025-09-19 00:01:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -27278, 'password': 'mT\x84\U000ceeda\x93½\U000b7e84³\x9f\x8dü\x13C\U000ab1f1C´%´A7QTÞ\x80#\x0f\U00104999\x7f^a\U000b020e;\x04\x1døB\U000a366b\x07\x81tÁbæî\x95ÑÖå;\U00032349\x95}ôln\x93N-#A\U0008b08c\x18\r\U00042e09ðU$\tÓ\tp¼Ì^\x03\U000679edÒ9Ì\U000ea7f5R9\x99gÿ\U0009ed80;F\U000ed32dt\x99JÒFð!\U000c7d19yÑ\U0004e35b\x1cê\U000d85d9I\U000c7297E$YnûÙ쮤\x86\x8e\U000bbb45r#¦æ\x14Þ\U00081cba¢\x0f&\x9dqü\x16n\U0004e7e7*\U00062193Eÿ\ue07f=Ë\x91\U0010c867"\U000ff47aëU\x17𬌄Õ°<\U000f3a30³¨\x89\U000bca66CU5*Iìnå\x8e\x8f𣀍Ã\U000c484a«\U0005585b¶T\x8e#\U0002f2a4\x86¤«\U00084a74\U00088adeôb\U000d4618\x1b9\U00107e03\x85\U000678f4\x07jþ(:0©¿ \U00035279Zdì»疩\x97\U000528f5\x1a\U001009c9±ï²\U000d2c19O\x87\x881öB_7&Þ\U00040e79Qö\U000c1d4dË\U000c9db7\U00068cd4\U0009bea3×𒀚Ôúý8×Tï}\U000aa8c6W\U000ab294-\U00046979\x96Q\U0008d7b9\'ÜO\U001054f6\U000a1eb2\x9bU\x9dús\x99Ö\U000cc4e7\U00080c65fc\'\x13²Ü²\U0005c380iý\x00\x97\U000d27ec\x11y𮊄?t{ÅN)\x8a\U0001e8e5\U00087d7awd`g\x87\x8e\U000f944f¶X\x01X\U0009cc32\x90\U0004b725ü\U00092ab6\x88ûÞ\U00048ca4Æ¬ON¤SÖ\x00\x1fþSb¾Ï^\x13\x0fï\\¹¹à<¿Á\r#Ã\U0002f59d\x8e\U00058253F_\U0004124da\x07Ã\U00090296)´\x15\U0004c9a6\x92GÈ\U000ca257ä&3\U00082787\x85Ã\U000c2bb8\x02\U000d6aefk\U0004c428þËL\x18\U000d5b39O\U000453b2é©°\x99\U00072038\x81\x19𑲖ß\U000163a3h\U000525b4\U000ca39aù\U000463ff¹_\U0004b01d\U000336e6\x85Ùq\U0004d529Æ\U000c5cd7¨NÈnÆd=d\U000c7841\U000ecaf2\x85\rN(\x95GÜ\U0007c59a6Æ\U0009df78|\x1erÉ-\U000778ec\U000a1830ë\U0005a164\U00071c09R!\x03\x90\U0004f8a4ÞZOðØW\U0008eca9}Á\x80\U000e9820\U00101b71\U000404bd\x9f\x91Ô½\U0005ffddâìÎN\U000f7299ã\x8c©\U00046843\U00047776eA\x87OîÌ\x96\U000ac416D\U0005f798\x9ea³v^\U00085620ª9NB~\xa0_ꓲ\U0009a35c\x97¬\x18\U000b565d\U000d2c4b\U0007adcd\x8f\x97:\U00073765>b\x905¶\U00087cf4\U000b5534.v\U0005c800\x94\U0003d921\U0010aa76\\EV\U000a71ddÎ\x00Sô\x89\U00087dcde\U000de5d00\U00060760\U000a3cedM\U000d9658\x92öß\x98tÎ\x84\x88¿T\x92C\x00Zg\U000d4cee𐹥ËD*°ïF\x85¯¾¨\U000f25c1\x9e\x1d²)ö\x98\U000ae992\xa0\x1f·R\x99\U000d058d\U000a718f"\U0005d131ju\x9f\x19\U000b91c7ä\x83Z\U000f7d88\U00067920F\x19\U000da87f\U000d3843Ôm~\U000a84c8a!\U000f50d6\U00095caa\x8bzÈ\x95¸Å¹u\x7f#\x83<Û\U00103e75\x81Ø\uf2f2\x96\U0009780f?©µ\n\x86¤\U00058f76¾Ãó¼\x83\x16Óm\U000fb03eþ«µ\U000c0c20\U00073f9b\x82î2\U000ca1a8ý\U0008cb18\U0007cd0cR\x86?\U000a345d\U00087575ÉÐkç\x82Q\U000ec7b6\x9dÖÎ7ÔT\x96î\x03\U0009867f$"R1\x1c\U0004a227𗯦\x0c\U000421cc\'\x13\x89Õç\x1b1\x11Å°R"Í\U000494f4\x03ì\x84\xadÂᢥß»\x83}\xadô väÍ_9\x9cf\x97\x16kËßKDÓ-\U000af109PJ%\x17R£ÑQötð\U000a4072°x\rD\U000da9a1\x0c++ÿ$\x9bí\U0003d15dÁ\U00069aacÞgt\U000cf787<Ã\x19h[2¶\U00074cd9d{Å\t×\x0f\x94Ü\x92\x83\U000c5cbf\x90𤉘g\U000f2496\U0006164d\U000e8b68\x7f\x0f¶\U000e1125x#ÔÊ?\x9e\x88\x04\U00062e92N¤\U0008a017ûÊú/9Y\U000ee7baµ\x83éö𢻵\x16𥕊\U000e8899\U0009088d\U000e52cb\U000991dd\U00059d11\U000dda74?£_\x93\x95ëã\x1bÁ\x1b\x89\U00057ab1\'ý=\U00094070\U0003db69B\U000dbf7bþ\U000455f8Xì\x1fÃü\x9c\x8a"Q\x14\U00048fa9¡?+S\x15\x80j¸mꝴÆ𥎇nÑ0\U000ea879\U000a0a1c𢝞3Å¢\x0fÔ.æ\U0004990d&\x1b\x13\x9b\U000bdc2cH^\U000c5973\x9a\x87õó®¦Ø¾C\U000933ecò\x07!\U000c71aeîÊxx\U000fe66dô\t\U0008e58c\x00<\x93\U00101744\x89H\U0007bc6f«\x18v\U000544ab\x83&\U0005818f[6¡#BYºÉ\U0009221b檱>\U00079f75\U0009a58e\U00090660cC\U00106960êlþ\U0007c9f1û\x02\U0009ae18¢\x96+k\U0008c517\rà{\U0009aa00\x85\x00¹\x8fÊ\U00077764~u\U0003a996𬡌\U000a9abf𖬤\U001039a9\xadªeû\x89â\x06XrY°¨í\x1e\x8a\U0006a5cfÍ\U0010f9e7S&\U000e88b9¨£]\U00042cf3\n𬺕 îö\x07Ì\x8f\U000abea7\U0007d207\x85¤\x0cÝ\x15ÈG¦øñ\x96<ðõ<Ñ\x91\U00083b89\x14û5\U00069b25]\U00076e16cw\U000a221fÉwK¸r\xa0rl|Y\U000d8582éË\U000ca702sì.S°[¼\U000c1da3\U000ff16cy¶¢º\U00031445\x90yyt6\U000bbed9\x9aË±|7À\x9f\x1b'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -27278, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003529s
====================================================================================================
2025-09-19 00:01:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003763s
====================================================================================================
2025-09-19 00:01:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -31301, 'password': 81}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -31301, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 81, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003861s
====================================================================================================
2025-09-19 00:01:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 8806, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 8806, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004022s
====================================================================================================
2025-09-19 00:01:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ' '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004609s
====================================================================================================
2025-09-19 00:01:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '\U0009f9a7\x89Ñ\U00094929\trñ\U0003a112·'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '\U0009f9a7\x89Ñ\U00094929\trñ\U0003a112·'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003726s
====================================================================================================
2025-09-19 00:01:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003708s
====================================================================================================
2025-09-19 00:01:27 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003922s
====================================================================================================
2025-09-19 00:01:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['~\x8e', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['~\x8e', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003779s
====================================================================================================
2025-09-19 00:01:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '©\x9f].å\x9c¢\U000ce4bd\U000d6067\U000f8bcb7ÿR\x1b\U001003c272菙Æw𝗵Â"d¦Òî\x12Ìd\x97q2\x85𑰆ö·\U000ee482àBÐ𗝽ðp\x04£\U000ebcf7쟷(~\x13\x94\x99\xadã¥\'/\U000b047e÷8øÇ£b\x13ë\x9cÝE\x9c\U000d04cb¡}\x8b8k\x84\x0f\U00058071\x19𬬍Ã\x82\x01ô$¤=±\rý\x95圡è¾\x0fâO\U0005d29a\U0001519ePRÈ돫\x08¼\x8c)\x93\U0005d8c9ꈔ\x85\'𤖓¾ìî\x84¶\x9fr\x058\U0010da68cÓ#\U000cc3ae\U0008b251ã\U000c4b19éð\U000dd9dc\U000da9dd\x94>a\U000c32fdÕ \x9e\U0004a527LÁíÐÎ÷À\x1ai\\\n(Ä\x9e»\x19𔑕\x85E\U00089ee4\x8a(;\U000f740aÒ\xad[\x11*\U0008310cã°혷\x08\U0010a388\x0bÕDØ\U000c6bee#\x82\U000fc897\x98ä8~𥹪\U00105dea\U000ff5c0Ç6\x06È\x1f·ºª\x82\x0e¹\x83Ð孟\x01õwGC\x97²XúÌ\x06\x9fà\U001065c2Aj\'¨07ó±ãË\x9eà\U000aae1c±Ñ\x8b²ØÞó\U00013f9fXÇðÐ\U000a9315\U000ab013\x83\U0010f9f6\x8d.\U00096484\x93O\x90RT½EKK\x7f¾\U000fdebc\U000ab76d\x1d¬\U00104c7a\U000ac076\x83\x80ÆØø\x03o\x0b6\U000a45f1&\u07b4W}ë&åB\U000b3ee9We\U00105025~\x1f\x92\U00069234ð\U0007f9fb\x8eTÝ3Â\x17\x0b\x0e\x97â;É\x8dØtC÷¡\x04\x0eù\U000ccc5fòN길\U00041fd0»\U00070782\U000b3df2#\U000a8155E)\x95~u\U000e5996\U0009535cu\x18Ø\xad\x1d\U000e17b0i\n¨\x15Zæ\x88á𢹂\x14²\U000da90e_\U000959a7\U000a82b1¡\U000f649bol\x83î\U0004bc853©Õ\x93/Ý\x93¯\x81d\U000b2965\U000c1690𣕑\x18d\U0010ba7e\U000cc90d\U0009f040&l\U0010186e\x92ê\U00089d0dtGs)~\U000a6650Ík\U0009bd81PC)6\x9f\U00071e7c}º\U00082a7f\x8c÷â\U000488c7\x0fp\U00046f28dæ\x84ð\U0001ab0e\x84Aª\x15D7\U000f4cce b:=\x93\x90è6\U000c3c31÷>¹\x12+\x7f\U00047dddr~\U0005047f\U000c48ba\x8d|oÙ\U0008f349¡\x1aJ\x96\U000e5999úª\U000c80fb\U000f3f13\x18W\U0010ee5e(´âr\U000d9e08~$Ë\U000fd9914\x1d(\x978\x88»\x94𪟁𔓳𪹂\x88q0èÖã\x8cåA\U000ebcec|Ü⛦qh\x91\U000891a9\x10(?\U000b262b#\U00073abfm7Ä½_J\U0010a857àì\U0006e3ba\U0009f1ec\U000775f2ý\U00083c79Ô\U0005bae7.¢¤A<Î\U0004295d\U0010b249\x80¸\U001004c8;\U00049027»\x96\U000b2086ê\x02v\x8a5ÆvEé®æÃ\U000129f4\x19J%\x85\U0001ecc4ÑàfÜ_\x9d1\U000f774a-í\t\r0\U000ca049Ë\x13f\n\U000bb0bdÐ½ù²²\U000da15f]\x1a\x86¬fzN)&9ö\x8cÀ´\U000da64eÍî¢`)K\U00077a23°õ(ùS\U000de837\x1f\x8aH\x8eBxÈc\U000e2814è_a\x1eæI"ôQÚW¢å_pº\x9a\x9b\x8b\U000f09c6\t±\U00070659Y\x91â´¤\x97\t\x1amûË]¢𒄚ô\x1b£¿ûC\U000f6b8b\x03\U000c718d\x9f;øÿ\x12E\U0001b526<\U000c3eca\x85{\x93Z\x01\U000b2517Ñ\x0f²\x04\x7f\x18\t\x15I\U000da244-\U0005021b·\x05𣃸\U000ec07c,\U0008bac0¸I1µ\x1f\x03苏\U000dcf05\x93Îâ\x9b=±\x7fFé\x03\x14\U000160c4\x93\U0006fa6d\U0007369döÓà"ÀS\U0006e7865\x03\x0b\r\U0006eaddÇâ\x0f\x1bÑ1o\U000805a5\x83o\U000e6e45\x1b´8"}ÿ\x7f\U00090d5f\t\U00085586\x9d\x80\U000b7dba\x9e5\xad%\x01YÑ§Ü\x87´\x1b©çqÞ\U000fe062\U00069825\x10·HñÞ\U000668cb𰌠\U00058698û\U000b9664\x97\x9fH\U00036393\U0010b361\x1f\U000d00db\U0006db33\x10Êµ¯âÍ\x05Bæ\U000766e3w\U000ae01b>\U00019731d[©\x07Ãb\n\U000932ddüÿ\U00107eb6|2\U0009240dð\U000d50902.\x12:è\x93\U00064c63\U000b39d9\x82¨\U000bbf93\U00060cfd\n\x7f\x8f\U000ea5ea¶W\x84\x92lr\U00034707þ¸\U000fe702©\U00089519\x18÷ÈÅ\U0008fb31K\U0009f2b7åPóæóÁì\x98\x88\x87𬷖ço)\U00063aa4)Ã\x90\U000345ed\U00107e74k÷z«v)\U00077af9\x859\x00\x02\x81î\U000c71a8X\U000bf2bc\U0004b37cÊs\x02·]¬\U0010caf3\U000831capø.H\U000d9f4eì\x15\U0002ec45?¶h\x94\U0004569al5Å¹j\U0010e601𩉌\U000e44c95𗴢\x1fÎfi9:\x16\x8fëbdUF\x90Êd\U0003e77fy(⠐·Ðí8\U0004d4bf~\x83f¾ç\U001008ccÄé\U00041900Rê¯\x8e\x1c\x11\'\U0010f125\U000165fe\x81P\U000ea687f\x14\U00095f67\U000daa64¡t%ïäMÇñ\U00035a77\U0008f408\x1a\U00103b6b\U00090842jR\U0004922c𤊐\U000b3c0dü䳥\U000b2c31\x129\x14\U00054363\x11Ù\U0010879d/\U000513fcþN®\x90\U0006c75f\U0006d75f%µ\x12cîU±g·ÒÍØ\x9e\x0c\U0008b200·\x15\x16\x92¢\'\U000c469e\'g\xad+S\U0003cd4a9BÇÍ\U000f2507\x0bï©𫿀Ï\x9d\U000cc739ÔÿT*«\U000d1210*\U0009a878\U000dccd3\U00052def\U000f9f57\U00035fd0\x91¹Mx\U000cc799\x99최6\x11x¸P\U000c1c04\x99z\x99\'\x9dHç\x85Ò^ô\x91\U0008f66fp`\x9b\U0007ffa7\x88\U0008d55a𛋏\'\U0005fe48±.\U000927acÌ(¨\x9chD\U0003f81e\U000c66a6¾\x19\x9c\U00087284\x8cÎ²Ç¦ êÏb4\x98\U00063a1e×.\x1f\uecf5\x00ðë\U000ce3c3\x88A~ìí\U000a3bfeRÁ(\x83I\U000e1f0a]H\x92\U00103cb5\x80N*¬®÷íq\x8dÓ\U0003c026\x1e\U00070b6e&Üñî\U000af55a\U000fbf86«G\x08§\x88pëª&\U00081512Z\U000d5c26k\x92\U000b4ae4È\U0008a37dOb\x9c\U0001298fÃ\U000da4bbvJ\x14²\U00081701ß\x9d\x1a'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '©\x9f].å\x9c¢\U000ce4bd\U000d6067\U000f8bcb7ÿR\x1b\U001003c272菙Æw𝗵Â"d¦Òî\x12Ìd\x97q2\x85𑰆ö·\U000ee482àBÐ𗝽ðp\x04£\U000ebcf7쟷(~\x13\x94\x99\xadã¥\'/\U000b047e÷8øÇ£b\x13ë\x9cÝE\x9c\U000d04cb¡}\x8b8k\x84\x0f\U00058071\x19𬬍Ã\x82\x01ô$¤=±\rý\x95圡è¾\x0fâO\U0005d29a\U0001519ePRÈ돫\x08¼\x8c)\x93\U0005d8c9ꈔ\x85\'𤖓¾ìî\x84¶\x9fr\x058\U0010da68cÓ#\U000cc3ae\U0008b251ã\U000c4b19éð\U000dd9dc\U000da9dd\x94>a\U000c32fdÕ \x9e\U0004a527LÁíÐÎ÷À\x1ai\\\n(Ä\x9e»\x19𔑕\x85E\U00089ee4\x8a(;\U000f740aÒ\xad[\x11*\U0008310cã°혷\x08\U0010a388\x0bÕDØ\U000c6bee#\x82\U000fc897\x98ä8~𥹪\U00105dea\U000ff5c0Ç6\x06È\x1f·ºª\x82\x0e¹\x83Ð孟\x01õwGC\x97²XúÌ\x06\x9fà\U001065c2Aj\'¨07ó±ãË\x9eà\U000aae1c±Ñ\x8b²ØÞó\U00013f9fXÇðÐ\U000a9315\U000ab013\x83\U0010f9f6\x8d.\U00096484\x93O\x90RT½EKK\x7f¾\U000fdebc\U000ab76d\x1d¬\U00104c7a\U000ac076\x83\x80ÆØø\x03o\x0b6\U000a45f1&\u07b4W}ë&åB\U000b3ee9We\U00105025~\x1f\x92\U00069234ð\U0007f9fb\x8eTÝ3Â\x17\x0b\x0e\x97â;É\x8dØtC÷¡\x04\x0eù\U000ccc5fòN길\U00041fd0»\U00070782\U000b3df2#\U000a8155E)\x95~u\U000e5996\U0009535cu\x18Ø\xad\x1d\U000e17b0i\n¨\x15Zæ\x88á𢹂\x14²\U000da90e_\U000959a7\U000a82b1¡\U000f649bol\x83î\U0004bc853©Õ\x93/Ý\x93¯\x81d\U000b2965\U000c1690𣕑\x18d\U0010ba7e\U000cc90d\U0009f040&l\U0010186e\x92ê\U00089d0dtGs)~\U000a6650Ík\U0009bd81PC)6\x9f\U00071e7c}º\U00082a7f\x8c÷â\U000488c7\x0fp\U00046f28dæ\x84ð\U0001ab0e\x84Aª\x15D7\U000f4cce b:=\x93\x90è6\U000c3c31÷>¹\x12+\x7f\U00047dddr~\U0005047f\U000c48ba\x8d|oÙ\U0008f349¡\x1aJ\x96\U000e5999úª\U000c80fb\U000f3f13\x18W\U0010ee5e(´âr\U000d9e08~$Ë\U000fd9914\x1d(\x978\x88»\x94𪟁𔓳𪹂\x88q0èÖã\x8cåA\U000ebcec|Ü⛦qh\x91\U000891a9\x10(?\U000b262b#\U00073abfm7Ä½_J\U0010a857àì\U0006e3ba\U0009f1ec\U000775f2ý\U00083c79Ô\U0005bae7.¢¤A<Î\U0004295d\U0010b249\x80¸\U001004c8;\U00049027»\x96\U000b2086ê\x02v\x8a5ÆvEé®æÃ\U000129f4\x19J%\x85\U0001ecc4ÑàfÜ_\x9d1\U000f774a-í\t\r0\U000ca049Ë\x13f\n\U000bb0bdÐ½ù²²\U000da15f]\x1a\x86¬fzN)&9ö\x8cÀ´\U000da64eÍî¢`)K\U00077a23°õ(ùS\U000de837\x1f\x8aH\x8eBxÈc\U000e2814è_a\x1eæI"ôQÚW¢å_pº\x9a\x9b\x8b\U000f09c6\t±\U00070659Y\x91â´¤\x97\t\x1amûË]¢𒄚ô\x1b£¿ûC\U000f6b8b\x03\U000c718d\x9f;øÿ\x12E\U0001b526<\U000c3eca\x85{\x93Z\x01\U000b2517Ñ\x0f²\x04\x7f\x18\t\x15I\U000da244-\U0005021b·\x05𣃸\U000ec07c,\U0008bac0¸I1µ\x1f\x03苏\U000dcf05\x93Îâ\x9b=±\x7fFé\x03\x14\U000160c4\x93\U0006fa6d\U0007369döÓà"ÀS\U0006e7865\x03\x0b\r\U0006eaddÇâ\x0f\x1bÑ1o\U000805a5\x83o\U000e6e45\x1b´8"}ÿ\x7f\U00090d5f\t\U00085586\x9d\x80\U000b7dba\x9e5\xad%\x01YÑ§Ü\x87´\x1b©çqÞ\U000fe062\U00069825\x10·HñÞ\U000668cb𰌠\U00058698û\U000b9664\x97\x9fH\U00036393\U0010b361\x1f\U000d00db\U0006db33\x10Êµ¯âÍ\x05Bæ\U000766e3w\U000ae01b>\U00019731d[©\x07Ãb\n\U000932ddüÿ\U00107eb6|2\U0009240dð\U000d50902.\x12:è\x93\U00064c63\U000b39d9\x82¨\U000bbf93\U00060cfd\n\x7f\x8f\U000ea5ea¶W\x84\x92lr\U00034707þ¸\U000fe702©\U00089519\x18÷ÈÅ\U0008fb31K\U0009f2b7åPóæóÁì\x98\x88\x87𬷖ço)\U00063aa4)Ã\x90\U000345ed\U00107e74k÷z«v)\U00077af9\x859\x00\x02\x81î\U000c71a8X\U000bf2bc\U0004b37cÊs\x02·]¬\U0010caf3\U000831capø.H\U000d9f4eì\x15\U0002ec45?¶h\x94\U0004569al5Å¹j\U0010e601𩉌\U000e44c95𗴢\x1fÎfi9:\x16\x8fëbdUF\x90Êd\U0003e77fy(⠐·Ðí8\U0004d4bf~\x83f¾ç\U001008ccÄé\U00041900Rê¯\x8e\x1c\x11\'\U0010f125\U000165fe\x81P\U000ea687f\x14\U00095f67\U000daa64¡t%ïäMÇñ\U00035a77\U0008f408\x1a\U00103b6b\U00090842jR\U0004922c𤊐\U000b3c0dü䳥\U000b2c31\x129\x14\U00054363\x11Ù\U0010879d/\U000513fcþN®\x90\U0006c75f\U0006d75f%µ\x12cîU±g·ÒÍØ\x9e\x0c\U0008b200·\x15\x16\x92¢\'\U000c469e\'g\xad+S\U0003cd4a9BÇÍ\U000f2507\x0bï©𫿀Ï\x9d\U000cc739ÔÿT*«\U000d1210*\U0009a878\U000dccd3\U00052def\U000f9f57\U00035fd0\x91¹Mx\U000cc799\x99최6\x11x¸P\U000c1c04\x99z\x99\'\x9dHç\x85Ò^ô\x91\U0008f66fp`\x9b\U0007ffa7\x88\U0008d55a𛋏\'\U0005fe48±.\U000927acÌ(¨\x9chD\U0003f81e\U000c66a6¾\x19\x9c\U00087284\x8cÎ²Ç¦ êÏb4\x98\U00063a1e×.\x1f\uecf5\x00ðë\U000ce3c3\x88A~ìí\U000a3bfeRÁ(\x83I\U000e1f0a]H\x92\U00103cb5\x80N*¬®÷íq\x8dÓ\U0003c026\x1e\U00070b6e&Üñî\U000af55a\U000fbf86«G\x08§\x88pëª&\U00081512Z\U000d5c26k\x92\U000b4ae4È\U0008a37dOb\x9c\U0001298fÃ\U000da4bbvJ\x14²\U00081701ß\x9d\x1a'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004326s
====================================================================================================
2025-09-19 00:01:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['b\x0cñiß\U00079003', '', '\x80\xa0\x13¡\x0f>\U000b1eaeª', '\x1b4,ù\x99ôoH\U0004fedaW', 'V\U00046e0ad\x94$6ày', '\U0004e41c'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['b\x0cñiß\U00079003', '', '\x80\xa0\x13¡\x0f>\U000b1eaeª', '\x1b4,ù\x99ôoH\U0004fedaW', 'V\U00046e0ad\x94$6ày', '\U0004e41c'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004099s
====================================================================================================
2025-09-19 00:01:28 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 118, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 118, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00424s
====================================================================================================
2025-09-19 00:01:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', 'Â(\U0010c2c6se\U000642a2\U0001c64aTÿ\x88\U000ecaf4', 'õð\U000b3947¾j<\U0010fd061'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', 'Â(\U0010c2c6se\U000642a2\U0001c64aTÿ\x88\U000ecaf4', 'õð\U000b3947¾j<\U0010fd061'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004284s
====================================================================================================
2025-09-19 00:01:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Êz}G\x13\U000d5682].f𐿣\U000abdcc\U0009e47d\x88\x0c\x9bx\x90 \U0003a31d\U0004d588\xad°þ\U00082d90\x9fmk\U0004e239\U0005df2eGåä\U000ee123³É\U00065a01\U00077d41/\U000ec65d\x1bF¯lvË¢aç\U000e6513yz\x82Tôêx\U0006819b\U000588be\U000b7cd6Ì`\x9b\U000ff8c1¯Sµò\x8ebG\x84\x021Uôi\x84\x18¯w;´Ï\U000b878b\U0005c26f\U0009bae6\x1f~ß\U000b47496tÖª\x97A{\x97\x9c\x96.w\x04ç7\t\x0eA@\x98ÔOðÚ>\x17ïz\x8e\U000451afí\x1eÍY\U0005b6f0m£,tÚv\x91|ç\x8d\U0006ce24À]1\U000e9d0dâ숍\x93È¶\x92áXxU¾W\x8a§2\x1dô\uf8a3³]>\x86¬F\U000cad31_ÃN1\x0e)ÂµÍ\U00045aa4¼EC]9O\x9b)\x1e\U000c7598\U00103f71ø\U000b95c5qÉ\U0007433c\uf87b\x07S\U00068129ÛmFHE\U00053ee4á¿ïk\ru\U0004d628\x8e\x7f`\U00095ba6\U000f3559\U000c0cba7\x8bÜB\x1d"\U00055240]\x0c!\U00036897\U00086ee54\x1fiÂBûÃú{Ð\x0bÎDó8lß&\U000ed0b7\U000f7d7fZjî¾\U00056f356\x1d\U000708d2\x99Î²÷PíD\U000f718eôÓ{ö\U0007b59aN\U000794e5\x0b\\õ\x88Ì\x14!\U0001e56cbê\x12a\U00099565\x9d\U0009f902\U00034949<vªãÿÝáû\U00077c3fS{\U00031946𰐩V\x07Í\x05È\U0005db76Þð¿g1Ñ\x88𨩙\U000e5d02\U000c7760(Q \x99Ä\x97\U000e1ac6¼²-¤\U00061c02§\xad\U00040533\x0cxåäæ\x97\x04\U0005813d\x89\x1e%5Ä\xad\U0001ea6c0V<Kú\r\x83¼PS\U00013cc2ÿ8\x8dþý\U000ac4a4\U00041117£\'\x80M\U0009f05e«\x95Æ\x95¨Q7¶\r\U000b9ea3\x85\U00050348~\U000554ea,}#\U000d143a4[\U000becc8\x8d\x1e\U000507a4"½u¢øV0úá\x83j\x83GM\x88K\U000e6a12\'\U000b9779±\U0010c89at9 \x04\x8a`\U0005f25bí\xadUPG;6\U000ae9a9ý\U0003a33b\x80𒇏\U000e67cfÃU\x10\x90\U000c7f41cL\x84Û\U000defb0\x8a\U00099137\U0005c586¬í\x98¦é\x17qnÐW\x1e\U000bbe55ç\x89«ó\x97æ¿\U0001eadc\xad¦\x99ç°\x08©ÈfTªM\x00»e×¿æ\U000c0a50"xBm2k\x15¨k\U00042b40àx\x13È\U0007c069\x8d"\U0009c0ba\U000cf92b£\x1cÒ\x1dn¯\x1bSÕH$Õ\U00078b12´\U000b18e6Y8ÇÕHÔm\U000eeb8a5ð¸\U000a3820\x94þ\U000caae9½\U0008f8bd\U000ef0c1ýß.\x99\U0006c556\U0004d271>§\U0007c3a7B\x07)\U00086b22\U000ddba9v\x00UäeÞü$í÷æmÙÏ\x85Ó\U0007b560(\x7f\x81¹\xadw~Ó\x7f\x05\x84衦\x08Ý\U0008a8cd¢í¯Ñ\x96ü$\x02\xadÂp\U0010a16a¤\xad\x07\x8dd$𡡺ô\x85ú\U00049c8a\x0c\\I÷7\ræ´ý~\U0001c384|eå\x98\U0003b5cc¸õ"4\x0eT\x8e®±.Ú\x1e4ÿ¸𭉣cÁ#s\x8e𤬜\x8d~ÈêmXëLÈ\U000da30eö\U000bd682\ríÿ¥5zy=Ô\U0004733b®fG\U000ae6a1ñ¾Ýaâz1a/\U0010c829\t\x8f\x17Äcc\U000f417a\x00\x04ËÇáç\x06\xa0xO\x0c\U000eee99U\x1bh\x9f>þÅâV\U00088b4c\x1c\U000f6fb3¤\x082¤½\U0003a994#Î;\U000a4cf3\U0006e8cbËdú쀙û±Q\U000b003f_\U00069098Ë\x04\x01ò\U000bba3c\x1b\x9eé7\x10rå\U000c7fad¨ÈóW\x140¡\x15\x9d4ÓÅ-D\x90\x96j±M\U000fa845Ýá^¶\U0004fade\U000a1843>><f¥\x98YáÖG\x0cN\U00010cb7£\U000bd8b6L\U00032d44Pu³\U000ae6ba\x1e\x10ø\x92ÐQpæê38\U000dca77\x17Ýc\U00104c71\x96\x83·°\U00037b29\uf1beÏ\x14\U0005d407\U0004de75\U0005ff27Ñ0¦_^\U000c8345\x83\x9fN\n9Ì¯Ú\U0010a557ò\x00Í¿÷s`c"\\5\x01¯ï.\U0009a63bC\x9f\U00096a4eY\x1eá\x81\U00037bfc\'\x9b槣^±\x02$\U0010ca1e\U00084b41\x8d»\U000785147/ò\U000fc4benêBªG\x8f!\xa0\x1a\U0006372d𫂡6CE\x14å\U000b349a\U000b4be8¸Wr[°é!\'\U000de471K\U000f659e\x99\\\U0005994e£îFÙ\U0010a87dë\U000913f0\U0001ef52\U000bfa4d\U000bae39\U00051776h³/2㮁î\U0004028a»õ\U000ac66f\x84ù\U000b1ea6\x00\U000a4e23\U000d8b5f\U00084573\x8a\x19Qao%pH\x0e≺\U000b84a7*Ð\U00105822¼q\U0005aa2cKé$N\x91_\x9c7D$\x15Y\\\U000a817d\x99¤½\x8f\x92\x04£\x96ÎÜaÄí\U0009ceba0𠚠u\x0bë\x03ãØ\U0003ee5b\U000ced9bþgü\x00\U000c2e63i¾÷\x8a\x87𘖾\x8bé#Øx\x12\U0010b66d=Á\U000c52b8ißns\U0007cd318þà\x9c«è\U00013a8e&\x137|/¤Å𝀫\U000662e4𨞷Æ°Ý¼\U000d7a39R\x1bîÅ\U00056a16\tr\x1bL\U0003b5f2%᮹A«ÄôøyUG:©3Tº\U000b1474)§\U000e4b5b\U0010614a\U000ae696Ýn\x0e\x87ç\U00098f99\x14¿´\x18\U000835ec\x8c¦\U000f1212Öòg\x8dããs\x03å¥ü\U000aaf5d\x12}q\x08\x8f\\\x93o\U00031f8f\x98\U000f8bf2\x80 Ç\x97\x92f\x08@E\x9fç\U00080e65\x17lOO\x9dê°\x87gy\x03A8|', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003848s
====================================================================================================
2025-09-19 00:01:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 82}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 82}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 82, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003733s
====================================================================================================
2025-09-19 00:01:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -26231, 'password': 20488}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -26231, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 20488, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003749s
====================================================================================================
2025-09-19 00:01:29 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['ª\x8eË\x1c\U0006a946𗤾\x05', '', '3ÞLµ', 'îU\x9b\U000e20f3', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['ª\x8eË\x1c\U0006a946𗤾\x05', '', '3ÞLµ', 'îU\x9b\U000e20f3', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003823s
====================================================================================================
2025-09-19 00:01:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['/\x8f', 'Y\U000b686f', '¹ñ\U000b8b91', 'Óí\U00053db1õ\x82E\x90\U00079b90^^°', '\x1d¢¼ðì\x7fV\U000d52578\x14%>{\x00§hÙÌ#\në\x9bR\x1aÙ\U000e38af\U0008d06b']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['/\x8f', 'Y\U000b686f', '¹ñ\U000b8b91', 'Óí\U00053db1õ\x82E\x90\U00079b90^^°', '\x1d¢¼ðì\x7fV\U000d52578\x14%>{\x00§hÙÌ#\në\x9bR\x1aÙ\U000e38af\U0008d06b'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['/\x8f', 'Y\U000b686f', '¹ñ\U000b8b91', 'Óí\U00053db1õ\x82E\x90\U00079b90^^°', '\x1d¢¼ðì\x7fV\U000d52578\x14%>{\x00§hÙÌ#\në\x9bR\x1aÙ\U000e38af\U0008d06b']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003488s
====================================================================================================
2025-09-19 00:01:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003837s
====================================================================================================
2025-09-19 00:01:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004158s
====================================================================================================
2025-09-19 00:01:30 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'G±hì\xad\U000bf1d2ó÷â@o\U00060cacA\U000d3332W·L\x03T\x1ePÒïX\U000c5d7a|\xadꤖ\x99ú𒉯óÆ\U0004c065\x99Á&y\U000ff4f1\x07\x87\uf83b\x0cÞ£ç\x9díkG!d¬p\U0010d797¦Ë\U0003ca1d¾Ë\x90B\U000d0837Ì\U0006df3d¸\U0003c074𰺮fHw\x88Ô\n\U000e5bcd\U0009622f\x00\rµ\U00103d2f5¬\U00077a41\U000da038³w\U000ef683\x1b\x81Ä\x8f¨Y\U00041de4å»\x1cw\U000b60e1Ý\x9f\ue127ö\x1cÚ\U000cf14ef\x8b\U0001a220éz4{\U0010d9fa긬³_\U000f535a&5\x0b\x92Ë\xad\U000314b4å[#LQ¦\'CÃ¯å´\x01粢\näVµæUaiõäb¦Ú<Q8\U0003d65b\x9b4\x90\U000a9715\U00012a08Æ\x92\U000cd57c0ý\x05Äß\x88\U000932f7í\U00090f00\U000ca518ü\x15¤V\x8bB®E\x8eV\x02\U000160c1¯{\x12XK\x10\U000ed0aa\x07\x8aS\U0004f4a7\x1b3H\x7f\U000f07cfd@@:\x90t\x1d\U00076e61ÑD\U00050887@×\x97Ö>ø\U00048f8c\x1c\x8c¥Ýd!Ê±,\x08¼X§¬U\x8e>ø\U000ca975Ç\x7f=Ñü\x0e\U000e6acb\x01Ùðc÷÷ï\U000ad76e\U0010f716\x16%k4\U00015204t¹aÛ\U000ff5adsµ\x81&rþuúü^²Ó2\x89¾\xadä0𰚶Óß\U000a2d52ÀÌ¬\x88LýÓ³{\x85÷\U00079c10b\U00068900Ýqð\U000f702f.Ì\x84Ï"¾\x0c×t\x7f|\x7f龛\x03æ\x90¯É\U0006cc2ev\U000cc244\U0009dfa5\'\xa0\x0e|⎖\U000cc396\rdî\x9bÅý8\x01L,°\x80ìaGP`-\x85P\x0bú\U0005a1c7Êæ\x8f\U000eb37f\x99\x01\x02\U0010fc1a\U00070b4c\x95®\x19ÿ=Ã\U0007e02d¾³𥳚Ê\U00077985¸\x0c\x0c0S\U000b6cd1\U0009fc51ÿ堈K0ù\U00042cbb¿¦\U000ff0aa\\\x88]à𱊩t\x83紬d(mÑ4\x0f©ê\x85vÎà\x98揭m÷\x8e:Ìl¹\x8e\x9f<\x16ç¥\U00088325È\x10\U000a1c99\x9cÝ¹(Î\x0cRO\x9c-\x97\x1a𨜠\x1bné㹦\x82ö\U000db738Á\U00046309\U0006b693£¥0\U0005f962\x14饰í\U000fe29båÖáwV¶𧐻\x0côÃÞª\xa0¯\x81F%6ûrùfë¿\U0007c8b9𬼜"\x8c\x9fF¦\U0009f38bR\U00067da3H}\U0004ffd2¯𨼽É6¾îÖ\x8a\x9c\x8f¥H\U00019d05CYå½\x86òú.\U0010e5fd¬\U0004f62d#\U00071f6eªôô\x8c\U0009ae3e¥\U000ff097°B\U00047a67~z\x00\x14\U00079497Þ\x85\U00095bf7¦Á\U00035e9d\xa0BñH\x9cM\U000a774a¾\U000d41fdZ}𪲅\x80n\x88\U0007a3af\x8c\x1f\x12\U000459f3\x80C6;\U000d58c0\U000a84cbÕ᭢\U000ac05c\U0003e5f1\U000619edèÐ\U00091932¡^\x830ÁÈÔ¼\U000c6f1b\x11¾\x14\x86\x85Ä\x93°\U00053675\x80ÇQ2x_\x06¿\U00070dc5f\U00035551\U00015f77\x05o\x8d\U00050e9e\x8bKñ\U0010a145¡*j\x9d\x14÷Ê\U0010adddsøt\r}U\U0007207a\U000cced6\x12ÿC\x7fµê\U00073556\U000f9401Àl\x99_µ\x93Å\x8e\x96\U000c23beó\x7fËEq\U000d4a23\U000a65d5ÖÈÆ\x1aÙAh\x90︻ÜÝ/AÕÎ\x99ý\U0003cac4ý\x19¥dK»ª\U000deca5}\x12«\x1b\u0fe9s\t\x9f\U00035e00\U000972d7纕(\x849\U000966ae^\U0008aa92Á%Ú«M¶\x84¨\x99U\x91\rÁÌá\x84\U000630e5Ý\x9c\U000d0323ýó\U0008afd6\x99\U000c99e2\U00057a75\U000f5066쫎| 9\n\x06\x02\U000c8e37\U000cc560²>¿\U0005ff73+\U000d56bfx\U000a9902êPRÒ1¢ÙÚᦍãÌs!@2uM\x16𫫒"\ne\x12\U000b34b6\U0009f177kË\U000f31f6µ\U000c4a41Å\U000a7a1c\x88\x0b\x0fÈ\U000beeb7\x85Æ\\rj\x8c\x0fHàÁvô\U0001bfe1Å\x0cH\x9c\U000972a8\U000b2b7f\x97ª\x04»\U000e64c9I\x83Q\x86ûÎ\U0004f5f1\U00088cf4\U0008f6dfÜ¯>\x9fÐeJ½\U000ba5a1À\U0001520c³r¼\U000911fc\U000fca13QÎt°h.\x05`\x90Ðè\x9f\x10\U000aaff6ð\U00066e8cH"|eZU\U000fde6a𨩿0\x0e¸\U00099bbf\x94N|\U000a3372¼\x82^³ï:UH\x93\U00078cc7Ï\x08斃4\x99&%\x84Æ\x8eã\U00089e6aÄv\x94\x87\x8e_~\x0bÐ\U00037a6bhPÐ7ßuaæª<ØÃuù\x86g\x92\x07Ï\x16ã×\U0004b934\x06\x952\x89¯\x02S\U0008defdN\U0006023fW$\x02\U00062f32\U00043590Ü\U0009a837[Ì¹\U000c6890\x80öHO\x8d\x0b\x03.\x98_®4Ø\x95¶\x04\U0010a272\x97;¿QþøødiéMw\x0f\x1c\U000ba2a0=\U0009a924\x0bW\x93pVX\\\U00092287\x97Îª\U000bfb63Åþ_¶BÎÐ\U00011bd3±°\U0009c4b0R\U0003a09d𥾀ºi¨\x83\x14\U000a88fc?\U000fb4bdý\U0007bf6d\x93F\U000f5312#\x1aü\x19º\x1ad#®\U000a737aH¬ý5õ\U000149a5\x04¸\U000ea332¦¯KÁ\x8d¾¯\x88ñ\x94hµòÅá\x1bBó\x97\x99)T¸m\x07\x08º(\U000ab2d1(ë\x85\x98𝨼^Ô®\U000e3b80ি𡶶NÙ\x82\x00\x89¤þ\U000f0c7a·QQ]¬X^\U0005b4fcòL²\x13Ç\U0004be63𘤱\x8ab\U00058383\x06;\x15C\x1a±𒁴(2\U000e315fZ\x90\x19n¢\U000fb822#X\U000adc1bñô×\U000ace8bÅÜ¨ã\x11å³\U0007c237òzPÕÖ\U000c96da\U0006a1fcᒟ\n\'¸åøY[Ý\U000a375a', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003791s
====================================================================================================
2025-09-19 00:01:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 413}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 413, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00414s
====================================================================================================
2025-09-19 00:01:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 31586}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 31586, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004111s
====================================================================================================
2025-09-19 00:01:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003958s
====================================================================================================
2025-09-19 00:01:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['\x91)¯\x07', '\x92¦\U000d2c9f\x9cë\U0006bb2f\x9a\U0003d2cat]mQTl\\(.\x8eÿ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['\x91)¯\x07', '\x92¦\U000d2c9f\x9cë\U0006bb2f\x9a\U0003d2cat]mQTl\\(.\x8eÿ']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x91)¯\x07', '\x92¦\U000d2c9f\x9cë\U0006bb2f\x9a\U0003d2cat]mQTl\\(.\x8eÿ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004128s
====================================================================================================
2025-09-19 00:01:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['A', '\x13', 'Ñ6\x17(', '\\¿Ì'], 'password': 11359}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['A', '\x13', 'Ñ6\x17(', '\\¿Ì'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 11359, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003673s
====================================================================================================
2025-09-19 00:01:31 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003909s
====================================================================================================
2025-09-19 00:01:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x18{ê\x8dª¼玜^\x0bG\xadÛ)\U000b801c\U000780a9ú\x1f\U0004cf21䅗V\U000d0438#\x91笂É\U000ec8f7\']¾¤Ê\x7f\U000c0625Ö=Éßc$bÂ(\x80\x98\U000fac31\x9f±\U0009cd67騹\U000e6936\x121~Na\x82\U000a9841¬\x9e\U000b421a\U000cf96f²Ç\x80\U000949a1Í\x18 eþüb\x825\x03\x03Q\x07\U00079e95\U000e9df6T5\x1f\x0eÏþöOç¸7Ò¨è\x0bàHp\U000e08d6\takwgÈåÇj\x1b\U0004e0bb\x99öÆ\x915]ôJÄD7₡}^\U00105b64kp~]\U000e5a6eºeÞ\U0004af45\x99(ßÏ»©8L4mP\U0005d868ê\']\U00095238JF\U0004eb9d\U000a11ba＠-\x1e\x7f¾Ô\x02þ÷ùÙ\U0004b9b4\U000a51c7 \x02]\U000b69cflS\x8d\x10.Ñ_\x9d²\U00101388\x0c\U000ecfb1«é!\x1aù\xad]\x1c$ÇtxG\U0002f75b\U000d651b\U000e0bf6e\x8aDÖúþ\U0004bf3e¾\U00093d09W\U0010dce5¯\x0bº𭉻5þª\U0005f98c\U000ef8c5𰯽Õ\x08\x99Ëe\x92~\x89z\U000f2fd0𨗧ëÄN\x02ê\x0c\U000b4271\U0002f33fµ<7\U0004ee3dº\x83\U000a5199\x88\x14»1\x1eÞå¿\U001006e0\x8bg\U000ae5b1ﺿÞ¸\x1a\U000bf429\x15\U0006a8e4\x83U\U00078f45fÿ\x94\x92Ãã\x1e\U00031385\x06º\U000c9f4c\x07\x9c\U00098130`\x11¨ї\U0004870fâ\U0008538c¨\U00087776¿𫼀êÌú\x90\U00080610¾)5óë%/¹°º\x8b\x1du«ªqöIx~þ<ýÐ\x19+\U0006ecc04\U0006a8f4\x9dÐ¹éM\x85aÊC\x8bÃÕ\U0007a5cd}\x06𢟕ø¡ \x80©\U0008e4bd¢iâ\U000d1b9f"\x81wLÔ\x929õ\x91@T\x8fÒ\x8c0±\x1fc(\U000f38a0\xadä\x0e\x93à\U00055591얚ÿ¥=Äøðl\U0009b2ee\tÕ\U00041610Zïe]𱅽Ól\U00071b8aÌý\U000bb374²\U000136eeæîV¶\x89\U000cc2d3k\U0010aa9e\U000d886eR\U00097a8b\x0f\U000e7a0b\U000ce426ë\U000aae7dÊ|Î¸\x00\U000bbb44³\x9d\x99qdÛi\x81\U00108b2aQ\x08G^¡P\x8d\U000428ab\U000b75bd\x87\U0005cf07\t@\U000616c5:÷\'\x17\x08ë\x89+楍ífD&Â4ò\x12@"úN\U000aa2c0!¹g𐑃~û2\U00093990¾t\x90x\U00057c5e\x90Ö 2×\U000c5309\U0005724d°.ä\r\U00106d58¥cç¿9s{\U00040840A\U00092e93ëþxÅ\x1f\U000b72f1]írsÀÇ\U00097b12\x05Ý\x8e\x1cï³¹\U00082a7f¡÷Á\U0007d4bd\U000e804ag \x9f¿\x00Áþ»å\x11\x166þ\x88Ó\x17Öõ\U0008f363\U000eb917¶ÿRq¨LÊ󠄵ÓÊúëÏ\x8d\U00071b11:\x9f\U000a81ebQ¢j\x94,úú\x8b\x12Û𠵆$\x96\U000db050¥y\U00100892{\x1c\U000d389f\x00ÏS\x7f\x83\U000ea278\x9a\x08\x1d\x99Ì\x19ä\U00031eb2/ö/bä\U000ae9bdtO𰃶\U0006f7d2\x9d\x8c\U000a3a22ÓqV¬\nÊ\U0010e9ed\U000da6c7ꯊ\U000a2665+á\x1f\U00047c93\x08Ø\U000e2aadj§¾¾\'b\U000e1051/.\x18\x9f5¢\U000784dc\U00056314"NñÉ\xadÀô\U0005f9bb\U0001ada6\x8dDøÑÐp\U00091773\U000f696a\U00054ab6\U000485b4®\U000d7651°\x81\U00049082å\U000197c6N\U000fb7e5áÜ\U000ca99a\U000657b5\x9e¡𱂥\U0005f4d5_N\U000ba025©ëçyvp\x04²\U000975b3Q\U0008a38d÷\x90ù\x12\U00014bf3\x88\U000495da\xa0f\U000ab146ðð\U00096bbaÔ\x83+Î\x854𬷔ë\U00062e9e@\x87fp¶q\U0006b32d\x02\U0006120fù·©\U000e070f\x1a\x93Ê\U000de846áªÚ×%ðªwÍïæ´S³ãÚ·xº\x83\U000a97744XBi\x94\x89ï$æ/Ör¿Á\x87A\U0002ed4c_Ë\U00051d1eifíÍ\x00Î\x93A\U0006cf44È\x11Ë\x11}\U000fb494y\U000ad240刃³Bf\x94¢¿ÂE3Û¸\U00075aeb\x11\U0003f7604eh\x0fÝªm0\U000e7a8b\x14ªÚÒ0\x1c\U000e571fÚ¿¬B\U0006c23b\U000d7e3f\U00019dceF\nc\U0001bb52\U00097dcaNÁ\x13Ô»ú#\x92Ð_(\x96vE\U00098764KæáéÌ\x98]zóÎ}}¥¿F\U000c4a05Qu\U0005008fëÏ\U00037917â\U0004cb67{\x854:\U00092791\U000b9c7f\x06f¯\x8f¥G\x0b\U00036224\x8d\x07G)ó\x18\x82KßÑâ\x1e\x8d\U0001a128ì\U0004631e¬tH.\U000d5d1e\U00101f02°ê𣇣\x90°\x84×\x8dÂ\U000f0e6c.PÂ÷\x07\tÎ\x98Ãòç\x16l\U000d6a48<¶;¥éUÑ\x9fÕ\U00012f61Eù𐦣Ì\U000f8a5f\U000c24b2Ë\U00086afc\x03\x9a§i\U000934d3½Â\U000c290d\\\x9f蒣\U000ce2bd¨〈D\x82ªè\x92èÞ\U0009976e7*\x1fL)\U000f8f8f\U000b8c45\U00049e58\x05c-rC\x8fVâ¾\U00040e06\U00082cca\U000b09021\U0008bec2\x16\U000f5e0bK\U000d33d1\x96.\x0c9\x93\U000b4b78ôýãñ\x8e¬<\x01móE\x8d', 'password': -92720085392612196889684441412699862634}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -92720085392612196889684441412699862634, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003912s
====================================================================================================
2025-09-19 00:01:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'N\x8e\x04î7»𐙣t\U000eb331í=𤗆\U000a6263\U00075242Â<\x0b\U00066113{G=\x0e\U000e0414Pq\U000f7cbcû\x03£뱤¿\x7f\x9c\x83hP£Öº¶\x15#à0S6\x0f*\x8bi¬\U0005730b\n\U0009767a\x05\x1b\x7f\x99Q\U00037688;+È\U000ba94c\U000919a1±¡L%ÍNOÙTÔ\x12\U00038bc2ó\U00085d33\x1b×:\U00081bd4\U00105381\U000ba4cbK0\U00052cb5¬?µú\x81F蛃J{(ÊBÓ\U001086ce\U000889ba\'\U000e4c44Ü\U000ae4b8J¥\U000988f4É~\x0f\U0009d20b\x89MÑ\U000da946D°®\U0009d6d0\x05_\x9c\x10\U000be92cÔ!\x9eO\x1eW!\x95\x13\U00099582ÿ\U0003ac21à\x13Þ\U000be085\x0e\U000dfcebaY𨜽úç𒎖Â¤Ü\x00\U000e7887ßá|\U0005171cÙÂÉ𡺙â𫧯È\x87ö]µ{QMS\U00040028¹\U000e689föp÷\U0003e312¿\\\U0007c5e9¦Pj⨼þE\x8dÀù\U000683c4)=3í\U000b741c1½\U0005a604\x9aò\U000e3e7bÿXt\U0001c949±3K@¼ï\U000e1105\x04ß\U0004954aÉù(\x85\U0001c88c\x8e\x14`\x8a\x1b>\U000839ba\U000f703c*¡\U0010b537꙱T#»\U00039530𥮨\U0007727eA\x1a\x97c\x0c\x9e\x08Ù©U\x00ë\U000fc832\x181uç\U00092e15Ó\x9eó\U0003c75f>Eàü𪥵\x9d\U00103bc0´\U0001ae21äÖ÷\x1dðÒ\U00041991\U0005ed17\x10ï\xad\x85\U0010f7cf\U000da013©\n\U000aea7e𨡕«\U00085c27c<\U000b8cec\U000f48ca¾\U00049c65{§\x98z÷{\x08Ø\x8cF»\U0003918f\U0006627e´¬5÷ºNÍ\x94u_nÞ\x84\x0f\U0003917f\U000fed30\U0007e9feá¸\x9c\U0004b82d\x8eQ¤ÆPÕ\U00099c9c±怱ó8Å{C\x0eÆ\U0007802e£§\x1eûI¬\x9e¥\U000adf34øY\U0010d6cc𬅆\U0010a574\x07\x13\x05\U000bcd30\x04F\U000837b9ì°¿(\x8d\U0003e10f\x14𗁦TÑ9I¹ê\U000fdced=\U000330d1M\x01h\x8e-\x8f\x1fÆð$¹I\U000e47c5\U000664f6õ\U00103213!\U00067f25×\x88\x97\x016Ï\x9b\U00040a9e*ý\x84hÎ#\x0f¿\U000c6923T\U000c6f2eØ\x06.J\U0002fb09Zÿ\U0007d540/*\x07Ì\x96Üd©k\U000db1e7Þä£\U000e669e\x1d¾\tu4\x10ø\x11\tè\U000d690e\\\x9ar\U0009afa3VMi\'º\x104\U000d2c05°\U00034c38¨\U0006fb1d\U000f52e5ⲇ\x03ü\U000918e7.\x7f.|òr\x88Ï<p\x81¦\x920UõÃ\x99ß\x93SA@hâU\x9fA>N\U000c7507}\U0009e293Yå\U00071784{\x0fø£®Øý\x89ÿ\U00103f0c+É5\x8d\U000bd67e\U000dfbf7i\x86\x9b~\U0004bf8aÛ\U0007e18c´\U000bed76\U00089fdatÁ\x10oÞAd§\\¡\x1bX\x8cl\U0007cafe\x84/\x01\x90𡣠Ù$\x7fíø\x9d8\U000107c5𮅇\x8f\U000c1800ú\x9f\x90£\x8b\U000ba020~\x04¥?M0\x81\x07\x19\U0008e305\U0009c3db\U000597e9Â:🇾âao\x13\x14<𝃖´\x17t7Ôe\x11n©&\x05,.\n\U0005137bj\U000fa3a2;ÿj\x7fN\U000dfd9c¡àY\U0004afe8;𗪛r\U000599f0»&\x83𗍌WB\U0003d23fl¿ÅX𘴄ù?-Ñx»Æäã\x13\x91ä\x1c+ê\U000398d3\x96e\x05µuËB§\U000a956a]\x0cl¿\x0c\x95Ô\x01\x10õ\x04\U000aee49F²\x12\U001030eb9\x19l<9\x8b\U00103596\x1d\U000e2d3dÍ¾PuÝ\x80«|\xa0\x02ýr\x86g\x1f8\x8aÉ\r1y\x8a\U000c738f\x94ö¿\U000e3061è\t%ý\x96È\U000943ac\U0009fbb3°ÜO\U000b9f57ìãV\U0006fb4dÙÿ/\U000c9837ßÔ\x8d]\U0004f2bfÏ3Ø¨ª·\xa0ç\U00058016¤37[ad©\x90é\U000ddda8~\x80\U000a6877\U000ad1f7\x98\U0004184dª\x1a\'ÜÜ8îW\U0004bf61ÉV\x86\U000edafaq{\U000b8772\x8d𮠩\nS4ã\x1aÞ*y\U00091104X\U000d1868\x87\U0008dcafn\x82¥,lB\U00087566º\x86\U000e80a0\U000b4ad1å\x9dé\U000f25da\U0006058b2\x1f6k®ð\U0001bab8\x18\x0b\x9a\\\U000e6c3a:\x97LÌ\x0f\x1er1§\x8dwÐç\x07\x0bLu\U000b7a0d=Ôj\U000c9efe;â\U000bf3cee×¶Þ\U00013df6\x12õÍ褿Ñ\U0008659cãJ\x91²\x0c\x11\x83\x9d>\x0fÏ\x89dò\x81ÓÕû\t\U0003161cÿ»𮤒\U0003e29b\x12\'X\x94àö¤W\x03 Ó½\x85³Á4G\'2\x80\x94l𐿱\x8dÂï¬\x000\x0b:¹\U000c2eb7½7\x13\x81\U00056ede\x13*Ð\U000b5559 \x17\'\x1e·𨨺ü7w³^\x14\U000b8b34´\x01|ÜK\U00082754ù\x8er&Ú\U000c80d2§\'\U00037c7f\U000a937b3\x96轠tw\U000ced34Ü\x872\uecf0`"ÔâÔÿzk\U000a0a20Uùå\U000eac72µÀü t\U000a0adc²A¡\xad>\x15\U000ca121a*\U0003bfac~ÚNû»ÞL½ªÌ\x07\x06䭡\U000cf1f3\U0005edb0U´\U000cd5bd©\x04=Å<F¨cÝ]þQ\x05~àÙ®\U000fcc55^(;\x95\U000b28f1¢¸SÞl\x0e(\U00038b5cà\U0005fb9a³\U000e764fÀñÝê\U000a066cÔÀô\x8fÕN´£U𘐯g\U000ff228¼¼T\x8av(FfÂÝ\x10\U0009faab\U000ba765\x0e\x84\x13\U0010f588\U000fd1d3{Y\x11`\U00076591d\U0009aed5,ÿ¤²\x87\x92\U0001cc39\x9e\x194\\\r¸\x0c«', 'password': ['á©', '\x0e°Wî\U0008d719h']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['á©', '\x0e°Wî\U0008d719h'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003692s
====================================================================================================
2025-09-19 00:01:32 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003732s
====================================================================================================
2025-09-19 00:01:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004023s
====================================================================================================
2025-09-19 00:01:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 26014}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 26014, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 26014}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003503s
====================================================================================================
2025-09-19 00:01:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003668s
====================================================================================================
2025-09-19 00:01:33 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003968s
====================================================================================================
2025-09-19 00:01:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 3701, 'password': 2012874928}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 3701, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 2012874928, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003603s
====================================================================================================
2025-09-19 00:01:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ['\U00048f9dÎ\x13', 'W\U000ca38f\U00073a3a\x19\x15ª«Ù\x92𫽚$', '\x17\x12', 'Õ\U000cd176O\x00\x1e', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00048f9dÎ\x13', 'W\U000ca38f\U00073a3a\x19\x15ª«Ù\x92𫽚$', '\x17\x12', 'Õ\U000cd176O\x00\x1e', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003631s
====================================================================================================
2025-09-19 00:01:34 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['86üÜ"&\U0007fe421', '\x99\x05èë$ó\x9f\U00065777_hvÿ', '\x06Ç\x90{\U001025b8\U000b64e6ôùQÄ𣼋°l³Ç\U0010652dVÑ¦¤*·\U0010f4caË`', '\U00071ca3R', 'ﻧé®\U000490eb', 'é!û', '*s\U000eff2cÁê\x88'], 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['86üÜ"&\U0007fe421', '\x99\x05èë$ó\x9f\U00065777_hvÿ', '\x06Ç\x90{\U001025b8\U000b64e6ôùQÄ𣼋°l³Ç\U0010652dVÑ¦¤*·\U0010f4caË`', '\U00071ca3R', 'ﻧé®\U000490eb', 'é!û', '*s\U000eff2cÁê\x88'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003845s
====================================================================================================
2025-09-19 00:01:35 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ü\x98{\x8dásÚZ¶û\U000e36e6\U00086657ࢿ\xa0/\x93Ýë\x0cø{·Uã\U0010250b\U000a01bb\U000c78d2\x13í>ß\x03K1\x9a\U00015731cû2¦©\U000db44egDß=y/a\U00048910\U00068db7-Þéú\x9d(%\'ª®ၩ)Íá5\xa0ú\U000d2a69\x10\x9bü\x94\U000cae51Ò§\U0004d039®Îa\U000c0808«Ð^\x00\x91]\x96\U000717ccÙ3Ëÿ\U0009612e\x8e\x1e\U0008f00cm\U000bbcb7h\U00097f70\U000bfbafN\U00060eb9ä\U000fff0bAo\x96\x13i¼W\x86Î\x1f3Þ?\U0008c224+\tþ^\U000c9c4b\U000cac0cã\U00082786\x9e\x95Û\U0006d01f|æö7PÜ\x91\U0004c3e0oZ\x07\U0010dcdb\x15ªX\x9f\U000565e5\U000b308aÙT𗆙»𧾉~d\U00096c90¦çTY\x95\U000f75c9Ââ\x02H\x0cD\U000f6d79-\x17³A,\U0007bf8aÜ\x01}\U000e29f3Å77\x90¬\x8b0®CX\x8a\x14ÏOÏ\U0008c316ê\x11ì𣖖\U000f5ffe\x1d\x1a\U0006020b¯²ÛôÓÔª\x12·J\x0c\U0009d0a4oꇢ\U000bb3f3:\x18㈱\U0001a95a\x93\U0009de77t\U000de697î\U000f9833\x83\x9f\U000925b1&ꁔºVp"Úí\x1bÿ=÷y©Î\U000d7539²"`\U00086602^\tø \U0010d56f¹\x99\U00081aa6õ\U0001c2f5÷Ðþ\x84\x12\x1e\x0eß\U000ab22aH\U000eb8cf\x04?_>È\x9e\U000d889b¦Ó\x01öIncU§\U00011b0c\U0005fb62Ù\x0c°\x02\x1céØÀiß\U0006aed0$m\x99¿$\x8a2hä\U000ad8c3L²\U0003b198\U00093a7d\x92ç¥®\U00033884\U0010575a«\U00087abc\x13\\ªú|\U0008aae3\x0eä\U0009be46\U000f4e14M-\U0001ef7a\U00033efe\x95\x19\x9a൶\xad\U000b3bad\x12^KxÌ:ðÍL"\x06\U0007a8d9î~çÄ-:\U000bef04\U0004dccaÎRU¦?\U000c2d4dW\x96\U0006ce48Î\U000cf7d2\x9e=⯾\x93eý\U000f42a5,Îà\U000c71b3¶\x07Ux\U0005fe1cR𤒳e𮭶¬l\\Î\x1e7\U00055d07Û\U0003e03a\U000c47ae\x1aÝ½\U0003f453\x1cð=\x01\xa0\U000d4763Ì:ÆÑ2\\¹ê:\x90\x112ý\x14È¨Ý>¶cÒ\x1f&©-¬Ù·+\U0009ec89U[[+"𧏤\U0008b813\U000a7b97\x816K\U00081be9!«J닺\x14¨õ3❖Ù\U0007ba86¬û¾µÇKá6vÌ\U00077748ó\x13\x9aÚS\x1b¼ö\U000ece7fG>\U000be23a\U000b02d3_\x1c\x8e\xad%ÈîQ\x04\x15\U00101b8ee\U0010d387\x0f²ú¯¤\U000727e9\U000b5f92=\x05ì\U000e3094\U000d882fd\x8b\x82\x9d·4bô\U0001c93b\x10U\U000d9b8e\U000d963b赟äêÜ\x9d÷\x91Ú{í\x08ïd\U000453ab\x12~ùáç=\U000fa29c¦\x01\x10\U000d8883\U000b5fe1.=\U000b4bf5 ï?ÅgÙ¤\U000bd949\x8aß\U0008b6d0ÛÏ\U000f6772H²5¡ÇQ3\U00044030¿þÒP\x86\U0010525a\x7f\U000f40f7n\x86\t\x1f\x7fãv¬j«\x92\x11ë\'Â¿\U000f91b3\ue378Î©\x98ä\x8c³hÊù\x8aW÷\x92\U0001cdb4\x86ô\x06\U000c044aà½û\x80>¾\U000a719dÝ¼Þ\x96\x94yS\U0009577b\U000b0c24\x0bY\U0010c6f6\x88å\x7fÑfº\x99𫨆}î¦\x82ì#,Í\U000154a8\U0008a5f8\x91¾÷\U001085f1ê§ÞÀ\U00011f52ü-\x824CX°[\xa0\x10þK\U000da710¶!\U000ccb32\x1bá\x99º¤\x8c?áÓ\U0004ddeci\U000b6266\xa0ãq/\x9f¨c\x81\U0001fc53ënÂ\x91÷\x91\x98ð\x84î\U000544bd\x0b>\U0003e52e{À²Í\x0f©\x94\x9110\U000b5896\U000cd7b3©èðÌ¾3\x0c\x93$g\x16l\x85\U000c73dc\x8a\U0005c0adØ\U000ee120\U000f2ae0« \U000b54c0%[úôQ¶\x08Ã\x04*\U0003fdd9Â\U0004dd29ó\x8fÍ\x8f\U000ed182𱀗¢\x90!ç\U00049233õqÿ\U000de046Y\U000f1ff3\x07N_ØÒSÃ\x9f\x19\x17Ùð\U000d9e35#Û\x9a\x80YXûû3\x00G%^\U000970a9\x12ð\U0007588fÆ5𩅂®I\U0005e46f\U000b01b5-\U000b1695.§4.7ôc\U00071055\x0e¡c7:\x8f\U00082996\U0004be53\U0007a659²\U00066571g\x1cèÝKÛë\U0007526e\U00060795\U0003abec\x18Y\x14\x98µꆯ¹\x00î\x8b\U000711e9\x96×T6\x04ÜZ\U0009216estõ%¼U^9^\U000cdbf6\U00053f72\U00044e276\x82\x87Æ\x00\U000cc89bñþÉ;5¼ç\U000e35d1²!ò\x9eû\U000c6855º\U000993a9\U000de36b𞸗Øý\U0007b34c\\½l»Ìz!ä9]ñé\U0005a4fb\'.\x85\x94,\U000fd72fu\U0008c7fd«lçræ}ÂUM\x8epµ\x14Ñ~\x1d\x1b`\U000b5d94\x11\x98q2å\x8c\x9d\U00053ae3å¡\U0009e159\x8b§G\U000e1508&PS\U00051ed8\x84R큝ÈO\x8c\x8f\U00090256\U0001c953Ëz\x8f\x84\x98\U0006879aRGr\U0008477bØs\x8dlw\U0002ef6f\x85Õãm*𡋷ðCß¥\x80\U000fd088ø\x13\U00087abd²eOna\xad\U0009e706%\U00035a47·ñÀ$\x91\U000f1397w\x80\x86\U00068dd0´\x9fÞ\U000e3728\U000a12c8Ë\x90c\x95õ¬ã\x1eÛ\x95\U000ed0c7:!\x17\U000641d1\uf4f3Ë\U000b451d+싅Ô¯\x8e\x11È\x90', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004126s
====================================================================================================
2025-09-19 00:01:35 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['', '', '\U00105269\x18½\x8fÛr\U00107100\U000e70c6?\x17', '\x98\x14±', '^Úr \x1c\U000f293e\U0009172c\x0f\n', '}G\U000604d5N', 'Ð=\x97\x96\U000ee8b1Ç©ïV°I\x8d', '5', '¨E', '\U000fdbae±"\U000cf40aòþµ\U00099841\U0006fb0553']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '', '\U00105269\x18½\x8fÛr\U00107100\U000e70c6?\x17', '\x98\x14±', '^Úr \x1c\U000f293e\U0009172c\x0f\n', '}G\U000604d5N', 'Ð=\x97\x96\U000ee8b1Ç©ïV°I\x8d', '5', '¨E', '\U000fdbae±"\U000cf40aòþµ\U00099841\U0006fb0553'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003545s
====================================================================================================
2025-09-19 00:01:35 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003909s
====================================================================================================
2025-09-19 00:01:36 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': 'ùç½\U000971c9ë\U000bbb3c\U000e5832¤u«\U000df30c.\U000b3f28\U000d7d92\U000ef678\x19·\U000a4fedÐð\U000df107((\U0003d002jdëmô2¿\U000137e9·\x06\x9eç9Óba\x0f\x08\U000fb57c\U0008d29d_(\x9a\x98\U0007a45c\U00105e7d{p\U000327b5v\U0003e367\x87ã\x8aÿ"V\x0bqÙ僚ßµa«¾D⅝ç\U000b08e5ñ\x88Êj\U000cc409%gî®\U000421f6(úÓ\x02{\x0cñ\x0ej\xa0\x1ez\U000d3606\U000a8323\U00068223¥\rçz\r@¾dB\U000d5f6cr\U000ac9dd\x9e÷\U000984b4\x84\ny\U000c3f3aÛ\U000429f50N~\x8c´輾l\U0009e724\x89HF𠩍±Å"\U000fbae7§\x0b\U00048140\xa0A\U00047b37\U000f7809î\U0009a75a\U0003cf09Dë]ÌD\x01ù\U000d8e2d\U0006f00a\U000114e4\x83\x1eu\U000bba45p³\x18c¶¾#¼\x1f\x02{2¾<𬚙Ò!\x9aÖ\U0005e316\x83ìFøß\U000b5de4F\x14L¢`&\U000febafáÿ¶\U00080bf2±ñx1õ魙×\x1f\x89É\U000e3bdbó\x80\U0002fe21%ï\U000c68a3Û\x1dÌ\x11R\U000340df¸\U000f2bbf@ùë\x7fq\x9fòO.ôuᵆ\U000a18307\x8dÌ±°è¡\x91\U000eb6cd²\x98\x13ñéóC\x01æ\U000197e1Å3¾𗱍ÄéÖ\x08GÿzåP\x15\U00109faaiüçÉ9xò\U00089a77/\U000d810bW\x8fáuF\U000cdced\U000ac6bcÑ£QP\U000aff41\U000bdf57\x06J\U00091be0\U0003ed35\x9b\x08\U000eda13º\x89j\x01Å\xa0\U0003f422|Z𨯛\U00085f852\x9e\x1a\x87Ñ5Y¨ë\x1d\U000ea8d4È¬2\U000787b31±t\U000f6d3e\x13Y2𤓅Ý\U000f3555\U0008aabc1逑Ûyþ\U000fe0de\U00013965Ù\x9f\x98~\U00098f26\x00¢)n\'\U00054fc3\x10¦Ov\U0009f0f4\nhÝr\x04\x8d\x9a8©Ck酮&I{F煇<\U000a97a9ú\U000a125a1ô#,o\U000bf8d8D\U000bddc2\x9dð.\U00097fd4ÐÌi\U0004430e*ô\x03©®\x8d1d\U000978c21\U00083bffÛä\U0004e48c\U0006c371\U000531caKj\x89\x93áúÛ¡\x9a\x98\x0eÇk´åj\U00098425¹í\xad:ÊÒ÷\x01H\x8eEt<\U000af940sÈ\x11\t\x80\x1a\U0010be19\U00042ea3i{\U000dac6f\x16\x9b\U00078f33慌𰂥wâ\x19¹\U000c7d13Yp\x95yD\x1dÒÛâñ\\a\rS~\U0004810eínÜF\U00072e6eÐ/\x93\U000be608?\x9f/d\x87\U000140c6\x89紘\U000156e7x¥ªfX1,\x86Ò¢\x9ex3¿𥩒¥𑫞aOÄ\x7fN\U000d612c¸\U000ac6b1\U0004de9bÀµ\U00077177¯[ª6\U0010caf1Ñc\x16è\U00056920v\x86\U000f1d8f\U00101431+\U000ac5f1Wd\U000faad7z8\U00085e728b\x9f\U00094168Ø¿S\U000ee52aÀE=wq>MÑÖH\x1d§\x92\x9e·ËU\U000ad441\x95Ão+\x8e\U000cbede«]\U000deeb5«Ñ\U0009440d\x82\U00101dc2\x02ê𣮻m¶4%Ù2Á\x14\x98Á\x90È)Ñ\U0004610c\U000d9304+\x8b\U0008eb90¥Ò𡬖\U000583dfÙ\'\U000ffa9b\x04é\\X0j´\U00011e01MW\x02?sI|Ôd8C\x9c\U00066567%Oh\x8a\x00¾°\x9c\U000789cb\U000e8ed3\x90\x82[2L\x89掠\x8a\x14ï«ÿ\U00068f94WG\U000df865\U0006f036\x07\x19Wîù9CëÔyS\x99\x0c\x9c-À\x10\x7f\x0e·$RV¦\x19𦖴æ\x84\x98Ì\x1bYÑÄ&𣜛em\U00067d13\U000db4eaÓßÂeWꈇîsàÞÌ\U0003639båXá\U00085d9c§¨ûï>h\x9e\U0009bbb9¢99kÜ«ÙÝçÀï\U000f3228Ü\x943\x15\x823=û\x1fùûaÅ\U000f8a51\x90NßÛ\r\U000dc236\x9e\U0004cd5b\x01\xad\U000c9fb8ÄÈ¶\x8bxa\x8dwßµ=\U0007d1a3\U000f5de0\x00\x14Ù~v𬄧«\U000ceb11>¾⪦\U000f3438d½Ì\U00069693À²\x0f À¯\x0c\x17\x87\U000a1e9c¯\U00074a6fµ\x95U@í\x04|ê\U00084bdaÙ\U000b7a96V\U000ab63b\x95(¼ÖÄá\x0b\x01DÁÛ\x9aⴊ\U0009708f\x8az§¦1\U0004904a\r*O\U000194c0¹ïV\U000e4114\x81\x92\x13\x8e-¼\U000fc9323Ù\x15p𒂈\x91N\x862ÛUB\x94·\x94äo¢IP\U0003b7ba\x95\x84\U000df6a0<Î¡ù\U00101829!\x0b4\U00042de5\U00043a46ö\x98\x1bµ»À\x95á¹\x95Ã\x9c\x96/\x18\x99\x97u\x0f\xad\U0003be43\U000c951d^pâ\x19\U000851ee\U0007c4bc\U0008a14a\x9c®\x84N\x91\x14\U000cb662F0\x8f\U000ace7a\U000e0e5e4\U00044e96ÞD;M\x1bÄÜ\x06\U00039a01»oÃ\U000d429dÏ\x9e7àE\U000a5c3f\x8få|}\x98\x9cmÉk\U00056c08\x93ú±\U000bcdb9_ô3\x85,*\U00043690Be7þDÓ©*#ÿ\x80¹\U00092addQ[\'\U000bc473`m·é\x9d\U0004e81b\x1d¦É\x99 ¨5\U0010143b-\U000c0c65½Ì\U0004e755Z¬ÿ\x9d\U000d9178¸S\x9f\x8c\U00047402\x14F0]çtEéÅ𩙎×yÇ)Ì§¸¯:¥XyR»\U00035143×\x87.ª\U0009404d5\x8a\x8a<e3Y4\x0f\tÑ\x0f\x8aå\U0003a1e3v\U000325e9ª\U00079c5f:$¯/]\x17ámñ\x06\U00086192¶\x11¢sg>ô£ò\x9b»S`àâ\U00042b93:°,\x05l2\x95m\x94\U00056fea\x07\x10J\x18¥\x18\U00041257\U0003f5e6\U000db846)ÜP\x00O@\x82Ñ<zr\x9acÌ\x9b\U000ee776«\U000b7e8fG/t\xa0\x82\U000b0144Íè8ÿ\x13\U000a2a29âr÷\rÀ0\U000942b4WÎ\reÃ4#¡¨Ï\U00066981úò¸´\x9f\x1fQ0\x08\x96z\U000881cb\x1ak\U000e1522\U0010697a¨^+êx\U0005cba4\x9f\U0009b0f2𡤋\x99ï\x81X`=\x90ÛÚOí\x94ÁË\x82\U000f35f5-p}O{\x00졘\x88\U0009d25b\x19Ì\x1fB\U000d9374\x80\x18«\U000d1b65\x01\x03\U00035b30\x10\x8b𥽒f\x0e\x93Xz\x8f\U000fe442m\U0004f2f7}\x19À¹\x1dàN\xa0\U0008f929ö\x9a\x86Í𬐂5Cj$M8枌ù\\³*½\U00042765\U00107a0dÇ\U0004b7ceÍ¯Ë\U000f7021?𮔢\U00040fdc\x87\U000fea49´gG_¥R\x02H\x11]\x1a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004147s
====================================================================================================
2025-09-19 00:01:36 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 27122}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 27122, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 27122}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004109s
====================================================================================================
2025-09-19 00:01:36 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004042s
====================================================================================================
2025-09-19 00:01:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\x95ÂWÁgbÄ#\x11\x1d\x05+\xad%1þ©W\U000c92c0Ò;\U000767b7\x04ë\x87¯Pf\u0ef6¨×X_\x18v\x0f·\x95\x0fÎ\x7fÜkîdñ\x18\x96Nÿ\U000f15f1©«l\U00015ee8k\U000abccc\x89ü×@\U0008a492¨Nꕀ\x8e eäã\x1dY¢\x1a9[·\U000b31e8\U000ff616\t\x08\\·\x0b¡ìÎÀã\U000e4170n\x04ý\x8c\U0003fb6f\U000848e1\xa0ñ´3\U000a9797x¼A\U00088954\x18\x87貾\x14ýX¨\U00050fe9Ë>\x05\U000df281\xa0ªö\U0003a17b\x16\U00058bc2¯⛂ß\n\xad6\U00035839w«Ë\x14pÖBqp÷®\U000ee16c©\U00087866Y\U000a0d1dH\U0008b8d5\x0fùM\U0010d04aØ\x86ùÅ\U0010ec01ô\x88)¦Kä\U000f43c1b\U000886f7\x9f?\x19J@\x02í&\x00\x9a<ôÝ{+>ÂÄ\x82𘯩â¤/«\x1cyc\x1f\U000722d9ØcôAaÌÀ\U00015855Ø<I\U000b82b1\x96\x0f\U0001a9c5\x90eFus\r#¡2\x13\x17Õr;\x848\x1fÒ«\U000f1dba\U00086d5e$N\x1c"\x03`6ò\U000e7b1frÇy轷\x84èS1\x8a\x81\x08\U000b5986\x1b \x90|\U0006b3b2Ü\U000a52b8»\U000c2324A·6X\U0003e451\U000c5be0jàÖÐ\x01\U0009907e\x8c$\x9fÈ¯\U0007e0dd¥Èâ\x8f\x8f@P\x11ìåËJýµ?\x82\x97®Ú\x96\U000af441²⾣3z\U0006d923[wô\x0f\xadÏ\x90¹»Ï*\x9b\xadÁ\x0e9Ç¨Ó\x0e¬\x04ïl.ÒQÄ\x8eI\U000d39ed\u17ec\x10\U000b1e6eñ\U000c1d78ࡉ\U0010bb18\x149Ý\x9fº²VØ\x1c-\U0010a3d1𥷉¡𝖐\x08\x13\U00040ce3?Ë\U0008eb38úA\U0007c019Ì*2EÖ\U000158f0\U000bc15aZu\U0003fa80m\U0003509ay\x02Ã°\U0004e6a5\x1cC51gôG\x06m\U000a1adb\U00062bcc[SÝ|\U0009886d\x0e&Ç\U000f7f7d«-\U000774ffX\U000a052aç\U0002f2f3\x00\U000fd383-±鼝¥f@\U000481d1\x80Õ\U0007b63e¶\x9bQò(©\x0b\'ïøn`Í\U0006c895+;¬\x8aç\U0001cdb7Â°³À_\U000db4a2(l\x9e\U0002efd6cL\U0005fd01¾\x1e\x9d°\x032õ¯ìºp\U000789edZ;~몈\U0006b4b4¥µé\x97NjCÀ¿Ò\x8b\xa0\U00063142«k\x06Ü\U0006acc6\U000c1c90\U00081d07X\U0008099fÓ¶Ç´\U000c9caeo\x9dÀÖ¢\U000ac718gÃ\U000e2cf85÷a\x07z¶\x98¾ \U000982a2\U0003a7c8\U00040653ÀiU&²\U0007a056kÎ\U0007f5dd\x08\U00075d4e¯Ï\U00018fb4èB·\x81Á\x16þ\x84\U0007a927Dü\U000ea44b¼¯*\u0a4a$\x8f\x1a=~Îhåy\U00103218|!}¯â\x17\x90p\U0003f76dÁh×\U00080cd6\U000c92f2I\x12þ\x91\U000499a6\x07\U000382eb\x83!a[\U0006a133\x82E8¹\x80\U0006eaa7\x1d\U0010d876¸\U0006255f\U0005a1ea³v;\x9f½\x0c£©ìáZ\x84\U000ac9e5Ô\x98\U000b6391DxÓ\x86~+\x90z\x9d¹\U0008c018a¸\x15Ó\U000cfc0a[bX¿÷zS\x10ýáv\x9e\x07)À£\x8c\x0cGÜ\U000dbbf0/G¨.Fi¬me\U000e2310V\x80_¤\x7fQØððþI\U000dc551±\x1cÊ¾\x8e}\U000cf397\x17Ä\x1dÀ\x19\x9aû¾¡\x92G\x95k;\x87\x1aüØÞJíË\r}𱁧§Ù탹\U000e0017ä\x92D\U0006148a+\x865+f\'N¯6Xä/M5Z\U000a63d0ºÛßZ𭿂iîO\U000520ba¡\x86Fú\U00097b84¨¾aßF\x91æ\U00101577\x94êk¿紹\x9b\U000c114b\U000ebc81%\U000ec1e4\U00066e34!à\x1b\x93+\U0005dc1f\x16Z\x9e\x0c¨l\x18ðüvÿspËd\x9c\U00063f6e\U0004d2b1ð\U0007085a\x07GÂ\U000744e2\x8e\\\x1aÃM\U00107cecÔÉ\U000acb88¶\U0004450f\U000da935Á\U000e580d/\x9a\U00048d54ò\U0007d52c\U00033fe7°ËÝ*M\x07ã\U0009a3d8\x00ò\x94WÐ\x98#1\x08³¶\x8a浇|Í\U0005b43b¹w¡\U0001dd7dX\x91ðÉbnF\x10\U0007e896\n\x9aXÎ\x89P慯ìv\U0010d4bevÿ \'\x08\x1d:Âr¤à\U000ea52b\x0b𪥪ïC´`§ùD{3bwF\x95𢘴»®XëF\x1d\U000c43dc¥Å¼\x044\U000c68e2f\U001042d2ò\U000c06ee\U000d6df4Y\U0004f981*"©È\x07;ig\U0004324ey\r\x86òR;LÏò÷\x92QÉ#Ãä²ª\U0004f3e8\U0010b08a\U00051995üa\x03=jÉ@K\x14èP\U0009b240\U00075b9e¨T\x00\U0007ed5cö\x1fÕû<\x1d»쟨]T\x88¬m\U00079645Ãó-¼{P\x11\U000bb434"\x93´\x90_²ðnX\U000cb93aF³\x15Å¯\x7f(\x90ë¦È)\x94\x98\U0008ccb2M\U00071e1aª0g\x8f\x01g\U0006c3a1Ù\x83N¯9Ko¡÷r\U000796d1\U00095574s\x9a£ç\U000dec72M𬀉:98ð\x83\x9fcnã\U000c22aeÑ\x1f½\\ueæ\x9b𐬫¬(Ð^\U00087366ò\x9fy/X%\x99\U0006e610\x00Ò\U000fcb51ò\U00098863¥#\x86þªEÄ\U000d01e22w\x80\U0009cad4ÐÏ앇3yÞ\U0001f8be\U000b9607Ô¹6÷\U000b0535\x8e\x8e¨吐\x96Õ\U000bbb35\xa0𘎿ùµe\U00090be0Ú\U00080d10\x02?Ð𮧙+à\x12%Î\U000ab7a2\U000e3edc\U00046abd\x02\U000e675f\x02H\x03\xad\U000f9577\x18T6\x19\U00066aae?h\U000de962~\U00035110ð°\x1f/Åº\U000a175aé\U0004582b\U000a7dacé\U0007105eizG\x11Eú\x88\x94´§\x06Çéñ~\x96\x00i©\x03\U0006bf95\x9dnD\U0005784aEÿï〇m\U000670146ó\U0003e316\')\U000f192aÖ𣪮\U00059071]\U0004dc5eD\x82\x130\U000b33ab>¬$\U000378a3OYÊ£\U000ddf0a|\x92B½\U000955d7\U0010a2ec\r\U000d9434\x8fôS\x83\x82\x92N\U00109a24*À\x90ÄM|Õájj¾ø\U000bb6f3ð£\n\U000e811eV®ó\x02>îEò¶LÞ\x0b]P\U000153aa\U000dd24c\x06âÝ\U000b4f30¬Gg\U0010c4f3ßëW¦ú\U00082342\U00048cb8[\x11}ÑïÃ\x92\x1ad:\U000575ad=|°5Ëö\x11\U000ade92\U00052d14Æê\U0005a3a2\U0003b068\x9c\x03k\x91\U001050e0\x98SZ\x16s\x96N±P¶$𘑉E8\x9b¸¼_õ\U000efec6\U000dd9f2SWò,| a\x8a\U00067d65³\x99ÓQ°ûS\U0003692f\U0007baf7\x07堚\x92l\U000815f9\x8e\U0006faea\x90_\x916ß\x97Îº÷°RxN\x89\x86æS\U000bc1cf\U0007390dP\x8dE\x18B\x0b\x9f\x0bSk\x05Èaë8\U000de6bc\U000d8327;{Ç\x0b1r\U000f8755\x93çI\U0010f682É§\U00080174\x1d&+\x80õsú´Ô\x00\x7f\x03êÙæGßPv_\x84å\U0004e614\U000557d7\x00(òI\x06\x9b¸ÄÍ`ÈÁx7½øE\U0006cd90%\U000db75bö\x0f\U0009f828a:🠮Ò5×¯\U000c6abeÔñ¸µ\x9c\x19膟.\U000f7b6bü¼lYÁ\U00102bcd\x90\xa0𠊇hÑ\U0003adc5"𩮯\U000c5e08Çir´\x8b=:\x17H\x9a\U001054a7L\x14\U000ddd1f\x9do\x88𦆚ä\U000e841bæ²蛊úv[ÜÉ\xa0+±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003772s
====================================================================================================
2025-09-19 00:01:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 121627780, 'password': 'ö\U0003e31f¯ã\U0004ceab\x84ôë\x98bJ´yÐ¾ò\U000c01f7XfÉ<R\U000ac0acÔ\x0e\U000a1ae4§XÊê\x93¡Q<Ï¯\x9cË}:Á\xad"\U000a463bW\x0bÛ\x9e\U000dd9e9ßºªò\U0008e058G\x0ecꩳ\U000542f4cÊÉ\x81Ð\x117\x17äJd½ÞÜ5\x9f\U0010b7ce\x95ö\U000e570e𢏮\U0007e9b7?kï𫅋ÅÆÎ\x08𓎦\x07\x91ã\U000abaf6\x81Ñ\U000e9404À"m\x9eôn\U0001f2a8§V\x90-\U0004f0ddùâq{\U000cfce3ÀØ\U0005ddcd¨3\U0001e6c6ä\x02&ý\t$y\U000e9b90É¼¢\U0008eb84ü\U000378bcqO\U00033af6Ë¤Ù£\n\U00086597\U000fb16e\U0008cb5a\U0002ff98ü\U000dae9d¼w唍\U000be7c9c^WïÖ§U¢\x17\U000899db\'²ö\x15a\U000b8d13ùeá\x1cÎ\U0003721b-|¯}\n\x88}ø\x9c\x13Sü\U00083d0a}²æðÇ\x1eÆiGø\x13Í\x1d\U000d4ffblÒ\x8b[u*î\x16£Û㏝T\x9f\x99\U000f236b<¤ç𥛔\U000dabd1p±av\x87\x06]Â*T\x8c蝄+P\U000c8dd2"þ\U0008f9d6Z6Ý¿\x82\U0004c5ebå\x97\x18<þé\U000787a5\U000dfd99𠈟¶맯䋞\x16d&7I\U000d5534ê\x9f\x0cH\x86+\x81ôb¹\x80+\U0006ba1fq¯mÈ\U0010ff4f\x1b§úf^º±\x8f%\x06\x894\x91g°\x85\x0c5e\x9c\U00074291þæç𨃲6Ò]4õô\U0001ade2\nõþ\U0008f8ccè\U0009c0986\U000c0b1fu\x8c\x0c\U000c151c\x91^\U000b3585&5\U00039c2e\x0b\U000453ecæ\x19Ð\U000f1716\x95\U0006597c\x06üä\x17>fåá¯\x87b\x97./\U000141e8\U00045ffc\rô\U000d7f39©ü¹\x9f\U000e5c6drëÒ\x83(\x87\x12Ø\x80°\U000e9590¬ÚfÇ%ó\U00058436ò¾A>\x9c¿\x0e xç\x9d\U00059132P `\x124\U00060476Õ\U000b0315á\U0004c242Kâ\U00034c49×\U00058861\U000bc8bf[\x06\U000760c9õ\x8b\x85\U000f5eb4×\U000b7e12êªÌX\x17ð\x9eÑW\U0001e0dd@\U000cf37c\U000ee207\x15à:$2»\U000f5802Ë\x9eÇ=c\U00012dc9í%ZÅÖø𣬯®\U0004cfe4\U00061261\x88N\U001075e4RÒ,Ù\U000ac4bc\x10LþÓr\U00016cdbn\x1bE\U000cfb8dàM\'\x81og\x16\x0c¸\x00\U000726cd)\U000353d5\U0003cec9*ú\U0003914a\U000d0f1eÍÏú±j𝁝\x11d\U0010ee2bÉ\U000e70e8\U000ab0fd\x13ﾗ/\U00038b3bÝ\U000e106e\x04¢Y\x92L\U0009916b\t\U000f54fd\U0008dd5e\U000dea75\U0004c0da.£\x01àz£\x85a\x80Ég×\U000f9029\x89\U0006e2b6y\U00107172né\U0002f0fdSxÝ- )\U000832d2\\Äç^\U000e276b\U001064fe\x1cÇ\x04ÄI\U00070957Î\U00036ecf&\x94\U0004b571\x13Ù\U0005d3e8\x9f¢\x98\x17èlh½\U00063f3a_us·l<\U000e71fb\x98½\U0006b88dðã\x12\U000eae6c\x1e\U00067fc2\x8f\x8a\U000bafe6\x8d𭰶\x80+\x03(Í\U000c4205¦\t(]Þ°gÌo\x04þ8ðx¾ÊÎl\x87\x02&\U000b5dc2w\U000726a8»ÆÝ\U000935398\x8c\U000703f0^Ã\U0005db95\U000de757Ì \x85\U00064a48i\U00096dc4o\x82)>eêÄ£Ñ\x86«W\x96XKÿ\x87w\U0010eace\x94\x90\x8c\x13àÅ³T\U000918e1\x9cSê\x87𞄅\x16°\U000a01ebµ\x18¾V\U000fcf64\U00035754zë¯N{©/×O\U000c529c×«È¢\U00108a21@ß\U0010dda7¯\x0eÓ\U000be3f25C\x9a6\U00095a82úAkÚwîU7\x86\U000e9a48ÑS5Ñ:t¹@B\x13©Ä\U000aee90¬\x8e_4Z\U000a30cf\x8bGWA:\U00010db5\x7f\x92ÓZ\U00063224%¸õ\x0c粻a\x90\U000de053\U0001479d\'\U00074fbe|\U0010b321¶`\x19\x04;O\U0006b3fc\x87\nmýº\U0006574cxV-È\U000c4374\x92\U000a703a\x97Õ>q\x1d\U000ddcf0ð·´\x98\x9b4è¼æ\U000f2161\x89?㸻«\U0009b2b8±\U000f62d9\U00105b12JWIÍ\xad\x84&\U0004d402ù\x96\U000b4b44*\U0006d69d-*\U000549aaò ì\x97õ®\x8aB\x94\U00037a48úâDád\U0008e6f7íDA\x9câ\U000dc748L\U0008cac2G\U00053449\x16\U000a4568\x1epíSs\U00081be1j\U000624cbÅ\U0010f504\u0a31\U000434fd\U0005bb1d/òL\U000ef06a\U000b18b2D\x8f\U00013db0𮛬\x92\U00102863A\x1b\x04«wúÏ\U000dc4abÖwr\nÆÕ\U00093f4f5¥\U0001bb8aL\x84\x98\U0003a391Ý¨¼Ó±Ýêçý\U00060a8bB¯\U000a8d24\U000ede3aÝ\x1a\x8a\x9c𤳜4Ô¯ßpÛ\x1c9÷\U000ac2e0Üµ\U000f6ebbM0\x0fÏ𡸷³\U0004ef63\x81¨¤ü\x0fô\x96ëk\U0009450eyo\x99d\U0008b75f+Ì\U000d52ac\U000b477bãåàZ&Vÿ\U000925c5v´𢰋\x9d\U00049cec\x86\x01oÛAÜÄ§õÄl\U000ec8fa\x01ö\U00036b6aÔ)·\x8ecª^\U00042edd\U00087e08x𑜣\U000846e5±V9SôÓI\U000502a8\x91\x93ÑJTéà\U0004cf9cÏ\U00069088 X0\U000a9137z\U00068dd7\U000f4538\x98á\U000fcc3b~J¸¡\U000daa12ö\x0c\x16\U00067669`\\\U0008d756jP\x06\U0006b9937\x94pú`ùª\x94±\U000cee42+á=\U00046088°\U000bdcc3û\x9e\U0001fcce\x15Öôñ\x03%r\U00071d50±\x98\x9bd\U0010e751\x0cW\U000ae409v¨Vu\U000fe01b\x00²ÆK\U000a07b9ÁWð\U00049daf2\x00M\x86á\x0eø`\x93\U000e6c96Ó\x9f𣵵\x05\U0008d1e8;ì\t6&𝕠o_¤±³M\x0f±𡑞]_\U0008cdba\x8c\U000cbd05\n\x97¾#.\U00014f1b\'ÁI~³\x18~BÞùA\U000e0454pÀáuÀ\x954\U000ebcc5èÖK\x03F\x92\x9c\x9cF3\U000eccf8¸\x85\x88\x1aÃé\x8d«á\U0003400bÉ\U000d44ebÂû\U0008beeb\x11Ñ¼\U0001db48,\U000ab114þ\x0beSb\x1c\U0001573cr.Ák¹ÆX\x16\x8dÞÀ\x0f\x08v\xa0v\x1c°Om\x0b\U0008ea00º(M?\U000aa70bÁ\r¨𣢄ª\U000eaa40\x0cû³\U000c8050°\U000d0369Ï\U000b30b2\x15þ\U0009474amå\x86p\U000f2c59}$²\x18»\x19êá\x91PÉ\x9c\U000ea238ã𪓗G\U0005fb98¤Ö\U000b19b4Ê\x89B\U0008a580RÅª\x03\x95\U000edd72úÀ\U0005eb3f\U0003e9a7\U0008b322*L\x18ô\x95_g«\U000f50db¦/\x98ÙGs\x99Ä²(\x89𰙭\U0009fdac¥~\x88³\U0006e8beVì\t@ñ\U00056317\n\x9cCN|*Ä"þ\x95\'À\U000bab1f\x8a\U0007e441Á§¹\x87Î¢\U0004dbee}\x8b\U00032edeãöQ°\'),\U0004f8ff@\x0f\U00092ea7×é\U0010d01cG\x11Fï\t¥ñP\x0c\x01\U000c2d6dÁ.÷\x93\x16\\W\U0007b198[·\U000ed241\x13±0f\',ÅÇ\x08\x1c\U0006a0fe\U00092871\U000b093cíþf큏\x80\x1f"\x8d!\x9cô¯ê\U000bdbdeyÅE³\x99蒲\x95©\U00057df5t\x04\U000c7c27,\U0006ceec\U00074cfeùâ\x97É\U0006306e÷\U0010472aSÑ5±ìb|\U00093307\'Ã𰘥õ^\x82.Í\U0004c00e\x88ç»\U000e9daa#\U000f654d\x9a\x96\U000d3790\x94½\x9c\U000ba615¿<\x8e5R¯ø𢇄\U000fb5ad!/\U000fa563\x85SÑØ\x82𤺲¹Â¿\x8d\x1f\x00ø¬bÅÅ«Õ\U000196f4\U000a681f$±ì=\U000cece4{5\U000ae27eX¤\x1c\x97ò\x82D\x9d\x86ØV\U0010fa54,\U00046204\t\x13Þ!%x0ñ¼Ú\x96\U000d068bN肌è2\U000f344b𠩘t\x05)Gd\U00067cf9}\\ZÒz\x01\U0009a99b\x15\x12x«\x8e^qS°\U0006694b\x87\U0008a062Fº\x85r\x9f£Y\U0009e484Ï)\U00060cc7@{û'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 121627780, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004518s
====================================================================================================
2025-09-19 00:01:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x87Ea', 'ë', '&\x81', '\x01\U00061a8eÀ'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x87Ea', 'ë', '&\x81', '\x01\U00061a8eÀ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00426s
====================================================================================================
2025-09-19 00:01:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003881s
====================================================================================================
2025-09-19 00:01:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003836s
====================================================================================================
2025-09-19 00:01:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -60, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -60, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003973s
====================================================================================================
2025-09-19 00:01:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00406s
====================================================================================================
2025-09-19 00:01:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x84\U000f52df\U000593b2\U0009275eôÂt\x0fx^Æxù7\\\U00100a0f\U00094adf\x02k\x0bÄR\x82\x97\x85\x85nVÀ±ÄÍ\U0007dd7fþÑ\U000560e2\x86\x0e\x16\x11]\x86ºiw\x03¤Ëi×E\x9bSó\x96\x15µ\U0004c710¸%j\U00093043sÆ\x1e\x05\U000bb7c7ÙÜ\x12_0Å`\x99\U00098c28?𝋮𩨉R¾ôc\U000e2bcfD)Ík\x16t\U00041f3ap@\U00012ce6\U00063674Å\U000d95d8\U000f4567\U00032d54\U0004a57cH\r\U00037af4\x82úõ\U000b0dbc³ä|\'Ì÷\x1f\U000b2e32ÞRÛ{\U0009abf70E𤑩\x98SçÊgl\'{\U000bf0e3ýÌBLö\U000fd2f4»\U000e6120¿\x07UÁå\U00051e32\U0007b582\x9b\U000d3442w\x1b½É\x10\U00042ce4\x18\x9eí\'Àî´\U000f7561.eÐÞËÃ¢\x13êÄø\x12k\U00055814\x08´q\U00054c0b»\U000ccb79\x19\x1b\x19ñÜvÑ¶P\x07\U00037619\U000ab0da\x15\x99¤ò績4㪜>³ã\U0009ab4bℭ\U000857f4ubX\U0005e2a3\U000c1b32k\U00101082\U000d7795\x96ng\U0003dd93{ÿ\x1bôxF}2\x02\U00037614òI¦î½\U000e6ccc\U00085483\x8fI\x83,;%\x8a*Õ\x8d\x17\U00089d2d²\U000a72c7\x82\U000c666d\x1e\x94\x86Ö°\x0cþ³𨑔ì\x92\U00107a98\x04X]\U0003e8ae\U00056425\xad𬋷\U000f548d\U0008b728\U0004e453\x9f©\x9acõ\x1c\x03\x9cZ\x19\x1dRa\x01\U0010eb89\U0003673d°\U000dab27Åv~â\x98Ð\U0001d382þ\x8dÙz\x17@¤\U00084417½µ\x17Ð$DgºI\U00048ba2\U000b5345\U000ece3a\U00099ebbx,\U000aedb3âÌiʒ\xa0û\xa0\x9b\U00070a44±5\U000f3bb2ÊY\U0010ac9dl¹_áÖkÚT\U0010a822C1ìÎ<\U0009964c1£¼\x8bÖ\x8e\x81¹ù\U000ca33aoQêÉ\U0005a5f2\U000b0970ßIâ\tHs/\U000cb16dì\x1c[åaÍ&\U00100ce58~&\x19±¥%Íz·Á \x952t\U0008abb2@â\x8aM\x80½=\x859\x1c\U00084f39\U000f7e0büÅM\x08\U0007e168\x95\r83×\x87åâ_ý<æ\U000cc9a9ö\x02!𠋈\x92\U000bde52WR\x8búù\U000dce79\n\r\x12º\x1e:lÐ\x1dðÖÚ\U0003e7baGë\U0004f225ËBïÞ\U0003466b<áö\x94«1\x15ÎeüÁS\U0006b46f,\x85\t\x08\U000b12c0ï\U0004707bè*H6\U0007e917]1>$ü\U000d75e5b\U0003e8f6\U00062a8e\x03\U0006499fJ£\x01\x1a\x1b\x11\x0e3¨\U0001c169ÈÓ\x1bö3\x8e\x15\x85\x85éã\U000f60cf\x03Û\U000e3467\U000a20c4ôãE遼\U000c50dc·ç·\U000c96e7\U00106e4f×\x19\x0fé=\U00064e80¬Í\x89¡\x14\U00067ffd_\x18?¨\U00068733<Ã衁sxþ\U0007fb3c~T»\x13\U000f6771·\U000b9d6e¾𐧗>R\U00091abf\U0001be42ô\x92@/ç~\U0008d429\x01J\U000d8f9e\x0f4ìCnUe\x15·𒀗$´\x85\U00076200\U000fd929³\x19Y\\0\U000e8a67^\U0001ab9dã`«\U0008c624-\U000bc37azËìE\U000ca496!(\xadÝ\x1b\U000c82170\U000b6745µ\x9c0\U0004cddf \U00105339Ó®ò°\U0007b76cj\x96\x11pj𢂰s~þ&\U000841ac\x87\x98Rn\x1f2ÜÏ\x8biù𪽡Ã\U000c397f\x9e\U000b5aa1Å¹×ôBciÄ\x077Ññ\U000a1722^|\x8f\x03\U000f61cc\U00015f3bö\x95î嫟W\x0cn, \U000a3169\x1f«\U000d6f3e>\x1e\x8d¹ý\U000d1ed3c÷x\x1eæ\t\x9e\x91\U0007f791CÂ¥\U000874c8>\x1e´𦯐\U000fcd25\x9a3\x05Æ°vQçÑ𥿫𝢷é\xadÆ±Q=>\x05\x9a\U00067b07²\xad\x07b\U000e2512#7!\U000b2738\U0001be50\x90¦𭜇\x93C\x1eù+\U0001986f®\U000959d7J\x99»ÿv\U000aba78\x81ë_84\U00032b0c\U00033327\x03p𮝦w,\U0006c22dãé¡{Íx[\U00099c34\x13\U000e72f4:\U00097694x#|á¬iÀ𩳛\U00014a5bé7\r<\U0003ea0dTÙÿíFëhÀ\U0003dc94g\x0e\U0004f82boáJAµµ\x91\U000dc6c0Ã\U0010f42cÁY\x0cÎ\x94e[ó$\x97Á\x08>h3^\x95Ö<\x13SîÓ\U0003e29aú)\xad¥Qn\U000c8615>§Åò7e»lÂ\t𡳃³?D\U0009df0c\U000e5cb4({𛱹6\U000ff449ßúhÐ\x13©5\U000f7d5aD@\U000bc374\x07ñæ\x1có\x18\x7fÜý&2Â\n\'à\x90\x1f\x00\U0009ae29§\U000f8920\U000cbc8b\U000a1970@\U0003ba26©"=kä~k¦\U00036dc7Ù\x1eï»u\x08ያµ\U00039eea\U0007966e¶Ñ\U00090e81ÐaÅÆí\x07Ù\x8aµ¤EyZ®(î\x81\U0009b0d7\x8a\U000399e6$I\U000552619\x9ey{\U000da1977\x81\U0006d59d«\x9d\x8avã\U00036f72/¾þ³o\xa0\U00061ee0𐌝:\U00039e34L`\x96\U000ea18b\U00089ed5\x07L\U000ca01e×\U000d8b5bl\x90窔6\U0008cf7e\x8aÄÿ\x9aÌ\U00061b29±\U000a1a3dá\tAR¥\x13¶YAc¹\x00\U0010b4cfÊdÕ0Ä\x9b]¢\x03x©\U000e4673\x9dñL\x80\x96fY鞐×ÞYé\U000c8f61\U00073263\U00061f02\U000c7545R9\x0f"A\x19\x98\U000fdb44UQ¶`Y,lç\x13>]\U000ea702\U00082974\U000ef32a\U0001024f\na\x99\x91îþ¡\x9a¡\x1eç\U00066cd3\x8b³\x14\x1dmt£<\x96\U0010b556\x96¯\U000f5817ÆG\x9clÉ\rçA\x0eÉ\x14Ù\x9aåö힇\U00092e12¸ÒXÄ_Y\U0007d024¼§¼\U0005f02d\x00r\x02r8\U0006dec1+)\x12µ$\U0009fa50Î\x9f', 'password': 16616}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 16616, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003726s
====================================================================================================
2025-09-19 00:01:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x05', '¾Í', '\U00108e9e+Òî', 'Î稢}Ï²', '\U000a2a44', 'ö\x0c', '?ùgÒ\U0008b78e\U0009ef08\x1aeï\x9c\U0007f4e4\x026×R3\x19', '\U00108c0f\x98à¨4媑\x81®ëf', 'rÌ', '', 'x\x16\U000a1383Õ\U0008c150ù\U0007ae6a`\n\U000f6925\x0cè[\x94¿\x9fØf\x99×\U000af5fe\U0002f019Ì\U00104e94ñõ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x05', '¾Í', '\U00108e9e+Òî', 'Î稢}Ï²', '\U000a2a44', 'ö\x0c', '?ùgÒ\U0008b78e\U0009ef08\x1aeï\x9c\U0007f4e4\x026×R3\x19', '\U00108c0f\x98à¨4媑\x81®ëf', 'rÌ', '', 'x\x16\U000a1383Õ\U0008c150ù\U0007ae6a`\n\U000f6925\x0cè[\x94¿\x9fØf\x99×\U000af5fe\U0002f019Ì\U00104e94ñõ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['\x05', '¾Í', '\U00108e9e+Òî', 'Î稢}Ï²', '\U000a2a44', 'ö\x0c', '?ùgÒ\U0008b78e\U0009ef08\x1aeï\x9c\U0007f4e4\x026×R3\x19', '\U00108c0f\x98à¨4媑\x81®ëf', 'rÌ', '', 'x\x16\U000a1383Õ\U0008c150ù\U0007ae6a`\n\U000f6925\x0cè[\x94¿\x9fØf\x99×\U000af5fe\U0002f019Ì\U00104e94ñõ']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004171s
====================================================================================================
2025-09-19 00:01:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003892s
====================================================================================================
2025-09-19 00:01:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004257s
====================================================================================================
2025-09-19 00:01:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': '9:}\x90𘧪\x84`*Ð\U0009d6d2èºp\U00078a58\U000c3a2eÃ÷èH\x1bgãXÌ¡&?ª4\U0006f866÷\x12þJÚ\x97-\U00019df5\x12\x8d:Åô\U000de05bF²\U000fa4dc¦cv\U000f98a0\x95H,~Î·\x89m\x84\\WÅ\U00096637«H\x07\x96§~#N®eÒ\x9bC\x0b\x87Å\x8eÓï\x94b\U00074712õ_\U0004b973U\U00095f40¯m\U000947b5ºû/\U000dfd66hî.Z£Ð+§Ñ\x832¨\U0001e8d7\U000ad9eaÚ\\\x99Ó\U0010bf3b𘒿K+f=\\<\x80\U00084e2a\x88\x80K<\x16B³\U000fac79àá\x9f\x8c\x01)k\U0003212f坅:\x03¾\U000e84d7\U000c6efeµa\U000efe5a\x90\U0007a77e\x7fÒ\U000720ceä\x7fâôÚN\x1dÀ\x06o\U000bd52e6äÐ$u\x11«dÈ\U000cad75³\U0007432bÒ\x8aé\x8e×\x13\x83£\U00039224\U00069f648í*!𗝎\U00093f42"¡⨆]\U0004909e|`ÈuU\x01ë:Ô$YÅÜ\x87\U000bdc90W\U000c1f31ü°UR\U0005255c\U00050a8c\xadT\U000dcb16\U0010eed57°à¼ñ09s\x19\x82u\x04\'Æ³Û\U0004a323\x8dÍ¡³\U00096afe\x8f2ik`|Î\U001033c3ê㯗Ìdï\x8bæ\U00082d1d\x13\x96È\x0e\x15/!_Ð\U000c5caeµ\x90\U000e6486.µâ\x802\x80\U000a7601咈\U0007864f\U000b51a7*yv·h/:>4h¾<Åg\U000eb4f2Ø\x05\x10𰆊\U000d11c1ô\x9a\'\x14Â²𣚹;ì1\U0009cb90¤ër\U000f5fa3Ho\U000bdbc2`\x03ø°¿ËJ\x96½\x86\U000f70b5\U001051abâ4\rv£È@ᑫ\U0006e42b\x08Ã\x82\U000ebad43á@¢s\x87\U00052478AÓsÆ\x9e\x15$õ\U0008f6387\n\x96l\U000aac62Çjä\n:\x1dávíq\U0010e38a\U0009bdfd\x9c7\U0010af6a\x8e]{ê\x1dg\n\x8f·©\x01:\U0006d006û\x85¢v]F4\x88v\U000d4dc0\x9d\U000bfa01\x9b:V\U00016ba8¨·\U000db4f9<È\x14\x93)£ue~l»KÜ`Æ\U000fd1c5 Î\x06\U000d7640ù\x1d\U0006f322\U0008d754¹aSòvt\x92\U00104d19ß\x9a\x1bz\x8cê\U000e3446\U0010c81dSÓk\U000b833bæjÄ¬\x1c\x0fT\U000bf307£\x19\x9c¯¸6ÕâÉ\x8f\x1a\U000149c0\x11\x83n+øº¥\xa0q\U000cadfeY\U00055632Ý\U0009a26eýøã/\U00065fb8R\U000caccd\x15õ\x18°p\x1d𰝻tu\x9ek\x16Xö\x87´á©ï¾\U000818b0\U00032269Ýh״TãÚ³å\x8aÎ\x89\U0009f9d1\U0004ed39\x99\x83rÊ\xa0²oEDÙ\x14§P\x83Y\U000bf5d7\U000fffc2çB¼Q¤\U00107668\U00047581\x88ö\U0006baa9\x8a\x8fBÖ\U0005b8c2æâ\x9b¹\x87Ë\U000e4b5e\x94¾\x83\xadÈ6\x94WÙ\U0006329eáq\x97Ä\n¡ø}Û=ûÊ\U000125e8K^Ë\U000456e6$\n9V6F~ê4\x05lzúÒ\x11T\x94d©£𗅠Æª$¨\x90\U000bf190@\xad\U000997cfÂ%\x06\U0006036f\x9fÇ\x92\U00051c00\U000582b9Bã¥ÌßoÑ\x85¹\U000c8b5b\x9bÄÛ\U00082f8d\x11i\U000df1fc#»Ò\x04ÿ\U000b7979\x88\xad\U00064f5f´\U000f24f1\U00100a14^\U0009a59b¢𓌶ªË\x06\x18\x08F𩸺\x9bQ³\x15æ\U000759abÏ1Ö\x0c\x08f&bû÷Ëª𝝱aÜè\U0006b3dc\x9e\U000d2835𬸎\U000fe70fæ\U0009d56e\U000ab6fe\x9b\rð\r\x0ft\U000ade61¬Öa{Sp\x9fùºÒ\xad\x8ahU¾\x8a\x9fÄàá\U000d2bfaÁà\x08\x840㏓ñ\x8bÒu\U00070210\x80\U00102518[¦\U0003a82f\x1aj\U001046e7M\x06\x14üi\x9a\U00037228ÕÒ\x93\x1b\U0009399d,?m\x9bç®5ÊCµ𑀱]\x13\U00097e4f\U00037199Á\U000981c1·&çí\U000dcc7f®[>?#ㅰ}\U00019b81\U001026b9𩕓hÈY\U00041f8c\x95_\x08"\U00082c13µbÔ\U000c50ae\U0006682b\U000870a5\U000ba560¥¿^u𗔒\x08.\x9c\x12=\x10º\U00055300\U0008403d\U00054ee9\xad\U000f239f\x88ÓHVï:妥\x11p±*\U0001a9db[Ùs\x96ýû[\U00037c1ekX\x0eԺã\U00045cf3ꖑB\x92oj\U0004c460\x0fgÉ\U000fd848.\x8a\U00049ab7 \U000b2b59\x8d\U000dd77bà·î\U0008d462\x1fA\x95\x1e[ö\U00061a71®\x18[à\x94%Ñ\x84,±¸ÎÝ\U0007e834Ë°È\U00040bb7\U000c546ab2\U000c604eñ\x83ô-\x173Õ\x00𭭧\x0f¶uûqh\x1b%e\U0008debf0oS&¼¦\x1a¶÷2\x9a~\U000b5734𛇙¯©õ«:\x08²ÚlX\U0003a8feõðÅY\U000a235652\x1eA𣍧ÝÁÅ×\x91\x01«Å\U0009060eý\x15Sù\n\U0010ee8d\x02\x93|\U00095cb6\x94\u1979\U0009ce67##\U00105f6c\x13¨\U000e114aí勇êRÝ\xadÏy0\U000fc4bb=\x95m秴æ𭟯\x9fû6\U00037175\U0003dca0\U0004524f°\U00044630æ\x8aJø\U00080332çU\xadHÔs\x86©"2ÆÌÃoQ\x99´Y¨\U00058f85T䖮H\U000eef15\x82\U000e4877\x11):¾\U000d9189\U000a2047\U000645e2Iß6\x08\U0007009a´Ü5\U000bdea2k*R\U0006f0a4\x03§\x8d\x90\U00086857ôf\x9d\U0005c05b\U00058ec7\U000411c6¦RQ"Ö>_\U000fce92X+oc¦Ý&\U000eed44ö¾óýÈ㛨\x14ÚñÇ±Îéxw\x89\x87Q\x10^¥>\x85ã4\x87\U00036dd2®2dúé½\U000b5b52\U000e2348\x16ê\U000ae875fà\x86D9~Pc¶0ëG\U000facc7\U000640f2\x9e²å\x83\U000ace68¸\x82m\U00067068bJ\U00014251E/\U000bcb908\x00J\U000490e9\U0005e9a4\x15Öé·¸𤔽âJÏöQy𐰟\U0001e383Ä\U0007614ew\x95\xad;è<\x8bë¸°¸m\x04EFZ8\tÕHaNÿáýÍ\x0b\U000ebba2æïr\x83n³\x1bÿ\U000943a2\U0006d54a3\x13ÏÇ\x04\x88ärR[\x8eôZêD\x84\U0010128e\U000c250d\tê\x85\x9dÁ𦌎®/c\U000f628e\x08p«¦3\U001055fdóY³û\x19cì\U0001c133\x9b𨸠ø\x12¨Ô¹{7\x08妉\x9d\U001033e1D\xadW\x00ÿçZ7íL\x11È\x17\x18¶\x0bßD÷S\U000f008f¸\x93\U000a67e6ç\x92T¹AOØ?\x8f|¬ë'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003882s
====================================================================================================
2025-09-19 00:01:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'E\U00012ea9ãy»\xa0\x18\U000ccc8cÚª&"\U000a3aa4Ô\x9d\x1f\U0006efc8¦\U0003c737â"\U00095e3f\x01°ð\x8cT\x14ï©¿gûEË¶\U0006e636\x1c\x8c\U000da069°Þ\x04}H^+\rÊèµ8×\x10<Ç1I>acH\U000ab359Ì¥\U0007930f\x85µå¶\U000cfc3a5k¦¥!\x9do\U000407eb\x9e\x85\x82\x94\U0007d5ae\U00071dbd¯ë\x1f\x8aä(Mï\n\x06»3\U0004ce24\x87\x1c\x80@\x9b{ãÌ9}î\x18\x80\U00058617\x9b0Ë\x0eo\x1fv\x87Ã\U00079f8e/®\U000dac86FGöÓ\U000e873fz\U00050dc5\U000fbae9r痂\U0009d226\x9f\U000547eeS\x84\x7fZà\U000e6dc5ñ2\x19_\x8bÓ\x92\x8a\x8eç\U0004afb5´\x88Ê\x89+ä\x88]søâ\x99\'|¬£\U0001e997/\U000ce6b4ì\U000b86dbD¤\x06,\U000e27b4!\U000cd599𫬛o\U0001ab16Dº𘔷\U000c53d1ñ\x90\U000dd0b7\x07Ã\U0009ee24\x9e·¯±P\x0cï\x15\U000e96501RÛ`îfs\x83Ä\x90𬎅Ë\x81¬\U000a1df0\x07\x90\U00056666Ðço°\x9d\U000153f6¿c\U0007f3f6v\x84\x087ÆÕ\x8d\x92\U00044ee7ú\x90Íç\U000ce73f¢Õ\x8e\U000a83ee\x0ex÷ùÜÁRà#\U00052f3c\U000d90d0o¢W¦ý&\U000b699c\x01\ued47Ð\U0005432b,r\U000bef41\U000a0417\U00085d79æCL\x06\U0008f3e1\U000fa876\U00097bf8\U000d3e93luR\U00049e3aÿ\U000dc461ã磠\x0fí\x87Ü\x14X{\U00033b6d2}m7|Ã\x1e\x02\x14\U000dbed1OJä\U000eebc4æjq¥\x9fëb\U000f1d60ç\U0006ad0c\x12\U0009a5854S\x9cèÿ㏦@Ê¿Þ(òðuÓ£è\U0009ea78 S\U0007608f\x90\x7fTÜÑ\uf8f5Ø\rå\U000fa231$O\x94\U00097958µ\x987\x11\x9a뜧\U00057430o\U00097968¤J\x13(¬\x0cbPM\x17\U00098fccôs÷\U000fabfbG\U00080d67º\x9a\U0008771f\x10\n+`\U000da094\x1a£v3Yý5ÒXaÒ\x9f\x9c\U0008dd51ç\U00066b2f,RËÞ\U000b3b10^\U00074e10\x8bñ¥q\x92\x19\x8cq\x921\U00081ca7䒟\U000fcc43Rp¢\x05\U00097391Nz\U00068a92\xad\x06+I\U000d348ce\x1aáf\U00057120\U000558ac<U\x01j𫦙¶\x97\U000aafdc/ñG;\U0006e885\x9b\U0009fe54\U000ce9aaePxl\x16*X\U00064495-r\x0f¶\x0e\U000b140eE°𮡼\U0006985d\x85\x03Ã\U00077f62\x121Kñ\U00016788N\x9d\x8f\x8e\x9f\U0010ea86Ä\x1aª\U000a2b07ïì\U000e1d82®PG\x08½Ê\x88,G\x057^\x96@\U0002fbcf\U0002f1a9\x10\U000ac409\U000ab575dÂ\x85M\U000b3760þb\x00\x84Fávj\U000f5ee2\U0008a3a2¡ê\U000d75a4ò\x1aÝ\U00096562P\U000cc466e\x9e¨\U0004429c𩣾6.Z𢀥\U000b9015`\U000cc93a\x86À*®\x83Ñ\t\U0010d329í}\x1a\U00105071🃂\U0003f369\x12Ó嶁\U0010ec78Ë°h¯x\x0e\x96\U000aa54b𥾲\x0c<\U000e5ba5-壙\x1f×\U000ee5db\U0006acbbÓ/\U0009ddcdäg\x93\x03a\x9f\x16SÔ`\x87x\x90\U000be9db\U0001d3ec\U00051313\x83Míëª9\x0b\U000437b2©]MÙ\x01\U00072c66ë\x9c\x96ÒZåàÇ\x01£\x1a9\'-\U000e0d5a¦°\x00\t¾B²«4\U0004449d\x93\U00109055\U000a69d2\x93P\x82𠌜¸¾a\x99oÏC\x9aÂgê·\U00098b81\x9c\x9a\U000df107D0>\x18·\x17õ䍹ÌÁ\U000f6751*𥈂z\\N\U000bffde\x18¾Ý\x89\x04\U0001e14aª¨ñéUæÎÙ\U000e4eb2ÝµM1¹\x8b$Ð\x1f\r¦\U000d8dee6Sÿ𦖾§+yÏ}wh\x06; \x88\x13Ñã\x90ﵡXýt\U000ce4b8\U000f3aae|c\x10%\x90å¶QÀS<O\x05\n\x12Ê\x91𩓨öò¢\x0c\U000e9f42\U000f3ab0-\U000d79b4Ã\u18fbß>\x01áq\x0eâZà\x0e𫃟\x14É瀲\x08/S\U00049adeµ\x81é2\x94\x8d\U00054acbÔlM\x99\x8ck`/\x91¥mØÑ\x9bìÞ\x03n>\x1fÇ3&f4+g,(¨\x8aÕåÜ£þUbÔ1\U00014874m\x8f\xa0\U000887c5\U00078482\U00033ba4\\_\x9a]Ö6?;\U0005db70\U0001a000\x1c\U000ab85b9\x10\x86\x1eJ\x90¤\x1dP}\U0009a817\x96k¾ý£1\U00044555\x1fþ𗾠xU;Å\U000162541y1SÅ\x1aÿÉO2w.Þôë\x83Ç(r!X\x1b\x13OÃ_\x9c:\U00085cf6\x1cî\U000f8ad6E꼐±¯°Á?¤ã0岫à\x8bÍ\x9a\x84\x89«\x0e\U00090979ÁÔ\x02\x80\x001\x8a©\x178\U0008f5d6¨¥\U000c8a2dòlëñk\U00057c2fN\x9deµªqB\U0009b2e7N6\U0003bd6b{þꍾ´\x16¦\x9aÛ麴\U000e792co𗼣,Ä8{ø³BF\x9f\x8fo\U00042313¬h\x93Ç😨\U000ae038H¸\'ð\U0004e680\U0005d7c6\x06Â-\x18Ê½\x87\x85\x12]ô\x8f\U000f626f\U00038aac\U000bf6bapéÙOÀ\x8d𥣥\x14\U0008635eB\U000e466av,', 'password': 19002}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 19002, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003945s
====================================================================================================
2025-09-19 00:01:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U0004b54a\U00040cc9\U000d5e48\x86¹ñ¨±Ô\x86𥱑\U00038d2dG\U000c94e1^+£ÜLY\U0004c5bd\x85y\U0005b92c𤒑\U00076402\x1b¯\U000b3d19#\U0006e124MNÉÏ\U00058108C\U000bab55¾õ×\x9f\x19\x94%\x8f\x13T\x92±\U00047661\U00014e8eûWDý\x0c\x17\U0005f652H\x05¼L\'-·\U0005f00dã\U000e1c00\x17LÍ\x8dtk\U0008c274¸\x10\U000b675aw;\x1e\U000cfcd6PßvÚk\x1dä\U000c5919\'s¤ns\x1e"\x19%\x01Y¢\x85\x85cT>\xa0ü\U0005cd60\U0009bca3\x14\x12\U000db80f\x8c\x1dk®.\x0fê\U000e9731â\x01·\x8afð\U0009ea55ÿ\x85\U000f152cìÿÔ\x16\U000adc23\x1a`\U000bebd9]¤\x83à\x9aNî\x84ZÇ\x8c\x84JAî\x93yJ\x90\x92½\x9c`sNé\x95Gk\U001034f2·.\U00102b96½GÃÖ\x9aX\U0008afcb\xad9\x80\x88\U0010c7f21\U000672d29O\U00059324Ç³T[\x9cZó\x857\x91MXî¢%\x94Æ쯛\U000c16ca\x1eñ\x1epþa\x85}谶\x07HÒE\x9a\U000e1f123\U000f1862ÒòÈÒyJ&\x01x²0VÉ÷ò\x96ºow\x02âï\x89\\þ\x19\U001057f4D\x00\U0004ff9a\x90콴\U000576daUÌâ\U000df1c7\U000b39f8I&Û\x9c\x14úà\x07y\U000fee53\U000d4cfaFGå\x94è¬]ÞPï\U0006eb8e\U0010ec664\x08\x99UÍd\x05\x153Æ\x0cg¢\U00069c1b\U00087dacÓ\U000c0654\U00090172dÆ&EÑÅ\x12ü¦M\U000f8736Ð\U0001c69dè<\x08P\x91\n¶\x89\t\U00040cc2\U000df9f5Õ\x15¢È\x01F Xà¾\U0004db0e\U0002f3b9\xadv\x8c\x0b}²\U000db03b\U001031dd\x82ðÌ\x8dð\U0003dd74å\U0010a694Mª\U0005847c\U000e8f65\x87\x99\x84\U0006362f\nûÎSª¿öðÑH´Qès8\x1d{\x8bëå\tT\x84ÐåíÀwþ\x98íÑ-4\x19P\x88\x88ü@\U00080753ß\x9e ÖÝ\x89\x90\x8då\x08Õ\U0005c575\U000ef309þ\x02¥³ÞQ\x90¨\U0008a6f4Ù\x84\x83ª\x02¥ùÇ\xa05\U0005f98d\U000199b6o\x05\U0004d96e\x0f¯EbZ\U0006f0a0±\U000c339cËé\U000fac2f|âÙ#5à\U000e2691\U000eafcf3\r\U000cd037\U000e7088ýýCý\U00035a917)Û𞥔\x8d"\U0006d86f;¼\x11\U000b33f7Å½{¬çð\U000fc550\U00085f8aÊå\x19²¹-m\U0010106d÷\U000a578f\x9f\x86\U000cadf3\x13\x84\U00019a50É\U000681fao5\x8b6\x95ú×\x80×o\x8eH\U000352f6vTZzÉö\x04\x8b\U000d4077\x98\x97\U00099fd4Â®{Bs\x04\U0003ff2b\x01Ó\x8d\U000371bdã®Mòû¹ԍ\U0004b7e1\U000b5d97ÿ.:頋*´º¬\x1d\x06bB\U000accfcä\x04R u¯éÄ°\U000bf8d6\U000dc154\x80\\\xa0\x10\U000e8536¿ð𨵑\x88hE\x00Å\x8c\x8f}\x15\x83\U000a3535³Õ\x8cµv\U00107b38\x9f6\U000afecf\x15-\'¿Rü"\U00012db6\U0009be41ºkÿq4\U001015b9Í)\U00104b8eé\x9d¥k\x00\x11\U0008d08f\x13\U00086944\x18\x1dã.\x08\x82é+\U000e3099³\U000fa0e2»ö\U000aab4fÖ&Vü\x86\x10ÈG𠞟c£õ\x9c\U0007e2f36¤ÿ\x0bå[JS𤉽2ª,b3\x80$\U000bae29J6\r\x16\xad´\x8e?\U000a89bb3\U000b2659Ì\U00065f4bjy\U00090dc4\x07<¥\U000129c4\'7\x19\x8a[\U00041e4e\x14½Ïºk\U0003ad35\U000bf831\U000b9cf2õ^?¹g\U000f2b14\U00047bd1`lÆ¿o\U000fddb2\x9f´¾Æ\U000eb0acõné\x85ð\x92»Ú¢Ép0\U0001e067\U000df79a\U000ccb77ãvôBÙ*\U00011ce3²¹\U000e6b65\x9b\x1a\x9d9\x9aæO雦@i\x86\x07/)\t*\x11\x94j\x83Þ\x8c\U0005c7ca\x90J\x97\x11(𡇚\x0cOØ~MA#Ë®l\tÈ\x97E\x86\U000c0e58N¤_}-\U00106408\U00099dd6\U0008339d\U00042f4fôÃ\U000a5114¶\'¢#¿}\x80\x05\U000758092häûÇ&¬\U000b61d7«@¢𰞣ú~\U000156cd\U000c0a83 g\x93\U0004a31fº\x1f=QàÆÛ¡ü)\U000cf681\x08l\x92\xa0\x15H\U000a1c95\U000b7d65\U000b5d14i\x82Í\U000e0f1eòý®b\x0f𐪙Ø\x1e\x8d泿\x98\U00068572©\U000198a1d\x01ï\U000c64da\x80\r\U000486ee\\\r0~\U000d7c1d\x8e2\U0003787fꆤ\x98k\x81F¬|²\U00080e43\U000698e7GS÷~OR\x88¯\U0009f430{铼v\U000f7c51\x80ÃhÒÅÏ{-\U000f93dfP\U0001579e\U00065776ài²ý«Ó\x15Å𦍖\x81\x9c\x97\x17\U0001c430c\'Ø\U000958f5\U000e9d44ôC\U0003a9d8¯\x84X\x00ói𫔿Á\x1aÿ\U000395afq-\U00106627¢¶\U000a1dfdp:ù\x93ú\U000452a7Ôù\x1d\x01+Ë·<\U00086901\x16Àß¢©\x19,\U000aa2acs£\x8d\x8f\x8cn\x84ó\U0008b3a7ïö\U000ad09eMq\\~¤%\U00046e89\U00046e33-\x10\U000d1956\x10n\U0003c341\U000a3b44Þ𘈕\x99h\x1f\x1bÙ\x15\U0007912eX·\x01Ù\x8f\x90©Iè\x1f\x80%¹\U0008209aïG+n°%@Å\U000d15b5\U000f28ea_ßr\x0fHó\x7fl\U00034df2Úw9e¨Ὰ\U0010cfb5[DîÇ\xa0\x9cÝPq\x85\U0002f699\U0009fbf8\U0004e53fìëF4\x9a&5fMR\x87?#©À,\U0007de49¾\U0010a216\U00105b37\U000ff926\U00046990\x85\x97\xa0a÷\x80.3ªO\U0004196d\U00039e36Óá\U00066c0f5P:±\x8bPËÆY\U000d96cd\x16ù¡TÇ1Ø\U00082688\x9f\U00085e1fAÁ\x1c\x9dH\x90Ì', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004278s
====================================================================================================
2025-09-19 00:01:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ÔÖÆ(𱋘\U000812a4Ðå\U00052e48±\rÏ\U000e7169\x82\U0010a0e5jp\x0cèÇî\t$õ}38®¡%§\r\x0fù¼\x89ûaÁs,cb霓\U0005e7a3\x80\x9aäÓ𪪬艅êE\rÀ\U000b5974\U00031af3?Q\x19\x87©zò\U000bb1e5ä+\x13\x9d`\x05\x9aÃ𨑾Ð\x89G\x14\U0004a732L÷2°¦\x89S\x8d½Îqïk\x1an(\x8b\U0001aa29\x90\x9eÈ\U00044217&\U000b3bcd\U000bbeb18\x9c\x0f¿Ò\U000ce542\U0006de5eå\x9d^ÀýY\x80𖭓Ýîô\x81B`^9\U00066c32)ís\x8ds\x1e«ä³\x8cí·j°î\U000b3210\x1cÎíó\x84\U0008c150Æ\x88\x81¾\U000f1858|ö\n\U00062868\x8bü\x15\x8fí\U000ed7e6*\x13\x9dJ9\nwP\x88Å8\U000ecca0\x07\U000440bd\U0010511fm#Í\x99RÂÏqe\U000a87b8;ùx\x9c\'ý\x1ag3\x1a\U000d457fDÒ\U000319225\x97\x95\x93\U000f1b76\U0008e7fe÷ÄmÈ\U00091840\x13ýïcÊÈ\U0007cec3o\U0009df64\x99Z\x11\x9d\x95fÓ\U00057346\U00097880ip\x9bGoÆ¿\U000eb53d]𡆀\U000ddf97d¤càk\x86XÉ6ÍÉ\U000c7dc4\U0010d0c3M×MG\U00096054nJÞ÷\x92RF\U0001cc36\x95È\x9eRÚO\x0b\U0008a2e4\x1aßRCjA\x1d\U0003c928ý6\x0b{\x9eµÌÀ\x969u\x99\U00038096\x1cS\x088ûÖî\U0006ea45\U0003fd62\U00045ef3\U000f1c62\x08m*\x83Z®\U0003f187;/\x1e\U0008355a\x9c𘍦0\'\x861y\U000b3622\U000b4e67C!`DÝ\x06\x84í®ÿüè$\U00084fe6ì\U000ccf0e\U000802eaÌæõ°\U000f5936\U000b0c19\U000535f3<ÆEZ¶§\U00100e44`o_b\U0010c0c9p𨰧\U000a6bda·Ü\x02\x7f\U000aa02ax\U0009b4e4:\x02\x886\xa0\x1d\U00019cb9H𬹶𰜙ó\tý0|\x1f\x1cî-\x81©ù\U000f72e9zT¾+\x9d^;¹\x1d\U000c10a7ü9â<ÂÛº£\U0007dd98\x9fÙ\x08\U000e448eT²Q1\x98Ý"z\U0007a977\x03\x92Nr\U00055842\U0003d317à\x94·\U00072121·Õf\U0008f32e\x96\x953\U00034c60(0\U000825c9\U000bcaba¶¤"J\U000f5dde\U0008798b𧻧\x1aF?>\U0003584aq\U00095428a3Õ312\U0004ff5d*\U00048112B\U000cff80XÑd[î¤Ï\x15Ý\U00072fbbTl\U000746fb\x1bß|\x12ÓHç\x1eÏI\x11Ø\U000b140eløÐRÊkd%\x11Ð&u\x82è\U0004491b¾\U000b72df\x8a½Ø¢³\U000f3e39¥k\U000a9fb1?°L\x8c\U0003a3fci\x1d\U0005a53eü¡þë\U000a5170º\x8b\x8cs\U0005ec48×U\x85Æ\U0005b777ê\x16UÅ\x92¶v\U0009314f\U000b03a1\x18𐅽 I¯\U000f2e5f¯\x12\x96\U000e313c\U001049a3h!7S\U0008bc02f\U000edf32\U00108134\x8eíµ\U000415d3é\x03¤\x15Ë\U000aa015\x90\U000509e6éê\U00102841\U0010b661µ\x18%í\U0007b451\U00061976\U0007fa41Ô\U000f622f±\x86®\x9b\U000d28d6\x07µ\x9cû⊍"\t£õ\x8f±\x80Ù\nYSÅ\x07¯äg\U000156bc\n\x02P\U00015ded\U00076326\x0bÑ\uf8b1²9Á\U00095136õW5\U0006d776ã;\U000fefdd\x14¢\U000d8b730þB>Vw\U0004facf\r\U000ae2b1\x90Q±\rE\U000e9cd7\U00033c19]\x880Hv\U000e468dó\U000e5853\x93e\x15x|¬\U000fea2bf³w«\x876T\U000af8f7î2\'\\\x14)\x8cÏÉ\x84LÏrÖ\x85o\'ëØ$\U000461f4j¾\x01\U000fc970äSg\U00073681è\U0001b60d\x9d\U0001ab69\U00061e04\x9a\x10\x93+\U0009c42cA\x92\U000b1429\U000b959a¾\U00067eca\U00076d78Tk𑌹ùa\x82\x1fhÌ½b\\\U000c04c6´Ò\U000f9c4bÙ-×ô\U000d5646\U0006e71c\x8b/1\U000add86\x05^\x80\x81&ög\x8d\x9e\U00099763T÷Ì%\x15\x98VÛe\x18¼R\x1f@\U000a3e65Ý>âh°Þ+ÃæÈÿÎ]qûd\x10Ë[\\(8¯½¹\U00094c46\xad\U000d288b\x9a\U000a34b1ö\U000797c7øã\U00018e65\x97"]\x82%õ\U000b4b62{õè\U000bf557\xa0ï\x07!S\U000a29ce\U000337dcv\x13»]¦Ð¶𓆠\'\x01eB\U0006da42§\x12Ü\U0006a514\U000c153aô\U000ed263&d\U00089b04洌\U0008c35c\U000f44bePèØä\U001067a5ìa¼\x10=\U000472f9\x9e®l剔\x00½$Ü\x80\U000b01bb\x86h\U000d2b35\x9c(y¾\x85ìYHAÕ¾\U000cf7d6D\x87Ñ¯\x9f\x01»3ô+E¾ÅËDÈýÔ\x0bXz\x97¢fó³B\x0cùæ\x86¯¹\x19p\x94¥¢ø\rù\x96ª\x91gÏöé\U00061bcfÛüau\x7f𫝍Æ+ôþÂ\U000b0db1\U000fce8e\U000765efÂ𢽑Ú\x18\x8am\U00038dad×\x0fcU\x16\U000c66fdß\x99\x01·6ÊÙù\U0005a3dc\x014ÐE\x0f\U0007a8a4Ò\U0005fc19çE\U000c59ccW[^z¥³8]_ä\x11\x8d\U000549d9\U0006ee8d3\x98\U0005ad75êò"~`¼5\x82%\U000b39bf\x1eZ\x91Ï·\U000cf072\U000bb81dAp\x0eä𗶬\x8eU\U0006cdfa\x8d0\U000e88afïÀªµ\U000140ae9\x9f\U0007a0ec2\x9b\U0006fd7b\x88(K9éîM\U000fde84Â\x86\U000fc962\U000a2ec5Ó\U000f655fê¸ \x8e\U0001549f\U00087dcdg^pù5¶)ÞË렿Ø\U000a114a\U00015609v]\x02\t\x14&\U000a02eaQP¼0\x01\x15·:\U000fd8a2\U000a91af\U00081621%\x06\U0006478cÌ\x98\U0006d68c\U00044431\x1a¸íÙ𰥯\x8cÌ\x00脗[<|Ý\x05\x97𘯕\U0007def6Aô\U000441b8\U00108421y\x98r\x88«\x8d]\U00071f4bCòû Ç\\\x1eÎ\x1b\U0008064f\x94\x1e&\x97\x11*\U00034984\x81\x81\U00049579\x16\r¨\U000ce325\x04Õ\x19\x03m1\U000ecd6aÏ\U00073a56', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004158s
====================================================================================================
2025-09-19 00:01:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['\x86\U0010a3c6\x0eÌ\U0005c8b3ý5\U0010bc08\U00054307Ä', '\U000d28e9', '\x9f·\x06', 'xt']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x86\U0010a3c6\x0eÌ\U0005c8b3ý5\U0010bc08\U00054307Ä', '\U000d28e9', '\x9f·\x06', 'xt'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003875s
====================================================================================================
2025-09-19 00:01:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003857s
====================================================================================================
2025-09-19 00:01:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 24}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 24, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003663s
====================================================================================================
2025-09-19 00:01:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['', '!', "'"]}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['', '!', "'"]}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '!', "'"], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003584s
====================================================================================================
2025-09-19 00:01:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 1796745580, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 1796745580, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003676s
====================================================================================================
2025-09-19 00:01:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 7092, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 7092, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004102s
====================================================================================================
2025-09-19 00:01:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['玥\x83']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['玥\x83'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00412s
====================================================================================================
2025-09-19 00:01:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 2008223231}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 2008223231, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 2008223231}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003794s
====================================================================================================
2025-09-19 00:01:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', 'A\U000a219eDF»â\x9c'], 'password': '\U000b6681\t\x1e\x1c\U000ff775\U00086094}!Ïi3ò0Ñh\x1a6|\x99`\x93ý𓀎\x99\U00087630¸í²#\U000ca771Ä}\x90\x15\U000b4cee\x03ÊIXò>\x94T_ÝVn[\x0cB\U000351a3\U00065f84\x04YÓn¨\x987Ê𫺁𠴌d\x93L\U00051506\x9b\x1c\x07È\x9dÄþc\U000a7af5FÀ´t¬\x89\U0010099e×ù\x89}`¡²\U0010d814\U000a427eX\U0001e441pd#ñØ>S\U000478db¬lÛ\U000c7dbe\x9ed\U00013713\x07¯.\U000c2692:\U000f03bb\U0001d2c1𭨤\U000d0113¢\x01Þü³\x83\U00055a2aI<ù¸pY¾ç\x15þ6¯\x8a\U000f23b5\U000edc6d|e¥«N¤óÞù\x86\U000800ccp_µò\x85\x8cDñ\U000ef159;Æ\x9f5±\U00063c75î\U0009fd0dÜ\U000d968bÙô´\U000755b1»P\x9b¦\x03🂠\x80÷&\\뗜\x1e®¾Ô\U00090fd3\U000c281dë\x95\x99\x10÷\x8a\x1e\U0003c6e1%\U0003c317z\x9b\U0004ffdc\x03\x17\x1aÕ¨È¼\U0009d43c%R]\x95ï\x90s#\x0fw\U000c12f5â\x9d\x9d\x90R\x11\x9a3\U000808edÏäµJ\x853=è\x1b:Ä\x19Î\U00036aef\x0b?bà&\x03s\x8bà^\t§N𩪆\U0001de07\xad.\x95X\x13 Ý=\U000975a1)ÇotR8ìý9b£𭭨/\x18\U00035338m=zÿÒµæ\U00067dedI\r\x8dSkóí\x07GeAaÙÌ5\U00082b64\x91\U000930704ä×\x16ÅA\x93¬¼\U0004caab\x83\x1fâb\x1d£E\U000b3207ª-ð\x08ªlv\x85¤I²Y\U00041436´\x05[ë\x83Ô×r\U00099c0eÊ¦êmÞ\x15[\x102\x9eÞ]±Q\U000cb81e\U00073705Ít\x95À\x8fàì\x0f¨\U00050062\x12v\U000cb405\U0007961b\x9d"\U000fdfaaÏA¿𨢐æí\x0f£\x7f\x07\x90³\U000a967f\x19þÊñ8J\U000741e2\U000ec557à㉫¬ÂB\U0002fd7e\U0008fcfe;X6潶Þò\U0003d193X\x89\x8fâ\x19\x9dmÝÔ»\U0010de25\x9e%\x05\U000f497a¦éo\x95j\U001012b0;\U000cbcbc\x14\U000cc114ÌEq\x86Õâñ:\U000953a3ø¶Ðb\U00044a30Ü|\U000cc668Ç\x97\x93Á\U000f4125^²\U000c51a0\U000d99c7ibê\U00107c6f\U000bcb44ðí]þ\x9c\x9e\U0005509cm9f𰙋q\x07\U0004608a-\U000f9c69Eb\x91xã\U000ec85fï\x07q談ÝÊ£50ã\U000fac47»Ø\U000a88beç\n\U0007b79fK\U000415fb\U00106a75\U000a1eb97\U00037dc1\x91å\U00010d50\U000737be\xa0*\'bÖÙÃ\U0007bbd2\x1f§A\x9dLnj\x87Å\U000cc2f7\x13\x0e\x82\U00066feeÎ\x01ÀmP´¶Þ\x1e\U000b6bc9öX>Húù\x1b\x1bEsÖ𒈡oG\x1d¬o\U0010f5a4/¼\x04\U000f2bcd\x1a\x06(!\x1fà\U00066ab1\U0007f10b\U000f7345ဩ1ë\x90\x0b7\x86\x8fNY\x9cõ\x89^8\U000bc767Â3®*¶æP¦;\x9c$\U000cb3dcaú\x0f\U0005bc2b\U0010a543æ!\U0008fea2q¬O\x8fÄ\x14)o\U001023b7¾\x9f\U00019c7e·\x84\U0007d329?y\U000d7736\U00060784Üß]tªä\x0b\x82\x04\x831풪\x94"q\x8d[f\x03𑇤O û\U000147eaüQÉ¶\U0001919fÿ\x1c¼¢0\x86¹\U000c17aa\x92ýu-²\x9a\U00057ab3ç\x0c·\U0009750c¹Qò\x10¨\U000cb2e9¢-¦9?\x94+\U0003e3d5ÈÉ\U00073655\\\x9d®\U0007d9ad\x07\x8e\x1cÙ\U00069ff8²j¨é\U00092d88]L\x87\U00078b38â\x8dC\U0006f18d½\x07ùT®ó<;\n\U000db686c¸\x14u:\U00039576¦[H\U000f84c2\x03\x8e𤖍R_ø|\t*🤏\x11»\x93Ã\x132\U000c6c69t$á\x97e\U00062d5d𩸡<èx´\x1f\U000191e2\x19y(¾®途\x8e\U0007d99bV\U000550b4È\x02\U000373b6p\x88Îë{÷FÙåì\x06\U0007c4a7\x88Ä;\x08£\x16\U000ace90\U00092625\x04Æ\x87è\x9bÎ\U000a189b»,Þ¬\U00093a7b÷\x91\U00090f81\U00031989údg\U000ce6d7\x14cO¼\x10E`\x90¡\x840_;k#/u1\x1d\U00097910+\U000efbd2\U000f82d3\x1d\x12p\U000ed2eeo\x8c\x18×±ióú𦒣"\x06M&\U00108950Æ\U00036ee8\x11ù\U000f1088\x96®\x9b\'-¢,;Ú𫖟`\U0008814a\U000a7f65ÙP\U00043ad3o\t\U000cee5aSí\x08|³s§\x13\x01J\x9d\U000552b5\x99¢Å\x97óIE]Ü\U0005fc05\U000bcd61=8A°²\U0003cde5q¢,\x8e\x14\xa0á\x03\x90\U000ae119«²/:ýí\x88ÒÉ\U000ff02c쾁\x0fà«{-\x94§)©Õg»\x84È틪(jZ!-浢\x13a\x1c»å\U0010b410³Ø\x8b¤႙\x81ö¡[ûF+\ue5c1\x7f#\U0008c815Ï\x83\x86V\x7f\U0001a2b3e\x9bÐ\U00060c07\x84É\U00061fb8R\x01\x90\U000dbb04Õ\U000cc0f5G ç%i×¡`\x93\U000d9172¤\U000d5f6dHs0\t_\x97ÖDÌ\x01\U000bed47\U000db2e6\U0007341b\x02𤆶qÄA[Ó\x17\U000a0ea1ï\x0fë8\x19\U000925e6\U000e704dzª\U0003e7e8²Üêñzw\U00090adc;\U0009400e\U000843ae\U000ffc54\U0006400c\x01ìgÁ\U00091805B\x18)\U000e801dD\x9d\x01w\x98s\U000d6932Up\U000ccd95\U000e2591xô\U00098730Æ\x15´\U0005a3b7ä\x0c\U001044ad¤\x92\'n\x80\U000c377cÀ$²·°¡é\U000eb62d\x1cß詿{\x07r\x9bH>×a«\U000ccef5à\n\U00052c34¿r]¦¼Þ\x91ÄÝQ'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', 'A\U000a219eDF»â\x9c'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003642s
====================================================================================================
2025-09-19 00:01:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003877s
====================================================================================================
2025-09-19 00:01:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -28755, 'password': ['Åª¹\U0010ef43\U0006e1b7', '\U0010f171', '\x95\U0005c038Ö𗝾']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -28755, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['Åª¹\U0010ef43\U0006e1b7', '\U0010f171', '\x95\U0005c038Ö𗝾'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004358s
====================================================================================================
2025-09-19 00:01:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': -4652}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -4652, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00389s
====================================================================================================
2025-09-19 00:01:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['³\U00013827\U000b2d8b(', '', '', ')\x8e', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['³\U00013827\U000b2d8b(', '', '', ')\x8e', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003578s
====================================================================================================
2025-09-19 00:01:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003445s
====================================================================================================
2025-09-19 00:01:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 58, 'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 58, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003458s
====================================================================================================
2025-09-19 00:01:44 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U000bd350E', '³ï', 'Ö\x8e', 'z𠞶\x9d', '(\U0005be7fÿ=÷\x81\U000c6343÷T\x8c\x9f3DKû!\U000433c5\x0f\U000778e1Q\U0005cfc2Ë]9'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U000bd350E', '³ï', 'Ö\x8e', 'z𠞶\x9d', '(\U0005be7fÿ=÷\x81\U000c6343÷T\x8c\x9f3DKû!\U000433c5\x0f\U000778e1Q\U0005cfc2Ë]9'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003553s
====================================================================================================
2025-09-19 00:01:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 118, 'password': '\U0008068bë¿µ²𠨩a\x8cXè\x8dtDÇ\x8b\x0cÐ,ë\x01\x981|× d\U00041bc9ÑUPBSf\\\U0001b6e9Wi@;\x90Ç\U00042799\U000f95bd\U0005672b\x03\U0008a7a8Hå9\n°1\U000c8c1d\x1e\U000f6008è\x0f\x91\x88þ\x88\x13ö\U00097225pKº\U000b562a¢ù\tm\U000f7930;\U0003df48\U000a703ad\U0006b152\U00053091\x13¿Ý9ý\x8a\U0001df66\x81\x91\x0fÕ\x03\x19Òé%\U000abaac&»ûÓ1\U0010e171ã𘌦\x1bºK y¾/\U00090321/\x89\U000b73d5Lh\U000d34fd{Ñ{{yr𭬌\U0004d9ac*r섲Þvãf\U0005585e{\U000e1ba7\x9b½Jíl\xa0À\x19Ù\x11ûÜÈ\x82𠯪kñY<"Ñp\U0009647b\x13ÀN\U000e6c30\U000c8e83cÙV\U00093dd4Ào1:\x9bA+\x06\U00034c96?\U000ea24e\x05÷\\å]\x11óÍ\x18\U000cdbc5ÊY\x1bì\x15¼Ù\r3\x19\U000a58f2\xa0\U0007bc15·mÖ\rÍ\x91\U000191beü¯5\U000476e9×~ÿÊ\x0e\x90Ë\U00092016\U0008458a©𨑤Á\x85c#𖢂Dn\x83\x19ê=h\x8aÝýÚ\x8cGZ7¸¬Ê\U000da69fçûÞ¨åÒnÇ>¶ÊÅ\x98\U0010b896\x01Æ{2l\x05\x98ÅVÁ4Âaµ\x93Éª*\x8b\x8d\x14\U0001b42a4@\U000fc4ceck\x0bl\x9d1§Ñ\x8bÆñ.\x08\U000faec3\U0001675eKò ë÷\x11Q\x192Uj$óÚ~+Ø\U000cbcff\U0010ca36Vò\x87(\x97\U000ea606±d¤*\x1e¥ß*%Ó\U0008129c\x92¢\U000f349f%\x82I\U000e4ffc\x9e®\x1aèã2Ø\U0001ff1b\x08\x05\U000623e0£7(L&÷\x0e\x88&\U000321e8\x85\U0007f2ea³p\U000cd7c4B\n#\U00060811XXG\U00047363[=ÁÓ\x99@a\U000efa94\x84¼\x80ß\x9e¢\ue2fbº\x91:÷汴\x9c\x1e\x80\x0eÉ\U000f7ef9\U0003faf5\x91PïåÅSäÜ\x1b\rãìîË\x19À.¥\x1b\x98ÕÇµL\x12à\x9c\x8el\U00075b64𤛷\x8eJl𥈨\U00063863b6\x98\U0009505c\U00059363很?\U00069a25\x9bÇ¸û\x95l»\U000e1236Ù\x92³¥u\x1e|rp𐌊Ê\xa0\'Üuó\U000da79cc𡑒\x9c\U00109b27\U000fa030\U000d2675𩋷j\U0009a1e4\U000aa32buÛ2»¸\x10\x03\x02¥\x82\x1diÜõ\x8dcÑæ\x8c\U000467f2𩲵Ì¸(J_\U0007af19\x98\x93\'\x95]{ \U000c9459\x9bÙ\n\x05\x9b£ù\U000de5bc\x01¯\U000dbbb1\x85ê.Z`\x1f\x0b\U0005c562\U0001cc45¯ç\U00013d1b\x80¿\x8c´\U000c3171ð¶0\xad\U00034399ê\x83\x08\x1d}\x12\x15Çꤞó\U000859b4ª®Úy폵r?óÄº\U0003f86e\U0008ba3c&\U000e6116O\x80mq\x17㺥!æ]\x17]ji\U000c4875lßÉé×Ï\U000532e5X\x90\x96juOë|\x8e91\x7f\U0003a574?᧗\U000e1ed0\U0010bce9\U00059986O\x84ºÇ\x18)è\x02«EÂE\U0010cfbb¬\x01\U0001b527\U000491103S4\x04\U0005eed0\ni\x14\x93\x83¯Ë\U0010ff17\U000a421b\x12\x1aò\U001090198û\x98\x91\x9bÃ\x9dÐ\U000a5d5cèôj\x84\U0005aaca½7\x7f ìN\x7f¸òI7V\U0008ca44/\x94\x16\x89\x00\x18\x19ý\x11\x02\x93\U000fb00e\U00064738>Òtb\x98ÇÏt蚹:\U000e89a1½\U00089fd5Ñ\x0cÆ\nprº¥ÒPæ+\U000cf134Ð°\x18³Ý\U00097c16T0\U00015ff7Æ\x0bNS9ürÙ\x18¯\U0004721cPe\U000bd4e5\U000c5d59ã\U00075bdf\x8c\x0cwâ\x8ak<K\U0001b9f6\U000fe7bcYq\U0005847f\x9aQ\x18¢qµ\x18\U000998b9¸ÁóK\U000dd147]5}\U000a4dbc\x99T°\tg\U000cdfc6V𭩢ýÇæÿ\U000924edí\x81\U00019e27)\x03\x08>\U0007981eÀX\U000b1cb2ú·J\x0cÿ#kvC\x1aíd\U000c6a03¥\x11\xa0-,¨Át\ufdeeê\x0bⱕJC\x88,ðð\x1c\x0c\x83ÓYä𘡃\x00`*,hÊ\U000944c4\x18\U0007e799ÇX\x15\U000fce32u\x9bGõý2Ç\x00SþÅ𭎳\U0009cdc3\U00054d0e8\x98ø\ue59c?ô\x89ÿ\x11)x\U0004975fnÁ\x0f\x8c\U000deb67\x1e\U000d32a8wiC6Ðnj\U00094112Þ°_nJ\x0cß\U00073159\U00019b0cG}ì\x93\x97y_"ÓC$\x81²\U000cc578\U0008ed23î£ìHÖ»\U0002fc3aý\'\x93ã\x16\U000a0fadÔUÖ*ö\U00042067\U000e5cffO\x19EÍ÷\U0004a7d4|\'`\U0008cd91\U000ebbd3ÈÂ\U000c43a3\x85\U00078475ÈÌ\x19\U000de73c³R\U0005834e\x94\x83\U00094f67Ú\x11Ft嫶㎯\U000d8265\U00069fb0\x91\x16\x96{\x8c*ὑJÍ\U00031870\x83dd%²JkH\U000df7fbøìlá{¯\x92\x12\x16S©ê/æÒiÎ\x9c±ý×áz+9ÚÚSõËAàã\x87Þón]\U000b9652\U000c1200\'$JQ\x90Ç𥞊폖.\x15\x8dï\x83´\U0007f1eaÝx\U000f2188õÈ\U000ef66e¶\x86\x08fë¯y5O¯\U00083098¯Þu\x8cÀÈª\x87\x95\x83\x08B\x83¤\x13\x10Îs\x11\x01õ1ÖóvT\U000f433d\x1bª·\x7f\U0004f586Íßd2 uûN¡I\x92y\x85\x97\x1f\x9c±g\x07Ù\x81\x9aX!\U00083210jå^ÂÇ\U000968e0\x12{A\x07\x90\U000ddf47\U000e4ea1\x05\x81\x91¥¬àhº.\x06ÂåXºß\U00050077v\x88k\U0005d7e9òÅ\x14~ÄÔ6J\U000a00100%U\U000b9944vv\x08ïÉË\x9a.\U000d63d4\U00072f2bJ\x17\x840æ\x85\x1eM\x88\x88\x10ü>Ñ\U000fc270\U000af128\x00\x01\x95\x9f\U00041106)\U000cdc66\'3\x99\U00062de6ïd0\x13üz\x02Ý7a\x14J§Ü{Ø»\rå\x0eÎBÑ«\U000828a4üÙ»ì\x864.¦\U0009b848ßiV\U0008db5c\x89\x8b\x0e\U00031784½Ä\x98\x80Öw\x13\x11\x16\U000961baçØæÒý\x08x\x12\x86\x08\U00068cf0}\x0f½\x19÷ñ\x1b$\x8d½Õ@¸\x1d\x9d\U00018d64\U0008957d\x0e\x14\x1c\U000aa9ecàR,5k,Òä8Ãý|[\\T³¥ÎDùÄÝ䏟\x9d± »P\x8eÒÊ\x12èn\x96\x84B\U0010cd7d`\x12g;¬yEÅ\U0008747fî;±\U0006b113\x83UÀ°\x92+Ä\U00080b60°´X5o\x0cÖÁßMÕùïÈ\U00107911ô\x95Jâ¬\x93%Qã\r_\U00097daaãÝ$\x9dpÎ\x8e\U000d4946\x94\U00104509\ue212\U000f94ac\U00080216¬¯\U000ade25\U00065c7bt\x03xx>\U001088ee\x89Í\U000632e2¢\x93\U00019708\x82Î\x9d\x8f\x06y\U000a5ea7^¬á\x92\U000a74af\x08\x8e\x03s\x00_\x03'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 118, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003836s
====================================================================================================
2025-09-19 00:01:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': -22841}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -22841, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.0038s
====================================================================================================
2025-09-19 00:01:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003598s
====================================================================================================
2025-09-19 00:01:45 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004231s
====================================================================================================
2025-09-19 00:01:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U000b94e0m\x98´V²\U000bbb23\U0001560dù\x1bnèÿ𧖐®\x17¤©\x11ã¸ü\x07\x89\x0fÈ\x84\x8fÊ¶¼|úI\U00048797CÌÒ<\x11bã\x14\U00065ac4ÊÄ\U0009d3a8ã\x82F\U000d98d6S\U001080e6\U00053e49\x1f9£\x8c\x1b~\'\x0b¨g«\x94\x08/\x81ì\U00081b9eo=@ø4\x8bórPE\x8dOM-\x08¹C𘈭\x9aõµ\n2\x1c\U0004c0e9uzð\U000de44e\x93\U0004acf0\x9aî-©L\U000c656b³á\x82\x9dòë\U0008ea6a\xad^\U0009d5f6¨\U0002f369{ÇÿlÎ\x15`\x08W^úa\U000c1e1aM[x°\x12\x97\x91ÊLÐübÆ\U0006bbabZ\x87$\U0008cc20¡\x8fê\x8dZÅ\U00095647à\U0007ffe6\x13\x01A\x91ª®ù>N\x1fkA쿝·\x05U0¹å\U00056c0e\x8f\x87ß\U000a806f\x0c7£ꛄ7c\U00062bfe\U00105969¥ö5W\U00102770,ç\x83\U000e8f9c\U000eb77fìú\U00072c97\x19m\U00099be1\x9c\x04µ\U00045441ñ\U000420a3\U00055bda\U00054ca2jS\x03\x1b\x8cDýñÄ\x80S\x10+\x8e\x02\xad\x1a\U00051f2a©¦ú\U000ec333\U00098e90ñ\x8bÜú\x08Ä𘋁LYX\U0001f7f4\x17\U000b53e7\U000fbba3Æ¨\U000c9b89X&h\ue092\x14@\x89¯\U000387afÔÔw2\U000aa8e3ªÁ\x11\U000406f5\x19z\U000618f4\x81]¶\U000a2198!\U00049819\U00052268W5ì*\U000b4129n9𘏩\x8fIÃ»R»¾¤dá\U0005e92c\U000bcb5b\r±\x7f\x93\x19ï\x96Yã\x83c7-\U0005c37bºbw&½\x1d\U000e84be\U000d0bae\x82\x05¼\U00067aaa\U0008edc2Ú𨳏füÂ\x19=ó¦\x15b5~\x07mË\x01\U0006ebea`\U0010952cOä\x9eã\x13å¡\x80=@<Ì\x0eæ\U000d2a7b\x88\U0004f499\x07f\x00÷¢¼\U00019a0d\x96\\ÇØÃÞÃÞ³Þg\U0008851dõì\U00077ed3\x8c·\x1e\U00088764\U0007bb65"Ð\U00050295í\x80ì\x15\U000c5372B¥úî\x0b~]\x00\x15ëÝÌ@xxÂ\x0c\x91ÞDzÄ&è過¸?ÍN¹ÂÓÚ"E\x11\x94mÈ\U000d0667\x0e;\U000d41ce7Úo\U00033d87sq9vü¢I\U0004bb59e\x88\x0b\x0b\U0006dd31\x81\U000a51d6Ï9çڇ\U0006140c\U000505f6f\U000ec58f0+\x7f_Ò{O\U000e1aa8h\U000de628鶭\x9a«z>Ó\U0008f4d3è\x92ýA𥅟 °\x95\U001037d3!\U000dea67E\uedf2|s²ä¦Ér\n!V\U0004d5dcob$£\x8c÷D^\U000e640cÇ\U000b6500ãÇ\U000bbb26wÛ\x90\x9a¥\x9f\x0e«ò¼ÜÐsi\U000ef1daZ\U00104df4Ã¥ª¹\x11\U00042665𥹀\x12Jßp\U0006c47c𡳂\x86ë\U000872a3H\x95ð\x05,\U0006899e\x83Ìå\x03í\U00103529\x0e\U00092b39Æ\x9c&\U000f344a\U000e9699¬~\U0001af7c\x0fViK\x1d%ä´V\r\U00074b21𫯰\x19\U000faf89¨¯\U000e8d7bwî§G:HýÌ\x12|ß×$rÝ.©L#!æ\x98\U000b8446\x0cï´ê§¥<m\U0003d101^=\x1d&𐫑\x9b\x82¹oiÖ&Qw[\U00056600û\x8a\U00053ac1ÉôKç\U000f6756Û¨ýi\U0009a155\xad\U0004b297}\U000337e2|\U00081948\x8cûò\U000cc916¸a\U00058670\x04ÜÇ\U000e8fa5x룎\x9fÐ\x14[·¥\x15çA\x9cu\U0006409cF\U000f69da\U000e5353\U0007ceddRÅû#a簐?\U00016b78þ\x98*\x9dnJI\x19á\x9c\U000cb55e\U0003e6fb\U000365d2ËJ\x9eàÔ𥯇ì^\x05µèè\x0f|\x8d\U0009b828\x8d\U000eed1f\x8f¹Eil\x83\U00053576\U0005c3a8â®𰗩y\U000cafaf1}y\x9f\U000a2efbgLz)\x86\U00092fd9\x06ð\x1fN³5?#(m\x1e\x12°\U00083066鳵\x8ajÂ¼\x12/¸üÇVþ\U0004f3e1±\nv\U00058532Áxù\x11ñ\x0báý_HÞ\U00100fbc\U000c93f7\U000bf00bD²h¡·\U000e5015Éåu\U00077a9fÎw\U000bc170ë\x0bï\U000a17c5\x18w¢®aö\U000e97d0×\U000a581c-gfV[\U000c5fe3³ÔN{·\U00092d6dÇ¾C\x8bÃ£\x9d÷\U0005d977SÜwR?!UX\U000a0556VY\r𧼫Æ³À\x03\U0009acef\U00075a715¦\U000ce86a2hté\U0007c233\U00097e06Sß\x81xÎ\U000c93abH\U00042b9f\U00016bd0~ö\U0004c7ed\x06\x0f\x92Ñc\x84\U000e2fa9\x92\U00052d38Ð\U000f960cNq\U0003f588\U0007d4b9\U000a974d\x1e"w\U000ef153\x16\U0004f75dw\x14\U000f486b\x1b\x01ÐòB~ØcÇ\U00054b34\x06\x05ø\r\r\x01蠬\U000956611à¼@>\x8c\U00096fa2\x87\x8c\U00064967\x0fP\x1awg\U0001295b\U0005d9b3\U0007e053(¿\x19𑋌¤\U000ee7f4\U0007aa4b\U000473d2Ú\U000416e9\x81ºá<𡗻\x14\x8fPk\x92\x17浟Ã\U00086f97 \x1e\x90Q®I¬þ\x9e\x9eÎø³\n¬¦\U000455fdþ\x8f\x0e+Æí²\U001018d4ÿDçþ\x0fÖi\x0fÁ¦È\x99\xad\U000a1005\x90EZ\x1c\U0003be1bå\U0003b49f\xad嶷o\nW\U0008561f\U000aef67\U00109b92\x14\U000417d2\x9c\U00086134\x92Ý\U00099b41\x08\x1fÿ\x81(\x0eç3 JM𑑈:Æ-\U0005b15f~»\U000f5177wç¥:\x1c\U000fca93\x00IíMÛ¹\U000e30320E\U000f74a5𡰽\U000a2a9dÉ\U0009bd71j\x90\U00093451\x8cæ\U001050f9*R\U000113cc𭯲·Tº🭥𪖟ø\U0003eabc\x9e\x91\x93+\x00Ö=p£Þ\x7fó\x92\x91s\U0004fdc8\x1bÐ\nòh°\r\x1eß\U000ec70a\U000c3dc2õ}à\x9c\U000a822c犽9邗-\U000be81d@ôP-ã\U00070925\U000f1b2a\x99\U0008a3d3oC\U00041a8b*\x87\U000d7e86\U000125d1\x1e`â\U000386f9\U0010f2e9\x98\U0010dad6M!\x02朠\x8dâ\U000b320d8O!SÎÅäz\U00105110»ûvÛu\x8f\x0bB\x8a\r\U0008396eæ1m\x07\x87\U0006f44a\U0006769báX\U0008209fs\U000e6ba1¯óx\U0009e4b3\x12\x8b;·\U000dc67fVûu`¹3÷,Å:ö%\x10\x14\x15N\x87\U0010a033\x04ygµ\U000fa5f5ËÍl\U000aeeba\x9b"øª\uecedø\U00102e4c\x1a?\U000ca252\U000fee0bA\x9e\U0003cda5$z\x1a\U0007094f\x10\x19\x15\U00057512\x18¶t\x8aeÞ\x88\U0003774dâ\U0010f429U$ZÎµ«EoۂH\x17Vì|òÑÊ·)b\x95\x9b\U000c9650\U000a51a0\x96\x0bªüP\U000bfbef\'=wo®\x0f·)Në/\x98¿À\U000cc39eG\x80\x96Ã\U0007849c\x95\U00054cf6£\x8eò\U000ac922Ð\U00078b17\x1aYjq\x97õá輍\U0006a8f1\x82ñR\x86Õ9a £¢\x1f²ﵩCF;\U00072afdàÅþÌ)\x04\x08ÚB\xa0\x15ZW«Ç\x93©\x9b\U000fd7ac²\x0e\x0bÄ¦\x97\x7fm\x9e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003788s
====================================================================================================
2025-09-19 00:01:46 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 81, 'password': 'ÐS¢¾\x8aEÄ\x80\xa0\U0009e34b\U000abb96\U00109376ü\x18\x15\x8e¼\U00071773\U001023cb\x04¥jÑWî\U0010a2eb\x15\U0003a6a4Zs𥫧32𗝽䘧¡ü\U000f40dd¾\x1du½à\U0001b5c0b\U00095b7d\x0fâ\U00088fdb\U00104205]bÖþÌÒ\U000d4a2aI\x89þ§qêr\U0005a1e2\U000f66e7Væ\U0007a449\U00067fd1u\x13½\U0004732fꖅ\x1bô𡦆\x90ã^¥r\U0005ade1GÏ\x1d·\U000abf24\U000ee50cyº\U00055e85¶\x11\'2\x0f\x96¢\x890\x19\U0008d291É\x95¸\x98Hõ\x98À»\x046É\x07è\U0004cc30\U000a1177b´µ×É±Ü4X\x90Þo\x8c=ðÓà\U0007756fûÌ\x99Uý\U0005b8feív\U000547a3\xaddè\x92\x14\U00016be3¥GÊk(tÐA9*:\x032\U000e3ade\U000735a8Ì\x84\U000f700e\t\x00\x17\x9d\U00072537\x03çõMW\x89fòâ¡i³U\U000f0e2e\x9eÐí^XP½\U000a1909\U000739f3Ð\U00062a42b°ý\U0005f924\x0bÞ\x1b\U0009182d\U000845deÄð\x02¨\U000e13b1Þ\U000a4660\x81\x91¯ß£𖣘¢cs\x1e\\𬳯\U000af96eñ~¥\x1b\x89Ø\U0007e66f6矅Dd\x0e5ÊM\U000824b5å/Ë±𓇚ëK¨§\x85?\x94\U000dfc9d\U000db483Åñì\x14V斜ªÌ8\U00092cf2³\x9f\U000ad07bÈIý\x88Ç\U0001e049\x8e𥢬®8Sþð\U0007cf29\x153·\x83𤬔÷&𤠪¹kÏÿT\x17\U0003b0f1\'ô zMÏ\U00033ae2n´ÜC\U000e1c9bI^?\U00088705\tÌå9\U000872fa\U00105c5dþ\x93ÖaÆ𪼊"\x1eò\x94\U000fab847\U000e7ff3I0\U00048df8\U0006a99díÚ\x8c\U0010e04a\x15\x8d\x8eá\U000cdd38}Ä\xa0\x01\x99\U0008124a¬Í-\x15\x10\x03|wÐ\x9c\U0009c25c·^\U0009b8c8ª\U000dabeaYÉ\x130찚b\x8c¯\x93JÞ\U0003c2de¢\U000c3ce3\x11!\n\U0007c40f6\x91\U0007f251P\U000bf228vÁûm`§r·qøA\x8e\x19n\U00105ce6\x83¨ue£k¢\U000ae502/\x8f\U000e2b4f78\x81ì_×蹆 游Ó°u\U000e633d¿\U0010606cÛp\x15T\U000ad2day\x14T[Ä[%1{GPj:\t\U00055e05¦w魕;ò¿𢦺ÀH\x1aîx\U000c2e7cV\U00058b2b @óK.$\x0b#¨\x81W\U00046d9d\U000115f2`qû+²\x0cÿ\x17Á\x8b!¨𘤴n9ä\U00044c2d\U000ea3fcÅS\U000bd735>GÄÕØcmâ¬`@\U0007e72eðµ£Í¦1\U000b90a2\x8fÞå\U0007c879\x1cµ\x8c¤yK\x97𫱀³\U000fcd64ì\x02\U0009a503È[)n\x8d\U0003d575/\x98a\x1eÔ\x19Æ\x07¾Ô²\U000bd415\x0b\x86§}\x97ç\\í\U000cea9f$©a\x03枍\'Í\x95§\U0004a6a0\U0008902846\U001094f9Æý-|\x1e\U00055358\x91\x96Üµ \x01$òZh\x08"\x9f:fÎaÊPLó𣊃/Hë\x0cH\U00056bacÚ°\U00064c3fÇ¯\U000ca35b\U0005796a\U000ac286\x8a𨌘V6¾;ó\U00105f75\x11§¯\x8e\x02\x049\U000429fc{\U0007b3cbìÀpDw:AÈü\U000a5221EK#\'\x14\nÆ\x1b\x80(\x91ë뉤ï\x97\U0006ecb5\U0006e105\U000df452\U000772e3\x1f+\U000a1922³\U00056459\x8a\x7f𱃟\x92\x05\U00067a5b:±qË\U000e29e30çäQQ¡àÞ\xadÇ¾\x1a\x16\x9aõì\U00066708ÌÀ4\U000498cdþh\x99D\x05ÓÓ\U000f761e\x8d\x16s©¹\U000a043f¨µ#·\x85°Óï3èmzD=\x06\x1cÊ{Ã\x93\U000dd955ö\x020>üã\U000ecef4²\U000a5170\U0005de66\U000b675eÈ\U000555ce.\U0003bbdb=ð\U0006f569\U000ba38d`Ê𭯂¢𪰑å\x9f§\x0böÛÖB°ûÐ\x02z`{\U0010a8c5\x1eã\x19\x1e\U0005b5e61X𤗛p4òí\xa0\x9dÍ7\U00045f5bÛ¿Í\U000cba37\U0004155dæº/Ðõ\U000b84cbÏ\U000a0706\x11g±\U001007aal\U00085166Å\U00085cf4\U000c2ae6yl\U0005a17a\x9cºn\U000e1166\x0fÌ\x98\U00034f69\x822å\x94åÞh\U00015d169¥Þ·\x0f\U00042225\x1d\U001098a5\x84\U000fe161\x03\x15¥Åº\U000c1523ï\U0004859a\x1e\U000b6364\U000ebb3a\U000a6d27·ù\U00072290썾Ú\xadjpÙ\x84úó\U000729bc\U000e16abF\U00086582Ò{Ê\x81\'©Þ\x8dÕ\U0001fccfi\x9c6le\x06ê.\U000dc355爂\x90\x80\U000c66b4Ì\x83C\x00doCiEæ\U0007ce31ý\x87Çr MÐÎMáØ\xa0\x8b\x1e\n\U000ceee0F?ꜿ|°\x16ït𥢅M\x98\x00N\U0006eab8ö\x8f\x9cZÇe\x1e7ñ\x06\U0010640c\U000735d5\U000bed58x{Èý\xadMA\U00100bc0\x8aRN\r:\x18ª\U00076abbÈÿ\x0e÷²\x1c\x7ff\U0008e178\x06\x9f(V\U000d67fa¢çÅ\x86á\U00058257¿\x1aË"A\x0bNí\x89.桤È(^×þ*\x11áj\x97\r\x06\x7fFÒi\U000511124²\U000b9f06𣡦>\U000ba8d5ßD\x84\x88»_1AÍ\U000fa2d75\x13\x17»ð¯\U0001e308\x9bâcB\x8e\x95𡦮¨©\U0010d30b\x01\U000bbbc7\U000e830dó\x03\x81ßf[\U000c58d8ç§\x98\n[\U0007c4f5sJá\x9c!¨T/Ø\U00036cf3\U00044ba7óà\x0bñ\x89\x7fm\x9e¬-Õ\x87r\U0010597e𥟾.\x01E \U000f64cc:ò\U00085499Ê\U000b3051s±w\\\x04É!\x8aüò\U0005bda0\x7f\xa0\U0010c29e\x98]\U000eba64\x8c\U0001af20\x19#¯[|\U0005d6c1â\x90\x9e\U0009af44fàm\U0003865d\x05©x!\U000ab968ä4òJAù\U000a3e36Ü|µ\U00075f21\t\x8f¤¦\x9aù8ö\U00063356\U0007e8a2i\U000159efg×¥\U000c5cf0OóU[ßJ{½È\x8c\x93\x07ÓÚc¸\U000ac999\U0009b9cf\U000ef1f1\U000eded8𐕆\U000d9bfe[ø´\x0f\U000ac1da\U0007566aÝé\U0005e327[Ý2+"\U00012bc9\x9d\U00048689\U0010b52eòèS]ÿ\U000ac98e2:\U00090aae\x14\U000f7bff§\x07\U00085590\x1e\x00¾\x1cÉ\U000e8080Ð\x96Èæ>¬¯\x14¹û¢\x83\x9e\x9c𮢘Ø!§\x88P\U0003a070~ºZ¼\U00098afa²\U0003bd90º»\x0f\U0010190d𗎩c[\U000e2f2c𱅫\x827¹'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 81, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00412s
====================================================================================================
2025-09-19 00:01:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.107827s
====================================================================================================
2025-09-19 00:01:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003508s
====================================================================================================
2025-09-19 00:01:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003521s
====================================================================================================
2025-09-19 00:01:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': 879}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 879, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003495s
====================================================================================================
2025-09-19 00:01:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 32344, 'password': -1221411830}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 32344, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -1221411830, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003958s
====================================================================================================
2025-09-19 00:01:47 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': 23024}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 23024, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00404s
====================================================================================================
2025-09-19 00:01:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¬B&\U0010ac54\xad\x07\x8c\x0f2-b\x1f\U0010ba7câ\U0009ab53\U0003575d\x9a['], 'password': 'E\U0007ee23\x9a\x02Ù\\\x00á¾\U00103b0d\U0006a0c5\U000d5277\x8bûè\U000e697b\U000336e7þ\U000a7fd5ã\xa0\x1f\U00073734\x114ü𩤳ã«\x8f\n\U000c6001\U00078a90\\\U000d3f6b\U0008d831\x93\U0003dc97\U000dfca3w\x8fNa°\U001049cc©e\U000a44f6EÑ¾; K_Û\x7f±C!ì\'ñ\x8c*=\x81^\x9d\U0004b626~\U000c1cb7\x9dû\U000ecdef\U000e92de\U000348f4Ê$¸\U000446f1å5\U00089714𧌘\x1b\x07\x19ÊÕù\xad-2\x12/\x8bR÷,ü\x87\x87?³ê\U00046968T\x844ªr\x88\x88\U00096c03ÚÛg\x04\U00052a4ebpn\x84~Q/\x91W\x01\U000d5047\x87,\U000716f0Ã\x07Æ|ÄS\x87¥Û\x99ª\x15,\U00093c89.\U000bc6fby`Aê\x17\x1f\'¯\x9a%Q·\x8e®KH\rÃµ\U000f71abøÔ\x16\x0c\U00036420ìÓU\x9f\U000f7c90\U00060a0d\x0c\U0010061d\x1a\x87Ç½Ä\U0010ead0\U0008fe6d1º\x17\U000e0bcc\U0007beffYf¼\U000b91ef\U0010f830\U000eedd9\x16\U00090197\U000b856f|\U000897ee\U000cb586\t\x7fQS´4w"ÝÃ¤@9CQ£Ô\U000535683\U000fafad©\x01\x80\U000a50ca¶>\x99"\U000ce40bu`±&\U000ef334û«À\x8f\x08d\U0009ec5ef#;\x86U÷t\x93d蔰¿=þ1\U0006405e´\U000a58682hõ\x8ekî\U0003fbfb`\U0007c923\x0ec¼«\U000527a32\\¢ºZYWp}\U000a3260\x15\x03c\U00103300n§\x91æ\x0eÖ+\U0010c5dd\U000e310ewÔ>E Ê\U000f3c08\x95㪃\x80{t\U00065a49õ¡Ã\x10éè\x8dd\U000d04a9r¬\x1e\U000fd4cbéC\U000ed10a«(üVË\U0001fd5c ÂÌ\U0004629d9îA4\U00018fae0]¢C+\x17®3Âÿ\U00035487\x03𠃣\x9fBÄG\U000daa9aJ*rà´(\x98\x9b6\U0004acc7?\x00ÏE½}\x15n\x91ÒÚÝÐ\x11³±Ç{M\x00\U00074ce0B?d\U0005bfc8\xa0§úh\x14½U\x94\x8a\xadÞ/<×>Åõen\U00076c36|·8\x1ee\U000ab1fccXy\x94\x88o\U00075675¸¢\x89Y¥¥Ü:\x8b\U000ac08c\U000f181e\x1e m1ì\U00079044\U000f8f95\x91¹7õ®!\x12¼\U0010f343\x8f\x84XV\x89\x14Ã\xad\x9bAÐù𨗓ÒÕ\U00087e5e§\x8d\x8b¡\x01泋\x12\U000b1a424åÅ²S\x82Ñ\x1e±3CJr𮓆®F\U000a9f18X\r\x87𧵼Å½ïGÖ3bæÛ*ÅÁ\U00081960ÂÞ×n,\x14P뽭潃\x93¹#e\x11\U000ba16d\x91èýÜ\x1cQ+ò~hË\U000d1ef6\U0004ce93fH«sm\U000f2517\x93z¶åp(\U000ea9be<\x94\U0008f878\U0005256c7\twwÁ»d\x01ØA¡d\U000e5970Ø\x80òY¾M3\x90à¬Ë\x10Æ\x89\U0007ab1e*j\U0009551d©\x98U/Æ\U0007f04cÅÐv\x95\x1b7\x84Ë\x92î\x02\x06þ\U00079fa3\x85\x7f©\x92\x07D\x878\U000b0103e¬ \U000e5bc1wnß\x84I\x91\U000c77b2¢Æ\x19Ü|K?\x1adïé\x96$\x9eo\U000bc2a5\x87\U000e6193Ot\x96Õµ\x08𝕁øRsB÷\x81·¼l\x84À\U00109ddd\U0003ac5diÜ\x1a4\U0001b300\x07\x8e\x7fÍ\x1d\x98ôcÃZ\U0010e207\U000b55dc¨¢ÿÎ$\x8ed\x95\U000c0380\x8fO\U000b20eeMõg𰝈\U0004a11dâe|\U000fd439-\U0005baa4\U00032457?Pé×SÔ\x1cs \U00072ce3\U0004d1f4\x82jÕÉ\U00063a2b\x06!\\\U0004517f÷\x91~T|Ð\x8f>\U000b9542\U000f0f0dã¼\U001018fc\x0e\x03\x12Éâ𥠅±ÛºB\x13±$-îC\U000ec332¹Ë\x7f\U00080cc0\x82\x0bò5îQ\x06\U000b1612\x854[0\x06\x85\U00044962\x03\U000c4e97\x1d\x0c§rlöV\U0006ae3dÏµÖ-õ\x82×Bô)5Ù\x00㴌ã`\x92\x06\U000dcd38k\x1fÅ\U0004adb5^\x04\x92\x96\U000fd10a5\U00015849\U00056a54ï«zí\x9af¢\U0010a4c9<ÐRፆ¼u\U000dee87¥\x8aVéaQ\x00\U00055435i¤\x8d¦\U000147b3ÕúéxÈ\U000386c6©Ó-\U00078e62\U0004da7b\x1dPgæ\x08å\U000a3e1f\U00096045\x97Ë_\x96\tgu\x08©\U0008a8dfD𦏶\U000dce84\uef78y\U0003dd91𫫓s\x8aú\U0007e9fei\x00\x08bT`w\x89\U000a39a9¶\x01B\U000f8096\U0004bc7c´Ù\x98\n\x07Ô×Dq\U00035d50í頊Ý\U00048ce8\x8542\x0fà×è\U0009ca68\U000df342å\x06\x00æ>k\U0009e3c8ꔗP¶蜌L\U000fe2b4¯²x\x8biÈ\U000788a3½\U00048343\U0010bc51L1z;q\U00044c0b6ñ\U000bc2f3\x91c®\U000611e9\U00102150M\x98çFÈër±\x19ÖaÜÅÙ[\x1eF\x99\x8a\U0003ecc5s\U000b1050¾ä\x1dCdM«@PV\U0009d0d1\x0c\x16\U000cc27d³g»Ö\x9a\U000a1b86P´O\x90\x90Jìð\U000d0b8d\U000a79b2ç¤É\x12\U000da1da)Ë!Âô\U000a523c¦\U00085178\U000aa571\r|Á´\x94<Z#Ä°\x17wi\tzÀÊí\U000330d5\U0008bb37\U0001629as¼M\U000a3501/$\x95Wuý0ÙB\U00043432«ØÃ\U000e0e73O\U0006ff04,\x9a¬X\U00057489ê\x04\x8f¢âx\x07ùl\x83Ý÷K\U00095309®~Lâ\x19\x92Àp'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¬B&\U0010ac54\xad\x07\x8c\x0f2-b\x1f\U0010ba7câ\U0009ab53\U0003575d\x9a['], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003797s
====================================================================================================
2025-09-19 00:01:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U00053bf3S®±U#\U0009e2de', 'Ò'], 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U00053bf3S®±U#\U0009e2de', 'Ò'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003704s
====================================================================================================
2025-09-19 00:01:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -649}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -649, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -649}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004082s
====================================================================================================
2025-09-19 00:01:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['~', '\U0008353fU\x85É', '\x8a\U0004aa22', '\x8d¶Âå', ''], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['~', '\U0008353fU\x85É', '\x8a\U0004aa22', '\x8d¶Âå', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003651s
====================================================================================================
2025-09-19 00:01:48 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 7179, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 7179, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003816s
====================================================================================================
2025-09-19 00:01:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ó\x8b\x8d3÷,\n,Ñºw\U000763f9셿\x83Ü\x9f\x1eÂnQxj2 Ó\x05霡\U0007fc9aS𥮌æ\x81ñ\x89\x1f\x90茠É]u\x89µ\U0003f0c8\x80¤+ýªÚä\x0b\U000c3566ÒÆ*\U000ab64d$\x12\U000c5caa³\x19½\x8a\x94\U0004b7da!çàF\x19±ï\x86=Ô \U00100630\x94Û\U000368c1$T\U000dd16a\x8a\x9a\x80\x84$\U000d5540\x19\x1e\x0f6𦎭.𝈖CJ=\x8a\x94Ü\U00105b88duØ\rûê¯%¬\U00070c06Á\U000e6524úS\U000d1b05×\U0008a165\x87\U0007c201\U0003ae2e@äz\U00071f55³\U00074e41\ue4f8\x17𐂩\U0003614f\U000d9d3fGxm\U000ab6db\U000f1910Ð¬¦𨷀\x03\x17\x9cT>ÜQ¨\x1c\U000416f2Ò\U000f80ce$\x1f\x0c恿ù\x18<\U0004f99fWC\x0f×ÏÄØ\U0005ea5a\U000727f1/0ï»+o\x9a\U000a221c\U000a8ed3é\x98#\x10𦫗\x9bo\U00097701\U0008da4b¤<\U0010e3a8\U0004162a\x86a𑠏\x1b\U00107fc3\x07UB©\U0003b499\x95¬çv\x88D±x\x02\x80ª\x81\nßs¸¬§¥ª°\x92\U00053925z&\t¶\U0009a7c8×E\x17A4?\U0001bb0cì\x84\U0008bd5b\x8d?ÚK-\x86ç\U0003d490\U00015c9fa¤N\x07$påBÆ\x95*\U0003ebde\U000e4a15Ù\x07\x85\x99]F\U000aeb98\x0cã:\r¢w\U00045489h¶wñ¡a\U000f9a98î\x95~®\x05VüÊõÔ\U000815e2 á4Ë\x17Ñ\xad\'\x1c¡·\U00065ea6=\x04qk\U0009a2b6y\U0010527fHL\x84\x1c/\ue526\U00109f035\U00045d2c¢ç\U000ae6ac´kG³Ä¯]\U0006eceb\U00049776\x1fQÏ³ÂUw\U00057468!Ô\U000a68fewóÊ\x00^1>\x88K"øA𠟪\U0007ccd4JÜöo´\U0006e029¬Å;ÂA-Ä\U000e1e25\x17\x02\x9a\U000fce78,n\U000e6a79\x87¯s\x07Â\x1b(±\U00106219}\U000657b3êw\x9d¤u\U000ccf34m2¾Þ\x1b\U00031374ÇÇ\x1b㌏H\x08Þ8+\x9b7\x84^\x02W0C\U000f6221beÄP\x00²æÙ4zJ\x81b¿óã\x14©?ï\x84¸\x1dxÊ\x99\U0008609d4Ó\U000b7dd58\U000ba928¡𣌺Øa\x1f`C\U000e3a1c\x98\U000a9a3c\U00080b89찠M\x91ò\x1bF1¤႙\x03\U000c2d11\x90ä\U00109487\U00086be7\x16\x82«õ鱈<Ëá?\x90³\x9ec\U000599a5\x8dÿÃJ\x04\x88«\x81u&\x05¶·\U00082b87%\x82p¶\x1bF^\x87\U0004e64bÇÁ\x11ö\x11LòÄ¹T\x80ü\x9c\x00÷Ùô\x8f\U00103acb\U000fdfa1¬\U0010e6f0ÙYò®\U000d87f6\x8dT\U000f24ff\x0b\U0007e494K¡í\U00086c32\U0006ceedac\U0006076a/Z\U00040d89\U0003536dó8Êý)\U000dce18Q\U00094d6c\x1dkuñ`2\x04\x87\U000c0eff4\x19_\U000da061\U000e9425wø\x06p\x7f\x84_è\U000e38e7©\x11\'\U0001b131©L\U000a452d\x16\x00Gó\U0010d96ewÉó\U0004e349\U0005e9d4\x1e\U0001939e\U00090bf5\x82\U000f580a²𮁿\U000702ec\x84¹%Å\U000f4affKlML\\%(*\x84úµ\nýx\x8d\U000c8fb1m\U0005ba9bÓg\U000c9e8b\x03Ï𬍔4\x03𥊇\U000a9eadà\U0010b5f3\'D\U000612ce\U0010fe83\x8evd\xadk\x93£ñ0\x89\U00088239ÃI\U0007df8búÞ\U000d8dc8\U000c5c46úR\U000e8bb2u%\x86W¥Í¬;S7^VßÐ|\'\x9c²\x81\U000eccf4\x86ÒTñ\'ä\x0cÍ\x90ç1nÜ𘔀9W\x11iTì\x10D\x0cã0Éè\U00068512\U0007d45b8ÞO\x95\x89\U00090be2\x0fk刴\xad\x8a\U000a6067?ðö\x9bCÔ\U000b3113ðØøãCº\r\x95t\U00018f46\U0002fb05O\U000dd6a1ì\U000dbf8c\x14õW\U00051fdaÑ𘞄ýU,\x9e\U000d918f\x05Á¿\x1cç\x15¨\x0e6\U000595efJÄ\U00101a72\U0008815aå\U00074023\x92´b읢1wZzn&Ú\x82\x076\x0bÕ\U000ee386\x8dd\t¯\U0008c40d\U000c37ec螊\U000f3c7d ¡\U000f81e7ò\x83𞺵\U00088dd0\x05\x7fC\U00048f94#\U0003eb60íËð\U0005f729\U00095870\x8bý\x11í/\x87Ð\x91\U0010b414ãi\U000de52aR¯\U000320a3®\U0001adbd\x1f\x16\U000adcc7uP\'\x8b\x9f\U00086cd4\U000e11d8\U000f46ff\x0ef\U000bd589à哐 ?\'Nm´È8,\U0004753f✡¯å\U00061fe9\U000a6f9bWV¨m꼅/\x03\U000db56e®½ú4\U00059fc2\U00084df8num\x92X9å\x18\nPV\x88\U0010f3e2\x01\U00079543\x8a^;B\x02ù\x98§c1d\x04c\U000f168d\x84\U0003867f\xa0\x00â\x01=¬4\U000633e4\x85Í\x00ÖZ\U0005372d\r¾⥪y?\x8cn\U0005500d3\x15b2öhvð\x07ê£_§Là\x9e]\x83Ü\x15\x8e×ß\U0003638c\x8fÜ>féô-Ð\U00033b23\x17¸Q4ÞÑõ\U000d5ac3þìºÜøÉ\n\x03G\x9eÒAÜ\r´\x12¿++\U000415a6jTwY\U000a8920\x0embÉ*v1ñ¡ೌñxø𫷈Ý\x80\x99Ó\U000678b0\x84r\U000361f3\U000577f8\x13tì\U000dce03\U000c1ca1hßÑç^\x8c*¤{H)<\x05\x99\U00081b2e\x94\U0002ec8bÀ\U000b43b2\x1eàî\U001046edó|&\t\U0003486c$\U000de623·3»\x15A\x07\x8e^Ä+⸙\U0007bc7c\U000e423d\x80kõº\U000b4439\x88h\U00077f70êiõc\U000c2106«WDë¸ôí¶L!𣬦â\U0010a5b6\U00045c561\x0eiè\x9c\U000f73b0:\x0bc\x17Öï0ÔO\x97uº\x8f^ø\x9c\U000d1863\U00087bc6Q\x1a\\cÔ\x9561\x07ürÿ\tUç\U000b26efÑ4H°RAS\U00059783\U0005bd4aÏº¥#\U0008c2dd𐇨\U000f800f\x93\x1a\x90`V<\U000bce0a>\U0003177fç\x02mÆ¯\U0007402a½¹¾(¯Â\x08\x07\x05zb:w\x99{è\U0008c23c\U000643d1C,\x85\x8a¾)\x07t\x83Þ\U00103b9b\x03q\U00109c32\x95\U0006c01cf\U0010275f\U0007027a\U000bca30\x98\U000e0a33\x9aN|\x8a\x8a®°ü\x02\x05ò×\x8c\U000e610aPStª\x05\U000b4145ö\U000fbdb3ì\x9dò\x19\U000da06b\t<?¨\U00056c08\x81Z·÷\xa0[üæ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004028s
====================================================================================================
2025-09-19 00:01:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003604s
====================================================================================================
2025-09-19 00:01:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003868s
====================================================================================================
2025-09-19 00:01:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¢M', '\U0008b2b5', '\x9ck\x06¼HÜ8\U00041b50ð'], 'password': ['', 'Éô¡5', 'h)ÍX\x83B', 'Î']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¢M', '\U0008b2b5', '\x9ck\x06¼HÜ8\U00041b50ð'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', 'Éô¡5', 'h)ÍX\x83B', 'Î'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.0045s
====================================================================================================
2025-09-19 00:01:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['Û\x9b¶j\U0010cde0\\', '', '', '\U00091d02\xa0§\x08\x88\U000f92cc5\U0008e7a8', 'Â\x8c¹\x1aÓ\x17\x15\x88', ';']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['Û\x9b¶j\U0010cde0\\', '', '', '\U00091d02\xa0§\x08\x88\U000f92cc5\U0008e7a8', 'Â\x8c¹\x1aÓ\x17\x15\x88', ';'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['Û\x9b¶j\U0010cde0\\', '', '', '\U00091d02\xa0§\x08\x88\U000f92cc5\U0008e7a8', 'Â\x8c¹\x1aÓ\x17\x15\x88', ';']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003719s
====================================================================================================
2025-09-19 00:01:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -33, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -33, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003941s
====================================================================================================
2025-09-19 00:01:49 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003749s
====================================================================================================
2025-09-19 00:01:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x08 íâ\x02c\x93K/Á䦶öG\U00104d8a\U000fcbafN\U0009cde6\t\U000770b2»Ò·¦\U000bdab3³ÂÂ\x94\U00019d2c\U0008c9e8ㅩ\U000fbf0ai-\U00032d2b\U000f32fe\x8a9÷¶\x06\U00043773\U00092a82\x04þ¶{\U00091472©\U00012e8e\U00100cd3\x9c\U000d4dcf\xa0Q\U00082077\x8e:L\U00074cb4amxCN3;\x9fúc\r\U0005ce2e\U00080776©\x1dn[Dì|+<\U00032136\U000443f7¿Ü¡A\x1c\x92¶\x9co\U00071c2f둃ð§fF¦ÛoêB¥¶ûÌ\x0bdÔ¤âÅ¹©\U00086ed6\x9b\U0006a288\x9a\x89\U000b7e9dô\U000a5034tNã\x07\x0c·b\x888\x99Å·\U000f3724Â\x9b|\U00095b99\U0006392fÓy\x06\x11\U0004b240òÃÛuGÙÍ\U00033c2d\U0007b890\U00055e78\x0c\x18Þ~\nÍÈ<S!\x0bµ:°öDÌÍ}\U000e4700î\x99\x1b\x00\U000c1ac9\x1bÕÒ\U000df696\x1a\U000f7114\x80\U000862b9\xad\U000e1ea68Ö\x9f\x0f×\x06\x17Ü\U0006d3b0\x81\x13\U000638d9â\x8e\xa0\U0006d049,\x94®¤X\U000d8ff4\U000f7407\x14\U000fdb56\x8c\x03mÎ"魀9æW\x93:F\U000da392\U00050437\U000fabb9Kr}𰕛iã\x1a&4\x0e\x80\x8bv\x8f\x1bü¼\U000e9fdc}\x94¦\U000a5b6c:\x07;\U000df9e0J^\U000cafb46\x91®ëæ6·1¿\U000c005a¹kݟ\x08KÒN!éÝ\U000328af\x02\r\U0009d4bdò\U000e6dda\U000eb38aÓåq?l\U0003d78fü\U000a2a9f\U00072b0b\x8bì°K&𬁁á\x11𨼂¨9!Ê\ue9f1\x84\U0003abb8Í\x93\x93L_²¦\x9eø\x9dðt³í@\x1f¥í誸\U0009e1f9Þ\U0008ebb6eÜÃ2Ì;E\U0008a27cuÓN\r-;r\x8fg`\U0009caaf\U000e3f37¼S\x96x¤\U00058f57ø\x97Gf屖z\U00054fca[wr\x19Ù\U00062ec8\U000b33b4BZ\x9f\U000ba01f\U000ed90f\U000b195b\U000e3763\x1fñ¹aï7X\U0005fdceí\x07éôW\U000339d6Ø\U000c705e\x870\U00088990\x9cá:x¸Ô\U000ab06f®<\x89Ì¹Z\U000ae3da\U00046706OIP\x0cú6\x81ù÷\x8f\U00103d44ð\U000f6da4\x95\x9aÏEöc\x9f´ÅL\x12È«9Rl\U000a99ef\x8e\U0005d5af\t+0Ô\U00066f52Æ²|ô\x0c\U000c7b8ci)nMÃñZ\U00088466\U00052fc5xLÛ\x99璺\x02í°\x87\x9fÖõ\U0005191b«6ý\U0007e450ñB*\U00109555¾\U000a52de\U000e6583m\U000e9a7d\U000f376e«è\U00075a17ë\U00109a98ÿ§y¡(k\U000ee747B:ñ\x1d¨\U000ccedfhçz¤Ä!\U00076aef?çg𪬏¨4\U0004cfe3\x93ÉIÐL\x06\U00055291\x19\x1a}[c\U0004c823\x14\U0003584dt\x89kuÅ×®\x08´\x95n\U000a3fca×ÁN\ueb3du\x84𰚝.Ê¦\U001015f1C\U00104180\U000503fd\U0006d63b\U000ff390\U0003743c\x9f\U000a0cdfVh(\x8f·ýK\x19y㿼\U000b87e5ør\U00033dd2^5±6\x1a2\U000ef5d6¹\U000c9e04\x8e\U00102a19\U00091d2eN#C·ñ]¦Ïtà_×\x0b\x97\U000abf07²³ñä]\x8cÒ\U00041f4dº\x9eå\n\x81¥\U00057703ò7*4XÅ\x04Åß\x0b\x1bHÂb\x86𧕘ç/\x0b\t\U000c6553VÈÈ\x83\U000800b0\x1deߨà\U00041c57«\U000449a8Æ<³åC\U00059515\x9c\U00044c4eÂ%ÂN\x9aÀs\U0009df48𡪪\U000d4595È¨ì\U000db81cË6\x83Íýê\U00109fc2\x8e\U0010d017G\U000be185c\U0010906f\x90³ñ\x10\x90°É\x87l\x8eßù=Uÿ$`ë"\x1dá¬\U00094a81\x94\x91\U00082ed64*b\x8e\x1d\x7f\x19\x0c\x96\U000cc1f2\x8bäáì\x93\U000fefecø¯U\U0005b116\U0001fc04o\x9cq?©9=q¥\xadÇ\U000adb10]\U000e300c¹\U000a9cd6Þ[\x90=\x18v\x9fÙ$\U000388df\U000eb598ÞÐÛ\U000bca1a\x94øò\U0001e8da4üÞB\x1b\xadS\U0008bf4b\x05áUI²Ám\x9cj\U000c3961\x1fû\U00100406]\xa0á7\x08PG\x85YÖúÒ1\U000663f3`\xad Ì5貝Á_\U000b7c29\x94\U0010dec1\U000ca2d6\U0006892f\x00ò\U000acc5b·~(\U000d0c73𰮥í\x87\x1e\U0009546d;`½\U00100b77\U0007faee\x8f\r\r*\x18Ú¨\U0006c80cwÇZe\U00078c41\U000653e4\U0008784eûÖ\x16á&\x80\x06H\U000a5130\U000a0d3e\U00052997\x12\U0007937eá\U000a6d33Lf?¾ÕX\r%\x83\x07\x83\U000e522fº\U000cad52ﱟ¿nv-\x98\x01>9\U00090887\U00042de7\x00\x81c\x99\x02𓍂ù\U000c6c83\x91ëÈᰱ\U0010c47ax\U000ead2e@\U0005cd9d\U00073b9aÚ¼\x1d½ꩅ»\U000784d8F7a_b¯:\U00087ea8h\U000c05cb\U000b6115\x89s\\\x94\xa0S\x11ó9\x81pºx\x11¥T¢G좫íÅo\x17;\x80\\J\x1fj\x95¡ÿÈºø\U00074ff2\x12tlÖ¶\x0bÄNÈ\x02v\U00082b6bUQ,öÛ\xa0\x96Úµ\x1aÌ:J𡫨]u^\U000b1da24\x95\U001091d0¸\x0b°\x9b𢰯ÈTÍj\x86,À \r:\x07\'\x02gY\r\x9cÎ\U0006cfe5¨\x89\U000ffc1eù\U00061780µY\U00082b07\U000bde04µ;ßÎ}\U00013e6cíÜ¬N\x03j·M𗱧³\x0cÒÈ@ÜÀ\x1e4\U00042eceN\x7f75vòõ`Å\x0eÛª74çO#8\U00084e12\x7f\x98\x1aÅóᡱ\x01\U00046850~(-µ\U000e582cvL\U00094f7e\U0006db3a\U00063756ÓPe/¦\U000a137b\U0007c429§Û{\U0010171as6\U000ae375&©\x9d>-j=\U00092cfb\x13\x15\x99g^\x90\x11\U000d04a7\x01𥰭«WmWÝ\U000f9e74¬\x13K¯rø&º£1Ô\x12Vl\U00043042\U00054ed3J\U000ee15e𐩰ଉÓ,\x05\\À\U000f9f1f\U000a8af4\x81qosA\U000af152é\x8c³\U0003c93ec\x80\U0009b6deÄÐ\U000e472e\U0009263a®\x17íú&\U000559d7o', 'password': 5}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 5, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003611s
====================================================================================================
2025-09-19 00:01:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -159717091881920508455378043880266284916, 'password': -3789}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -159717091881920508455378043880266284916, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -3789, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003749s
====================================================================================================
2025-09-19 00:01:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 1732001912}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 1732001912, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003585s
====================================================================================================
2025-09-19 00:01:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003769s
====================================================================================================
2025-09-19 00:01:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -123}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -123, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -123}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004002s
====================================================================================================
2025-09-19 00:01:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U0009dbd9Ô´\x96s\t%HÙ³dgÿ\x10óÖ<Ä°\x8a3\U0004784eúVôK\x0bH\x12ø\x89\x06²BH\x80¼ò\x8d\x91é\U000d973c·bô*øyx¤[\U000c9235\U0010ea97þf\\èÈ\x00eôÖ\U0003c297%\U000830c0ý\U00039cdc\'\x90FG¯½Q¦שׂK$Û\x96\ue41a(|1I\x03\U0008afd6÷\U000c4c80¹Û\x8c\x02ÔdÖXr½\U00075f7f\U0010a46f{q\x04Ãi\x0e\x92X\x061\U00045f13\U000eebf1\x91fA\U00013af7\x8b\x04\U0006e05f¿Â\U000cbbf4ÏåQ]²\x1fån\x95\U000b4eb1@Ö\x1e]jë\U0008a060\U0001b73e!\x1a\U000c1d42b\U0004e1b8\nÏ¡\x8e\x9d4𰲑î\x18!j\x01\x98\U00016bd1\x0c\x07£Gû»\U0005f9e7\x7fó\x80ˇì<}\x03\U000ee5b9n\U000dfa4f𗅲\x12¿\x04¸\U0009578d\U000809559ÈPæ\x86è\U000156fa𰁨+[ô𭯔\x7fJ#â\x8byü\U000d95d4\x8eè\x8f\x1a\U0008ba25\r§\x8f𞲟\x97𘑜ÄÆ錛pÆé\x00\U0001545a\U00093e86SPr5°^\U000566d6\x84©èË*\x8dEÜ\U000f37caÇÙê\x04\x17ü9U®\x98j𓃞¯ÈSÉä\U00085d8f\U0002fe15\x82D\U00109c7cÑe\x08\x16Íp\x84<ï \x18-çO\x9býã\U000478c8=󠆽¨\U00011fba4N¥\x17\x83𡺇á\x1c𧵷0\U00103d18\x7fÆÂù\x7føÍ\x0b\U0010dd5f\U000dc3bf\U00034e5c\U000e53c8\x9e×ÊN\x0b\U000dbcb5O🥫æ³ÜS\U00074bbc[)(X\rQ𪿐R\U0006a7e3}ò\x03\x1f\U0008ec72L\x12Ü\x17ÿ\x035óg\x98k\x18Å£\x16ÙôøÉ2Ç\x8e¢ ¯§#â\x89è\U000407c1\U000f53f17À𤰳T\x83öêuªH\U0004ef8e:¤æ\U00042d06¢Ú\x9c\x14øÚ\U000f2807\x86\U000cd6da@\U000eead6ÃïÊ\'-\x9dÈ\x9bÂØ\U00050626Ô\x98º\U000fabf9/\U000e721a\U000ae5ac7\x9dðL\x95×8\x8f\x0f\x97𞥁\U0005229d¸!\U000a4379¬~¿÷\n\x10c\x1b|åu\U000ba7b2#ëÍ\U0003172c\x10\x80\xa0dE}\U000a8290\U000b1b12¯mÎ¬°pªQs*»ûµ\x95{\x14jËu\U000d23be£/pr\U000ada76\x05\U000e3e02\U0008964d\U000a6eb7\U0006f70f¥íþM·\U000dd175\U000d9808@熨\x8dqxÑ\x11bÁÅ1\U000df15eA\x18·\x87ç\U00055ced\U00067848O\x0e²\x9eÿ\U00041078\x8b«\x7f\x1f\x90Ï¬åD\uf041»AÓØkN\U000eafc2\U001094b8\U00095951@Ã\x08øv¤&Ù\x7fìP\x0eÇ\U00101094\x82Ç´3ÓH\U00035a30Ew8\x01\U00067975}\U000c6afd\x9eô\x91f®²«Îx\'\x8b©Ã\U000d24fc¥Wû¡\x10\x15¾\x02l\x07¾\U000ec72dÙ"×õÝ\U0006caccº\x87\U0004734eô\x9fw%«9j\U0009a98cº\x18¿C[l\U00096360ÿ·«\x08qZ\xad\U00069b25Ø¹Ú=+FÕ\x95\x91VxF\U00092a22|\x98𗭟𨌧ï\x08_²\U000d4b77[\U00097686á\x94\x93\x9cg¯\x12å{5\U000bab52KÊ\x01\x1bÌÚ%é\x04f!a\x9b~\x17\U0009cd47·g+\U000b885dÿ\x0fß\U000c71d7휹²5Ì3\x8e\U000e13ed:ÀRÀ~+ë"\x08\x12t\x12\U0008ace8¬ô\U0005f845`h»{\U00073b57¼𐂽Ð\ue6acSyPx+\U0006598b¤\U000e10cb\U000ab23b\U000380b9ú1\x02ûïÊiøßT\x03\U000e4edcOc\U00074338Cï\x00w$\U00087f35OÏ\U000ae757\U000ecc33\x0e\U0010a5aaq\U000cb7a8\rF«\U00065341É\x97\xadÇ»漑0b\r\x13)a\U000b2009\x98\x92~𰵊\x0b¢ò\U000abc99 \U000cf46af\U000ddbdf\U000ff6ebÇ\x1e@\x8f\U00082791\U000c35ae¼Ù\x19\U00043e93>\U0009f680,銚a7\U000a5f708𡻾\x12\x87\U00095e5c\U00064891\x83\U0001600c\U000b8373Z.Yöó\U000d3064b\x92@B#s\xa0\x95|:jÒÅé0\U0006e2fbDB\U000631a2\x86ý/:,\U000d9c76»úhÅv\x08𣒇J¤\U0005e77e\x1e\x88&ÛÜ_𤉚5\U00055144\U000b6325\x94\r¨kä\U000916c5%\U0003ab02Û\U000d93e1\U0006aef0@ÍùXáµ\U000b883dJ\U000f3484\'×N\x7f\x85Ñ\U000f4278LㅘA\x01¦"é\x1d\x10/\U000bce0e¬U\x8f\U00043013\U000be9ea\U00086841\x0cß\U000ebb0e3L\U0007b3fbô\x7f0\x8c\U000b94ec¢\U000c464f\x83?\x80\U0004d5adY}2\x8e\U000e5f6bÿ\U000c52a8\\\U000f15ec\x0e"cMj\U0010429cf]\x08\x7f\x1cËÛ¡¼÷ú\x02\x99\U0005a620\x1d<𪪆\U0007b0d9\x18\x87jÏX\x97ó\x90\x02Ò`æbr\x08\xa0ÆxE\x8c\x9b\U000bafdbà\U00043c8c¹\'ìÒaT!úns\U0006e07d>I\U0002f0bf\x9d¢\x7fÏ!°\U00080efc4oÿùÙ\U000a393f\x1båÉu\x1cW¢;\x82åXX\x15ìØ}º\x17𡣁â\U000e3a4e{º÷{±\U000fd1eb\x1d\U000b6eb1\U0009ab8aØ2\U0006fffa\U00076166\x83W\U000a0ce2\U000876f5Á:\x19ñ\x0e\U00063e1dSt´Ñ\U0006f19b\x10\U000ff755\x03~\U00061a2d\x11\U0007197f\U000bca24\U00085633fÙ¨"ÛG\U0005306b\x82\U000824e7\x93\U00076de0·\U000e9d78\U0010af5a\U00059b7c+\x8d£Þ\U000d68c6Ü\x94µçÂ(lj\U00076ebd\x96}\U0002f776\U0010ca30'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003637s
====================================================================================================
2025-09-19 00:01:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['®\x89', '\U000b2ad4iø\x9c', '\U000a3f0a\x03', 'ØL\\d', 'v\x7f¬í,#0N', '\U00100675', 'i\U0005e033jØÝ\x12', '@\U000a754b']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['®\x89', '\U000b2ad4iø\x9c', '\U000a3f0a\x03', 'ØL\\d', 'v\x7f¬í,#0N', '\U00100675', 'i\U0005e033jØÝ\x12', '@\U000a754b'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003971s
====================================================================================================
2025-09-19 00:01:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U00072559W\x05\U000ff495\U00089e08\U0010a7a0\U000b7e10¤È', '³\U000af490Îë', '', ',\U00064b75Þ\xadqó!E\x11'], 'password': 49}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U00072559W\x05\U000ff495\U00089e08\U0010a7a0\U000b7e10¤È', '³\U000af490Îë', '', ',\U00064b75Þ\xadqó!E\x11'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 49, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003611s
====================================================================================================
2025-09-19 00:01:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '\U00052b02ý\U00066e66c\U0005cf2b\xa0\x92æò\x8a\x14\U00106d9b\U000eeb9fxâ(\U0008ad94\U000679e8.ñ\U000c5dd6\x1d\x1c\U0003350b$Ô\U00071a33VxÁã\U000feaf16¾\U00064995A\U000e6d98\x93\U000d75ee \U000dec17Ù°®¹³ï>ã(Ã𰔋Ò\U000a4b2dz;¡¢U7\x9f\tµ\x8c|i\U000c7aebÈtÞ\U000ecce79\U00108d32\U00050398\U000bf40e5\x05ÿ\x9a\U00058eff-\U000e9ef1±ðQw\x1b\x89\x11\x0bV\U00084bd9\x83\U000bcda4<\x9b|MG=\x85ñ\U000a0148·a\x06𗧩\U000470d9ö"¢;\\´@º\x8f\x1f\U0008ae43!ð¬Í\U000926c1\x01ÄçÖöW\x85rªøèú\U000a5cbdñ\x1d\x1e:\U001007a3\x12\U0010282dÿKÕf𧪕\x87\x11\U000bf99e\U0006f688N\U000d3231Ó&\x1aÒñUwø\x1b\r<\x99🖆.jx\U0008968a\U000c017c-\U0010c961b\x1bW¦\U0007ccca£ß4ì\U0007d064ÏÈ\U00058e8a\U0008d160\x0eÆ\x9bÆ°P\x16\x04¿3Ñ\U000bb31e\x8d\U00095f26\U000907e8(]ów\U00108dbe\U0009b3b5\U000a6359ꂹà\x81\U000a5bdd5£x𮋓\U00038df2t\U0009cbba\U000bde48\x99𐜲\x03\x81%÷?o\x1fï\U000e9506n\U00085775O\x19M\U000950a3Ü\U000a3187Ú\U000a0089S\x8b÷:g\x8dõ\x02ü\x06葟\U0006e9a8>\x0f\x10v\x87ùMb¢▮\x85\x18§øc\U00099296\xadkwïVð.qc\x0býã\U000694e8ß@A§T#øÊ\U0008a5dcé\U00016cb4Ñ\x91Å\x8e\x91\x10q"\n\x81ïÈ\x8aáKq\x90\U0004db79\x01\U000729d8\x83\x84JÂÔxJ1\U00107a72\U000afd51d;évû-±Ë{Fh\U0003fe99|\x9cÜÐ\x00\U0010e5a7\xa0q\U000a7a4e\x87%^Ò¯}!\x04å\U000324bfáVw\'©?\x16I<\U00083fa9gYm÷BÍëÿw3ô \U0003bc18ÅÇ½Ç{\U0003c15b8\U00093126mÕ\U0003773crÅÀh¼±r\x1e\x95\x9b\'Ë\U00086e8d»L"\'6\x0e\U000f4f0c\U0003d4ab\x9cy\x12uÔ\U00099d1b\U00075e8b\U000f6a30+Õ\x00\x18¢ãp2;Ú·\x94\x86OÖ9O\U000ec297+%\x13Dꥏ¥\U000e335b\x83\x01O(Ue\x86ø\x87\x08\U00107e938\U000ba89aJvò´ýx\U0005eb5d\x98\U000bdde1ï\x14\U0006c21dÚ\U001081f5\U0007d05dT0ñØ\U0009f007\U000ba17d\U0003d996\x91ú\U0007d038\U0006b4db\U000e1686<𭩷\U000c3985\x95;\U000b1c91\x05òÏã} \U000f32b8w\x80þ\U0009bf11\x04·\x11\U0005ae0a©§|äãT\U000de261Ø`¬j.äª\U0009005e¢\x01ðó~ÿÈ+\U000680dcª\U000aa65b\xad\x94𧠃³\x12*ú\x92RôðFÐ\U000da608®𫙚\x8aOàô\U0009b139p\U000c08d0K«\U000a1640\nR¯\U00058adaò®\U000d3d84ôOEÇ\x04N*Ñ¼\x00E𰛡`c¸o\x90à\x97²\'\x07Ô\x8eáTâÃày\U000bd477\x1a»\x01/\x03¿ï\x86u\x98\x91¥_äÜ\x1e\x05\U0010bc31»ú\U000b92ea\x7fäjm\t𨮎4ñ\U00103531\U00105cb0\x94\x85ùý^\U0010f2c0\\\U0006b87e¼Áe\x9e\x0b%\U0010d9ee\U000b36d1Ç\x15Rvªhû\x17§\U0005af128´\x11\x9cf\U0002fe60岣þ\x89\U0010e308°\U000fb2a0\U000ce5c6Z9÷Æ\xa0\U000a8286íC\U00090f91\x81!\x03\U000915bbÚ+Ä\U000e9e8d²ê!gØ\U000f5df8C\x0e\x8e𡥼3ñÿ0Ü𪓥zÚ\tZ/ø\U000f9d92°BÓB¯\U0003a543\U000a727e\U0006c61f²æ°\x15JÂüí?\U000d7798\U000322e9óB\x11Q\'\U00081e65\x08ïL£þqöº\x86gõC\x0e\x86²\uf23d\x91\x85\x18MFXå%\U000d9455\x1eÇ\x92\U000a1e0bbM\x7fâîk\x17 \U000a6699\nùÉ8¶û\U000b874bÑ\U000c8ceb#\x15\xadÉVKï\x11\U0006029f\U000a21c4ÕµT5§7Q\x0e¨¼Ø"\U000e6c24D¯\x02\U00044fbfEþ#!\x07\x83Ó\U00067f96\x9dýZc\x842\U0010cc35𰍪I\x19\U000e5481\xadE\x8f\x07\x9bqnðh\x1b\x83g\x9b\U00058fc0\U0009d12e\x12\x1ar\U000f231f\x99íÛP\U000cce03f\x1cÑ\U000ca8bf\U000581cc)x!嵫i\x81\x18tï\U000df77d\x1aEë\x91Õx𨃦qNË?µ\U000eb3ca\U0007d524Ãk\U000de3ddy\x88ì_HsaÅ(\xad\x87\x96\x1eâí£¼xÓ´\\lÌ\x8d\x8219\x12\U000eb7d2\x03]f\U0009169bê~n\x1fa𧉰\x0b\U000b0048\x1bÁ쌀Ùz\x17\U00052b4eßS2`/\x1dR"\x13,öàX\x06"\U000b192d\U001002f6ÞÞÃ𤿞\x845;óÿ.ÊÜ \x00\U000ca7b9\xadýh\U000da991èéÍ\x98ôIGzOa+\x13\x8e\U000736a0\x9cèÁ獹\x89\x7f6&Í\U00050cde\x8f7\U000d5dba\x03ý*\U000df19có^Õì\U00036f7e~Ó3\x1c¢\x04ÁÞ\x01Õ\U000ac3f5~\U000b7ab4k\U000df36d\x0f°/\U0003a528\x87\U00063caa\x13\x98[ÔG?\x802é&^ò÷¯J-\x9a椹óÑ\x1c\x04@\U000488f1Q\U0005dd0e\x1d\U0009cc24í\U0006a0a3\x9b\U00062bc7犽ýQá\x0f§F\x1a\x83³íÃ\U00102c8cå1\x8dÈ\x80\x0f\U0004b078\x88u:Þ\U000801a5\U000c5cbd\U0008c952\x8b« \U000e043dqh\níä¹\U00078739bò\x0fäõ×GC\U0006bb00\U000b45c9\x97Bó\U0006f866<ë\U0007f6368%¥\x06\x1e\x8a¼\x14èL\U000b84b0â\x17\U000c9630\x17\x82ᵰ@iÅó𣭠Ðüì\U000863ccü\U000e12fd\U0006feaaÒt¦Aá\x0c\x03\U001014a9ð\x85å\U000b1991\U000b1a84Ù\x98ëÞop\xa0å\tï\x82\U0008ecec\U0008c5effj\U000631f3\x83Ö±\U00049c2egËC\x07]üä\U000a5972êoæ\U000e39aej𫷸õ©\U000a775e\x8f}\x89\x94È»a\x0b,ÿÖt\U00058cd8sX\x10\U0010eb8bVîÅ\U000ae617\xa0\x82àê\U000c26f2\x1b\x8966\U000a64451\x9aêìÊ\x195*\U00093098\U0009bb85!ö¼\x19w𮟀\U00051c03|¹¿ôÊ\U000416c4\U00070995®\x17\U0004e1f0*6h\U0010c677µ:\U0001b4f1¥{\x06.\x0b\x866ÐÊ sæ⮄(\U0001199e\U00089ca0\U0009227f𛁻j\x04ä\U0006f6deQR\U000c68a9+\x83r¬}ÈU\x9f(@\U00043fecÏF\U0009aa37L\x98<¿\U000ddf3aOcRË@\U000ed7e5µ½\ue491ïP£\U000cfc22\x8f`\t\U00102143🩂É\U0003825fô4\U00090982)\U000650c9O\x80\x84Ée\U0006a84aL5\x04\U00092ee8\x8dª\U0010899a\U000b0bad\x03]¶>\x1e\x91\U00107f270ôä\U000a4a6eYÛ\x07\U0004fcca\x03ù\U0004dbe5¥S|ðil\x04Õ\U000fb33e3\U00047b98øÿ,q\U00108dc2!°m¶\x96ÏÉ¸°*T}\x1c\x0fs\U0003d716\x08\x9c\U0008e98d?\x18Ä\U000ebb13\'4Ô÷\U000e7366HZ'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003707s
====================================================================================================
2025-09-19 00:01:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 26864, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 26864, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003601s
====================================================================================================
2025-09-19 00:01:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['\rl', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\rl', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003688s
====================================================================================================
2025-09-19 00:01:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['ä', '¥\U000d79bc\x18', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['ä', '¥\U000d79bc\x18', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['ä', '¥\U000d79bc\x18', '']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003632s
====================================================================================================
2025-09-19 00:01:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003642s
====================================================================================================
2025-09-19 00:01:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -110}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -110, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -110}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004154s
====================================================================================================
2025-09-19 00:01:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['s¤\U000b63e8', '=\U0003a067\U0001a0e9\x80(\x1f³¹3×\U000e6003\x8f𬼸PU\x16', '\x822I', 'G\U000c6fa7¸¡åñO', 'ò\U00054154\U00034b9eÂ\x1bV\U000a9ea4', '', '\x1c¹\x07ç\U0006dba5ê,\U000ef7e42\U00062821\U000cd68e\x94õ\x87@', '', '\x95¶©', 'öÙ', '65í', '\U0010bae1\x19×\x18\U0007cd87', '+\U000661c0\x05', ',\x9bM^'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['s¤\U000b63e8', '=\U0003a067\U0001a0e9\x80(\x1f³¹3×\U000e6003\x8f𬼸PU\x16', '\x822I', 'G\U000c6fa7¸¡åñO', 'ò\U00054154\U00034b9eÂ\x1bV\U000a9ea4', '', '\x1c¹\x07ç\U0006dba5ê,\U000ef7e42\U00062821\U000cd68e\x94õ\x87@', '', '\x95¶©', 'öÙ', '65í', '\U0010bae1\x19×\x18\U0007cd87', '+\U000661c0\x05', ',\x9bM^'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003555s
====================================================================================================
2025-09-19 00:01:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003806s
====================================================================================================
2025-09-19 00:01:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003809s
====================================================================================================
2025-09-19 00:01:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': '§öû\U0010f403\U0009f591\U00100f5b©£\x1e£\U000f2e87CxÔ\x1bªh)\U000367fa5\x88Zi³{ÉÖx\x1a\xa0¢ø\x9dõ\ry\x1a\x1bù\r%\x81EgI\x92Hê-\x83ÇÙ\U00087e5eÆ~\U0003e4a4\x92aIå\x8fI\U0006a11bÕÜLâ&!\x93s \x1bò\U0007a25d}𭽇\U000739da\U0008a447\U0010fde6\'eü\U00033044\U000d7acb¸\U000e50c3¼~`\U0009914b\r:\x1b#\U000b3458\x0bö\U0001e65a\x11»í\x7f\x1aÎ4Ã\x13·I\x82TN{Z\x8e\x9e\x1a\U00085472tæ\x15Ø5PÄ-¦£𠹙\x91Ø,\x08ü]\x1ah\U000ec4e2尓\'\x1f\U00097f4fQ\x9fÖ÷Ó\x80\U00075d64u\x17\x07«°ó>\U0003ce61𩣿¥Ñè÷Î\U000d4be0\x1b®0\U000d4398\U000752cdâK3j\U0004b92bÛ¹ò¸×à\\\U000f9a2bÚ Ð½å𣓢äw\U00013f6b\\3>n\U000e4f35\x84\x03\x1dü\x80¡\U0006b902<-&\x99\U000ec587xäê\U000eeeb0IZG\U000f2172\x08ò·æ_\x9e\U000f342a_§\x8b\x11\x00\U000f21f2\U0007e07bÝÛ©Ooï^\U00064f97\U000a24ec\x92}𬮟\x0f[J\xad\U000f1b83\x11𖹴(\U00053d88\x8eJ[\U000b7f15뭋\x0bÕ\U0008c6d3 \x11\x10\x166\x01\'Ç\U0003966bâ\x81 \x13¸âÏ\x01P\U0008e6a1\x13\U0002ef24\x1c\\\x8b\U000f2e29\x1e\x06=s±S\U00106bf7ñÈî\x02\x95\x00\x15ì~ÙH}^\x02±d\U00071747\U00072f06Æ\x90\U0007b7ddr\x16ûÊ1I£æ¢QèÙçoù>\r\x19Vk\x9bÓ:\x12\r\U000dd5ea\U00068d70\x1dËíxûÆÉ\U000870f3ñ\U0007bf02d`ã¯\U000b73d6\x1f\x14)J0\U00071166\x02Îà\x02\x06¸\x18®\U0006112e~TÈm\x1e\U0010a3ac\U000e0b1b\U0003bcc1¸1x\x86\U00088d94F\U00101089ëÕ\uf30bÏkÁ³ \x14䧱\x17ÚÜc!±¿¶\t±\x87¬\x8bjV\U0010fd44LR_\U000b1354\U00048087\x084}ê𧄱1©qæñC"zÊÉ\U0001cacc9k\U000d4976\x85IdRû°~\ue879Z\U00083ef1ëa\x130:\x94< 9²\U0001a7ea\x95\x85\U0008aadf\U000e15ab\U00060cf1¹1Ö\U0009d475ð-𘀶ñÅNw<\U000142c8\x84Åu´\U000d18c4¬¼l\x97\x80\x13Ò\U0010f6e2\x17¹\x8bf\U00016c9e\U00043273\U0008e1e8Ã»Cÿ\uee78ð\U000faad6\x9c2\xad\x1bß\U0008be74-:\U0009d0a7Fî%<\x0c\U0006dbe7\U00068827,\x8c1\U000d118fÜ\U0004875bP«Ã\U000915e8Ì>\x94\x95\x99*þ\x8fx¤õ\x82;Û\x9d\U0005a4b0W\U001028db\U00095888\U000ca3c5 Å\U000a1f67\x19\U000c5b60KÖ\U000c737að°Qâ]êÑ#\x88Î\x9b\x93\U000b73bceÐDUÉ\x15\x8aT÷\U00097e2a\x97\x92\x0cwI\x86åöK\x08\x03u\x9aà\x0b\x1e\x0e\U0004a9de\x7fmá\U00061093\U00019365\x8cÁG-\U000a0121\U00107715\U000edc54㭒\x0b䤑\U00036e1e¦1q\U000c9421ÚÈ\U00048838°뚳¡OV»ìâÌ\x01ã\x02(,e{gÂ¬þ\x9aÒ×\x9a?\U0001c6e2*Ë\x1fªø\x93L\x85Æ\x12U7\x84ËE\U000e3bb6${ {µ®\x8aÜ¼\x17ý\x93\U0006a438 ÑákLÔ\x84W𠌖\x16\x84 º¶\U0009da29Tt\U000ad5c5\U000ce497«\x9fÊì4𠿺Ý\x87\x10¦\x80è6\U00091d0c\x8eSÈzf\U0009b9c7\x10\x1b®ìKÀ\U0005ead5\U000f7095\x9ck\U000e9f53\x96\x8fY\x9b\x9a\U000583edð/\x1b\x1d\xa0Ê㦃\x1dÈÈ\x15\U0008b22f\U00060a45ëÖ\U000341eböü\x85\x0e<\U000e4b19\U000e55a9\x1c\x91õ0`Á65u\x90\x11Ñ=\rPúæ\x0f9M\x7fªke\U000def0e\U00107903\U000d1349ÛÍöÌ\x9bÎô¬\x92\x05\U000f1d4fõÉ2ßG\U000a8659âõF\x83¶Ìæo\x14æ\U0005c3b0\U000fba9aÌ\x90\x0b⋄T( \x18Øá\U000789b6b´ß47¦\U00066249\x17j徎§(\U0004a1a5\U00081edd\U000a2e70W¢ã\U000e8d6e\x9fk\U000c108a\x01\U0008ba92`c!ü\U00072d40Éð\x8d&^U\x92]¦\x1a¥\U000b8cea\x90ÅP\x83\n\x00㛈qBmÚã\U000c9b25kÓ£Ð𭷰íwèNÚ\\V\U0010cf47È\U000cd023\x0fÔ\x10Ö\U000d1748.\x89b\x0e\U000c02abÉÚøË\x1eÍ\U0007916f Þ$\x85®Ü¤\U0003f089\U000e3c71𣡨y;ù\'¤\U000cce28갴dí\U000a9bae\x14\x04b*\x92ÌL\x158u\U0005fb9e=𡕤\t\U000729ab\U0005ceb5S$\x17i\x9dÊ%t³\U000eef88\U0005c1e0BÝ\U00067e07HÌzø\x87\x80\x9e\U000bcc89µÑ!\x84\x9cñn0Ð\U00077a72\x8b|\U00085a67\U0003992bù\x99Ë\x17WØÅÃ{7øËm\x12Üà¹È«\U000f8ecd\x1d"\x11Aª\x9dß×\U000dbdbc\x97#\U0008c91bÜ\U00062d7b?\U000cf596\xa0Ï$Âïµi\U00031433\U000a6225\x8eæÕð\x1b^\x82±¡n¹\U000dde4b\x08\U0009964f\x00N\x99.\U000d34a6¿\x8aWÂô\x16\xa0Áò\x9d\x91º\U00064f46É\x0b\x14\U000500f6\x12o\x17\xad\U00048ba8ÈGþ\U00013735\U000710eb\U00068153@q´\U000f730a¶<\U000b17afOÚuÜ4\x95\x87\U000dc74c\U000c0277\U0008a578(𫓌ë°ä*ØG(\U0005e7f1ÛßB\U0007a4b1¬þ\x9c\U000c6ed6\n\U000aa800\U0010d219¦\U000b7cbf?(êr&hðK\U000142c1®^½\U00092c74\x8f#l÷\U00086529dØ¼𥧠¸ûs\xadÉpòEÝZïÁ\x19Ñ\U00065a9d\x02\U000a24d0õÉ0\x0bu\U000e5e10\U000127e8 ·\U00087d80\U0001a22d¯Ê\x0eý(\x19}\x8aè6Jå\x12\x89\x02\U0009e3cb¢Ù\x82\x9d\U00085f4e\x9f\x96𗯗¶OÎY\x92á\U000fdb29\x00\x81ýᡄ´Ã\x05\x8c\x16瞫è\x92\x03Å\U0005c8aa\U00064487?sÿP\U000f0fc0\x14Z¶]\x96\x0bë\x9bC\x86Òi\x9eþÃ\'"ä\x84&.Ë\x8fÖ\\\U000c118d\x11©_y\U0005ea14âÝ\U000a2c07o\x17ì\U000abd06\x98\x9eW\U000c576bZVlHW\U0003d3c2ÍÃ𞀟4\U000821ed¸¬\U000504a0\U0009c54c¡½Ê\U0005b4ff\x10SsþÐ\x17NØÝíafÿâ\'\U00061d8bà!Sép\x9f\U000cb3f0\x82A\x1f\x9fÎI\U000a8efb\x1e8¸j\x106È\x12\U000bbef1\x1d\x08\x89\x7fOc\x1b<\x17\t\x9f R𠺑\\hU\U000c2158½²<\xadÖ?\U000891c9\u1ad0ÿZ\x87D\x07\U0010a801\U00096a5b¢\x90c»À\x1d\U000dd539µr\U00038f9aêçæ\x10\U00055c17n!ï\x17\U00092b99=(\U0006b843\U00036b40\U00094c5bç\U000b6e76Ãª+3DÆ\U00056673\x90\t𥤍\x8aFB\U000600b6\x81\x00Vä1\x15`ª*\U00102503oÜ\x80»\x89çÈ\U0004ae1eÒE\x1b\U00096ce1\x05è\x87W\x0fNm\U000d4dd5\U0003a813\x8dôßMLCéë\U000a96acæMÜ\x89\x03ÄÌ\x16GEG`\U000df345|\x19\U000edaa1Ü\x88d\U00056289d®4\x1d\x85%\U000df499\U00089bceW\U000a8d9eôîÕ\U000d4166\x98R\x7fA¸#\\°\x8aN[W\x88ð9\U00091f74)h\U000e956a~û\x13\U00073952\x1f¸bÑi×\U00090732Â\x8d𘨓8~\xa0¨Õ'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003585s
====================================================================================================
2025-09-19 00:01:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003499s
====================================================================================================
2025-09-19 00:01:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U0009e4ea.m\x9a~º\U000fe05döì', 'HÄvÈÜ\x82', '³WóCe\x0c\U000d87f1X', '\x07', 'ù\U000e59ff\x9c', '«3ó¥Ô9}z÷\U000edfdcëð', '\U000c7eb7\x86쇃,¦½Ö×U\x9b\x08\U000804a9(\x9c\x17'], 'password': 0}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U0009e4ea.m\x9a~º\U000fe05döì', 'HÄvÈÜ\x82', '³WóCe\x0c\U000d87f1X', '\x07', 'ù\U000e59ff\x9c', '«3ó¥Ô9}z÷\U000edfdcëð', '\U000c7eb7\x86쇃,¦½Ö×U\x9b\x08\U000804a9(\x9c\x17'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003742s
====================================================================================================
2025-09-19 00:01:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -4921}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -4921, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -4921}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003778s
====================================================================================================
2025-09-19 00:01:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x983\U0003cf09<\x90\U000d8c6b\U00093aa0\x08\U000ed250', 'm,{\x8e^Ö\x1c\x01\U0008225eV\x19áâG\x98WkY', '\U0004a5d7', '^ogá\x16𨛺lû\x01»Ã', '\U000ebc1d\U000cc4eaè'], 'password': 15497}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x983\U0003cf09<\x90\U000d8c6b\U00093aa0\x08\U000ed250', 'm,{\x8e^Ö\x1c\x01\U0008225eV\x19áâG\x98WkY', '\U0004a5d7', '^ogá\x16𨛺lû\x01»Ã', '\U000ebc1d\U000cc4eaè'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 15497, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003708s
====================================================================================================
2025-09-19 00:01:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -2011712915, 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -2011712915, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003855s
====================================================================================================
2025-09-19 00:01:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -5597}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -5597, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004123s
====================================================================================================
2025-09-19 00:01:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': -19839}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -19839, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003787s
====================================================================================================
2025-09-19 00:01:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -6222, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -6222, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003567s
====================================================================================================
2025-09-19 00:01:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['%aÛå÷O¾]\U000930d6û\x14', '·', '8\x19L1ZJ\x1cAp$ûy\U0009b44cÁ\x9d\U00100960i%\x05ö)]IÑ', '', '\x19'], 'password': '\U000623e9\U000d0604Ó\U00048bd0ïÞ\U0006e8df\U000b9061^\tö_}\x10\U0004e276\U000c14faY\x07\x90𬴑\x9bÃ~\x96|sî\U0008e566«J\x81𮟦¯@à!Ô\x82Ö³¼\U000cc777\x9a\'ó!\x82ð𐂶\x91#iÜÒ𱉢\x86\U0004a6cd\x14\U000c7b3a¥\U000abd2c\U0010b399\x11\U00032b2fâ\xa0Y\x0b4ßLÌÇ\U000ba267¦\x9cö\x9b/\U00038e48Õ\x80\x04\x87줋\x1aY䝒y\U000c97f8\U000505db?\U000ca4bbÙ}{³\x08ÝY\U0001b5f8\U001029b9\x0f\U000d96fa\x029ãW\U000edcdf\x97gjV\U0004d306lkôIÖ¼\x1e©[\U000a7260En\U000b156c\x0bmê\x88÷w]YsDió6Nñ,Â=ý\U000934aböÔ\U0004675b\x8a\U000570a6;\x1d<ÆE®²NpX@\U000bfc3dX`©½è\U000494bcbª\U0005bc9f\r\U0004f2c6o\U00058620sæ\x16脵É7\U00098dbc\x13\x15;ÿ\U000a5f0f( \U0004a33b\U0003cd9b1ó\U000ac649G\U00073419y\U00055018ð \U000c2c67\x90c}\U000c0dbc|Ø^¡²¸½\U00056e82\xa0üä.\x8d±\U000e38aa\x85Ì®í:\U0008c956bUeÃ}\x1f\U000d4d90À®}䯠\U00052f75÷ú\x0c\U000d6016Í\U0003fbcf·\U0006b487\U0007df2cþÉ\x97\tKò𩊫Þ=xô\x14\U0007f407éLl?ee~y\x96QáL£\U0007c64b\x07\U000eadf9±T\x91\U000eaa75)S/xºÐé\U00092bc4𡬬,𥓢Ù\U000f6b260 £´\\Ýf~.¨\x89\U0004126d\x076\x17sÅ\U000eb024\x94\x9f+B¾òÇ¢\U000ee044K\U0001e0f0ùø\x0e膚\U000bfd2aºhûÌ𭈎ê²dÌ\U0008dee2\U0003753a\x98ëÏÀ\U00037456\U000d3839\n\x10\U000a710bV¡ç\U000f19fa\U000cc054\x88a\x9fò\x0f+)\U0006c7f7>\x12ða\x99\U000a1ceeO\x12\x15\x931\U000c29fb\U00078b8aP\U000caffeÚ4Í𭂗\x12𥤒Þû+\x89ÅkýK¢\x01\U000e13f3\nÍ-äé\x9b\x87v\x12\x8eð\x7fJ\x8e\U000e4ee9\U00032c02Ná\'e\U0005e8f2\x82v\x80\x15\U0010c23e©ë~Ás¬]·È\U000dca73\U0007fb92\U0001d3a0\x9dµ_|\x04¨»¥;À]\x90Nõ¨\U000a3cf4\x13\x14\rlô\x07¶\x02\x1b\x13\U0002fbd0\r\x9c5\x87\x03K¬ã\x89ð¨ÈU\x90Û\x16s\xa0§\x98+¼988ê¤\x13É\U00087a4bq\x9c\U0004f3bdwL\U000e7947\x99\x95\U0001b3c3\U0009487c𣄃,\U0010c890𨤝\U00043078aå;\U00071f7fX½\U0004daebÑV\x00b\U000b8174\x827\U00061231\x05m\x8evä\x16SÈ.\U0002f514𢤠,\x84嚡\x01Á;\U00105a17%\U0010ce21wR@â\x8f{Ôⴄ\r!Ýâ\x80\U000ae6ff%µû\U00064bdb\x94Zº\x8f½a\U000eb36cqñ\x80\x0b\U000510d5j\\ó\x8d¾BÞ\U000c17c2\U000e833f\U0004e38f\U000955b1 \x8f\U0007b172´¸5g;íó5æ\U0009a528\x07z\U000c52fe²𧯥|\U000a6829K\'\U000e00a1?\U00082518\x97𧘔\x84\U0005c6d4¢¶ê\x9f\U000f0261\x90w\x84\x81\U001043cc\'\x82\x16M)\x90\x18\x06\x8ew𫽝岱c%\x1dôÙ\U000c3c1e\x97\U00062e77¦e\U000422d5qùH\tV\U000dfabe¡\x1e\x0fF\x8f\x10¸?åù\x8d\x1cÅ"<ãÉÀ\x98TÍçg\x92æÛË\U0005d2a0\x19\U000cf1a3Õø\x16º\U000316bc2\x8f?\U0001e175\U000b1327𩸕Ûï\U000d626c).\x85\xa0A\x1f\x97\x93÷\x19ô\x94\x7f]o\U00101765{\U000dfabb\U00101bfe8r\U0007fee3ßNp²|¾-\x14\U0003b398\x9fÊ°\U000d4229Î¤_©®N?uÿtK\U000396a7\U00065ecc\x8bã导LH¨\x98\U0005c42b´\U00050632ài\U0009341e\ue67d>þö\x06\x08¨É\U000827a6ÓÌ\U0003b3a1\U000d3e88\x85\x8ay\x1aÏ\x96\r\x97\U0009cbd0\x88ñ$\U0004442du\U000b01e1\U000f61ed©¼ù\U000dc85dìæ\r\x8eå\U000dc6a8!`\U0009029fª\\Áù\x92\x98\x04dF½æ\x12\U0004543b\x81W1\U00044964&ø\U000d9ecf\x83\U00091474ù°\U00045bb1?\x05Ó¦x<(\U000bb2bc\x891ÃU\x0cµÝÝ\nU荴lÙJþ𒌅0GÊYÝ!\x86\U000b5fc9:\t>Õça\x7f5ÄIP[\U0009797bÃÅÞ\uf4a8Í\x80ÍcPj¥\U00091139\x87-\x16;I§¸\xa0Ú\U000d7e80e\U001064ec\x18cîó\U000ecd44\x008Ý"\U0004a96foA÷æ°eꍨ \x08\U00084156\U0005c248åÒá\U000d4f24µ\x0fÅ5\x9dè\xa0U\x15\x92Uý\U000b4642\x8a\U000599e4k>ø¼\U000f430aöë\U000e5bd5ÔÂ\x85\x06\U00086f9e\x86ò\x88\U0010b69fjÖ퉎gìt\U000e6186\U00033bbc]JQ\U000aedd1\x1fÀî흃0L\U000b8de1塦\\\x87\x02\x15§0/\U000ef4f8\x01ñ\x7f\U000aa72d\x0e\U0004d809±¡\U00084aeb\U0003da37\U000534601F\x02\U00088970𦍤z\U000b886fîma\x81\U00083947\U000981d5ò¶ÂFówaÖÝÇ\uf416Æ"Ú\'\U000a0a3c)ÚK\U00047221^¹øL¨GSî\x98\U00040242µ®¥\x9e\U000f255d6\x1a\U000c6083\U000fd0f1\të$§\U000baf32LÝ1엄\x07è\x9aáÒùFv\x810\x08,ä¬\x8eBô?£\x1e\x1f\x9a0!ç\x84\U00041408\U00041d0aÛ\n¥wâãiÌÔ\U000f54eeÔÎ=ð\x9d\x16\x8fp8¨_]\x9c\x96ë\U000d91e9£úªA\U0009fc93\U0007d2ef?\U00093d64t\U000e4d29\U000deccd±-ø5e\n\U000d4b39ö𗒶\U000d7a9dö\x83~Í\x01\U00101bd1ÙÈb\U000b50f9\x8fÀ𘠫\U0007037b\U00041849\rq0¶·\U000a9a318l\x92\x97·ïÌú´,\xa0Ä|𗔐.k\U0009173b\U0001d267\x0cT\x8c\U000e72ca+\x0b0\x17\U0004ef85Oi\x94:\x92IÙ4_\x7f\x0f_\U00091a48oO\x9d"\U000ec0ba9𨓘º\U000f980d\U000da854\U00016d4bN\x93\x84W¶]\x81\U000b743f\x15\x97K¹Pê¡\U000b2f78\U0004d3b2LÁ𨾬Üô~u\U0003fe4d𐽂fÑ\x8d\x14r\U000129b6W\U0006b58b\U00048534Üo\U000c68bbXî\x16\x96Éf\U0003d4ad\U00060fe4aòR\U0001b31a¤\x0eL£\x8b¡\U000774a4í³\x9e\x9b\x88å2Â\U0005d173¤?T\U00101552\U000a075aP%\x15ô\U0005501d\U000c35f4õ-*\x87§éNòA\U0004e636Ý\x1e\x80m\x80<±N\x9bf\U00042277^\x1cjÕ\x1c\U001098bc\x00O\U000b6dfe@\x8a^\U000c329f毩öâM+\x05\x84ñ\U0010bfba÷¿\U0005621a\x19S\U0006ee80RÔA\x10\x00u\x98hZ2\x04\U000df323,ÿ\x8e\x04¼\U0005e543oBXv\x0f\U00052a8b𣣪rn\U0005eec3÷\'³F\U0010d069àáÓø÷\x8dB\x19n\U00044498%YFþ\x18\x1fµ+7z\U000e3827\x9f\U00088c3d\x1f4\x02ßß\U000b7dd6-\U0009aa9aÃ\U0004977c\U0005b16fþ\U000b3e88}\U0003807b¢æZ\U000d5587-"\x15/ãC\U000c8b21Z.?\U000ff019\x18t¾\U0004acaal\U0008be53Ç\U0005eb82è𡼋¼\x1a\U000a0447\U000d9615\U000d6a72\U0007e696^ô\nöÌ\x98T'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['%aÛå÷O¾]\U000930d6û\x14', '·', '8\x19L1ZJ\x1cAp$ûy\U0009b44cÁ\x9d\U00100960i%\x05ö)]IÑ', '', '\x19'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004045s
====================================================================================================
2025-09-19 00:01:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['k', '½', '𛱵ùnø', '', '¾\U00055276ómü\x88\x96\x06\x93µ-}\\', '\U00038d48\x00F,î', '¸\U00035e46þK\U000a9077þ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['k', '½', '𛱵ùnø', '', '¾\U00055276ómü\x88\x96\x06\x93µ-}\\', '\U00038d48\x00F,î', '¸\U00035e46þK\U000a9077þ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003823s
====================================================================================================
2025-09-19 00:01:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x1eÆ\U00062a71¸\xa0ÕÚá±\x05\U00034b03WlõË\xa08ø\x9d\x98¯åK\U0004cf84|\x07QË\x93«\U0006fe62\U000de500ñ\x0f\x85O3¤z\x91 \U00067869\U0007b283\U000c0489ló"Y6\x11\U0010e2f1Ú\x90\U00072982\U000d5003\U000f1cc9\'\x02G \x95\x1aö\t\x16YÍ\x0cÑÐ\U000e2647\x00\tË௹윯\U00085f03a\U0010486a¥𬿩\t²\x00\U0006e100dU¯\x93§ö\U000fbeacam°D\x1aM1¿Ò\x10\'võ\x90u𦲢ù¶Ü\U0007780bBÙ5\U000e478a\x81(þ|\x9a²Á¶"<\U000fe08c\x0bVzF\x05Ae¦\x81¾\x02\U0008350cj\x1e\U00049b17æÜ4\uefe3×\U000655f6\U000672c4Ëw\U00047e39\x91\U0010a10f\U000c8461H3\xa0\x9e\U00018d4c闵tÛÖq\U000ab9aa9\x85Q~\U000a8265\uea9e\U000fa1a9\x03Q\U0003353b2q\x9fY\x1bKeÚ\U0008e7fc\U0005417f\xa0°/°Ø7\U000df8f4\U00072a2e)\x1e\x1eUÓ\x03\x14\x9f\x04A\U00041650«ú\x94E-s\U00033bbb¬qÅ\U000e9bbfè[\U000a8b7dÊdëú\\\U0005a71e\x0c\U000f4100ÝHDÃ\x13;\U000581db\U000e2e0f\U000b203b\x1e´h\x9dcÖïv\U000d9cdeº\rÔðÊÜ\x14÷l\x8d\x0e\U000b17d05~È\x90f-\x86_\x0b\x89\x96á\U00053cf8\U0003e705Ö\U000a1a64÷8𥤵åÏ\U00057d01\U00067b19Ó4퐱\U000dfa95\x18\x0f4\U00067e4aÿ\x0eöt8Ô9H𪨴\U00107c0a\U0008ae1e\x83u\U000ba6084\U0002f0f0\x96À\x1d¥+{\U00070c3dC\x1b\x08a,\xa0åÎ[\U000a2f3c\U00090481zgÊ\x0c\x01\x0cÃ$ÏÅ¾=d\x90\U000bd435S\x8f®¶~µ¼@\x94âÌ£,\U00096353-\U0003e147Gí§g\U000c87cf\x11Ï°|X\U0008a49d\U000c144eí\U00066434\x9dL\x01\x05^Wø\x85{7\x12\x1eVã\U0005ec93\x14®>\U00059a8fk\U000c3e26S\\·HW\U000e677fC\U000f70a9T\U0006697a\x13\x00ø\x175\x1fþ\U00088567r𬧳X\x92\U0002f7f1\n\x82ìë\x0f\U0010f1f2g\x9f\x8dÐ:\x9fz×\U0001353e\U000a460d\x1c\x9a\U000d7858\x0b\x8e\x14`øölT6õ9]\U000a0ed4®\U0008bf37¶ø\x97×Æ\U000e6961\t¢\x89\x0c±^\x1e[@\U0003f4c4±G,\U0007b099Ì]¬W¤\'䢭0\U0003871a÷Òm³¦\x08à\x14Ì\x8cT¯·¡U\xa0²\U000f48d2Á\x109cEµGpE\x89\U0001a131\x02\x1f\x93è\U000bbd45çó\x0f®(¼\x01jº¢n\U0004a285eÀ}\x8fFÌ\t{\U000a1f8f\x91\U000f21d5\U000b1d18%QËÜ\U000136e7\x9f蔣\x85ç曒\U0007f599a\U0001a007𦉚3\x04@!\x82ã¶úz\x0e\U000a3754\x11\x18F±¯\U0009fe15\U000335d1\U000d2d36\U00077d6d\U000b4f7e{\x88>âgJz\x1c´\U000355f8wèA\x02\U000912f4úY\U0007da5dꦌü\U0008042eËÑ\nS\U000937a6Îø¾FÞ\x96ºHj\x10úé¾\x0f%a¡S/\U000a6d4c\x82\x10\x93ò\U00054c35Ï𣂵BÜ\x8dtf3Ԡ\U0005c28e\x93ðáäh-í\U00014339\x90G)\x12\x91\x89Ô𰠂)Ï_]\U0008ff7e\U0008a70bc\x9fiÚ\x005\x85_\U000b698f}oHñ𤶎\x91\x04\xad\x12\U0004b756C\U000375d0§q\x85\\°x<\U000f73f6ç3©³\x03\x9eõ\U000564a7ùº\x0eº_\U000d09c9\\8lÕÖ"\U00059f787\'5°c{,_Ì9[\U0003682d\x9f3î^½\x12\x9eY\U000432d0õ¹\U001072c9\U000f1eb4\x0bcdâ½z"^¦9ÿÉ\x92w\x01\U000c15c0\'ÜxM´\U00048bdc\U0009410f»\U00092139ÁHO𞋫Á\x11\U000b5fd3Ç\x1fv©äo\x84å\x00¶I\U000c5690y얼\x0bÞ\x037Ð%ù\U0006e1d7\U000e6f0dëI\x18¼\x15ø[ª\x9d\x01\x12\x16\U000198f39qÐ\x11©\U00042807\nÌ»\ue0ffHÎ\x05%\U0006fa6d\x8bÄ\U000ac9c2%8¡\x04\x1aå"öÖ\xa0\x10\U00106ab7>1$\x91$\U000c4916\x93\U000ff86bÕ\U0005684c2\x08\x01CL\x05T)\U0006fc63̠V\x01\U0003e188\U0006b7e1$útÚmì\\Õ\U00104c2aÃR\x0f\x85\x82\U000346ac\U000a6517n\x0eBØå\U0008c730\U00040127DÑæû\U000cea84Çÿ\x99\x7f\\@ÔØ\U0003350dGµV\U000ead6e\U000def04!\x9f\U000592d2æ\U0002f203\U000a0fc3\U000aa56b\x84½\x8b\U000fe4bfW\U0005b4fac¨^ÒÞ>¢\x8f\U0008bbb1óz\x1cdôÖF\U000dfb60\x1ee\U000dc718Í\U000fa661=%\x08³\x01â\x9d\U000f18b5Ó\U00061718𡎯\r.DË\x0c\x15vfÏ\x08\x8a-%»\U00086393\U00083433E-Þ\x01\U0007b4c7ð\U00036ac4Ëâå⌫\x8bFww\U000bdf87責\\É\x9b÷\U000ca55f%\x1e\xa0Aë\x88¹\x06e\U0010dda9\x84íjËe¿1\U0010256e=@\U0005dff9ß¼ÐÈÿ#h\x99', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003792s
====================================================================================================
2025-09-19 00:01:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['üXôN', '[(踌\x0c°yE', 'í»', '\U00087c7d×\U0007a8dbÇE\x8f\x96\x84ö y¦\x83\x80Íq\x04ÎôLCh\U00105ee3', 'j·\U0007dfae', '\x8añ\U00083404\U000b6f44\x0cæ\x9f𡯬\x8a¶\U0003830b\U0001e39d÷¨\U00083555'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['üXôN', '[(踌\x0c°yE', 'í»', '\U00087c7d×\U0007a8dbÇE\x8f\x96\x84ö y¦\x83\x80Íq\x04ÎôLCh\U00105ee3', 'j·\U0007dfae', '\x8añ\U00083404\U000b6f44\x0cæ\x9f𡯬\x8a¶\U0003830b\U0001e39d÷¨\U00083555'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003543s
====================================================================================================
2025-09-19 00:01:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -21616, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -21616, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003622s
====================================================================================================
2025-09-19 00:01:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 88}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 88}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 88, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00381s
====================================================================================================
2025-09-19 00:01:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003651s
====================================================================================================
2025-09-19 00:01:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003792s
====================================================================================================
2025-09-19 00:01:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004175s
====================================================================================================
2025-09-19 00:01:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ['ò\x80ù»', '\U000f26aa', '\U000a309c\x12Å`\x1b\x8c/', '𭝬']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['ò\x80ù»', '\U000f26aa', '\U000a309c\x12Å`\x1b\x8c/', '𭝬'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003498s
====================================================================================================
2025-09-19 00:01:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['8J', '#DCL', '', 'ã[ù\U0004bec7', 'AmÜh\U000aaf5d\x9c', 'Ý\U000461c9è\U0007bc09«M\x0fù\x95']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['8J', '#DCL', '', 'ã[ù\U0004bec7', 'AmÜh\U000aaf5d\x9c', 'Ý\U000461c9è\U0007bc09«M\x0fù\x95'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003838s
====================================================================================================
2025-09-19 00:01:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 28403, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 28403, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00363s
====================================================================================================
2025-09-19 00:01:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003509s
====================================================================================================
2025-09-19 00:01:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004645s
====================================================================================================
2025-09-19 00:01:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/Ðe\'Ô\x8e\t\x93ZÀ\x1bë&\U00103c1a\U00047384\U000318a6wT~\U0006f7d3~è\'\x82\U00054482\x1c[_ÖÍÀ\x94ß\U00087c6f5\x19Ij𬿻\U0007ffe5\U000fd7caAd\x02õ\x0f+nÛI&gÞ5È\x92\U000e1d55FÀºÆ©\x7f\x18Ï¹¢I\U0008acc7f𧖨\U0008da75\x0b\x81a\U000f932fÃ\x82\U000d54dc\U000cc069\x02\x04«\x13\x16E¤\x82\x19\U000be347\r7O\U000af538\x1a\x8f\'Õ\x16È\x0b\x93\x1d\x03\x9d\U000592a6óÏ¬\U0006e02c"\x85Ïþ²\x9d|¦fÔ\U000d7bc7|\x88\U00058cbfV\x9b\U0005eb8d\xadÆò!d0𦻁°\U0006eec1i\U00089b2d\U0002fb85Q¢EÒG\x12\U000cfdd1\x7f\x01\U000ebe70Õ/a\U000338f2Þ)\x1e\x83\x01¹\x9f\U00053bc2£\U00079f20¯ì\U000da3bb¥K\x0ca£\x7fÓx\U00072228åûKø𓅂\U000918c4$AÓ\U000bdd9b\x15\U0010eba7\U00043e83-[\x88\x7fÁ\U000f5996;\x13*\x06,a\x88\x93x𠪒¥Ý¾ß@Í\U000b0e59xÊ<TìS\U0007160a×\U00052705ÃpWµ\x97x\U00038ec0\x9f>\x0e!&\x85\x16\x82B\x94\x18N\x05\U0003bb96\x94\x07ÚI5È±\U0007d3d3\x14n\U000c5c5f\U00041416¨KPµ¯¿¸\U00039801\U000e1108òT\U000d9d54\x84\U00078fe4¿\x07\U0004f484`üµ\U000bf8a9\x8c²\xa0kKÄ¤v`\U0003bf97Ê\xa0\x00©\x95\n}\U0008a5fb\U0005d94fQ\U000878dc§ÎMz\x1fÈEbý\U0007aca3\x19çÔ\U00019671päx\x01\U000e45ecý\x99s\x81Ê\U001061121©9ÑÉ¾ÉmV¤`𢾨(=Úi\x97´Q\U000a18af¶\x11𐄟\U0007d399Y/\U000f56ae\x11S"Ë$=Ý[Êß\x8dDUæci\x07m.y呙!\U000ef5e3³_7õ?A\x99\xa0\n\x1a\x0eM\x15dhæ[`\U000f5344m\U0008b23aè\U000b49d1Ý\U0005b1a8\x92Ç\U000d4711ì\U00069e9fÜåY\U0003f2f0\x86x\U0003c98c\x0cý\x98\U00057e0b\U000eb0ca\x88½\u1774Ê}fÓ\x1a\U000148d2D\x06𨵝ÃÁ\U0007f4d2TÈ_𡮷dq\n¢¶\x91\x93ØI\U0003d97bõÐ\x10\x87w\x07S\U000ae698>\x95爊þø7\xad\U000b6eb99𥡑È5}o@3\U0004c99cw`\x1f0\U000f4f27¬è¾x\U000749f3\U000f642cºB1¼\\Õ\\\x13¿®\x89\U0010eba5M\U000eb4c7\x87\U000d4cb7ò~å\U00054395Eµ\U000b2280\x13\U00077b76ÿ\U000ccd20\U000e23d2\x88Ôù\x0baL\x03»7RB\r6Û¬~äv\x86\x82{7\U000a6487W¹\t:I\x1d\x83!>R\U000df8e5ú<\U000c33a9Òà±\U0004dd43;\U000457bb\x16\x8cI}\U0009f5ce»\x0e\U00014bd2\x9d£Á\U0008c089ãﬀúÏ \x18\x12\x0cÝÂbá\x97\x97\U0010765b\x9bB6¿\x89\U0003f0fb\'\U000d054c\x8d\U000ff3c5ûx\x96\x87\x06¼\x8c\U000d2794Ì\U00109d2cý\x8dÜ\U000f646d_"ÔÐ\x08\x9aù\U000f11818V\U000ddb1b\x08GZäU\x12\U000d8684Û+\U00100436\U000975f86\x9e\U000fddabpH\x9b\x9bzy1´炣Õ&9\U000c6ed7\x05\x12ª粑l\U00090565\x95\x80¯\x0eMÏéæw±E\x8fB\U000dcc08$Mý\x9e\x15N\x91\U000d487e\U00097edf\x03É\x83\r\U00054b87Äím\U000a1cfcò\U000a584bI\U0008e9d7\x18(6\x0cÐ²Ü\U000d758b¸\x19$\U0001cd0ekµèO𠯎5´Ú\x80Ø.W\x88혨\x16OÀ²\x8c𰧲\U000984ff\U000989d9\U000aa45a\U000bc49bµ\x11\U0010247fáQ\U000c30cd\U000f2f68/®É\x1c¸/\x15\x14õ\U00048cfbÆ歞\n¼\x017Òª\x12\x9d¸à*F\x05~P\U000ab79e3X\x01ôîÔÉ.R\U0004fc0fô\x12,Óâ×y<\U000cda55\x7f씘h¤e»àåó]¼kz펿´´TÚ\U000f2f44ôÑ\U00075120+\'\U0005f125,Àìõ[\x99û\x03}\x0eÀ"\U000a62d9\U000e205b\U0003d353lÌþn\U00040abf\x1eDµtJî]\U000681b1eë\x1a2\x8c\U0009164eÌ\U000543dfm\x1e\x18CQ\x1b\U0010f5f2N\x83\U00033dc6EÍx\U000f4191=¡\U00086995\x17µK\U00106e37\x1boÀrr\x89\x0f\U000deeca\U001016f1\U0007ba22ë\x08ÜÌn/»𪋷Âꐱ𤌩Ù.~\x15«\x8ay\U000568fd¨\U0003a873&Ô껻\x13í\\\U0009a4eaïÚø\x00\x07\x88FÚ\x86ÇPúX\x91(C8\x0b3ëÊ¬\x8f\U000627e2RÞ}¼^\U000f7e4fÎO)·Ñ`\U000d180fã\U0007f460\n\U000843a5\x1d\x17\U0004b178Î7\x17©?``Û\x14u\x18ý*\x0e\x7f\U0001dfe6䞗\U000fef73\U000f7a555¡\U0007753eÛVÈ²°ÿ\x0c\x1e´\x031\x90ôgÂ\U000c3d47\x0f\U00040f80\U00077d444àÖ\U0008fda7ÚKd\U00097913é\rÛK𤁇³\U000b4afdnÒ\U000f8d7b\x98ø\x8dK\x8bÃ«uÙ 粣\U0010588e*\U000fb560\x15¡\x96\\\x15ºHÛ$\x17ç\x03D$d\x95Â¥!¬Ð\U000b0e70\x03ºå\ue59e\x17\U000491c8µhÂ\U000bd81d\U000efc467«sÒÇÍL/¢\x03\x84\U000e1ecf\xadQ$",Õ\x16üõ\x8aï\x91:$¨O\t"[0j𡭝bµ±Ø\U000dbd06l\x01æ\x90\x11\x8a\x08\U000d4d00\x0bØ\x14\x9cV𢧷\x11Eô\U0005bc5cÝ¥𨳵\x00Õ\x1f/ä\U000753f3\U000e2996©X;\x08\x12\x8a\x07\U000aafa4¸ï\x1dx\x97âãR\x98Ï\U000bbb44Jd¨\U000961ad\x1eq\U000817cbË\x18$ 8¦n\U000e59a9P\x9a\U00042729ø\U0001377ad=\x90PÅ!fN\xad\U000af470Â>\U0004e048ÿ\x9b®\x9d\x15°\U00097d80|\U000e0a0534^<⸩\U000f18bdnÈ:t/I\U0005ef0eØpóÁS\U000abd69×öÕ\U000a463f\x05á\x8f\U0004a5ce\U00096a6eù»\x9fN6Y8xot\U0004009bÔ»æëàk¥\x80\x98\U00036bd4²\x196ß\x86ï¢\U0004df9b\U000a451aa\x92\U0003244a±\U0006c351³¯ä\uf63f\x1dð\x0cçº^FN*×d"*\U0008d525\x16\U000d6c58^\U000b79c2\\\U0004bfee\x91Ü\x81öãå¬M\U0005e855#Àf\U0007ea47h\U000f3781¡\x80=\U000c43cc\U0007afe2ï\U00104902j[\x03©Si âµ\x14\x9d\x1c\x9dÕ§\x8aèThõ\x81(b&6\x00\x1a\U0004d30ao\U000a0277\U00084982c\x81\x1bd9\U00055474𠌷D\x7f\U000c4495n\x8d7t1Hsû\U00049c2aw}\x0f\x82\U0004a466ië\nE\U0008888d\x93#2B>', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003684s
====================================================================================================
2025-09-19 00:01:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': 47615983829094422881328862709939314333}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 47615983829094422881328862709939314333, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003806s
====================================================================================================
2025-09-19 00:02:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\\\x9cµ«\U0001a437÷𩈂', 'Ñï\x82Ó', '', '7', 'à\x08g\U00088343', '', 'È𗷉=ÔÙF1', '\x99\U000327db']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\\\x9cµ«\U0001a437÷𩈂', 'Ñï\x82Ó', '', '7', 'à\x08g\U00088343', '', 'È𗷉=ÔÙF1', '\x99\U000327db'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['\\\x9cµ«\U0001a437÷𩈂', 'Ñï\x82Ó', '', '7', 'à\x08g\U00088343', '', 'È𗷉=ÔÙF1', '\x99\U000327db']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.004078s
====================================================================================================
2025-09-19 00:02:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003787s
====================================================================================================
2025-09-19 00:02:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003594s
====================================================================================================
2025-09-19 00:02:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '    ', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.004233s
====================================================================================================
2025-09-19 00:02:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': -6002}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': -6002}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -6002, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004135s
====================================================================================================
2025-09-19 00:02:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': -7632}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': -7632}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -7632, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003756s
====================================================================================================
2025-09-19 00:02:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': -24174}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -24174, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003616s
====================================================================================================
2025-09-19 00:02:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003509s
====================================================================================================
2025-09-19 00:02:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': 'y°«Ñµê\x14ú.v\x81ÀQ4n¾\x19Õ柆\x93L´Òӻ\x88\x81L쯙\U0007843aB4\x17\x1dí\U00038105¢§\x8fA\x8dÝ_d\U0001afe7o\x1a\U000b5289\x9b\U00077ba0÷·5\x18ó\U00014d05\x0e¬´g\x04º\x9b𨇨\x1c\U000fa42f¼\U000a5784\x1aï\U0010959e\x19«/\U0007ec7aS\U00031629\x87éS~Â²\U000c88b6\x85m\x8f]\xa0|\x81Å\x82à\U000aa326\x89\x9cK\U000fae99i\U00045767\'\x89À;ù\x8cW\x07\x9b<óò𩡥\U0002f182á\x83¶Ü\x8a\U0005abd0\U00082287·R\x90Ý°ä\r\U000d3347\U000e68c0s\U000bd380\U0008aa62\x9b«ã«n\U0005ead6þ\x9aÚeìD°Hµs\x0ent´º]r\x9aÄh\x07B\x8c\x01÷\U000419b7³m\x86AI𬦑s\x94\x0c\U0004b2b0\x02&^\U000b7bdd\U00080f51\x84𤮡\U00013fcc®Q&\\\U00053049ä\U000b7c6b\x9e\U000b832aå/\x8e\U0003bc1c剆Ê·ì5Ê¸\x9bsm\U000aade0\x16<\x06\U000680ea¾\x1b\U00066902\x02\x96ÓÁ\x8b\x1cv$·¤w^ \U000c241eý𝑆l\x80:½\x15Ñ\U0005c6a0CðNÔ±\x07¢ä\U001030a8%ì𐎻u#©å\U000dfd4dÃ\x8e=\x9e\U000d8f04\U00091966\x86]E\x89\x14;\x96\U0007a07aÎâ\U000e6a7d%Ö\x8f\x12Q\U000386c0\x9b\U000c096d\U000e184c)Í!Ô𩺡ä-+\U00061f71\U00074a73\x82LoLÅ\x89\x1dÈ\x19w\U000b94eb¬ºI\x1c\U00076a1aEIt~ú\U000331e7\x1aC\x91[Ì\x98Î\x04õk\U000a59b6\x85¹\U001086acH#\U0009147e\x80Ã¦\U000e42d8\U000bffdf#¹\x13\U000d1a95\U00082697\x8eM\U0010064b*¸\x96ëëütâù\x15?ðã\U000b009a\U001099b0\U000ed969\xa0xq1\x05\U00041c7cð"V\x00XÀ|\\\U000cbd918\x0eÊ\x80Ø¹\U000af72eÈ>Õ*\U0003b6a5\x83\\~𘕊𠵘zE\x03\U00083350\U000430bd¡ùü\U0007731eÓea\x10\x17\U000dab11D\U0004d3c2öò\x92\x19\U000d0f614+ÁKÊ]V`²\x16Ò§©?\x85\x1e\x9c`ªµ}\U00068d5aºá\xa0Æw×¥Yõ\U0003ef83\x11\U0005c5c5\U000e69aar\U000ee7d0Å\U000bac11K\U00015a8dH&\U000da302\U000d824f\U000b6acd𡌬jpïÈ¯b÷\x9e\U000ccdd1AÁ¡$Tµ(Ê\x90\t\U00078f3e\'i\x8fÓóÚíÙ\U000e74ca\x8eyAK\'ã𥔢\x91¦ª^Á\x05&ak\U0008fd8a\x9fF\x86\x1cñ\x1f£ö\x86.s\x0b¶\U00032b6f\'\U001090df\x87\U00068272\U000dee64Â\x9999å\x02R0¼\x13ÎÊ\U000ee75e\x83\U0008722då\x81\U000f715f\rUÒK\x0eÉ\U000fdade\x86\U0001ceb0\x91\x95/÷e1r𝘣iQÇ\x82yÛ£Ó\x00|\täÞÌIgú~\x8c¯<A_ürllû\x8bÙ\U000134d2\U00106f75DßR\U00100054½\x8b\U00083d97\x83Ä$\x14\U0005ef25\U000ab9b7i둌\U0005efbf±xuá\U000ac6f5Äó\U00081765}mí\x15$\x04ìN\t\U0006f4fbßL\x80\U0010b4f6\U000fcf00\x9a\U000ab05a𣷉oqÇ\U000bbfeeÞS\x87𩖱\x1e\x9a\x92\x06¬\x80\U000e6778·Í𑘁Ä¼\U00083dc6\U00041012\x04@<?\U00086f91\x84ø\x9aXÌ\x01\U0003e68f\U0010b821Ä\x1c¿\xa0\x8cö\U00096dd52\xa0LÆ¼âÊì\x05\U0006bc9c5ô\U000f5cdbÛ\x06\x9b𝨿\x17c\x84£G_\U00015dcf#\x06ã\U0004ca75\nBÞÇ{Ë\x89Á´\U0005a837»©\x81\x07móÏ\x18\U0003d632\U000721f2Ð莭\x19\t\x99\U0005ef048\x06âa垆Ü\x02¨K§\U0006468c𬧒(P¿UN\U0003ece3"¦\U00084378[\x00\U000403a4Ø_\U00074bcf¦Ø𑂸\U0001c0d2\U00078c30ËCs\x98=\U00039ba51ûv\x99®Íª\x87r:òbý2\U000bb381-\U00043c8at£úâ½\U000523af\U000fa29f\x00k:HRÙ\U000ca09c\U000687b7\U000f23faPÆ\U0004bbcf]\U000cff1e\U00086f78â\U000b8cba\U000e6054¦\U00031481\U001037a35$ç\U00085db8Ûÿ\U000f261aÜÖù\x07Ôþµ²Ù\U0010109a\xad\x8a9Ä\x99\x97@\x85ÏV\x04-\x8d¿ꨆ7\x94v\x9dõ5Ô\x03QKáº\U00061347H\U000125e6Pý\x16÷𠎘\U0010b496\U000eeec2y\x92\x1a\U000628f3\U0003b8d3<þ\x9f\x02\U000aed0dâ.3\U00055bd6^B\U000530ea\x8a0\x82\U000ac0ea\x07\x16Dî\xad𥨰»J\x12Ø\x00\U000342f3t/\x01\U000a572dÇ*\x07Å\x99gmP½Ùõ\\\x84!é\U00046826£e6\tµÁ}¦\x98\x973Ë\U000e4e57T?\U0009faa1ÞÓ\U000df925v±\x85N\U000c864b\U000fc31e¹çWºì£\U000b4772\x8cU¬Hä\U0007f121¸\U0007830a\U00104cf2\U000767c1Ðü\U000530f1\U000edf26g=5\U000167c3H(õT\U0004abb5\U00056f65¢½i\U00041cf8ºä/U\x99\U000b0e27\x92\'\x9a\x8cKNÞ\U00056e59±Èz\U000afcd0J\U000a9d23Y;R\U001086ac«\x8bÿqbru\x01¾\x9f\U000804cdu¥\U00086c91\U0006eca9á\U0010fcc7\U000d621e(q\x83储ëó\x12)\x13Þ§p\U0009bb80\x86\xa0Õ8\x85úé\U0008833f¼\x19ÿ¸\U000f916e\x81w\x07\x13Ó¸Õy\x0f蘮O\U00074b0b\x17\x81ö\x9e\U00047f7b[N\x1b\U00051545\U000d9874SÑ´\x1d,û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003704s
====================================================================================================
2025-09-19 00:02:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 'g\x8f¦©\U0005caa6y1 Ê2RçÏ\x1bB\n<Éï\U000da5a5Á\U000148c48\t¨=x\x95\x8e¡>ß7ðöãÁ\n\U00076977úxÈ\U0006a717ÃÃ\x91\x98\x89\U000a86aa´𗻽7v\x10a\x8f\U000e5fae¤J¸\\9\x81þææ×¼\x07§Q_\x08°´$TÍ\U00053de3ó\x06©P\U000a5c95-\x99\ue714\x89#\U000b2233ºÃ"ËfÛ\'Îm\U000a9874\U000a00e18mÉÄ\U000da7e4Ia6ûh\U00060f7dÉ\U0004aa6d2鉲ÈÓ\U00059b79J¾\x91ý\x1bC\x80¥\U00096eb8p3ɐù¦f+𦌶\U000c2bc2\U0008a716_¹]Ç\x18\U0009c0f4Á&ðY\x88y\x91\U000a75a0f-.\U00087c47 \x94\x06\U00056e00\U000f5009\U000d5882ÏT6Ee遑\U000693d5\x82\x90\x1bÂæ\x07\U000b4b04Þ\x94\nP\U000e7a92{\x10\x8c\U0010f3dakXãik¬½¥\U00105c6fÈ;\x16\x11yN\x11-\x8fp©áX\x01º{\x11Hçb\xad\U00047668\U000b24c2Uû\U0007d536렌Î\x06o2\x80=4æ\x9b\x97=\x04#𦀺\r\x14\U000e5418\U00082fdaÎ-\x87³\x98ØÍÀ\U000ae7c9C\\\x07\U000ac740d\U0004802du\U000a2b53é¯&êØ#è\x9d𣢣c\U0006a2bd\x80\x15\U000a6fe51\U0010d396\U0009746b7#ª/\U000f94eb\xad\U000a77d4Pÿ§ÄÐn\U000f9498TÞÎÓ䖀5£\U000916bböÜo\U00019d62\x99\x9e\U000de560VlÝËj㒌í\x9aÚC~É\U00080e31\x85\x0b¯vô\U00070100WB\U0008ac9f\x1a?g¸óa9\U00019b82¬JQ;?\x9a8\xad\n(Üg\U00096c54\U0003cc3f\U0003f428\x8flC\x9a6¤n\U0010919a\x08\x08E¿\x05"\x90+Ï\U0010d4ddäþÅ\U0005d42dK=Euq\x93ÐÒö\t¾𭴈VÍ½ú\U000501f1Âñ^¯ñ¾ï𪋼Ø\U000f72f0<l\x0e©\x85扯ÞG¥\x03\x19ËíÑ×mÕ2P\U000b1dc6ô>!\U000ef897w"\x132ûç\x84¶\U0004b4a3°1\x01æ§}\x12^Ý\x08;\U000a496a\U000371c9\x08³\x8b\U0004dc53\x16\x04¦æ\xadî¬]YTðcK±\x06\x08é\x02\x9aA\U000ae2fc\x8fà\x99åÈI8Sø-ÌTæ\U0008cddaaÈ\x89Çí\x0b7/·\U000361bc4äß(hp\U00053dd3Ä\U0008b3d8\U0001c967\U0009dd95\U0005aa23\U0001eee2\x81J©?\x88%RÇ\U00043460Èî6§\x8f\x99\U000a35a4ô£\x80Ð3p:\U000fcf29o𩙣;\x14qDS{K\x8aÃ¨𝕡J\U00108cb2<&\U0007ebe9𥘼廆𠼖\U0004fb72ð\x9fÇ\U000709d4ÇP\x91\x16M\x88Æ¡\U0008c125¤E§\U000b93d1è\x0cë>ÖÃ\x96\x83\x088.-\x03í𡪢\U00071f0b|X\x9d\U00102d5aÃf\x1a$_¹¯\x99\U000a3881𡉕Ö\x9e¨\uf77e£\x8c\U000c359a\U000a5e3b.¨ï\U00058fa8ßâ\x8d\U00079c8f\x12\x84\x90¿\U000d41e1°;xðDWã£\U000faabd\x0fô\x0ec¸\x92\x8cb\xa0BÁ\U0004280b\U000b7e06S93ü*\x81\x1få\x9aDUguS·Ç\U001037edâ_\U00042856((c@~\U000b5ce9[Ä8°ËÄ·\x05\x19\x9c×\U0004e12a½Tc(\U00063028;\U00078e9bK\x918\x1a[<\x9eæ3\U000c494eÎÑÚ\x137Ö\x8aéQLA:¥\U00062e85\x15³×Í£\U0001bbbfCo\U00079bb2\x82íÎ\'\U000bf338\U000d541dÛÌ\U000e889e_\x15¸þË\x92\U000f2ffcS(J\U0008174fÉ\x90\x9bGÙ·\x84½?YD\x04\x9ez\U00052b75\x16«\\î\xadm\U000c356b\x9c\x15\x96\x15\x17\x0b\U0006ae9b\U00035f11\U000b5da39Ü\U00036766妎\x85ö\U00081b31£\x1d\x84𧪗ðe¤âúf}\xadx-\U0010d58b0\U000811b3ë|\x16¸=ó!)5í<\x89A^C\x0cÌ[×ð¨\U00016d52\x98\U000bf043»\x7f0\x84½\x8bÝJÚ\U000af552µ¹\\\x9b\U000fab56o>\U000549f2\U000900b4.Ó9\U000defd4\U0009e0f3jÆ\U0009842e´\ueb2eØr3H\U000c7eb0\U000ec333Üvür\U0003961a\x7fiL".Ô¬\x0cP»¸ÿ\U00099cf2\'eýX㾻\x03æ§\x9fàÎ\U0010dea2\U000bf26cáIÓ\x9c\x8fÍò÷Þ\x93z䃈CQ°\U0010fd82Z{©Ø\U000cbe96îð,K𗊍ñ\x9bàâ)\U000dd5a3Ë\x9bg"p\n~\U0003f325M§\U0003b4b0\x95_VÄ¼y\x80\x11\U000d34b4\U000a8e90ý DÓ\U00039539ø\U0007e62a\U00049d6c\x05në\U00086f48P\U000338c8\\h"ß\U00108b55[,\x15´\\)\x17.\U000f663c\x82ÿÆv×é\x98Ã㒎\x0f\t\x06Ø\U000acc81\U000d48ce\x8c\x8d,·i¤ÂU歒\x8cÞf×³©tv¸ðP\x8f𐳖$\U0008536c\U000dc4cd\U000b860c\U0003f34cÙ\x9fè\x83Ó\U000adb67\U000c5691\U000cadcc𪇇&Ò\x07n\U000402b5\ue235ò¶\U000f6428\U00069bdegà\U0010beb4î\U000d1cadm\x1a\U00056757\U0008f47e\t^y\x1b_\U00016de3õSG.Íi`-\x0e\U000f7dc9ïØÄÞ\U000448bfT°\U00080a18\U0004e8e7\x19E\x9a\U000df400°µÿ\rꌮö)'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 'g\x8f¦©\U0005caa6y1 Ê2RçÏ\x1bB\n<Éï\U000da5a5Á\U000148c48\t¨=x\x95\x8e¡>ß7ðöãÁ\n\U00076977úxÈ\U0006a717ÃÃ\x91\x98\x89\U000a86aa´𗻽7v\x10a\x8f\U000e5fae¤J¸\\9\x81þææ×¼\x07§Q_\x08°´$TÍ\U00053de3ó\x06©P\U000a5c95-\x99\ue714\x89#\U000b2233ºÃ"ËfÛ\'Îm\U000a9874\U000a00e18mÉÄ\U000da7e4Ia6ûh\U00060f7dÉ\U0004aa6d2鉲ÈÓ\U00059b79J¾\x91ý\x1bC\x80¥\U00096eb8p3ɐù¦f+𦌶\U000c2bc2\U0008a716_¹]Ç\x18\U0009c0f4Á&ðY\x88y\x91\U000a75a0f-.\U00087c47 \x94\x06\U00056e00\U000f5009\U000d5882ÏT6Ee遑\U000693d5\x82\x90\x1bÂæ\x07\U000b4b04Þ\x94\nP\U000e7a92{\x10\x8c\U0010f3dakXãik¬½¥\U00105c6fÈ;\x16\x11yN\x11-\x8fp©áX\x01º{\x11Hçb\xad\U00047668\U000b24c2Uû\U0007d536렌Î\x06o2\x80=4æ\x9b\x97=\x04#𦀺\r\x14\U000e5418\U00082fdaÎ-\x87³\x98ØÍÀ\U000ae7c9C\\\x07\U000ac740d\U0004802du\U000a2b53é¯&êØ#è\x9d𣢣c\U0006a2bd\x80\x15\U000a6fe51\U0010d396\U0009746b7#ª/\U000f94eb\xad\U000a77d4Pÿ§ÄÐn\U000f9498TÞÎÓ䖀5£\U000916bböÜo\U00019d62\x99\x9e\U000de560VlÝËj㒌í\x9aÚC~É\U00080e31\x85\x0b¯vô\U00070100WB\U0008ac9f\x1a?g¸óa9\U00019b82¬JQ;?\x9a8\xad\n(Üg\U00096c54\U0003cc3f\U0003f428\x8flC\x9a6¤n\U0010919a\x08\x08E¿\x05"\x90+Ï\U0010d4ddäþÅ\U0005d42dK=Euq\x93ÐÒö\t¾𭴈VÍ½ú\U000501f1Âñ^¯ñ¾ï𪋼Ø\U000f72f0<l\x0e©\x85扯ÞG¥\x03\x19ËíÑ×mÕ2P\U000b1dc6ô>!\U000ef897w"\x132ûç\x84¶\U0004b4a3°1\x01æ§}\x12^Ý\x08;\U000a496a\U000371c9\x08³\x8b\U0004dc53\x16\x04¦æ\xadî¬]YTðcK±\x06\x08é\x02\x9aA\U000ae2fc\x8fà\x99åÈI8Sø-ÌTæ\U0008cddaaÈ\x89Çí\x0b7/·\U000361bc4äß(hp\U00053dd3Ä\U0008b3d8\U0001c967\U0009dd95\U0005aa23\U0001eee2\x81J©?\x88%RÇ\U00043460Èî6§\x8f\x99\U000a35a4ô£\x80Ð3p:\U000fcf29o𩙣;\x14qDS{K\x8aÃ¨𝕡J\U00108cb2<&\U0007ebe9𥘼廆𠼖\U0004fb72ð\x9fÇ\U000709d4ÇP\x91\x16M\x88Æ¡\U0008c125¤E§\U000b93d1è\x0cë>ÖÃ\x96\x83\x088.-\x03í𡪢\U00071f0b|X\x9d\U00102d5aÃf\x1a$_¹¯\x99\U000a3881𡉕Ö\x9e¨\uf77e£\x8c\U000c359a\U000a5e3b.¨ï\U00058fa8ßâ\x8d\U00079c8f\x12\x84\x90¿\U000d41e1°;xðDWã£\U000faabd\x0fô\x0ec¸\x92\x8cb\xa0BÁ\U0004280b\U000b7e06S93ü*\x81\x1få\x9aDUguS·Ç\U001037edâ_\U00042856((c@~\U000b5ce9[Ä8°ËÄ·\x05\x19\x9c×\U0004e12a½Tc(\U00063028;\U00078e9bK\x918\x1a[<\x9eæ3\U000c494eÎÑÚ\x137Ö\x8aéQLA:¥\U00062e85\x15³×Í£\U0001bbbfCo\U00079bb2\x82íÎ\'\U000bf338\U000d541dÛÌ\U000e889e_\x15¸þË\x92\U000f2ffcS(J\U0008174fÉ\x90\x9bGÙ·\x84½?YD\x04\x9ez\U00052b75\x16«\\î\xadm\U000c356b\x9c\x15\x96\x15\x17\x0b\U0006ae9b\U00035f11\U000b5da39Ü\U00036766妎\x85ö\U00081b31£\x1d\x84𧪗ðe¤âúf}\xadx-\U0010d58b0\U000811b3ë|\x16¸=ó!)5í<\x89A^C\x0cÌ[×ð¨\U00016d52\x98\U000bf043»\x7f0\x84½\x8bÝJÚ\U000af552µ¹\\\x9b\U000fab56o>\U000549f2\U000900b4.Ó9\U000defd4\U0009e0f3jÆ\U0009842e´\ueb2eØr3H\U000c7eb0\U000ec333Üvür\U0003961a\x7fiL".Ô¬\x0cP»¸ÿ\U00099cf2\'eýX㾻\x03æ§\x9fàÎ\U0010dea2\U000bf26cáIÓ\x9c\x8fÍò÷Þ\x93z䃈CQ°\U0010fd82Z{©Ø\U000cbe96îð,K𗊍ñ\x9bàâ)\U000dd5a3Ë\x9bg"p\n~\U0003f325M§\U0003b4b0\x95_VÄ¼y\x80\x11\U000d34b4\U000a8e90ý DÓ\U00039539ø\U0007e62a\U00049d6c\x05në\U00086f48P\U000338c8\\h"ß\U00108b55[,\x15´\\)\x17.\U000f663c\x82ÿÆv×é\x98Ã㒎\x0f\t\x06Ø\U000acc81\U000d48ce\x8c\x8d,·i¤ÂU歒\x8cÞf×³©tv¸ðP\x8f𐳖$\U0008536c\U000dc4cd\U000b860c\U0003f34cÙ\x9fè\x83Ó\U000adb67\U000c5691\U000cadcc𪇇&Ò\x07n\U000402b5\ue235ò¶\U000f6428\U00069bdegà\U0010beb4î\U000d1cadm\x1a\U00056757\U0008f47e\t^y\x1b_\U00016de3õSG.Íi`-\x0e\U000f7dc9ïØÄÞ\U000448bfT°\U00080a18\U0004e8e7\x19E\x9a\U000df400°µÿ\rꌮö)'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003879s
====================================================================================================
2025-09-19 00:02:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['\x88', 'Þ\x9c»\U00039fb6µ8|\U000d819c㦑[\x916l', 'Å\U000923f3', '5𫸢zë\x0fÖ^\U0008959bº\x80', 'E', '', '\x9d\x04×\x94©Û|ð', '\U00063777q\U000fe221\U000a4425\x83', 'N\x7f']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x88', 'Þ\x9c»\U00039fb6µ8|\U000d819c㦑[\x916l', 'Å\U000923f3', '5𫸢zë\x0fÖ^\U0008959bº\x80', 'E', '', '\x9d\x04×\x94©Û|ð', '\U00063777q\U000fe221\U000a4425\x83', 'N\x7f'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004333s
====================================================================================================
2025-09-19 00:02:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003696s
====================================================================================================
2025-09-19 00:02:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 'äô\x0c\U00068cfdm\U00055866\U0001ed72È(\x16\x9e\U0003f51a¢I\x07\U000c2c27⽽¤Ó\U0008bb64ð\x07[ôV2èé,].¦ÿ¹𬿚ë\U0008ecc8go\x05kÀO\U000489ae\U000de4d9=\x97{\x8c\x92X?\x9e\x05睚\x9f\x0c\U00037dcb𑠢\U00083512%¯5\U000f2dec\x85\x86\x10ei\U000aa3f4[\U000550db\U00032946\U0003a9c6\x1e¯\U00103af9𢂏\U000bc735¸\U000f4961\U000fca9cN\U000e530f\x06)\x96\U00058f85i\U000b4cce\rK\U000bc813Ò\x1c{|\x9ejþ\x16Ó¬\U0003d035늲d$Î\x82\U0001c000;d\x0el㜱\U0003ffb8ã^Þ\U0006c4b4H3\x85\U000d64a5½\t,4\x11k\x98ß\U0010c29bù\U0006efabØl&\U00078bca|\x00/§/\x9fÃú\x00\x89¼\U000ee5a2\U000d1ca6\x92Á2\U0010487b殴\U00034a4b\U0003fb5b@î¬ÜL¼°LXM\xad\U0001095fë?¦sª\U0003f6b2\U0007d999Áu#\U000db26cØ\x14Ì\x0c\x97\rDâ\x93£ç\x02!\U000932deë\U000e38c9r\x14\x9cÓ\x11þ\U000fef33ã\x1e}>2Ñç\U00040108WÌá\U000a3682\x08\U000abcbaÞ\x0fç>8\U000ebaffC±\x9a\xa0\x84ØR\x9c\x9e¶\x9b@ö\U000d3358Ä¼¿U\x97\x81¿\U000a1b58Sï\x14¸hË𘏱Ä\rgé;\x0fÿ\U00037f35ü\x8c7ñ²\U0001be63¾\x97\U000f1a39E\U000b4d58\x9bx\x8d\x07Nû\U000c953d\x0f\x14\U000b27df\x0f±}\x80\x93Ú<\U0009907b\U000a39e9îÖC\x83Çè½\x8d\x8b\x8bCï\x8d0§@÷Ï©\x17\U0003c921Þø\U000ead69壚²\x82Ñ\x05½\x8c\x1eéAL4@Õ7\U000d125fT[ES\U0004f9f9ú\U00016cfc¾±´ö\x19\x1a\x18\U000b1183+\U0008e9d5\x01J\x81Ðt\U0005d81fp;Á]æ\x0bëÏD3䑖;ì_\x8a\x97\U000f1e81Ô\U0003e60e\U000b236ao^q\x05\U0006a077{¤é¶-\U0004ce9d/\x85ÀófñË\U000cc798g£à\x99\x87\U0010ba23,T\U00072f4a\x07\x0bxÄ\U000cf73f\x05\U00090b7a#Ñ\x83[\U000578daxß\x13¸Ã\U000cef3dg\U000aae55\x93ÒÄ6*K\x9c¿Ü0\U00039886\x9aÊkîXpèZÌZ\\\U000672cc\x81\x96º\x84:&£\U0001353dþê\U00076b8exñ\x9býmH\x19°\U00062edc\U0002ff5d\xad¦À?ê\U0005c8f4W&s\x95\U00096e1c-AÈ\x08Ú½\U0001fe58D±MýN\x1cÀ°Ñ\U0006af38\U000d0ff9\U0003d4f8`½K¾\U0010ddd6n\U0004b9df>\U00048af8\U0003e05a\U0009189e¼¤\U000afe65¿÷\x94\x90^=E\U000823b9×\U0004ac09\x99C&ógy\x19\x14\U000bd388Y\U000a952d𬠎\U000b30f8w\x19\x1b\U001025bdëG,§\x92뵘;ÇZ\U00070ea1\U00034f418\x17\x8cI\x1ex\U000fb074\U000ce1cc\x82㽡Tw£\U000e6aady\U0003b8c4\x84¬ß\x1eæ#·¿L(ukÍ\U000c1b9d\U000ce836\U000a4ad4\xad\r\U000337e3Ä×\U0006ba39É\x13㦋©¯ûäk\U000f64a8\x96\x9aüAfÅÈ´\U000e4922Gr\x82#W\x0f¼\U000d4a10ÀEb\U0006200fÌÈé[𨍒𧪙&Í\U000bb018\x17p\x85»,A\U000a63a2\U000f1833\U00038712\U000c296dl¡Y3\U000b9484Á\U000db0ad\U0009e463\U00092a36\U000e5825ñ\x80\U000c442fn\U000e53a0\x14\x08Ó^\U000eb456,¤C\uec65\x06\U00106ac4\U0001a1fc𐫵\U000fe5748á\U000bef8a\U000cd640L"*\U000c251e\U00048da3>\U000b267eI9\U000de17dßót\'cçâó-\\c\x1c]\x96ê\U0001ef4e¸ú/ûÅ¤ôb\x19\x94±e\x8d\U000bc063\x10癆Áÿ\x0cï\x00\x05\U00051779G¾H\x16¾L4\x95\x8aê\U0004cf52g\U000cd36a\x1cÍå\x94X\U000f2d706\U000c68ccÎäÞFpZ¥Öy\x0cÛ[\U00056f1d\U0008c9c3\U000f3cbc.x\U00060c0f>ô\x97véÿ\U000bf97eÙ×»?âUg+\t\U000af0b6þ\U00097895\x95Q¦\x87\x98𤄆\x82®A~Ò\U0004e563bÁ\U0003a9c7\U000f8566L\x88\U000f9629\nX\U000d033cp³\x1cÀ|\x82p^\U000ad9e6ïy\n\x8aÂ\U00036693[énú\x89ý\x12\U0007820bÕw\U00013983\U0003529ea\U0008effb\U0005203e\U000b9043\U0010197f2y©dpå\U0007d0feÚhúïö\x99\U000f9984\x03\U000a3c3aÛ\x9deäôNÚ}\U000c08be<©&\U000f0b52\U0009d0f6\U00053b45\x1fö\x0ep\U0010421a:Á;!\x129WJ¨Ø6ÂXÒÅ\x9a\U00055fa7Üù=녋\U0007b653\U00099e47\x1d\x91\U00082292\U000d3af5츔¥¬\x99ì톏ÞÚ\x97SD"\U0007bc94ï_p\U000d2b65;\x9a~\U000e383d쨥\U00107093\x1d{Ē_ëÍ|\x17Ã±\x8cR<\U000c5607\x9c\U00012ed8]´wU2\U0008d0c77¼´\U00089a04\x07\U000aa615\x0f\x87\U00102d14\U000fa60e\U00085a8e\\\x8aDÄ¸㷸<𨖋\U000b2a7c2ùÐﾠ`#\xad\U000a5b99\x15S®\U000de081À?\U0006f3acú"ø\U00084e61|ù\x1f\x86\x88\U000acae3¯w\U0007f91bÍRÂ®&\U0001b8b5 \x8dÐ\U000a86c4\x99\U00055759ªÐ¸ö\r`¸yº\U000533ed\U000d7358>e(½öîE8E\U000cc211Ù¢\U0004f16ev\U00059ee5\x01\U000c4d9e\U000ab01b/P\x99Ú\xad\x96\U000afb39È\U000594d3Þxa{¦\U0004884eÆ899\U00066f77å\x7f\U000975d2\x12\U000f93fc\U00084f87bî\x11iK\U0001b8506Oki|Æ\x86íà¦\x17鴄òüõRê*Ô\x08\x8fÉ4º\U000e5bef\x9f2\U0005c948\U0006677aÓ\x02é\x9c\x1b\U000f929dX\x1eËì\U0007c873á\U000b88a1\x87\x0c\U00094f1dñÖb\U0007c950\x02o\x03\x97<\U000648c4\x18³\x11 :\U00075775bÐ#\x93µÍõÞ\U00039556Î|\U0009ae11ÄÞ\x08ò\\`)-]\x98óóß¢¾\x07ì]¼~:\U000d2f5e½\U000c8303ýf\t\U00103d6aD)\x0e\U000dc7faå¶Jæhi\U00099011É\U0010b0dc#\U000f01a5¢Î\x91\x03Luf\x90ÃË\U000485c58\n6¥\U000d5085¡²\U00093f13\U00089844íÏ\x9bp\x0beØÝo\U000f0a94Õ\x9dí𧟎\U00093b7aRäæ\U000484ac\x95\U000fbaec\U0010781536\U000525a9ø©aGÉPÌ\x9eN\x95\U000a60e80¹\x9f\x13\U000c406c©\U00069e96ö\x8ab\U000432038𒃧ä\U0005bd9d4ýXÅp³\x13ª\x9a\U000a22bd.[Ëo\x0e\x16\n\x16¥f\x1bçÓëK9ÞC¡D×\U00062b4b¥k/±\x83ä*\x87\U000a7902½ú)Ò\x88ê´¤\x03\U000affd1\x85Ä\U0006ecc7\x0bfÃÜ\x04#F\x02Ü\U00061289w\U00051eec\x82vs\U000bacfbXA5\U00060e10@\U00015e6eûëô\x84\x97\x83\U000fe341Si£ìÀB\U00078660\x1f\x8e\x1d\x99Zv\xad03\x05𦭍Àê\U0001a13cë\x1aBsZ\x9bnE>VØ\xadÃ5N\x81\U00065fb8('}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004126s
====================================================================================================
2025-09-19 00:02:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '?\x99±¶\x8b\x90W\x05\x8dzÂ«Ó\x8f\U000d7791;\x1eb\n?\U00099f730\x90Ý\U000d84b5Í¾ì\U000ea9f5\x14ãþ\x98ÉÏ\t\x9bl.h\U00060899}ôí¿O¡vüà#$¾\x16v\'\U00085351\U0010e862𱉀¶\U00105e2eh6\x16\U0008e86b눽ªB\x88DÎ%\x7f·ï\U000acd4bÄµÛê\U0006a0c4ó\x02\x96~(ªÁüç$+í}\t.¼â\U0009d978\x95\xad*®4\x81Ø\x83\U00073286\U0008d43a¢Í\x97A³\x17\U000fe88b\U000427b4¸;\x88\x93\U0010711a\x8bÊ\U000ac88c\x8c\U0003ebf4\x9bRyÑ矞\U00032ad6\U0006885dô\x93\U000c6cd9C\x9b<²D\x81Ô¸þÉqê\x9c\U000d2144\näH\x7f\x9an2Ô\x18\U000f984dä\U000e2ebd(\U000e3ca8\U000bd49a\'\U000ae5ba¢tfìo\U000cd035³»\U000c7f22â\x8c²Vü½\U000b62dfÎ«\U0008dcc8®\U0010f674ä&ö¤ú\x04ã\U00062ff8É\x95\U0001e6e4\U0005e264¦\x03𧴞Fç\x11¸eo\U00049027\x95|ÝÊô½\U0010456e\U0007001bp\U00090669\U0001a933Aü%\U000cfdefYd\x87\U0007cf86\n\U0005fdf3e\U0005434eBv¸h\U000aab63\x9e\U0009f436\x86\U000aede0g\x07¶뭳[©êÆg\U000be7c8\x8d\U000d6488c9Ì𢣜\x98 Ú[\U000f0446÷\x1b\x9f𥁗\U0007be22«0/t;h\x17Ó"\t2\x1at;R^ÀÔ \x11Ýú¬\x136\U0010e32b×OxQ\U000e88d1¨\U00063dda\x14\U0004ae17øx\x7fL+\\c\U000bbdef8H\U000d5bb4\U0007d708\U0003cbdb]\x97\U00051266\U000646a5\U000f6ac3å𰳫Ñ1\x04÷÷Q\x99ø\x1e\U00049134M\x07Û\U0008ee90æ\U000eec68\x89u\U000f9c5d\U000662d1\U000a291f=ÜTÜm\x08ßÂÊ\x03ÒCë\U000e0ad9\x9f#x`31óõZ饖÷\U000b8200ð\U000827be\U000e2bd1s)À\U000d6b76\U0005094edën|d\x83{\U000c151då\x8f\x04\U00039615n\x88Ù\x02\U0008a54ep𩫍D\x87\x05Y晢©>Õ&\U001017ec\U000e3996¢nô\x83\x89ÕÈ\U000c77c9Ñ\x98!\U000715caúØm\x08\U000ab7ccdÐ³\U000f4454\\vQß\x0b\x92.æU\x9baHõ§\t\U000f229d뵧³\x19\U0004d17bí\U0006b41as3\U0009ef52\U00072e1a\x8cùoº½e¯?a\U0005ea15ù𨑑\x0cF\U000d851dICza.á\U00085063[\x9dª\U000b9443¡\x9aì¨ê\x1d[\x8dk¶qÌ\U000a42c5÷¬e/\x95º\x1f§½Ïç\x12e®𢯝_Þ\x8bZ\U000df806\x9d\U000669f9<tþ¬{\x90訅ª#5ë°\x89\U0006bfb6𰻓]ò|ÀÈ¥\U000fcebaö\x1d¼d\'45ò\U00055aa1ÀGßÄ\x93\U000471a22\U000f7922\U000568fcßÏ\x1f7»\U000594a7\x0b·»æq~\x07Ó𐠋L~ë\U00047261Á\U00103276\U00011e459¡\nÊä\xad!\U0001e307\x07JÜ\x0c\U000a82d4,Q_\U000f5ed2XU\U000896f8ñVeãÊ\x02\x97𰛦g뉻Ä0\x81Z\x90\x83𮪷\U0008b123T\U00013ae2L\U000d0d5e8½\x98èD\x14W¨ÿÎ\r\U000fcace\x1fi\U0006cf67j\x86ò\x90gÈ?ÜjÕ\U00060f73\x1d\U000a524d\U00035102.漴þ\x10ý\x8eK]Å¡_`\U0006c33eg\x98«\\¢\x0e%\x7f %ÿ\x92P\U00090b1bwÍ\U000acddb-\U0008ccb1\x0e\x19lþ\U000e9461\x80ì\x84\x15\t®\x95\U000bfba9\x1e\U0007037c\x1d¶¹QÃ\U000d36faÏ\x9bc\xadÞq\U00043bcaÖµ\U000dc6de\U00096cf4{þ$Èì!{Ç\x97ø>𭁀\U0010cd00û\x8a\x1dà\x8f¬c\U00034d69?|\U000a3db8\t\U000ca7fb\x12𢎕þ\x01\U000d7aeeÂ§\x00¼Z±Mø\U0007e287ÕfÄLW\U000e649bpmðã\x87[\U00015c05\x84w\x85Õ%$Ô\x1c\x13\xa0+>\x92:*\x89e´ôà\U0006076d#𛋝\x1aÐ\x1fË\U00056650à\U000bf6d4Ñü!\x9a\U0003a7d9V2|\x91\x9a©[¶ß\U000c164dáⴞ\uf27fbÀ·\r\U000695d2²\U000b0af6\x15\x81L\x8f¦³Ê\x01O¶\x84eKÎ¢lÃ𫯤\x8d𦶂\x19¡ð\U000c72da\x0f𨦗\U000ea2e0»B\x9e\U000e8cacÛj7ö\U0003a117nQªé¢\x81,ïm\x1aMÄ\U000aff31Ò¾Ä!\x01\x0b\U0007f2e9W\x14\U0006af99èÒ¶|\U0008e022r\x89ï\xad\x7fÓs\U000b8c66±\x99\x0e\x17D\x01\x15\'|mË8ß\x14V𤗑1\U000b5739\x19R\U000b79e5d19\x10æJ½ü^hæ\U000569b6\x1bC\U00098632\x94zÂ»8þ¼\x9b^Î¬Ç¨\xadã\U000d6ad4,\x01/\U00072a0e\x9d\U000e0c0c7\x12÷Q\U000fb44bë\x03\U00093eafB🎝²\'ñÖM\x8a\x8b-§\x9d+Û\x99\x0e\U0007a560ü¥\U00106b6a\x91ÝF\U00044a74üzÂ\U000b4473Ý¦\x93\r.ÑÜ𫿶\x95i\U000160e2\x96°\x94\x91j\x0fÚ@ÕÐ¸L¸[\x96\x96\x9e\U000f7b44=\x92\x94:\U00032eb7ÿ\U000fe6dd¥\U000ae089\U0006dc97V°\xad𐂗QUÜ§a\x16\U0005be29Æ\U0010c01f', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003627s
====================================================================================================
2025-09-19 00:02:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': -24648}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -24648, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003834s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': 'òËðÁ&þE\x90\x8e\x15¨\U000c15f1ÕXÑxÍº\U000d4fb8e>\x1e©\x971>\x98\x83pj\x99[\x01q²\x1fºÑÖ·\U0004487c\U000c4a30\U000e717f}M\x8c;ßvEâ-\x03\xa0\U00104f52È±tès`¬×&u狶xø\t\\·\x02$\x81`\x82ëþ+\U0010b2ae\U000b8575)\U001068d2ø\U000fc2de\U0001c530w\U000684f4è§S\U00016ec7U&õ\r-\U000bcab2\x19\U0008397e\U00061cd5\x9f\U00060097\x17\x1b\U000616a7\U0009693f\x87h\U0008a880·XvT5~«XFP\U000338e4\U00040f4fÏír¹\x7f\U000d7d44»\U00100b18^\U00077b14B;\U000bdd71\x87\U000f5e7dÈ?óÈ\U000d6101Ôh16±¤Úé\x01\x03=s\x8djÞØ𮢋G;Å\x8e(VÂ\U0010a92fT¤è5i\x8c\x9e°Vû\U0003a70b\x99\x9c𰆃ÞØ >¤\U000a08d4Q\n¶a\x9feH ü{\x0b\U000a2638\x9a\U0002ee8a Ä\x94\x13cjH¼\x84ÌöH\x1a\U000952f42(;\x91\U000c237b\U0006db0fÅ\x9cU\x9eißØ\x13\x80\x12¿½Åâ§}U$\U00013649ev\n\x854MW\U0004c5bdÞ¶¥\U00071473¸×\x033>\x8bºÁÃ^¹\U000373e6þIly\U00051ee9é4\U000736cd¶\x0e)𨕅\x96\x04*½\U000ccc1cìF-í>\x15\U0006ff5cH\U0004aa4fÚà\U00080911F0@Íí\x11È\U000f9038Îæ\U00077614!æ\x90\x7fÛk¼o~Ë\U0007167a2ÒlP§¤â\U000c4d6bsÓ\U0007c1c3"/R\x02à9\U000cf0f4=Ô\x8eg(¦1\x8a\U000b7d54FàXO\x14𗣸\r\tÖ幣w\x0c$X¿¿N\x1a\U0003bb4f\x18C¬hR»!£U\x07\U0007e2cd;¸\U0010fd6chí\U0004e1f3ò\U00032d7f\U0008444aEq\x9dÉ{\U00066bbcMÂ\x97N?\U0005cf62°𩑩Ó\U000f51ccy×µ\U00105242袛ë+|1É\x1bI¡Ax.\x1f\u1c4aæ\U000c68c0\x997\U0005389fÆ¦|ÉY©\xadha9𰶊\x9aï°È\x15\x900Çÿ\x90Êq\x02ú\x1e§êú\x81Ý\x9d\x16\x8d\x05\x1aCµd\tgÌã应A\x05\x13\U000ba608¸SÜL\x8f\U0001fe50\U00106fd8&@\x1e\U00057aed\x83à𰺼¦Sñï®C\x83\U00082907M\x9e±!êç\U000b91f9á½\U0007cbc0\U0009fc16tË\x88\U000bbc8dMÍÚ\x88ö\x1ef¤±c¬_\x02\x9eÝÎ·\U000324c9;\U000397b9øÈ\x1d\U000950e5Ó\x1d²J\U000b522bæ\U00067b08\x80L`\x89N[q\U0008a2a9¹\xad\U0010f60b\x9dü\x87&\x10\x0e¡^Yÿûý6ùèÞÚÖ`0rm\U000820f5\U000cca70§²\U000a81ed#ú\x1d\U00049260k\U000c08e0\xadm\U0004d634L´®\U000f0338üïꑌT´¢\U000b6bbf¥·×\x05S8jðµÜ92}&Ø몃¯\U000b6f0f¹ãåÆd½ÇP\U000dfb01\x82|\U000669a1e\U000dd3dd\x1eX=\x16\U000d39fb\U000ef7c9ôåⷔÂö\x06ö𢾾\x7f\U00063a9a3÷%`¥\x9f>\U000d080dßz\U000bf82d\x8eÝ§)\x845Ð\x94a®\x1eO\x9d\x1beP𥔈+;\U00074dc3·æ¹§ÙÐ\x87\x1e]\U000f78f3\x05\U0008a74d\x13\U00102582æ8\U0001c0e7\U00069a28\x14\U000159d0㦶\U000f6004\x8c\x86º\x8cÆ𞥄f\U0005de81¶ù\x96\t.\x81íBÛ^-ö\x19¥\U000433e3`\xadwµ\x0c\x86ô©õ\x00P\x0eñ\x0b\x1eë\U000e77429\U000873ec\U0006d3d4\U000d4def\U0009f60f\x912Oj\U00109c56Añ\x153m\U00106653x\U000b0a6c&\U000f060fdô]\U00037f17\U000718cf\U000bbc37\U000e0ecbå\x82wnh\x99þ¿á\U0004cdae\x16û!\x07·ãáúéj\U000674a2ÚIm\x91\x97\x86Y\U0007e143\x05Û\x8bò\U000f80f7𗣄\U00079c49¯â\x08k\U00098902²æ\x9f¢¸¥}¸\U0005b76d윓\x16\r|^\x95*n0\x12þ\U0003898a\x05¦\x06U\U0010c3bczÆ\x94u\x08-è\U000506d9\U000cca48UvÓCM©\x1cíÖ¸ç\U000af4d0G\x9a f\x8e\U000c31e9\U000f1bff\U00096dcf¤\x1fV¡\U00050258\x99%\x82ÒA9aÓ\U000e1e5b\U000fc63c;«¥\x1d\U000f38f8\U00061bc8Qiµ\U000f7ee4\x1eP\U0006fb68,Å\x0f»\U000cb9ea\x03Ô¨¤uMô~¸¨Þé)\x84O\U0006f189\U0009e20dn§\U0009259d}\x9e\x98\U0005f20f\U00068140\x1eí\x89\x0e\x7fu\U000413a9C\x11°u\x93}\x98\x18¾\x84\x00³\x18ÕðC\U00083b71\x9a²\x80pÑ\U0005681ap\U00089c27ã\x1b\U000a9906\x06c\x8b4î.÷x§\U00039c4aÿ\x0eØ\U000c0d5dG\x9fºF¹øW\x93W\U0006a300Ê𩉆Ï\U000e70c8\x13½ºAx\x138\U0010d6e1\x98/\U00106518ç5®\x81)2\x97¢i\x83Yã:\x83!\x80I\x9bq#\x97\x9f\x8c¬\U0006a8110\x91ÈO\U000a3c10R\x853\U000550cb\x15&+\U00060f7c´\U000c94ad0\x90\x83.\U0005a7f0\U0008739b\x9c(é\x0e¹\U000a5240U\U000afa0a\x05¶\x8fNÔ\U00096b6aôD\x80\U0006b690\x05áE\x9b4±¥D\x0c*\U00040560\x12é\x1e\U000c8e70E8K\x89\x83B\x8aÀ«\\/Î\U000b3ef7\n\x95\U0003f173¶Æe\x9a¬P\x82bÐp?\x00\x12𝢢!$ÛD\U000669da\U000dc9d9j\r\U0005cf5b×\x8fá\U000734c0Î\U00060afaÛÒô1\U000371b8ud-´x?YÐÍ²Òþ\U00054ce9w\x86\x0e\x80qmL¯©'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': 'òËðÁ&þE\x90\x8e\x15¨\U000c15f1ÕXÑxÍº\U000d4fb8e>\x1e©\x971>\x98\x83pj\x99[\x01q²\x1fºÑÖ·\U0004487c\U000c4a30\U000e717f}M\x8c;ßvEâ-\x03\xa0\U00104f52È±tès`¬×&u狶xø\t\\·\x02$\x81`\x82ëþ+\U0010b2ae\U000b8575)\U001068d2ø\U000fc2de\U0001c530w\U000684f4è§S\U00016ec7U&õ\r-\U000bcab2\x19\U0008397e\U00061cd5\x9f\U00060097\x17\x1b\U000616a7\U0009693f\x87h\U0008a880·XvT5~«XFP\U000338e4\U00040f4fÏír¹\x7f\U000d7d44»\U00100b18^\U00077b14B;\U000bdd71\x87\U000f5e7dÈ?óÈ\U000d6101Ôh16±¤Úé\x01\x03=s\x8djÞØ𮢋G;Å\x8e(VÂ\U0010a92fT¤è5i\x8c\x9e°Vû\U0003a70b\x99\x9c𰆃ÞØ >¤\U000a08d4Q\n¶a\x9feH ü{\x0b\U000a2638\x9a\U0002ee8a Ä\x94\x13cjH¼\x84ÌöH\x1a\U000952f42(;\x91\U000c237b\U0006db0fÅ\x9cU\x9eißØ\x13\x80\x12¿½Åâ§}U$\U00013649ev\n\x854MW\U0004c5bdÞ¶¥\U00071473¸×\x033>\x8bºÁÃ^¹\U000373e6þIly\U00051ee9é4\U000736cd¶\x0e)𨕅\x96\x04*½\U000ccc1cìF-í>\x15\U0006ff5cH\U0004aa4fÚà\U00080911F0@Íí\x11È\U000f9038Îæ\U00077614!æ\x90\x7fÛk¼o~Ë\U0007167a2ÒlP§¤â\U000c4d6bsÓ\U0007c1c3"/R\x02à9\U000cf0f4=Ô\x8eg(¦1\x8a\U000b7d54FàXO\x14𗣸\r\tÖ幣w\x0c$X¿¿N\x1a\U0003bb4f\x18C¬hR»!£U\x07\U0007e2cd;¸\U0010fd6chí\U0004e1f3ò\U00032d7f\U0008444aEq\x9dÉ{\U00066bbcMÂ\x97N?\U0005cf62°𩑩Ó\U000f51ccy×µ\U00105242袛ë+|1É\x1bI¡Ax.\x1f\u1c4aæ\U000c68c0\x997\U0005389fÆ¦|ÉY©\xadha9𰶊\x9aï°È\x15\x900Çÿ\x90Êq\x02ú\x1e§êú\x81Ý\x9d\x16\x8d\x05\x1aCµd\tgÌã应A\x05\x13\U000ba608¸SÜL\x8f\U0001fe50\U00106fd8&@\x1e\U00057aed\x83à𰺼¦Sñï®C\x83\U00082907M\x9e±!êç\U000b91f9á½\U0007cbc0\U0009fc16tË\x88\U000bbc8dMÍÚ\x88ö\x1ef¤±c¬_\x02\x9eÝÎ·\U000324c9;\U000397b9øÈ\x1d\U000950e5Ó\x1d²J\U000b522bæ\U00067b08\x80L`\x89N[q\U0008a2a9¹\xad\U0010f60b\x9dü\x87&\x10\x0e¡^Yÿûý6ùèÞÚÖ`0rm\U000820f5\U000cca70§²\U000a81ed#ú\x1d\U00049260k\U000c08e0\xadm\U0004d634L´®\U000f0338üïꑌT´¢\U000b6bbf¥·×\x05S8jðµÜ92}&Ø몃¯\U000b6f0f¹ãåÆd½ÇP\U000dfb01\x82|\U000669a1e\U000dd3dd\x1eX=\x16\U000d39fb\U000ef7c9ôåⷔÂö\x06ö𢾾\x7f\U00063a9a3÷%`¥\x9f>\U000d080dßz\U000bf82d\x8eÝ§)\x845Ð\x94a®\x1eO\x9d\x1beP𥔈+;\U00074dc3·æ¹§ÙÐ\x87\x1e]\U000f78f3\x05\U0008a74d\x13\U00102582æ8\U0001c0e7\U00069a28\x14\U000159d0㦶\U000f6004\x8c\x86º\x8cÆ𞥄f\U0005de81¶ù\x96\t.\x81íBÛ^-ö\x19¥\U000433e3`\xadwµ\x0c\x86ô©õ\x00P\x0eñ\x0b\x1eë\U000e77429\U000873ec\U0006d3d4\U000d4def\U0009f60f\x912Oj\U00109c56Añ\x153m\U00106653x\U000b0a6c&\U000f060fdô]\U00037f17\U000718cf\U000bbc37\U000e0ecbå\x82wnh\x99þ¿á\U0004cdae\x16û!\x07·ãáúéj\U000674a2ÚIm\x91\x97\x86Y\U0007e143\x05Û\x8bò\U000f80f7𗣄\U00079c49¯â\x08k\U00098902²æ\x9f¢¸¥}¸\U0005b76d윓\x16\r|^\x95*n0\x12þ\U0003898a\x05¦\x06U\U0010c3bczÆ\x94u\x08-è\U000506d9\U000cca48UvÓCM©\x1cíÖ¸ç\U000af4d0G\x9a f\x8e\U000c31e9\U000f1bff\U00096dcf¤\x1fV¡\U00050258\x99%\x82ÒA9aÓ\U000e1e5b\U000fc63c;«¥\x1d\U000f38f8\U00061bc8Qiµ\U000f7ee4\x1eP\U0006fb68,Å\x0f»\U000cb9ea\x03Ô¨¤uMô~¸¨Þé)\x84O\U0006f189\U0009e20dn§\U0009259d}\x9e\x98\U0005f20f\U00068140\x1eí\x89\x0e\x7fu\U000413a9C\x11°u\x93}\x98\x18¾\x84\x00³\x18ÕðC\U00083b71\x9a²\x80pÑ\U0005681ap\U00089c27ã\x1b\U000a9906\x06c\x8b4î.÷x§\U00039c4aÿ\x0eØ\U000c0d5dG\x9fºF¹øW\x93W\U0006a300Ê𩉆Ï\U000e70c8\x13½ºAx\x138\U0010d6e1\x98/\U00106518ç5®\x81)2\x97¢i\x83Yã:\x83!\x80I\x9bq#\x97\x9f\x8c¬\U0006a8110\x91ÈO\U000a3c10R\x853\U000550cb\x15&+\U00060f7c´\U000c94ad0\x90\x83.\U0005a7f0\U0008739b\x9c(é\x0e¹\U000a5240U\U000afa0a\x05¶\x8fNÔ\U00096b6aôD\x80\U0006b690\x05áE\x9b4±¥D\x0c*\U00040560\x12é\x1e\U000c8e70E8K\x89\x83B\x8aÀ«\\/Î\U000b3ef7\n\x95\U0003f173¶Æe\x9a¬P\x82bÐp?\x00\x12𝢢!$ÛD\U000669da\U000dc9d9j\r\U0005cf5b×\x8fá\U000734c0Î\U00060afaÛÒô1\U000371b8ud-´x?YÐÍ²Òþ\U00054ce9w\x86\x0e\x80qmL¯©'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003615s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003642s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 81, 'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 81, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003873s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 88121057218126856235118742526094012021}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 88121057218126856235118742526094012021, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003789s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003984s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['', '¼07\U000e161bP\U000fb19e𧨖@>\xa0\x96', '', '¹ÿ', ',üzd', '\x9c\x80Ü\U000a0870ça', 'ä\U000900bd«', '\U0008603c\x9b']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '¼07\U000e161bP\U000fb19e𧨖@>\xa0\x96', '', '¹ÿ', ',üzd', '\x9c\x80Ü\U000a0870ça', 'ä\U000900bd«', '\U0008603c\x9b'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.0038s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '   '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00376s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': -19576}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -19576, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.005337s
====================================================================================================
2025-09-19 00:02:04 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '  '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003965s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': 29411}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 29411, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003422s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -1481, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -1481, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003721s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0036s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003577s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 12242, 'password': -7}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 12242, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -7, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003543s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -15849, 'password': ['`Ð\U00080b9e¬h¸AÔ\U0004b500©Ü-𫊣\U00013daf´', "\x08'c", '\x9b7\U000c55f0¾\x7f\U000ec9a1ÅÐ\x9e\U000892ab', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -15849, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['`Ð\U00080b9e¬h¸AÔ\U0004b500©Ü-𫊣\U00013daf´', "\x08'c", '\x9b7\U000c55f0¾\x7f\U000ec9a1ÅÐ\x9e\U000892ab', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003616s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ['', 'E', 'Ûö)\U0004e2f1Ô=\x8d\U000e0eac', 'H½\x89¤xA\U00047016', 'Û', '\x99\U000d2302\U000ad671ý<ÁÑy\x9d\x83\U000c09db.\U0009d03f', '&Ï\U0007bb21']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', 'E', 'Ûö)\U0004e2f1Ô=\x8d\U000e0eac', 'H½\x89¤xA\U00047016', 'Û', '\x99\U000d2302\U000ad671ý<ÁÑy\x9d\x83\U000c09db.\U0009d03f', '&Ï\U0007bb21'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003702s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': ['', "\x13©'\x18ò\U00050011\U000ae24b'Ý"]}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', "\x13©'\x18ò\U00050011\U000ae24b'Ý"], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003683s
====================================================================================================
2025-09-19 00:02:05 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00398s
====================================================================================================
2025-09-19 00:02:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003481s
====================================================================================================
2025-09-19 00:02:06 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "±\x9dOì\U000580b8ꭺRKÊÔòg\x14≷*m\U00052241.\U00038e84\U000de934I\U0005abaf\U000c2dd8\x83\rCXh=q®\x8b#Ý\x87P\\\x812\x03¢ªëUÊ\x15\x92] ì\U0009587cÙÒ\x1c\ue2b4\U0005b8e9𠄟e\U0009ea76Öõº¨+e\U0001b5e6K𥋶\U0009ea1dè©\U000c307fSÖçÿ½𩱔Wg\U000f8a22R,\x9eòu\U00072c40¼\x9f\x95è\x02ªÏ\U000e3ec4b7:\x86d)¢\U000d04ea\x9d𭚩ñ\U00038044q8Ø\U000db5cd¿\x15\U0007017b´Ú+]R-/\x13WRæK~𫼗ð1\r𠖦»+ù\r\U0005f48e\x84z\x1b\U000db43f\U000ad5dbÐ\x88p\U0010ceac\U000f42adN\U00041a19ew\x85×\x85%ù:yàr\U00057c80Ý¶Kî\x90\U000d10e5!\xad\U0003fde2\U00034914Tû\x88\x17õ\x01K\U000464c3³m\U000faca1Ö/\U000a5f0eSÑèãx\U00074510¤ÃZ».OÂÙ·\x0c£\x01Í\x04\x9bÏºò\x05_¼-ÄÙl\x9eb\x13Ñ\U000c7f04º\x05\x1b\x93\x8fÝ*\x9b\x11µàÌÜ¹Â/\x89ya\U000924c3\x07ÞÝ\U000dd33bÑ×¦\U000e3930\U000f24b0\x7fÜ\U000df483uKsGZ\U000e4eb0wó\x1fú\x07Aã\x8c)𦁚´G\x8eZ\U000f630aHÜ뜮𧧙PÜ\x9d\x04ÃyõkÏQ\x8b]Ì\x90å\U00066726Û¼𬰱ü\U000a2a58¶¾(ÂµßüË\U000433c1\U00070ba6³\U000481caý\x0bS}\x80\x89V+\t°a\U000f9bf4\x01õ𬎱æç\U000e633c?/?\U0007f61bcÄÕ\x17ßÓÍ\x83\x84\U000c4651\r\U0001baecÜ\x02ò\U0003e3b5\x95xûwyÏ\U000a0b9fb\x10\x06 \x0b\x01þ\U00100fdd\U0003676d#\x15\xad\t\x95cÓÃ\U0003b522é\x99¥\x87Î\U0009f30c|\x89\x1b\x91½©±𦿐ç\x0b\x80\U0006dd7aÅÊ\x9e\x0bñU\U00067ad3¥\x16\x93ûø¯r\U00088fd2v\x8e\U00032f27\U00053a8b{Û\U00015451\U000f7835¸Ô\x00&5TÏ[`ÇµLø\x10\x0e¸\x80sÇÈ\x81õ\x1b«\x0e\U0006610dE\x97\x9b»\U00098d93\x13\x97Æ9Ö©¦Aúü\U00096106\x1c]D\x91«m½8\U00043ec9\U0009945a\x16J\x81Ç×ÊÕ7¾!\x85Ô°\x07Ìë\U0009d90fVjÓÂ\U000af548w2\U0003c2ad\U000732b5.]/Ué\U000625d9û\x83\\\U0005ebf4\U00092bc0-V\x03\x8d\U0009fdc6D\U000fa1d1àç«ù¶âGt£«ô^➻\t%\rçâT\U00032b6d60\U000f021bó\U000aecf2Æ4\U0003b1e5\U000b0732ù\x0e\U0010d15c4\x06\\*\x8e\U00081d40\x9dHóA$2\U000891e06dl«\U0006ed49WßÚN\x01\U0004bfeaïí\U000e3a75þA±¯\x8dU\x1cÓ³º\x07÷[\x05\x12H<\rú\U00032c6dÄN³\x80\x92øcÞ秊\t0𪭡t´;\U000f074aaUºG\U0008f0ff/E¯ú\x88aõC@ñ\U00091af5ù\x85hÌ\U000860d8©÷¼\U00080733\x9c\U0003d2a9𮚘\x013Ö\U0007fa6c»\x9b6µ\U000cbbd8¸\x1bØÖJ£\x06\x9ddÎ\U00096f3c\x18¡\x7f\U000e9c51\U0007aff9O\x00'%ç\U000ba7c2Õ3\U000d362a\x06=\x0cù\x18\x1b\U00019410ðmJBi:+\x18¸ëV\x91qvN\x06\U0001022b.r\U0008b792ÀÐ\x12@朖YûiÆ\U00035556z\U000a22a5í\x0cÉsâ\x10<\U00084a69fç\U00035fe2\x94\x8d[\U000ec977ß\U000460a49ìAÁh7Î\x04\x85¿\U0001a21f\x83!ý¾¡\x80\U00069809\x8d`¶\U000ce887¤\x97\x7f^a\x9fà\U000fab7b\x10.\\ÂôÄ´Äï©èN\x95\x1b@\U000d4014Bh\x97G\U000a1fceÐ(¸¬\U0009dfc9\x00b%\U000f7d6c\U0004ac46Hñÿ¤jtzq\U00088dce|\x1báôå\U000d7850\x7fé´ç=f°(\U00098568\x14\x99.¿\x08\x8a\x88\x7f\x04\x80ñ\x89\U00107b13\x002GÄ\x10\x0f7\U00069b7e\x0f\x8eq\U00053cac\x1fÅ!\x08J\xa0\x82sÊö\U0006a3ach\x11\x06𫖕i\U0009a6a0\n\xadxÙFy\U000cd7aaE\U000344c8\x87%>±\U00092321Üc?\x12\x83h𤾭y\rÈ\x17À0\x11¤\x1c*\x873¢\x1d`¹\n\x0f\x0f\U000392cd\U0006b563¬\U000eab4f¸à\x99±\x92Ó\U00061aeaÍ\x1bì\x17RK\U000ea38bo\U000a7949°\x05ø\x1e\xa0Dò\x90À\x14ì\U000b52e6`엤h\U000acbfd\x8eÚªyI\n\U000eaefe\x96\U00013ad5ã\x08òä¯𗤹=\U00087010\U00019191æok\U000c2d64 ý·\x99ã\x10}¾\x98í\U0004a8ffk³\U000c8174¶\x80\U000d98d0\U000505b1Oßh\U000c051d\x03¢\x8d\x12\x8dB¹\U000f0995\U000ddd39Ânê``\U00016469ú\U000cf92b\U000cc48f\xad\U000ca5c6\U000c6b4eK©}\U00075a27\x12\U00048369ª\x844{\U000f87a0\x16Ñ¿\x941\x01\U0009cf04ýv\x92¹\U0006b4d7,\U000a41d2\x15h\x92ºZj*|\x9f6\U00090faa:\x80»\U000e893e{ØR¹b\x16Ø𣓰\U00090842\U000431d7\x90𣺵®\U000b9963à!^¨è\x91\U0006f05f9=\U000df433¿\x8eÒÍ\U00087280iV{0\x87\x07Ã\x97ã\U0003619e¦Ðî\x81BB\U0004615e\x80×Q=\U0009b787\xadU7\x16)\x7fÈ\x8d\U000fcd26\x91°`\x8b\U000a3eb1\U0010345e,\U000370fan𥿃\U0009e0b7ã·Ö\x19û\U000fb408\U000694afkª^7𥵪\x81ÏÎ|êYx`6{\U00015e86Y\U0004dbde\U00019373Â»<\x96¯õöL\U00056fdd\n]蚜~q\U000f4c14¾üt\x9b\U000c1bfc»féàõÏ\x0fÝ\U000e72b6%ý\U00069443\x80\x8e\x8a^µ°\x1dJ\x89\U000c659a\xa0\U000f9168\U0003f900\n¦\U000a6862\x03\x83@Á\x95º", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003882s
====================================================================================================
2025-09-19 00:02:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['d\x1a\x00肵~𪀃w\ue09e¨', 'XÉ¼\x1d\U000b504dÓ\U000f10c6Ý\U00055c92=I', '\U001088c4', '', '#d\x90'], 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['d\x1a\x00肵~𪀃w\ue09e¨', 'XÉ¼\x1d\U000b504dÓ\U000f10c6Ý\U00055c92=I', '\U001088c4', '', '#d\x90'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003772s
====================================================================================================
2025-09-19 00:02:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00368s
====================================================================================================
2025-09-19 00:02:07 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x1d', 'áJY', '¾î\x9em¾\U00056558â', 'j)Îör\U00085864Á\x1b¥Ô\x92(𘈣\U000d871e\x03f\xa0', '', 'å<'], 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x1d', 'áJY', '¾î\x9em¾\U00056558â', 'j)Îör\U00085864Á\x1b¥Ô\x92(𘈣\U000d871e\x03f\xa0', '', 'å<'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003801s
====================================================================================================
2025-09-19 00:02:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ',\x885\x91ä\U000ba4d2Ç\x1a0\x1ax3\U000d44c4\U000deaa1®\U0008582cG=¯曣\U0006eab0÷!\x96ם§¬3u\U000b1c52\U0007b788\x7f½\x98_>\x13 \U0004ac9e\x0c8Û\x07\x93\x7f¼¨\U000cc154ü£ØÍL?e?\x99\U00068ba0ê±CVk\U000f8ea5§\U0010c417[µn\\Ò\U00010f62\U000b3ec4\x16óP@\x06\U0001ac15\x91\U0001c1fe岵»5Á\U00072d10jo½ì𬙋E0\x86MÍ\x8eÊn\U000e4f59\x82\x84Gã\xa0\x0cì\U000851a9(\n\U000a6fb0\U000d9193\x90B3µx5 𣬝íÚ>áÏÅz`IÃÚ»\x99\U000eb74eỳ3\U000f426f\U000a43869§\x92\U000854fe?\x8f\U00019de2\uf185>\t\x03\U0006f29aâ\xa0®\U000d2676e=\U000a3e1c\x0e3\x1d\U0008df90\U00075168ÕÖ𠕰\x9a\x9aL\U000de9be@\U00037c97\x17<\U000a2693©2\U000681d0\x11*Ã\x85\U000d5670\x0eN\x8b\x10\U0007a81f\x83\x1d0V\x89\U000c18d6\x87\x98\x84Ä¡)÷ÿy\x1bWµz\U000f5446`\x11\U000ccad3\x04\x1eõ>Ø»ÈÀa\x1f\xadº5¢vMD\x1b\U0010c6c6uñ5\U00106156\U00056aa1\x14\x1c¼ùBó¤\rrò\x07Ñéÿ\x10Á\x9c\x06\U000e7553\U0007ed85µ\U000c7cd8B\x80Û\x85\x8av\U000f8fc3çH%\n\x1dhê\U0010c90cÔÖrV\x01qÏ\U0004b34f\U0007b3b7\U0006398a³ûnh8x\U000af5df{¢ \x88´\x86\U001064e7<\x87𤲳\x97·oG\x0f\x13´¡¡qï\U0007aca3\x9c\x9e[F\x96\U00075c48\U0008a66a9*¯u;¸\x8f\x98º\U000930d8\U00053f31Y\x85I\U000f250cy\U000357be𦘂\x8cþý\U000c83a1\U00014736y·\x06\U0003adadÞ\x02c\x92`\U0005e344f<\U000bf9879dõ9Ñ\x87\x8a\U00077c2b\x068\U00103a40\U0003ee08\U00039d1ae\x05\U000e4307è\x9e\x01c\x9a\x85\x82\x9cçp\x13íî\x07\x8d#\x84\x87¼w\x80@fZ.û\U00038c6fí\x1aöêüBÞ\U000fd9aaîSßPÏºÒÅ\x98\U000c39d3ôÁ¼\x9bw\x11®È¦üÊÅÛ\\sà(\x8c\x98\\^\x08\U0006a3c6ò\x14R\U000a7fa9\x86\U000dd957\x96\x8a¶ⅷ\x8fÔÐ#玻Xß=\x00Ô®\U000f936aÐo\U00082c3aX\U000e361b\U0010f50e©sF\U000c03c3\U000cd0ee\x0c¯\U00080328Ö,Cï>R\x84Á\U0005d1ce\x16\U00104b1e\U000101b4\U000644738\\\U0005a245Ý\U000bfc52\U000fa55e\x0ew¾\x97\x82\U000853ac\U000c86d1y\x96.¥sð\x93à\U0010aae0]\x1bVÛ\x057\U00072f05Bð\U000d6491\U00042fd0\U000ab850\U00035cceBX\U0004f180y%\x89\U000ce194\x07\x8aP\x1d\x11Å\x1e$\x1dÊ\U0003ac2fÚ)\x03!\x07\x82Ø\x1b¹\U000ea6f5*\x8d¢[DÌ9Ê\x0bR\x12%\\ÓKØ\x8b|\x07{\\ï\U0004e5c0®ù\U000ba9e0þ\U000c8ac5uåªîÓõ¸£\U000985d1~Æ~!\xadµ£\x84\U0003fa9c\U00097a95î\x80\x869CqN7𨷕l¢\x1a\x04\U000c49188\x82¦´W\x18s\x95Í*\U000a10ae\x0e³º\x9e:²\u08cfñ}æÞ\U000b044dí«\U000ab4a6\x94\U000977f6z/E\xadçnèᦻ𣕀\x19\U00046d9d\x9d»ð\x1e\x80\x16\x89ùô\x96ಓ\U0003438f³n\x84´Ø¸Þ\U0010830ct\x86B\U000c3f6c=\U00103921\tӈÏ𦅪P\x92\U000de8b9Ü\x9c\U00101a5bx\U00084a43EjÚ²\x80ÂÍ¤ú,\U000f5a1cÓ\x00\x89Y&ß\U000f16f7\U0003c790#Gôa\U000a970f2\U0003779dC\U0010670aï븭\U0005c9bfë\x1fLp\U000463e5\U000ffe13\U0006c14aÌ¡\x17\U000b5e36\U000ec6ea\U000b8e04º\x8f\r®\U000b0143\x98(\U000f9d2eU\x8d½Ø\U00039ea0>\x8föçs\U0006eab7\U00043be8Æ«Ô\U000f86a6:â\U000989ccïì\x02ÉQ@Ð\x9cæ\\8|\U00018d72\x80½\U0003a31b\x80\U0003ad09vÀ»U𨟵\U000d3d33\x12Ê\x18ê\U0003634cüy»FP\U0006efc7𞢞Ì?\U000148baS½\U00064915\x02MK£yÇ\x9f😹\U000d45f2\x9a𢠆j\U00103e84E\U0008d4af=&æ\x8c&\x06»\U0006a475\U000f3ebe\x9d\x94i\U00076429ÝG£\x01â\U000d5ca9\x12\uf4ba\U000e2c9d³®𡡬\U0004c503´\x89_¿9\x9bÜ\x99𧷻¤´\U0010e101gê\U000af608\x93Ñ.\U00060f0ct\x182\x84𫮤l\U000e3b92¸\U0001e574a\U00079244,ß𢴥\U000cb8fbf;ç\x7fî8\U00034e58æ\x9b\U000c9c18\xadD«紧>\x8fFîäM\x80ÀqÍymÝ\U0008d2b9\\%J\x15¿\U000eccad\x19Èº\x8a\x95\U000905f8CC×\U0003ccd1M±^\U000d3595\x80/\x1a\U0001c505h\U000f8734^\U000e38abC+o"¡Æ5Æ\U00052a79Ô\U0009bbd41E\U000bd044\U000ce36eÊÇÜZ\U000d1644Ê¾ª|\x14y\t% \U00093e80\x9aÁ\x9e3\x06ìé\U0009ee32Êî`쫲\x92\x9c\U0003f8a9\x15\x1f5\x0e·\x85"Ý\x1dÒ𬏫\U000874524\U000bc3d3\x99!\x99Î\U00075093\U0003e64cí\x1fÕQ*¯ìü\x94\U000e6c0a\x05(\x07\xa0,è\U000d3e2eRÍ¹Õ`幛Ü\x7fù¹T×È8 *\x08\x8dëVí\U0003c526Õ3\x8dÖ\x0b§oÙÒÐ¼óÜF\x01\x1e\U0006da6b:w\x10\x8eh\x0eç\x05°`\x0bg\x80\x17\x8d¤v©²\x9e𢿳Øw\U000a5018𭋀sëÐÖ²~ÎÕË\U000aea92:\u1f16^4m°}}\x99é\U000f7135¨Õ\x89\U000a3314Cþð삮£\U000cca37·2D\x14E\U0004594c\x12\x00\U000c7527\x11Ál¶\xa0È𡚠\U000d85af𨐶î¦ó\t\uf5d5ÁÿႽ\U00094cae\x0fÞ{𮖄\x98\x1fÎv\x0cæ觩P\x1c\U00055cccKZû%ë\x02ËøóÃ!\x9ehX;', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003581s
====================================================================================================
2025-09-19 00:02:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['B×\U0005f82b²\x1eÍúË', '\U000da119Iû\U000e908f\U00097cedß\U000f7f82Q\x05Ü']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['B×\U0005f82b²\x1eÍúË', '\U000da119Iû\U000e908f\U00097cedß\U000f7f82Q\x05Ü']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['B×\U0005f82b²\x1eÍúË', '\U000da119Iû\U000e908f\U00097cedß\U000f7f82Q\x05Ü'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003694s
====================================================================================================
2025-09-19 00:02:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -1058712350, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -1058712350, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004229s
====================================================================================================
2025-09-19 00:02:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\U0006726fkW\x05\x15s¥\x99ð;O\U000d32d4(\x9cm', 'x\U000b9b33$\x04\U00077421\x96', "'", '\x1e§\x96Ä\x88Þ\U00034ff2d', '\x8f', '\x87'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\U0006726fkW\x05\x15s¥\x99ð;O\U000d32d4(\x9cm', 'x\U000b9b33$\x04\U00077421\x96', "'", '\x1e§\x96Ä\x88Þ\U00034ff2d', '\x8f', '\x87'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003967s
====================================================================================================
2025-09-19 00:02:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -24363, 'password': ['\x03\U000ee606']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -24363, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x03\U000ee606'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004105s
====================================================================================================
2025-09-19 00:02:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': 'ÇZ\x82ô\U000c1f57N§\U00035be5Ïñ¥l7ÔÅþ\x01\x1d\U00072530\U00087c90\x0f)J\U000ebe1f\x99\U000c02f4\U000388a8\x84G\x96`º\U000894b1±Ë(\x0fî\x15ò\x07Éçæ\x94🙰뭅2¹Ex\x91æï\U000d51b8@¤ý\x8cP§?\x13J\x8dA\x13\x9d\U00108337ºð8ùü1ÿþ\x1a\x10\U0010bf8c\U0006204d½U\U0005d72e\U0009ad054år\x87Ø½\U00095e5aÂ\U000adcc2¶¥ú¯\x0eß\U0010a1b2\U0002eec0Ð\x1d\U0002fd95`\x03\x18ªÎ_ù+¾\x12.lÉ6Û°\x12kX|í¬)\x99\U0001cc62Y½Ö"\x18óW\x81W𔒰a¾Ï]D𭕔\U0003eb37\x0b\x8c\U00088e7f4¶¡\U000ad514\x99²#>Tj\U0009d5feY/E\x87|$\x08£\x9e÷ôÝ\U000ca26e\xad\U000a918e8<\x96\xa0%\x90m~v\x92𦳸cÈjc{H\x01®Å\x83T\U00085f41ö÷À_ú\x81\x89^EQ\U000dcc477\x82Øç\x89Eㅙþz+Zâc\x91æ\x0f0Pá\U0010b6cf\x0f]ÊF\x1a;\\1\U000fa166\U000522381\U0001c349]\x80Ë\U000e09bfê\x9a\x1fð\U000eee7be\x18_\U0003c4dehFUJA\U00081c70¼¡¥\U000fc93a\x97%媵l\x99°ìÈ\U0004d4eb\U00051289\x9a\x1b\U000ba7dc°±ìü\U00100752\x8c\x92\x1dÈ\U000ce85d\U000135cdå&%\x91öíäê%îF\x96\U000ef6c0C@\U000e9c96?\xadc\U000fd97f\x81¶\U0005b225\x17(çní\U000918a7\U000dc46e\U00036b37\U000fc9b8Ô\x18\x97]b»\U000c401fû\x10󠄥\x88\U000d97ae\x11è¹KÕ\x1fûq+º🝏!Ì]\x93\'󠄬N\r]#\x03¢1\x0bC\x938ñ\x97¿\x18빞\U000a77fb]\U000f2f29vÙX©´¨\x12\x1dÑÚ\U00069c61\x9bzÔ\x9d\x19\x8e{õ\x01\t\U0007ead1\x94(\'Ì𒒴\x9cv®\x9fp×\U000de22fý!í\U0009dd9b\U000a9a80\x89\U0010d559HËE\U00098bc6ã¡`\x0b\U0007f2d3yðÊ\xa0욹+\U000c6261\U000ef560Ñ\U000b8d67\x7fS\x8bÊ4\x9a\U000678bc¼ º³ü±ï\x08岁Í𥧖V\xadî0u\U000f298bd\x1bN\x9a\x11\x11\nîût2\U0003febf\U0003cc4f\x9b𡋂l±\x82ç/b\U00083d50¸\U0006a388þIÙ\x16§\x07j\U0005f1ae\x95Ù?½\x12\x9b¾\U000a081b:H\x93\U0005d507&úíñ\x13꠬æÓ\x86·¤\U00093aabúú°ØÎÒ8\U000ad86f\U0007cd5bÆØ©\x94{ÂþÓ\U000efd15\U00050957\U000a7f48Ýÿ\x8dä\x9c\x03\x1f\U00012c9dK\U0010bf99\x03b\x9bÐ\U000fc47b\x1b\x9e7âk\U00052d6dw\U0007c3a1\U000e67b9°/\x88=\x1a¯å\x9e\x90¬\U0007bf00\U00056fbcKTºí/AÔ´Ø\U000c02d8Á\x1a\U000fefd9GXq\x81"Ú\U00098952\x96^+\'\x8c\U00089dfe\U000b0c36sxbb𰩈Í\x9d\x89a©Þ?\U0004a101e\x16\U000f6ac8;\x93æ\U000c4c9a\x11p\U0003d4d7©SÇ\U00068ea4ö0%\x12Ï\U00081030@¤Ãcr\U000c6502j¥ÏÚ_EÈ깪Ã\x07\U00096576g÷\x9e,L}]ï\U0004d8c3x\U000dffed\x81èq\x9a\x80\U000e5d0dý\x99¸\x9b\x9ePe\U00051e63Z\U000d038c𝝸\U0008d94aán*\x93\U00051ae6\U000710a9å/U"ï#\x89\U00097dd9V\U000fe036\U0008b83a\U000b6afa\U000aa198\x1b𧋁\x8e¸Ñ¿\U00046259aG\x97ê\x1e.)\x16E¨A1\U000ab6fbãRúùs²gGu쟣\x8f\x0c\x05&\x9d·2éõQ(LC\U00048188`\U0009bd95\U0005e0cc=\U0007f592\x0cC\x00Å»\x04\U000314cba\x1d\x0eå]Ù\U000efa124\x18è»l\x1b\x9a\x15°\x8b\U00032ce2jëö\U0009a6ceëÓ1\U0008100eýÌ\x02\x0e\U000a6eca\U0004ea1dv\U00044d1d\U000f78d6ì\U0008b8c2\U000c82fcÞO\U0006282e\x06\x85Æ\U000a551e«"\U00079ede𝧎襤8\x06\x0e\nô\U0009c36fÌ|1Ø×Bûu\x08\x0f\U000c6663ùC§셉¨¨\U000cdcbe6\x9eqøC\x91\x10Ö0×:\U00098b36\x94M½²\U0004993dÏ¯\U000463a3\x1c\x81ï霷\x9cÞ\x0e\U000b2ccfàí\x12\x9c¥a£Ô\x7f\x80\x08F\x17\U0005986a\U0007ccdew\U00076ff2Ò\U000abccb[Ï\x00æ¦ýþ\x96Çý:5\x17$Ú~@\U001008df\U00054261\U0004157cÂ\U000dcac7\x12\x8bÒ_#/E&¼\U000e592c&ÿ<\U000107df\U0008bb9cÅxÚP£¯\x0b\U000e6d3fNÈ\x996Ç\U0009be48E\x93\U000b567e8Íè}\U0004d568ì\U000b990eb\U0005c1cf\U0004df06O\x16\x14¶ya¥åÁC\U000bedc4\x06Ç\U000cb797±\x9d\U00076f17\x1b\U00109912\U000b8b45L»\x85\U000baa60\x7f\x01F\U00104886\U000123cf\x06))\x14nmÏKäðø·Ö\U000e3420\xa0\x89𥆫:\x1eÊË¼Äj¼È\U000c888fHM\U00036718\x95\x9c§_ÈS\r\x1c\x9d\U000c9bc1\U0005e4c9!\x14\U000eae58ÏÏ»\n\x88ÙÇô\U000f98a6\x17¹\U0006fe09|\x1d\x99Ó]Á\U0006f0d4\U00015fa3tçùù©w\U000aa7db¾ñ\x9a\x12\x820𮅌\x94w\U0005e253)\x1c}\x81©+\U0008126a"\t'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003587s
====================================================================================================
2025-09-19 00:02:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x1bá\x82*\nb\x0evþ\x01\x02¢\U0004ef32»<\x1d\U0004cd61\U000b2762\x82"Í\x8f\U00052491b\x89\U000c5dbaÂ$Î\x07l8ý(óè\U000a761a"\x9cP\U000bc028w¶Ð\x12\U0001ad2f3\x1aAÀ\x10\x96\x0f\U0007292f', '/<\x9elÞðW'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x1bá\x82*\nb\x0evþ\x01\x02¢\U0004ef32»<\x1d\U0004cd61\U000b2762\x82"Í\x8f\U00052491b\x89\U000c5dbaÂ$Î\x07l8ý(óè\U000a761a"\x9cP\U000bc028w¶Ð\x12\U0001ad2f3\x1aAÀ\x10\x96\x0f\U0007292f', '/<\x9elÞðW'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004069s
====================================================================================================
2025-09-19 00:02:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -981456522}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -981456522, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003618s
====================================================================================================
2025-09-19 00:02:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['óIÍ', 'æ\x99\U000f153e'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['óIÍ', 'æ\x99\U000f153e'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003606s
====================================================================================================
2025-09-19 00:02:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['_\U000b7610', '\xa0', 'ô ', 'ô', '\U000af22aâ\U00068adaÔ', '\x15\x8di\x06²'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['_\U000b7610', '\xa0', 'ô ', 'ô', '\U000af22aâ\U00068adaÔ', '\x15\x8di\x06²'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004469s
====================================================================================================
2025-09-19 00:02:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ['»½\x9f\U000c4bda\U000d2047)']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['»½\x9f\U000c4bda\U000d2047)'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.139546s
====================================================================================================
2025-09-19 00:02:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\n×U\U000c1432}Ò@\U000dac1bÐ', '÷Æ\x1d¿®', '', '', '\x16\U000ee7fc0b\x82\\æò\U000c3980\U000acec0\x11óvu\x90d', '_Ì\x94"½Ö\x933\U000e3410\x012\x1eö\U000b1e12à', '\U000fc515\x05u', '\x157\U000582e4\x18\U0010161fÓ,\x9f\x98"A\x8b', '\U000bfc77\x8c\U0001ebc3\x92´/Ëø@\x9f'], 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\n×U\U000c1432}Ò@\U000dac1bÐ', '÷Æ\x1d¿®', '', '', '\x16\U000ee7fc0b\x82\\æò\U000c3980\U000acec0\x11óvu\x90d', '_Ì\x94"½Ö\x933\U000e3410\x012\x1eö\U000b1e12à', '\U000fc515\x05u', '\x157\U000582e4\x18\U0010161fÓ,\x9f\x98"A\x8b', '\U000bfc77\x8c\U0001ebc3\x92´/Ëø@\x9f'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003764s
====================================================================================================
2025-09-19 00:02:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00362s
====================================================================================================
2025-09-19 00:02:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -29687, 'password': '\U000fd110MÍ\U0001da9a\x84~\x16´c·Ù\U00010c70ÒD\x13"\x051\x18\U000a6cbc\x9e\U00044d3c\x8d,\U000806c9?\x84å\x02\U00031a42×\U0004ee01G<E\x8d[ËÏá\x00ß\U000eb5a7\U0006aab1%\U000d23cb\U00019cd8\x90\x89\x10¸\U000bef17酻_)\x8bÐ\U000623f8\U0002febd\x92𥷿³TC-ß\x0cäk\x06§¿¬\x16\x19\x01\x88\x04\U00090737ß£\U000d47e1ä±V\\`#\U000af263\U0005ebc7FÆ\x18ðùgÞ\U000ba128=\U000cb804\x99FiÌg\U0004124d\tI\x95é\U000ac78aê\U000f994c\U0004178câYì\x85bNy\x12\U000dfe73c Ïw.é\x07³r/\x8bÖ\U000b7858¸\x1cÔ\U000ef874\U00070bde\U000c755d.\x9cºÏCEFâ𤟺趲\U0004a4b0ØÜ\x8e\x82¾rhx\x1e\U0010c91ej5í5\xa0ÿµ÷\U0005ab32Õë\x85\U000f2a8aÑ\x85b\U000cf321S\U0003236f\x13¾e-ZÆÔõoe\x91µ\U00101d2de\x1f\U00102ab3\x15h²\x85%Åùyå덻\U0004fef4í#\x8bdm\U00019fbcò\x17𣄵ö\U000be6d2\U0001dd04n¶\tÒ1\x145\x96ìz¯»%\U00100841ÄÐ\U000c678dY^\x88£9ò\U0006d116\x13ÜGñs\x82Å\x1d\x16íq¼\U00108f94âS¹\U0005b606(w®\U00039a79ÿÓ\U000dee3e\x9e\x08óÒ\U000de116\U000f950e\U00071aac*\x8e\U00045e5dêá\U00013865Ð\U000419b0¼\x8eÝS]\U00039f92¹\x14/DO\U00031531\U000607e2Í\U000d4fc7±𣣞\U0010fee3À^I\x9d\x81@â¡\n\x9dÐu\x88\x05\x94SÎèÓñ\U00102f79Ó𠌰Ñ4.\U000b47faØÌâG\x10>\U000c8e61\x88ôÂ\U000edf66\x06\x8c\x0e\x0c2Ñ沥\x12\U000ab160·\U0007c2a1\U000c6e53ÐÌ\U000c532d\U00054cfc\nçTc\x9bR?Ë\x11\x12\U0009db2dg;%¾´\U0005a97e\U0006fbf3\U0005eb0e\U000a5361.¼\U0008c9d1¬KØ\U0004de2c²\x8c\U0008b4a3Æ\U00095b99ßk\U000da2ee𪛜©\U0005d572ÌÝdaÓ\x03º\U0007205a\U000eb51fO\x16t\x8d\U0008cd0d"\U000d4bf3\U0008dad4\x10xq\U00011e77[\U000476a8¦ä¥¯ Â4\U0005f345\U00068aab`\x18vEõ¬¹\U00085bc7\x02Í¸ÿ÷IÒ\x86®Ìú¥\x1b\x93C\x9e\U000ecbe6\x01°\x9f\x9bÒ\x82®5.â\x9dM.&\U000cc71bÁ\U000d4c49Ø\x82Ü\x19ræ\U00065834\x9b\U000de534ä\U0007dc07í¬BÂ,\x98\x10@(y\nì\U000ffe2aX3+ÓÈ\x93\U001089aa~å\U000a1a5f¡D\U00059fadS.r\x83ù¤ÆÕÄ\U0008e4e9\U000197e7óø\U000409e3>Ç\x9dᮋ}ªLG\x16Ê.¯\x1c>\x00\x9e·W¿\x85Û\\l°B诵ÇÈq\U000f3fbcÊi\x0e\x0eá\U000d3bfe\U0010d041Éþâ\x17¤\x07Ò\x80\U0001a1d1¤O\U000f2317\U0010b7bdÞ\x8e^\x07\U0003540d0È\x88\U000890ebr\U000ee915Ò\xa0Ñ)ï\x98þå\U00045083kÒW>\x1fæ\x8d\x98í8\x9fa\U0008e585,\U0001c61b\U000ed35c\x11S\U000dbbe2\x83\U000859fc\x87&\'\U000a9c37\x08Gw\U000cb68b\U00088782¡ßÚ\U0003902c𡠼\x93²\x1b\xa0\x938i𨫮\x19ùî\U00058e47ò}\U000fb159\x7f/\x13z\U000fcdc2¤±H\U001095fc\U000ff1e7\x8b\U00080aa0¸¤U\U000b846bÀ𧚕À£ÿ<º\x8b\U00080f03\x99¨HB\U000b9f29o\U00084902\x8bc\U0004995a\x11Mµ\xa0+jºh/Ä\x9dWÒþñÇl\x94\U000eeade|\x99\U000cd6e5\U001038f0\x9a𭺱\xa0MÄÞnNÿ2\x1f)\U0004235b!\U001087ff\x1aÊ0\x16G;\x11\x91\U00068228\U00098953\U000c4ca2\U0010d901b\x8f\x08Kòä\\ø鹎\x116Ê#º0ûÛ\x90\x063\x0e\x88\x8dÓ1µ|)|\x14ÌÈ\U000f89f6àmé\x85\x92¾\U000f86e9\x90\x90\x9c¦.ÕO°\U0005ff57ñT\x17\x9cò\U000e3610\U00036be0\x88\x18y𮐷\U00085df9é\U0001b4d1~v\U00032077\x08\nù\U0005bb951á.ç\U000e8a8f\x04n&!\x00À\x85½\x11\U0007af24\U000d6257réö\U000c66f7\U0006ebc8"Íía_c<Du\U00044ff2l\U0006642eiO\U00033776\x19\U000c0c9a\x8b\U0005dcc3å\U0003dbe8Cä\U00102c7bN\U00067f7c¤É;K\U00018fef\U0007c175\U00104d7d çÌ\U0004d631qu\U000d6ece\U00047bd4Oo\x91ú$KMR\x9f5\x0f\x00÷\x01\U00081183Òo\x11\U000888efû×ºØbÜöbÄ\x0cÌ\x8a𗢤\U000adb41Ë¬5ë`\x87Ët[°Ò\U000c3fd8\U00105d9ec\x18f~\x84âo\U000ec517ON.\x95^\x95\xa0zv\x16&\x11ºî䱊\U0010952bÃZ?² -\U00013bf2¢p\U0004be07\U0003e666Gys𫖣Ì\x06$\U0007f6f2\x8cvUù\U000b3adbSÞ\x05\U000a5f75\U00060fcc\x9dJ\x9f\tÄ\x1c\x11\U0001cac7\x87\n§\U0007f897î6Z🧊\x94þycµ¹\U000450b6\x8cÒÔ\U0008d33a+§\U000870b9𩉰ë³\x83ß¡\U0003f6f2$jÐ\U000d4260u\x8f\U000d0259r\U000a0070\U00037a68½Þ\x9b\U0007b815n°¶Ä]wr\x11æ]\U00044546¤\U000c4661\x95ÛÚýg\U0004e02f\U000d5fa52î\U000557bf\U000e3228\tZúj"u:nb\U00088bbb\x92\n\'w¦ç\x92\U000acc00µ\x10ñüj_\x7f\U000909e8\u20c1\x0f\x9cÝY𦐰\x8e5É\n6ç6\xad\U000fd340\x13tè\x9a\x04\x0f7 À\x0fr\U0005741cõ#~\x03-¢©µA\U000652f5\x81÷[\x08CB>B=\U00076a04\x98巗\x8cmÕ\U000b3e5f\x96\U000f2199û¥\x83°\U00040017¶\x1d\U000f3dccÈ\x06\x8d3>\x11驩D`\x84zÂ\x8e\x043\U000c6210\U000f6552\U000de561\U0005b056S\U000aaae1÷\x15|q\U000690b9êì\x1c\x86\x03\x81Î\x7f:9³\x13Ñ\n\x12àÙ\x12\x9a\x95ìü\x05\x1dá\x15oãäàG¦𐔦ä\x88¯\U00055acf\x88F.)O<\U000f87f1ÖÛ𰥁û\x01\x10\x04¤\U0005951b\U00031d42kÍ[\x8d¯àofú|\xad\U00097459\x1eo²®\U000d701c\x95f\U00050d2c<vx\U0003a055Nå-'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -29687, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003868s
====================================================================================================
2025-09-19 00:02:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001596s
====================================================================================================
2025-09-19 00:02:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.0015s
====================================================================================================
2025-09-19 00:15:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MjQyNzA4fQ.5w4fg5i1Np0-whgDoVdBsCQo9CNmgwu1j7th-R1oPN4', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.002811s
====================================================================================================
2025-09-19 00:15:08 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  },
  "dictionary_item_removed": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:15:08 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:15:08 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002163s
====================================================================================================
2025-09-19 00:15:08 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:15:08 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['\U00051c51\r¦', 'I\x13\x17\U000f78f7\U0008ece7', 'ß·\x07\U00061b8b\U001049c7¿ßQY']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00051c51\r¦', 'I\x13\x17\U000f78f7\U0008ece7', 'ß·\x07\U00061b8b\U001049c7¿ßQY'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.006742s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['\U00051c51', '\U0006af00𢈄', '', '\U000f78f7\U0008ece7', 'ß·\x07\U00061b8b\U001049c7¿ßQY']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00051c51', '\U0006af00𢈄', '', '\U000f78f7\U0008ece7', 'ß·\x07\U00061b8b\U001049c7¿ßQY'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003921s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['\U00051c51', '\U0006af00𢈄', '', '\U00051c51', 'ß·\x07\U00061b8b\U001049c7¿ßQY']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00051c51', '\U0006af00𢈄', '', '\U00051c51', 'ß·\x07\U00061b8b\U001049c7¿ßQY'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003668s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['\U00051c51', '\U0006af00𢈄¿77C3ß·\x07\U00061b8b\U001049c7¿ßQY']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00051c51', '\U0006af00𢈄¿77C3ß·\x07\U00061b8b\U001049c7¿ßQY'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00376s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['\U00051c51', '\U0006af00𢈄¿77C3ß·\x07\U00061b8b\U0006af00¿ßQY']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00051c51', '\U0006af00𢈄¿77C3ß·\x07\U00061b8b\U0006af00¿ßQY'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.003431s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003856s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ['𢈄', '\U0006af00𢈄¿77C3ß·\x07\U00061b8b\U0006af00¿ßQY']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['𢈄', '\U0006af00𢈄¿77C3ß·\x07\U00061b8b\U0006af00¿ßQY'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.004247s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003952s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.003969s
====================================================================================================
2025-09-19 00:15:09 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.003839s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001744s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00212s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '7@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001714s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '7@v.O.a.z.futBOl', 'password': '§ĩoúĤ}°¸'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001687s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'i@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001617s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'i@y.aNAlYTiCs', 'password': 'õ%\U000888fa\U0007c7a0VÙVĊ\U00054ad4\U000b0891'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001653s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '${AU@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00233s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '${AU@i.P.RUhr', 'password': 'Ý^'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001841s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'G}XqW7m5S^gm=@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00183s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'G}XqW7m5S^gm=@pEXAYMsX.z.uj.xn--55Qx5d', 'password': '𐁖üqąĝµ\U000cc25eðð'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001681s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'U~@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001509s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'U~@sw3E-S.IrISh', 'password': 'Ăı'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001735s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'U~@sw3--S.IrISh', 'password': 'Ăı'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001622s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'U~@s.IrISh', 'password': '3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001766s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'U~@s.IrISh', 'password': '3sàğ\U0008d10a庄u¤PÒĺ@\U000d0362ÐaxD'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001762s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'U~@s.IrISh', 'password': '3sàğ\U0008d10a庄u¤àÒĺ@\U000d0362ÐaxD'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001676s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'U~@s.IrISH', 'password': '3sàğ\U0008d10a庄u¤àÒĺ@\U000d0362ÐaxD'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001532s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'U@B.DEsI', 'password': '13337Ĉ1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001544s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'm`QhK%CgNu&@o.zD.XN--90Ae', 'password': '\U0008e116'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00156s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'm`QhK%CgNu&@o.zD.XN--90Ae', 'password': '8d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001884s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'm`QhK%CgNu&@o.zD.XN--90Ae', 'password': '8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001882s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'm`QhK%CgNu&@o.oD.XN--90Ae', 'password': '8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001648s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'm`QhK%CgN&&@o.oD.XN--90Ae', 'password': '8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001747s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'm`QhK%CgN&&@o.oD.XN--90Ae', 'password': '8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001501s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'm`QhK%CgN&&@o.o.XN--90Ae', 'password': '8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001471s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Yp3E`@U.N.hz.D.U.j.CliNiqUE', 'password': '|'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001529s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Yp3E`@h.D.U.j.CliNiqUE', 'password': '2'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001656s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Yp3E`@h.D.j.j.CliNiqUE', 'password': '2'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001773s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Yp3E`@h.D.j.h.CliNiqUE', 'password': '2'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001695s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Yp3E`@h0.CliNiqUE', 'password': '01'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001713s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Yp3E`@h0.CliNiQUE', 'password': '01'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00188s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Yp3E`@h0.CLiNiQUE', 'password': '01'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001548s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=0Mb@A.K.TrAvelERS', 'password': '\U001021bf¸î¯é ĩĊ«ĉ^'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001706s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=0Mb@A.K.TrAvelERS', 'password': '\U001021bf¸î¯é ĩĊ«ĉ^'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001549s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=0Mb@A.K.TrAvelERS', 'password': '1H𨁇45'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001702s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=0Mb@A.A.TrAvelERS', 'password': '1H𨁇45'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001715s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=0Mb@A.A.TrAvelERS', 'password': '𐩁'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00161s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=30@z.aF', 'password': 'Ɂ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001647s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=30@z.AF', 'password': 'Ɂ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00153s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@Os01.durbaN', 'password': '`fãSê,Ď\U0005ff99'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00159s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@Os03.durbaN', 'password': '`fãSê,Ď\U0005ff99'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001595s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@Os03.durbaN', 'password': '`fãSê,Ď\U000d1048ĭ𫫲)ò\U00063251'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001567s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@Oss3.durbaN', 'password': '`fãSê,Ď\U000d1048ĭ𫫲)ò\U00063251'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001563s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@Oss3.durbaN', 'password': '`fãSê,Ď\U000d1048ĭ𫫲)ò\U00063251'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001883s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@O0.durbaN', 'password': '03'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@O0.durbaN', 'password': '033ą'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0016s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "*R2xyYRH9&Fk}5'C*t2V+Eo-%q5@t.LOTte", 'password': 'đ$¬M'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001578s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "*R2xyYRH9&Fk}5'C*t2V+Eo-%q5@t.LOTte", 'password': 'đ$¬ML-\U000e3d0aĞ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001692s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "*R2xyY-H9&Fk}5'C*t2V+Eo-%q5@t.LOTte", 'password': 'đ$¬ML-\U000e3d0aĞ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001635s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "*R2xyY-H9&Fk}5'C*t2V+Eo-%q5@t.LOTte", 'password': 'đ$¬ML-\U000117745¦Z·\U000e0f48Ħ8{o+\U000673b1\U000c80dd:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "*R2xyY-H9&Fk}5'C*t2V+Eo-%q5@t1.LOTte", 'password': '$¬ML-\U000117745¦Z·\U000e0f48Ħ8{o+\U000673b1\U000c80dd:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001662s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "*R2xyY-H9&Fk}5'C*t2V+Eo-%q5@t1.LOtte", 'password': '$¬ML-\U000117745¦Z·\U000e0f48Ħ8{o+\U000673b1\U000c80dd:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001607s
====================================================================================================
2025-09-19 00:15:10 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "*R2xyY-H9&Fk}5'C*t2V+Eo-%q5@t00rgTSiL1157.LOtte", 'password': '346Ħ8{o+\U000673b1\U000c80dd:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001854s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fx*5g@lp.wb.co', 'password': 'Ì_JĤ2IKYç\U000e7a0d\U000d9df9Þ/cí{\U000e74adŀvú'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00158s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fx*@lp.wb.ferrero', 'password': 'Ì_JĤ2IKYç\U000e7a0d\U000d9df9Þ/cí{\U000e74adŀvú'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001539s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fx*@wb.wb.ferrero', 'password': 'Ì_JĤ2IKYç\U000e7a0d\U000d9df9Þ/cí{\U000e74adŀvú'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001531s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fx*@wb.wb.ferrero', 'password': 'Ì_JĤ2IKYç\U000e7a0d\U000d9df9Þ/cí=2¬\U000608475'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001593s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fx*@wb.wb.ferrero', 'password': 'Ì_JĤ2IKYç\U000e7a0d\U000d9df9Þ/cí=2\U000b0d42\U00060f46'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001522s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@U000.Bar', 'password': '1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001529s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@U000.bar', 'password': '1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00157s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '~@B.P.Q.uiNZbRQ.BlOOmBerg', 'password': '\U000abfda'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001768s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '~@B.P.Q.B.BlOOmBerg', 'password': '\U000abfda'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00193s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '~@Au.BlOOmBerg', 'password': '၁1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001928s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '~@Au.BlOOmBerg', 'password': '၁၁'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001715s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '~@Au.BlOOmBerg', 'password': '၁'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001741s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '~@B.BlOOmBerg', 'password': '1?'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001558s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '~@X.U.B0.A.BlOOmBerg', 'password': 'ú7Ąf\xad£\U000f7d33?'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001542s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@x.K.TOrAY', 'password': '\U0004eef4Ľ=ÔÞs¨,W'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001523s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@x.x.TOrAY', 'password': '\U0004eef4Ľ=ÔÞs¨,W'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00162s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@x.x.TOrAY', 'password': '\U0004eef4Ľ=ÔÞs,,W'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001598s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@x.x.TOrAY', 'password': '\U0004eef4Ľ=ÔÞW,,W'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001647s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '00-1@A1.AnZ', 'password': 'µ&ĻôĽ=ÔÞW,,W'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001583s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '00-1@B.AnZ', 'password': '3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001605s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '00-1@B.AnZ', 'password': 'LĘ%\U000a3fab\U00032dffê\U0009d5b9ãùĄĴąĉ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001673s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'J6@a.KOo.bikE', 'password': 'Īzó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001395s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'J6@Z.D00eQnM.bikE', 'password': 'ô§短'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001632s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'J6@Z.D00QQnM.bikE', 'password': 'ô§短'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001566s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'J6@Z.D00QQnM.bikE', 'password': 'ô§'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001644s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'J6@Z.D0QQQnM.bikE', 'password': 'ô§'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001588s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'J6@Z.D0QQQnM.bikE', 'password': 'ô§'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001719s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'J6@Z.D0QQQQM.bikE', 'password': 'ô§'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001877s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "PDgd%V'=cIIZ74/P=p3tH0Ml9NEynZ-+L&I@y.J.xn--CLcHC0Ea0B2g2A9gcd", 'password': '\U0003dd43\U00075e09\U000faad1ĎĆb©¥0\U00100d83ĲÎÑ.Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001793s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "PDgd%V'=cIIZ74/P=p3tH0Ml9NEynZ-+L&I@y.J.xn--CLcHC0Ea0B2g2A9gcd", 'password': '\U0003dd43\U00075e09\U000faad1ĎĆb©¥0\U00100d83ĲÎÑ.Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001619s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "PDgd%V'=cIIZ74/P=p3tH0Ml9NEynZ-+L&I@y.y.xn--CLcHC0Ea0B2g2A9gcd", 'password': '\U0003dd43\U00075e09\U000faad1ĎĆb©¥0\U00100d83ĲÎÑ.Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001626s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "yDgd%V'=cIIZ74/P=p3tH0Ml9NEynZ-+L&I@y.y.xn--CLcHC0Ea0B2g2A9gcd", 'password': '\U0003dd43\U00075e09\U000faad1ĎĆb©¥0\U00100d83ĲÎÑ.Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001736s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "yDgd%V'=cIIZ74/P=p3tH0Ml9NEynZ-+L&I@D0.B.XN--ClCHc0EA0b2G2a9GCd", 'password': '\U0003dd43\U00075e09\U000faad1ĎĆb©¥0\U00100d83ĲÎÑ.Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "yDgd%V'=cIIZ74/P=p3tH0Ml9NEyN@D0.B10.G0101111.fERRErO", 'password': '\U0003dd43\U00075e09\U000faad1ĎĆb©¥0\U00100d83ĲÎÑ.Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001555s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "yDgd%V'=cIIZ74/P=p3tH0Ml9NEyN@D0.B0.G0101111.fERRErO", 'password': '\U0003dd43\U00075e09\U000faad1ĎĆb©¥0\U00100d83ĲÎÑ.Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001621s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'p0rXeC~hJYX4@r.VenTureS', 'password': "Ĭ])²f\U000b0f13']Ì^\U0007de41"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'p0rXeC~hJYX4@r1.r.VenTureS', 'password': "541ē']Ì^\U0007de41"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001596s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'p0rXe0~hJYX4@r1.r.VenTureS', 'password': "541ē']Ì^\U0007de41"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001526s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'p0rXe0~hJYX4@r.r.VenTureS', 'password': "541ē']Ì^\U0007de41"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001537s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '00rXe0~hJYX4@r.r.VenTureS', 'password': "541ē']Ì^\U0007de41"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001551s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '00rXe0~hJYX4@r.r.VenTureS', 'password': "541ē']Ì^\U0007de41"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001941s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '00rXe0~hJYX4@r.r.VenTureS', 'password': "541ē']Ì^\U0007de41Ìv"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'mlK}Z@i0PctzdZQm4YuS.mOD.Xn--S9brj9c', 'password': "\U000b2224Ar&úĚĉø'\U000ecf58"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001616s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'mlK}Z@i0PctzdZQm4YuS.iOD.Xn--S9brj9c', 'password': "\U000b2224Ar&úĚĉø'\U000ecf58"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00166s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'mlK}Z@i0PctzdZQm4YuS.i0PctzdZQm4YuS.Xn--S9brj9c', 'password': "\U000b2224Ar&úĚĉø'\U000ecf58"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002018s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '3!^@tjAByKf-ECCoQdQQIwKGH.e.PrUDenTiaL', 'password': 'Ô'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001714s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '3!^@tjAByKf-ECCoQdQQIwKGH.e.PrUDenTiaL', 'password': 'Ô'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001725s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '3!^@tjAByKf-ECCoQdQQIwKGH.t.PrUDenTiaL', 'password': 'Ô'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001722s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001683s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_jÜð'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001711s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000badab\U000b0e9b'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001365s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x13'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001561s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U0008d755Rb'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001623s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x88'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001476s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_è'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001578s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c9b97'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00145s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𦋢'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00158s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\xad÷'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001489s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x01\U000d0206\x14媑°'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001516s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_¡'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001725s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_®;¡ \U000ab4a4'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001662s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_®;¡ \U000ab4a4'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001674s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_®;¡  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001712s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_®;¡; '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001666s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_®¡¡; '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_®¡¡'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001615s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ï'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001679s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000f09a1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001637s
====================================================================================================
2025-09-19 00:15:11 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x07\U00103c6eõ\x02'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001321s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x07\U00103c6eõ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001517s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x07\U00103c6e@üõ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001514s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x07'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001507s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': "test_password_\x07\x07'"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001642s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x171d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001509s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x17dd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001626s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x17d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001481s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_dd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001501s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001694s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1d1]'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001338s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_dd1]'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001513s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\r'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001768s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_s¦Y'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001514s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ssY'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001562s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_s0Y'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_s0Y'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001545s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ȃ)'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001603s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ȃ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001661s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ºõ\U0006dfd8¾a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001713s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ºõ\U000426cc'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001663s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ºõ\U000426cc'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001537s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_º𐴝'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001462s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_º𐴝1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001462s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_º11'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001565s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰨁°Á'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001542s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8c\x8eÙC}'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001746s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C\x8eÙC}'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001676s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C\x8eÙC'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001593s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C\x8eÙC'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001594s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C2𰨃è\x07'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00162s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_CC𰨃è\x07'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001647s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_CC𰨃2\x07'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001652s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00064ed8\U00019fbcê\U000e66c6Í'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001536s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00064ed8\U00019fbcê\U000e66c61'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001597s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00064ed8\U00019fbcê\U000e66c61'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001377s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00064ed8\U000a0c00\U0001175d\U00050a00\U000aae85'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001526s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00064ed8\U000a0c00\U0001175d\U00050a00\U000aae85'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00145s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_¥\xa0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001613s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1\xa0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001691s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_=\x11'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001854s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x11\x11'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00166s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_60⻗øL'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001636s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_60⻗6L'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001704s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_60⻗LL'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001646s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_60⻗0L'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001605s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_60⻗00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001612s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U0009c585ã'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001626s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\uec00\x04'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001689s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\uec00\U00099743'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001639s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\uec00\U00099743þ{à'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001568s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00163s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_66J\U000d27e7\x8b'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001549s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_66J\U000d27e76'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001417s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x87}ª\U00045de6ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001592s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x87}ª\U00045de6ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001605s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x87}ª\U00045de6ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001467s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x87}ª\U00045de6ª'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001523s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x87}ª\U00045de6ª'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001613s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x87ªª\U00045de6ª'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001824s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x874'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001597s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ë'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001724s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ë'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001767s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ª;'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001726s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ªª'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001394s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\uab00çì\t-'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001616s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\uab00çì\t-'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001623s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_5ì\t-'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001564s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_èk'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001511s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_è'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001683s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\t\U000a3c8d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\t\U00061333÷'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001438s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\t\U00061333÷\U00061333'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001474s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\t\U00061333'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001576s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\t\U00061333\t\x8cØ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001482s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x94\U00090a14转¤M'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001619s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_7𑴂\x8e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001672s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_7\x8e\x8e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00155s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_7\x8e\x8e\x8e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00148s
====================================================================================================
2025-09-19 00:15:12 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_2'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001547s
====================================================================================================
2025-09-19 00:23:37 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MjQzMjE3fQ.Erj6pxjOMJfkYUYfbFoTjSAps4G4ac8i68gEIk-26Cw', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.002983s
====================================================================================================
2025-09-19 00:23:37 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  },
  "dictionary_item_removed": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:23:37 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002127s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001983s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 6488}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 6488, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001316s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001603s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001539s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ' '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001573s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00146s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001591s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001671s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001683s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001686s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001721s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001836s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001465s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00171s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00151s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002027s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U00097330\U001068ddÚÃñ\x16=9\x7f}!À\x14óg\x92à^\U0009b2a1Øö\U000c45d4É\x895þ\x13\U000da063ïÙ´\U0005dcdff\U0010dfe8\U000db5b4S𑈹ªg\U00060bf7À\x13\x9fê¡\xa0Z豻\xad\x10j\ni\x0bL\x97\x8d\x98Àªã\U0004b71b\U000f6fca\x04\U000ccd8e^Ö\xad\x1c\x98\U0003f51dO±\U0009a619x*»m\x9d\U000eab4cd\U0006d96c?\x18\rbv\x82íf>\x9cd\xad\x87\U0004f4d0h\x80\x97\x94\U0001c4b5\U000397bd¤v:»\U00048505¥\U000a21f8\U00034c29JàãÄ\x11\U000ea12f\x0c¥\x85\U00039d41ëV\x88$tï\U00088a9cp\x87;üà¹\x03\x95H´\x89\U000f384f\U0008afa2\x93Eh0\U000b7f7f𠆥_\x83A\x0fC!ä{\x12\U00070b5c¦õl\r\U001004d6\x0cô6\x15¡¯Üô¸é\x1a1¿q\U00049026\x17\U000cb662í\U000493bc\U0006ff40\U0008a9e0\x83\x81Âº®c\x81j\x0c¢Ï¥;çoØ\U000a5f33\U000633d9\U000b3780\U0009a898ÁH\U000a9221-\U000810c4KÄ\U000f6106A°a)\x17\x16OÝ\x8a\U000514eePbøÆIº𮦸/\U000e52ec\U000eef9fÅ£\r±\x80\x8cj¢ø6ôZ*\U000f3d84GZ\U000b9eb1\x86à\x9f\U000cf3ce$𗥳N#C×\U00108b13Pó¤/>eò\U0004c160K\U000f0884\U0007fa0a#³"1kë𡗃d\x7f\U000a2b1a&\x85\U000d0f72¸\U00052687*\x0e\x03ÜófD\x9b\x85×\U000ee2ba\U00102876\'ᗓ\x08\x0c\x0c\x80\U00085558\x8a\x1cꂺ¥\xadkðÏ\U0010f783Z##{î3Ò5\U000d7b95Oq+¦F⳰\U00040a99qÖéÅÇM𣖋Ú\U0010ff47õlÈ\U000f2b37?🙇"Â»¦±pµ\x13\U000f74aa\U0007a5f3Å\t¥Ä\x7fÆçD?\x15\x08\x98\x8e½·6\U000f785f\x86bé\x1b\x91_\x1dì§\x19\U0008fd25Ë³$ûv>|J\U001034fcR¹Ã[\x13ã\U00072463\U000aa17b\x8fÞIu\U00088ef9\x93\x1e𤇇ÔGg\U0010854d¹Ù-ú\rÁ\x1fD?4\x84±»÷ðSÇ\U0008849a^ý\x11Á\x9fÒ\U000daa3cnè7ºï\x89\U000d5fdb\x87¦Ä`\x1cÔtÌ\U000dfd72\x1d?hº\ue5df(\x019õå-uÑµ𨄥\'\x91\U000dbe55¶È\x84\x03¡:yð\U000903d8\U000f8ecb\\i\x96\U000777a9¤®¡U\x9e¶\U000d4fa1\x12ÂX\x17\x81\x85:\x1b\x83\x81èÿkÕc£M»\U0005c3bb¼\x8b\x84âÓ[{\U000ae00d\x9c3s!í휪É÷=:Í\xad\x83jk\U000ce0fcãÉê*»Eù\x0b\x14\x92½\U000e0e0c\x187gÍ*É\U00085260DÉÐ\U000b758c·\U0009c251\U000b155eåoö-ý\U000d1a2f\x8cî½\U000f6e35\x0fK\U00066b2elõ¶ååÑÓ\x82î9@\x11\x81¿æA\U00080a867;\x84\x7f¸»t g£𠈫C\U0007b83f\x19\x98~<øx[¿\x02R\x06w«×\x86\U000c53d7.\U0009625c𰌡_\U0003a0c0\U000110ed﮽\x13\U000a0d42µ\x13n(ÁM\x8cC\U00033b28\x92ýaD\U000dbf51\U000e0b35e\x02𫸈°ÊO\U00064b76\x18\x8a\x94\U000bad81\x0e!\U000b1eb6ã\U0004712aê\U0005ad2e$𧙛\U0009b972a3yCî\tQ£³cÛk\x04k\x10Ñf\U0006fbbcÜBfL\U000f4f13&¬Ø,\x16\U0006a055\U000befac\U000a6b00\x1dôL\x1f]ÿw*È\x032]Í?²\x90\x1a\x1aR\U0007040d³¿ö\x0c³\U000d6d5búý¸\x93פּ¿\x02K\U0010545cS~$¨\U000b19d6¼å\U000e172d\U0005768c=\U0003f498𧟣ã¦\x97ADT\x14Ø\U0001aa07児\x08Öl*\x9fÅËm\x06Â\U000f2525\U00101ab7¹\U000d38814b¡å𬝖3\x9a¬Ìp\x80í\U000da764\x0eªÄQáP\x85~\U00014cbd\U000ff5076\U000f8ab9\U000ed299tb^¦ÕåÒjy\U0009a2ab\U0003b90cD7\xa0NÂI\x85ì¶Ê\U0004f115²«@ô©\x10v\x84òZ\x00÷\U0009f394\x01Y¾\x10tÏ\U000675b0\x1e«:𠡸-TÚ\U00089e9e5\U00064417Ñ,ìâ¾\x8b\x8c\x03³Òeñ´Ã\x90öÞ\x10\x1an\U00059781©\U000e65c5m\x82Â\x04Ú@n4§¥t\U000b3625\U000c19c6\x18\x96\U0003b853IA\U0007a10a善\x17\x18¿\x97SM£x\x85\x12¢\x8f\x15^3kꢗ\U000c1676¼J횱=-x\U00085d35\t1Ë§\U000d8c00w\U00051900±\x81\U000a71c6R\x1eS\U000bf751\x01\U0007741eäMéí\x85Ø!\U0001f8b6\U000831ac\U000cf429\x1b\U0008c237¸\U000be723É\x06òðûæIó\x00\twÏ\U00046d6a\x8bLëØ\x1eðÆ\r\x91Äé\U00092a08𭷎n\x05Ñ§q\x14:é¾\x8d\U000dec23\x08@\U000cc796î\x0cù\U000412d7\U00012d33\U000fdb3a𨵈Ý\U000b7cf1\U000aa50d¸OÌ\xa0\x14õ7M_\x17_\x02\x0e\x13ªyy¢Ì\x9fx:Ú\U000b14e3\x98i÷\x0f\U000b07aeò\x99\U00109c81\U00041b80²\x03I¾G¬\U000a678ac\tw\x0b´ý\x81ðøj{\U0001dd02#=´§µ\U00012634\x94\U000c9119æ\x16⤛di<䪳ô\x0e\x9edìY𖡠\U000ecad7öp¨Þ?Ò\x83ÜC\x12~\'Ã\U000af314\x95Ó\U000f5c0c²"\U00038133\x93\x95['}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '\U00097330\U001068ddÚÃñ\x16=9\x7f}!À\x14óg\x92à^\U0009b2a1Øö\U000c45d4É\x895þ\x13\U000da063ïÙ´\U0005dcdff\U0010dfe8\U000db5b4S𑈹ªg\U00060bf7À\x13\x9fê¡\xa0Z豻\xad\x10j\ni\x0bL\x97\x8d\x98Àªã\U0004b71b\U000f6fca\x04\U000ccd8e^Ö\xad\x1c\x98\U0003f51dO±\U0009a619x*»m\x9d\U000eab4cd\U0006d96c?\x18\rbv\x82íf>\x9cd\xad\x87\U0004f4d0h\x80\x97\x94\U0001c4b5\U000397bd¤v:»\U00048505¥\U000a21f8\U00034c29JàãÄ\x11\U000ea12f\x0c¥\x85\U00039d41ëV\x88$tï\U00088a9cp\x87;üà¹\x03\x95H´\x89\U000f384f\U0008afa2\x93Eh0\U000b7f7f𠆥_\x83A\x0fC!ä{\x12\U00070b5c¦õl\r\U001004d6\x0cô6\x15¡¯Üô¸é\x1a1¿q\U00049026\x17\U000cb662í\U000493bc\U0006ff40\U0008a9e0\x83\x81Âº®c\x81j\x0c¢Ï¥;çoØ\U000a5f33\U000633d9\U000b3780\U0009a898ÁH\U000a9221-\U000810c4KÄ\U000f6106A°a)\x17\x16OÝ\x8a\U000514eePbøÆIº𮦸/\U000e52ec\U000eef9fÅ£\r±\x80\x8cj¢ø6ôZ*\U000f3d84GZ\U000b9eb1\x86à\x9f\U000cf3ce$𗥳N#C×\U00108b13Pó¤/>eò\U0004c160K\U000f0884\U0007fa0a#³"1kë𡗃d\x7f\U000a2b1a&\x85\U000d0f72¸\U00052687*\x0e\x03ÜófD\x9b\x85×\U000ee2ba\U00102876\'ᗓ\x08\x0c\x0c\x80\U00085558\x8a\x1cꂺ¥\xadkðÏ\U0010f783Z##{î3Ò5\U000d7b95Oq+¦F⳰\U00040a99qÖéÅÇM𣖋Ú\U0010ff47õlÈ\U000f2b37?🙇"Â»¦±pµ\x13\U000f74aa\U0007a5f3Å\t¥Ä\x7fÆçD?\x15\x08\x98\x8e½·6\U000f785f\x86bé\x1b\x91_\x1dì§\x19\U0008fd25Ë³$ûv>|J\U001034fcR¹Ã[\x13ã\U00072463\U000aa17b\x8fÞIu\U00088ef9\x93\x1e𤇇ÔGg\U0010854d¹Ù-ú\rÁ\x1fD?4\x84±»÷ðSÇ\U0008849a^ý\x11Á\x9fÒ\U000daa3cnè7ºï\x89\U000d5fdb\x87¦Ä`\x1cÔtÌ\U000dfd72\x1d?hº\ue5df(\x019õå-uÑµ𨄥\'\x91\U000dbe55¶È\x84\x03¡:yð\U000903d8\U000f8ecb\\i\x96\U000777a9¤®¡U\x9e¶\U000d4fa1\x12ÂX\x17\x81\x85:\x1b\x83\x81èÿkÕc£M»\U0005c3bb¼\x8b\x84âÓ[{\U000ae00d\x9c3s!í휪É÷=:Í\xad\x83jk\U000ce0fcãÉê*»Eù\x0b\x14\x92½\U000e0e0c\x187gÍ*É\U00085260DÉÐ\U000b758c·\U0009c251\U000b155eåoö-ý\U000d1a2f\x8cî½\U000f6e35\x0fK\U00066b2elõ¶ååÑÓ\x82î9@\x11\x81¿æA\U00080a867;\x84\x7f¸»t g£𠈫C\U0007b83f\x19\x98~<øx[¿\x02R\x06w«×\x86\U000c53d7.\U0009625c𰌡_\U0003a0c0\U000110ed﮽\x13\U000a0d42µ\x13n(ÁM\x8cC\U00033b28\x92ýaD\U000dbf51\U000e0b35e\x02𫸈°ÊO\U00064b76\x18\x8a\x94\U000bad81\x0e!\U000b1eb6ã\U0004712aê\U0005ad2e$𧙛\U0009b972a3yCî\tQ£³cÛk\x04k\x10Ñf\U0006fbbcÜBfL\U000f4f13&¬Ø,\x16\U0006a055\U000befac\U000a6b00\x1dôL\x1f]ÿw*È\x032]Í?²\x90\x1a\x1aR\U0007040d³¿ö\x0c³\U000d6d5búý¸\x93פּ¿\x02K\U0010545cS~$¨\U000b19d6¼å\U000e172d\U0005768c=\U0003f498𧟣ã¦\x97ADT\x14Ø\U0001aa07児\x08Öl*\x9fÅËm\x06Â\U000f2525\U00101ab7¹\U000d38814b¡å𬝖3\x9a¬Ìp\x80í\U000da764\x0eªÄQáP\x85~\U00014cbd\U000ff5076\U000f8ab9\U000ed299tb^¦ÕåÒjy\U0009a2ab\U0003b90cD7\xa0NÂI\x85ì¶Ê\U0004f115²«@ô©\x10v\x84òZ\x00÷\U0009f394\x01Y¾\x10tÏ\U000675b0\x1e«:𠡸-TÚ\U00089e9e5\U00064417Ñ,ìâ¾\x8b\x8c\x03³Òeñ´Ã\x90öÞ\x10\x1an\U00059781©\U000e65c5m\x82Â\x04Ú@n4§¥t\U000b3625\U000c19c6\x18\x96\U0003b853IA\U0007a10a善\x17\x18¿\x97SM£x\x85\x12¢\x8f\x15^3kꢗ\U000c1676¼J횱=-x\U00085d35\t1Ë§\U000d8c00w\U00051900±\x81\U000a71c6R\x1eS\U000bf751\x01\U0007741eäMéí\x85Ø!\U0001f8b6\U000831ac\U000cf429\x1b\U0008c237¸\U000be723É\x06òðûæIó\x00\twÏ\U00046d6a\x8bLëØ\x1eðÆ\r\x91Äé\U00092a08𭷎n\x05Ñ§q\x14:é¾\x8d\U000dec23\x08@\U000cc796î\x0cù\U000412d7\U00012d33\U000fdb3a𨵈Ý\U000b7cf1\U000aa50d¸OÌ\xa0\x14õ7M_\x17_\x02\x0e\x13ªyy¢Ì\x9fx:Ú\U000b14e3\x98i÷\x0f\U000b07aeò\x99\U00109c81\U00041b80²\x03I¾G¬\U000a678ac\tw\x0b´ý\x81ðøj{\U0001dd02#=´§µ\U00012634\x94\U000c9119æ\x16⤛di<䪳ô\x0e\x9edìY𖡠\U000ecad7öp¨Þ?Ò\x83ÜC\x12~\'Ã\U000af314\x95Ó\U000f5c0c²"\U00038133\x93\x95['}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001841s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U00097330\U001068ddÚÃñ\x16=9\x7f}!À\x14óg\x92à^\U0009b2a1Øö\U000c45d4É\x895þ\x13\U000da063ïÙ´\U0005dcdff\U0010dfe8\U000db5b4S𑈹ªg\U00060bf7À\x13\x9fê¡\xa0Z豻\xad\x10j\ni\x0bL\x97\x8d\x98Àªã\U0004b71b\U000f6fca\x04\U000ccd8e^Ö\xad\x1c\x98\U0003f51dO±\U0009a619x*»m\x9d\U000eab4cd\U0006d96c?\x18\rbv\x82íf>\x9cd\xad\x87\U0004f4d0h\x80\x97\x94\U0001c4b5\U000397bd¤v:»\U00048505¥\U000a21f8\U00034c29JàãÄ\x11\U000ea12f\x0c¥\x85\U00039d41ëV\x88$tï\U00088a9cp\x87;üà¹\x03\x95H´\x89\U000f384f\U0008afa2\x93Eh0\U000b7f7f𠆥_\x83A\x0fC!ä{\x12\U00070b5c¦õl\r\U001004d6\x0cô6\x15¡¯Üô¸é\x1a1¿q\U00049026\x17\U000cb662í\U000493bc\U0006ff40\U0008a9e0\x83\x81Âº®c\x81j\x0c¢Ï¥;çoØ\U000a5f33\U000633d9\U000b3780\U0009a898ÁH\U000a9221-\U000810c4KÄ\U000f6106A°a)\x17\x16OÝ\x8a\U000514eePbøÆIº𮦸/\U000e52ec\U000eef9fÅ£\r±\x80\x8cj¢ø6ôZ*\U000f3d84GZ\U000b9eb1\x86à\x9f\U000cf3ce$𗥳N#C×\U00108b13Pó¤/>eò\U0004c160K\U000f0884\U0007fa0a#³"1kë𡗃d\x7f\U000a2b1a&\x85\U000d0f72¸\U00052687*\x0e\x03ÜófD\x9b\x85×\U000ee2ba\U00102876\'ᗓ\x08\x0c\x0c\x80\U00085558\x8a\x1cꂺ¥\xad001\x83Z##{î3Ò5\U000d7b95Oq+¦F⳰\U00040a99qÖéÅÇM𣖋Ú\U0010ff47õlÈ\U000f2b37?🙇"Â»¦±pµ\x13\U000f74aa\U0007a5f3Å\t¥Ä\x7fÆçD?\x15\x08\x98\x8e½·6\U000f785f\x86bé\x1b\x91_\x1dì§\x19\U0008fd25Ë³$ûv>|J\U001034fcR¹Ã[\x13ã\U00072463\U000aa17b\x8fÞIu\U00088ef9\x93\x1e𤇇ÔGg\U0010854d¹Ù-ú\rÁ\x1fD?4\x84±»÷ðSÇ\U0008849a^ý\x11Á\x9fÒ\U000daa3cnè7ºï\x89\U000d5fdb\x87¦Ä`\x1cÔtÌ\U000dfd72\x1d?hº\ue5df(\x019õå-uÑµ𨄥\'\x91\U000dbe55¶È\x84\x03¡:yð\U000903d8\U000f8ecb\\i\x96\U000777a9¤®¡U\x9e¶\U000d4fa1\x12ÂX\x17\x81\x85:\x1b\x83\x81èÿkÕc£M»\U0005c3bb¼\x8b\x84âÓ[{\U000ae00d\x9c3s!í휪É÷=:Í\xad\x83jk\U000ce0fcãÉê*»Eù\x0b\x14\x92½\U000e0e0c\x187gÍ*É\U00085260DÉÐ\U000b758c·\U0009c251\U000b155eåoö-ý\U000d1a2f\x8cî½\U000f6e35\x0fK\U00066b2elõ¶ååÑÓ\x82î9@\x11\x81¿æA\U00080a867;\x84\x7f¸»t g£𠈫C\U0007b83f\x19\x98~<øx[¿\x02R\x06w«×\x86\U000c53d7.\U0009625c𰌡_\U0003a0c0\U000110ed﮽\x13\U000a0d42µ\x13n(ÁM\x8cC\U00033b28\x92ýaD\U000dbf51\U000e0b35e\x02𫸈°ÊO\U00064b76\x18\x8a\x94\U000bad81\x0e!\U000b1eb6ã\U0004712aê\U0005ad2e$𧙛\U0009b972a3yCî\tQ£³cÛk\x04k\x10Ñf\U0006fbbcÜBfL\U000f4f13&¬Ø,\x16\U0006a055\U000befac\U000a6b00\x1dôL\x1f]ÿw*È\x032]Í?²\x90\x1a\x1aR\U0007040d³¿ö\x0c³\U000d6d5búý¸\x93פּ¿\x02K\U0010545cS~$¨\U000b19d6¼å\U000e172d\U0005768c=\U0003f498𧟣ã¦\x97ADT\x14Ø\U0001aa07児\x08Öl*\x9fÅËm\x06Â\U000f2525\U00101ab7¹\U000d38814b¡å𬝖3\x9a¬Ìp\x80í\U000da764\x0eªÄQáP\x85~\U00014cbd\U000ff5076\U000f8ab9\U000ed299tb^¦ÕåÒjy\U0009a2ab\U0003b90cD7\xa0NÂI\x85ì¶Ê\U0004f115²«@ô©\x10v\x84òZ\x00÷\U0009f394\x01Y¾\x10tÏ\U000675b0\x1e«:𠡸-TÚ\U00089e9e5\U00064417Ñ,ìâ¾\x8b\x8c\x03³Òeñ´Ã\x90öÞ\x10\x1an\U00059781©\U000e65c5m\x82Â\x04Ú@n4§¥t\U000b3625\U000c19c6\x18\x96\U0003b853IA\U0007a10a善\x17\x18¿\x97SM£x\x85\x12¢\x8f\x15^3kꢗ\U000c1676¼J횱=-x\U00085d35\t1Ë§\U000d8c00w\U00051900±\x81\U000a71c6R\x1eS\U000bf751\x01\U0007741eäMéí\x85Ø!\U0001f8b6\U000831ac\U000cf429\x1b\U0008c237¸\U000be723É\x06òðûæIó\x00\twÏ\U00046d6a\x8bLëØ\x1eðÆ\r\x91Äé\U00092a08𭷎n\x05Ñ§q\x14:é¾\x8d\U000dec23\x08@\U000cc796î\x0cù\U000412d7\U00012d33\U000fdb3a𨵈Ý\U000b7cf1\U000aa50d¸OÌ\xa0\x14õ7M_\x17_\x02\x0e\x13ªyy¢Ì\x9fx:Ú\U000b14e3\x98i÷\x0f\U000b07aeò\x99\U00109c81\U00041b80²\x03I¾G¬\U000a678ac\tw\x0b´ý\x81ðøj{\U0001dd02#=´§µ\U00012634\x94\U000c9119æ\x16⤛di<䪳ô\x0e\x9edìY𖡠\U000ecad7öp¨Þ?Ò\x83ÜC\x12~\'Ã\U000af314\x95Ó\U000f5c0c²"\U00038133\x93\x95['}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '\U00097330\U001068ddÚÃñ\x16=9\x7f}!À\x14óg\x92à^\U0009b2a1Øö\U000c45d4É\x895þ\x13\U000da063ïÙ´\U0005dcdff\U0010dfe8\U000db5b4S𑈹ªg\U00060bf7À\x13\x9fê¡\xa0Z豻\xad\x10j\ni\x0bL\x97\x8d\x98Àªã\U0004b71b\U000f6fca\x04\U000ccd8e^Ö\xad\x1c\x98\U0003f51dO±\U0009a619x*»m\x9d\U000eab4cd\U0006d96c?\x18\rbv\x82íf>\x9cd\xad\x87\U0004f4d0h\x80\x97\x94\U0001c4b5\U000397bd¤v:»\U00048505¥\U000a21f8\U00034c29JàãÄ\x11\U000ea12f\x0c¥\x85\U00039d41ëV\x88$tï\U00088a9cp\x87;üà¹\x03\x95H´\x89\U000f384f\U0008afa2\x93Eh0\U000b7f7f𠆥_\x83A\x0fC!ä{\x12\U00070b5c¦õl\r\U001004d6\x0cô6\x15¡¯Üô¸é\x1a1¿q\U00049026\x17\U000cb662í\U000493bc\U0006ff40\U0008a9e0\x83\x81Âº®c\x81j\x0c¢Ï¥;çoØ\U000a5f33\U000633d9\U000b3780\U0009a898ÁH\U000a9221-\U000810c4KÄ\U000f6106A°a)\x17\x16OÝ\x8a\U000514eePbøÆIº𮦸/\U000e52ec\U000eef9fÅ£\r±\x80\x8cj¢ø6ôZ*\U000f3d84GZ\U000b9eb1\x86à\x9f\U000cf3ce$𗥳N#C×\U00108b13Pó¤/>eò\U0004c160K\U000f0884\U0007fa0a#³"1kë𡗃d\x7f\U000a2b1a&\x85\U000d0f72¸\U00052687*\x0e\x03ÜófD\x9b\x85×\U000ee2ba\U00102876\'ᗓ\x08\x0c\x0c\x80\U00085558\x8a\x1cꂺ¥\xad001\x83Z##{î3Ò5\U000d7b95Oq+¦F⳰\U00040a99qÖéÅÇM𣖋Ú\U0010ff47õlÈ\U000f2b37?🙇"Â»¦±pµ\x13\U000f74aa\U0007a5f3Å\t¥Ä\x7fÆçD?\x15\x08\x98\x8e½·6\U000f785f\x86bé\x1b\x91_\x1dì§\x19\U0008fd25Ë³$ûv>|J\U001034fcR¹Ã[\x13ã\U00072463\U000aa17b\x8fÞIu\U00088ef9\x93\x1e𤇇ÔGg\U0010854d¹Ù-ú\rÁ\x1fD?4\x84±»÷ðSÇ\U0008849a^ý\x11Á\x9fÒ\U000daa3cnè7ºï\x89\U000d5fdb\x87¦Ä`\x1cÔtÌ\U000dfd72\x1d?hº\ue5df(\x019õå-uÑµ𨄥\'\x91\U000dbe55¶È\x84\x03¡:yð\U000903d8\U000f8ecb\\i\x96\U000777a9¤®¡U\x9e¶\U000d4fa1\x12ÂX\x17\x81\x85:\x1b\x83\x81èÿkÕc£M»\U0005c3bb¼\x8b\x84âÓ[{\U000ae00d\x9c3s!í휪É÷=:Í\xad\x83jk\U000ce0fcãÉê*»Eù\x0b\x14\x92½\U000e0e0c\x187gÍ*É\U00085260DÉÐ\U000b758c·\U0009c251\U000b155eåoö-ý\U000d1a2f\x8cî½\U000f6e35\x0fK\U00066b2elõ¶ååÑÓ\x82î9@\x11\x81¿æA\U00080a867;\x84\x7f¸»t g£𠈫C\U0007b83f\x19\x98~<øx[¿\x02R\x06w«×\x86\U000c53d7.\U0009625c𰌡_\U0003a0c0\U000110ed﮽\x13\U000a0d42µ\x13n(ÁM\x8cC\U00033b28\x92ýaD\U000dbf51\U000e0b35e\x02𫸈°ÊO\U00064b76\x18\x8a\x94\U000bad81\x0e!\U000b1eb6ã\U0004712aê\U0005ad2e$𧙛\U0009b972a3yCî\tQ£³cÛk\x04k\x10Ñf\U0006fbbcÜBfL\U000f4f13&¬Ø,\x16\U0006a055\U000befac\U000a6b00\x1dôL\x1f]ÿw*È\x032]Í?²\x90\x1a\x1aR\U0007040d³¿ö\x0c³\U000d6d5búý¸\x93פּ¿\x02K\U0010545cS~$¨\U000b19d6¼å\U000e172d\U0005768c=\U0003f498𧟣ã¦\x97ADT\x14Ø\U0001aa07児\x08Öl*\x9fÅËm\x06Â\U000f2525\U00101ab7¹\U000d38814b¡å𬝖3\x9a¬Ìp\x80í\U000da764\x0eªÄQáP\x85~\U00014cbd\U000ff5076\U000f8ab9\U000ed299tb^¦ÕåÒjy\U0009a2ab\U0003b90cD7\xa0NÂI\x85ì¶Ê\U0004f115²«@ô©\x10v\x84òZ\x00÷\U0009f394\x01Y¾\x10tÏ\U000675b0\x1e«:𠡸-TÚ\U00089e9e5\U00064417Ñ,ìâ¾\x8b\x8c\x03³Òeñ´Ã\x90öÞ\x10\x1an\U00059781©\U000e65c5m\x82Â\x04Ú@n4§¥t\U000b3625\U000c19c6\x18\x96\U0003b853IA\U0007a10a善\x17\x18¿\x97SM£x\x85\x12¢\x8f\x15^3kꢗ\U000c1676¼J횱=-x\U00085d35\t1Ë§\U000d8c00w\U00051900±\x81\U000a71c6R\x1eS\U000bf751\x01\U0007741eäMéí\x85Ø!\U0001f8b6\U000831ac\U000cf429\x1b\U0008c237¸\U000be723É\x06òðûæIó\x00\twÏ\U00046d6a\x8bLëØ\x1eðÆ\r\x91Äé\U00092a08𭷎n\x05Ñ§q\x14:é¾\x8d\U000dec23\x08@\U000cc796î\x0cù\U000412d7\U00012d33\U000fdb3a𨵈Ý\U000b7cf1\U000aa50d¸OÌ\xa0\x14õ7M_\x17_\x02\x0e\x13ªyy¢Ì\x9fx:Ú\U000b14e3\x98i÷\x0f\U000b07aeò\x99\U00109c81\U00041b80²\x03I¾G¬\U000a678ac\tw\x0b´ý\x81ðøj{\U0001dd02#=´§µ\U00012634\x94\U000c9119æ\x16⤛di<䪳ô\x0e\x9edìY𖡠\U000ecad7öp¨Þ?Ò\x83ÜC\x12~\'Ã\U000af314\x95Ó\U000f5c0c²"\U00038133\x93\x95['}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001823s
====================================================================================================
2025-09-19 00:23:38 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U00097330\U001068ddÚÃñ\x16=9\x7f}!À\x14óg\x92à^\U0009b2a1Øö\U000c45d4É\x895þ\x13\U000da063ïÙ´\U0005dcdff\U0010dfe8\U000db5b4S𑈹ªg\U00060bf7À\x13\x9fê¡\xa0Z豻\xad\x10j\ni\x0bL\x97\x8d\x98Àªã\U0004b71b\U000f6fca\x04\U000ccd8e^Ö\xad\x1c\x98\U0003f51dO±\U0009a619x*»m\x9d\U000eab4cd\U0006d96c?\x18\rbv\x82íf>\x9cd\xad\x87\U0004f4d0h\x80\x97\x94\U0001c4b5\U000397bd¤v:»\U00048505¥\U000a21f8\U00034c29JàãÄ\x11\U000ea12f\x0c¥\x85\U00039d41ëV\x88$tï\U00088a9cp\x87;üà¹\x03\x95H´\x89\U000f384f\U0008afa2\x93Eh0\U000b7f7f𠆥_\x83A\x0fC!ä{\x12\U00070b5c¦õl\r\U001004d6\x0cô6\x15¡¯Üô¸é\x1a1¿q\U00049026\x17\U000cb662í\U000493bc\U0006ff40\U0008a9e0\x83\x81Âº®c\x81j\x0c¢Ï¥;çoØ\U000a5f33\U000633d9\U000b3780\U0009a898ÁH\U000a9221-\U000810c4KÄ\U000f6106A°a)\x17\x16OÝ\x8a\U000514eePbøÆIº𮦸/\U000e52ec\U000eef9fÅ£\r±\x80\x8cj¢ø6ôZ*\U000f3d84GZ\U000b9eb1\x86à\x9f\U000cf3ce$𗥳N#C×\U00108b13Pó¤/>eò\U0004c160K\U000f0884\U0007fa0a#³"1kë𡗃d\x7f\U000a2b1a&\x85\U000d0f72¸\U00052687*\x0e\x03ÜófD\x9b\x85×\U000ee2ba\U00102876\'ᗓ\x08\x0c\x0c\x80\U00085558\x8a\x1cꂺ¥\xad001\x83Z##{î3Ò5\U000d7b95Oq+¦F⳰\U00040a99qÖéÅÇM𣖋Ú\U0010ff47õlÈ\U000f2b37?🙇"Â»¦±pµ\x13\U000f74aa\U0007a5f3Å\t¥Ä\x7fÆçD?\x15\x08\x98\x8e½·6\U000f785f\x86bé\x1b\x91_\x1dì§\x19\U0008fd25Ë³$ûv>|J\U001034fcR¹Ã[\x13ã\U00072463\U000aa17b\x8fÞIu\U00088ef9\x93\x1e𤇇ÔGg\U0010854d¹Ù-ú\rÁ\x1fD?4\x84±»÷ðSÇ\U0008849a^ý\x11Á\x9fÒ\U000daa3cnè7ºï\x89\U000d5fdb\x87¦Ä`\x1cÔtÌ\U000dfd72\x1d?hº\ue5df(\x019õå-uÑµ𨄥\'\x91\U000dbe55¶È\x84\x03¡:yð\U000903d8\U000f8ecb\\i\x96\U000777a9¤®¡U\x9e¶\U000d4fa1\x12ÂX\x17\x81\x85:\x1b\x83\x81èÿkÕc£M»\U0005c3bb¼\x8b\x84âÓ[{\U000ae00d\x9c3s!í휪É÷=:Í\xad\x83jk\U000ce0fcãÉê*»Eù\x0b\x14\x92½\U000e0e0c\x187gÍ*É\U00085260DÉÐ\U000b758c·\U0009c251\U000b155eåoö-ý\U000d1a2f\x8cî½\U000f6e35\x0fK\U00066b2elõ¶ååÑÓ\x82î9@\x11\x81¿æA\U00080a867;\x84\x7f¸»t g£𠈫C\U0007b83f\x19\x98~<øx[¿\x02R\x06w«×\x86\U000c53d7.\U0009625c𰌡_\U0003a0c0\U000110ed﮽\x13\U000a0d42µ\x13n(ÁM\x8cC\U00033b28\x92ýaD\U000dbf51\U000e0b35e\x02𫸈°ÊO\U00064b76\x18\x8a\x94\U000bad81\x0e!\U000b1eb6ã\U0004712aê\U0005ad2e$𧙛\U0009b972a3yCî\tQ£³cÛk\x04k\x10Ñf\U0006fbbcÜBfL\U000f4f13&¬Ø,\x16\U0006a055\U000befac\U000a6b00\x1dôL\x1f]ÿw*È1̀00111000Z¼J±=³¿ö\x0c³\U000d6d5búý¸\x93פּ¿\x02K\U0010545cS~$¨\U000b19d6¼å\U000e172d\U0005768c=\U0003f498𧟣ã¦\x97ADT\x14Ø\U0001aa07児\x08Öl*\x9fÅËm\x06Â\U000f2525\U00101ab7¹\U000d38814b¡å𬝖3\x9a¬Ìp\x80í\U000da764\x0eªÄQáP\x85~\U00014cbd\U000ff5076\U000f8ab9\U000ed299tb^¦ÕåÒjy\U0009a2ab\U0003b90cD7\xa0NÂI\x85ì¶Ê\U0004f115²«@ô©\x10v\x84òZ\x00÷\U0009f394\x01Y¾\x10tÏ\U000675b0\x1e«:𠡸-TÚ\U00089e9e5\U00064417Ñ,ìâ¾\x8b\x8c\x03³Òeñ´Ã\x90öÞ\x10\x1an\U00059781©\U000e65c5m\x82Â\x04Ú@n4§¥t\U000b3625\U000c19c6\x18\x96\U0003b853IA\U0007a10a善\x17\x18¿\x97SM£x\x85\x12¢\x8f\x15^3kꢗ\U000c1676¼J횱=-x\U00085d35\t1Ë§\U000d8c00w\U00051900±\x81\U000a71c6R\x1eS\U000bf751\x01\U0007741eäMéí\x85Ø!\U0001f8b6\U000831ac\U000cf429\x1b\U0008c237¸\U000be723É\x06òðûæIó\x00\twÏ\U00046d6a\x8bLëØ\x1eðÆ\r\x91Äé\U00092a08𭷎n\x05Ñ§q\x14:é¾\x8d\U000dec23\x08@\U000cc796î\x0cù\U000412d7\U00012d33\U000fdb3a𨵈Ý\U000b7cf1\U000aa50d¸OÌ\xa0\x14õ7M_\x17_\x02\x0e\x13ªyy¢Ì\x9fx:Ú\U000b14e3\x98i÷\x0f\U000b07aeò\x99\U00109c81\U00041b80²\x03I¾G¬\U000a678ac\tw\x0b´ý\x81ðøj{\U0001dd02#=´§µ\U00012634\x94\U000c9119æ\x16⤛di<䪳ô\x0e\x9edìY𖡠\U000ecad7öp¨Þ?Ò\x83ÜC\x12~\'Ã\U000af314\x95Ó\U000f5c0c²"\U00038133\x93\x95['}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '\U00097330\U001068ddÚÃñ\x16=9\x7f}!À\x14óg\x92à^\U0009b2a1Øö\U000c45d4É\x895þ\x13\U000da063ïÙ´\U0005dcdff\U0010dfe8\U000db5b4S𑈹ªg\U00060bf7À\x13\x9fê¡\xa0Z豻\xad\x10j\ni\x0bL\x97\x8d\x98Àªã\U0004b71b\U000f6fca\x04\U000ccd8e^Ö\xad\x1c\x98\U0003f51dO±\U0009a619x*»m\x9d\U000eab4cd\U0006d96c?\x18\rbv\x82íf>\x9cd\xad\x87\U0004f4d0h\x80\x97\x94\U0001c4b5\U000397bd¤v:»\U00048505¥\U000a21f8\U00034c29JàãÄ\x11\U000ea12f\x0c¥\x85\U00039d41ëV\x88$tï\U00088a9cp\x87;üà¹\x03\x95H´\x89\U000f384f\U0008afa2\x93Eh0\U000b7f7f𠆥_\x83A\x0fC!ä{\x12\U00070b5c¦õl\r\U001004d6\x0cô6\x15¡¯Üô¸é\x1a1¿q\U00049026\x17\U000cb662í\U000493bc\U0006ff40\U0008a9e0\x83\x81Âº®c\x81j\x0c¢Ï¥;çoØ\U000a5f33\U000633d9\U000b3780\U0009a898ÁH\U000a9221-\U000810c4KÄ\U000f6106A°a)\x17\x16OÝ\x8a\U000514eePbøÆIº𮦸/\U000e52ec\U000eef9fÅ£\r±\x80\x8cj¢ø6ôZ*\U000f3d84GZ\U000b9eb1\x86à\x9f\U000cf3ce$𗥳N#C×\U00108b13Pó¤/>eò\U0004c160K\U000f0884\U0007fa0a#³"1kë𡗃d\x7f\U000a2b1a&\x85\U000d0f72¸\U00052687*\x0e\x03ÜófD\x9b\x85×\U000ee2ba\U00102876\'ᗓ\x08\x0c\x0c\x80\U00085558\x8a\x1cꂺ¥\xad001\x83Z##{î3Ò5\U000d7b95Oq+¦F⳰\U00040a99qÖéÅÇM𣖋Ú\U0010ff47õlÈ\U000f2b37?🙇"Â»¦±pµ\x13\U000f74aa\U0007a5f3Å\t¥Ä\x7fÆçD?\x15\x08\x98\x8e½·6\U000f785f\x86bé\x1b\x91_\x1dì§\x19\U0008fd25Ë³$ûv>|J\U001034fcR¹Ã[\x13ã\U00072463\U000aa17b\x8fÞIu\U00088ef9\x93\x1e𤇇ÔGg\U0010854d¹Ù-ú\rÁ\x1fD?4\x84±»÷ðSÇ\U0008849a^ý\x11Á\x9fÒ\U000daa3cnè7ºï\x89\U000d5fdb\x87¦Ä`\x1cÔtÌ\U000dfd72\x1d?hº\ue5df(\x019õå-uÑµ𨄥\'\x91\U000dbe55¶È\x84\x03¡:yð\U000903d8\U000f8ecb\\i\x96\U000777a9¤®¡U\x9e¶\U000d4fa1\x12ÂX\x17\x81\x85:\x1b\x83\x81èÿkÕc£M»\U0005c3bb¼\x8b\x84âÓ[{\U000ae00d\x9c3s!í휪É÷=:Í\xad\x83jk\U000ce0fcãÉê*»Eù\x0b\x14\x92½\U000e0e0c\x187gÍ*É\U00085260DÉÐ\U000b758c·\U0009c251\U000b155eåoö-ý\U000d1a2f\x8cî½\U000f6e35\x0fK\U00066b2elõ¶ååÑÓ\x82î9@\x11\x81¿æA\U00080a867;\x84\x7f¸»t g£𠈫C\U0007b83f\x19\x98~<øx[¿\x02R\x06w«×\x86\U000c53d7.\U0009625c𰌡_\U0003a0c0\U000110ed﮽\x13\U000a0d42µ\x13n(ÁM\x8cC\U00033b28\x92ýaD\U000dbf51\U000e0b35e\x02𫸈°ÊO\U00064b76\x18\x8a\x94\U000bad81\x0e!\U000b1eb6ã\U0004712aê\U0005ad2e$𧙛\U0009b972a3yCî\tQ£³cÛk\x04k\x10Ñf\U0006fbbcÜBfL\U000f4f13&¬Ø,\x16\U0006a055\U000befac\U000a6b00\x1dôL\x1f]ÿw*È1̀00111000Z¼J±=³¿ö\x0c³\U000d6d5búý¸\x93פּ¿\x02K\U0010545cS~$¨\U000b19d6¼å\U000e172d\U0005768c=\U0003f498𧟣ã¦\x97ADT\x14Ø\U0001aa07児\x08Öl*\x9fÅËm\x06Â\U000f2525\U00101ab7¹\U000d38814b¡å𬝖3\x9a¬Ìp\x80í\U000da764\x0eªÄQáP\x85~\U00014cbd\U000ff5076\U000f8ab9\U000ed299tb^¦ÕåÒjy\U0009a2ab\U0003b90cD7\xa0NÂI\x85ì¶Ê\U0004f115²«@ô©\x10v\x84òZ\x00÷\U0009f394\x01Y¾\x10tÏ\U000675b0\x1e«:𠡸-TÚ\U00089e9e5\U00064417Ñ,ìâ¾\x8b\x8c\x03³Òeñ´Ã\x90öÞ\x10\x1an\U00059781©\U000e65c5m\x82Â\x04Ú@n4§¥t\U000b3625\U000c19c6\x18\x96\U0003b853IA\U0007a10a善\x17\x18¿\x97SM£x\x85\x12¢\x8f\x15^3kꢗ\U000c1676¼J횱=-x\U00085d35\t1Ë§\U000d8c00w\U00051900±\x81\U000a71c6R\x1eS\U000bf751\x01\U0007741eäMéí\x85Ø!\U0001f8b6\U000831ac\U000cf429\x1b\U0008c237¸\U000be723É\x06òðûæIó\x00\twÏ\U00046d6a\x8bLëØ\x1eðÆ\r\x91Äé\U00092a08𭷎n\x05Ñ§q\x14:é¾\x8d\U000dec23\x08@\U000cc796î\x0cù\U000412d7\U00012d33\U000fdb3a𨵈Ý\U000b7cf1\U000aa50d¸OÌ\xa0\x14õ7M_\x17_\x02\x0e\x13ªyy¢Ì\x9fx:Ú\U000b14e3\x98i÷\x0f\U000b07aeò\x99\U00109c81\U00041b80²\x03I¾G¬\U000a678ac\tw\x0b´ý\x81ðøj{\U0001dd02#=´§µ\U00012634\x94\U000c9119æ\x16⤛di<䪳ô\x0e\x9edìY𖡠\U000ecad7öp¨Þ?Ò\x83ÜC\x12~\'Ã\U000af314\x95Ó\U000f5c0c²"\U00038133\x93\x95['}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001713s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U00097330\U001068ddÚÃñ\x16=9\x7f}!À\x14óg\x92à^\U0009b2a1Øö\U000c45d4É\x895þ\x13\U000da063ïÙ´\U0005dcdff\U0010dfe8\U000db5b4S𑈹ªg\U00060bf7À\x13\x9fê¡\xa0Z豻\xad\x10j\ni\x0bL\x97\x8d\x98Àªã\U0004b71b\U000f6fca\x04\U000ccd8e^Ö\xad\x1c\x98\U0003f51dO±\U0009a619x*»m\x9d\U000eab4cd\U0006d96c?\x18\rbv\x82íf>\x9cd\xad\x87\U0004f4d0h\x80\x97\x94\U0001c4b5\U000397bd¤v:»\U00048505¥\U000a21f8\U00034c29JàãÄ\x11\U000ea12f\x0c¥\x85\U00039d41ëV\x88$tï\U00088a9cp\x87;üà¹\x03\x95H´\x89\U000f384f\U0008afa2\x93Eh0\U000b7f7f𠆥_\x83A\x0fC!ä{\x12\U00070b5c¦õl\r\U001004d6\x0cô6\x15¡¯Üô¸é\x1a1¿q\U00049026\x17\U000cb662í\U000493bc\U0006ff40\U0008a9e0\x83\x81Âº®c\x81j\x0c¢Ï¥;çoØ\U000a5f33\U000633d9\U000b3780\U0009a898ÁH\U000a9221-\U000810c4KÄ\U000f6106A°a)\x17\x16OÝ\x8a\U000514eePbøÆIº𮦸/\U000e52ec\U000eef9fÅ£\r±\x80\x8cj¢ø6ôZ*\U000f3d84GZ\U000b9eb1\x86à\x9f\U000cf3ce$𗥳N#C×\U00108b13Pó¤/>eò\U0004c160K\U000f0884\U0007fa0a#³"1kë𡗃d\x7f\U000a2b1a&\x85\U000d0f72¸\U00052687*\x0e\x03ÜófD\x9b\x85×\U000ee2ba\U00102876\'ᗓ\x08\x0c\x0c\x80\U00085558\x8a\x1cꂺ¥\xad001\x83Z##{î3Ò5\U000d7b95Oq+¦F⳰\U00040a99qÖéÅÇM𣖋Ú\U0010ff47õlÈ\U000f2b37?🙇"Â»¦±pµ\x13\U000f74aa\U0007a5f3Å\t¥Ä\x7fÆçD?\x15\x08\x98\x8e½·6\U000f785f\x86bé\x1b\x91_\x1dì§\x19\U0008fd25Ë³$ûv>|J\U001034fcR¹Ã[\x13ã\U00072463\U000aa17b\x8fÞIu\U00088ef9\x93\x1e𤇇ÔGg\U0010854d¹Ù-ú\rÁ\x1fD?4\x84±»÷ðSÇ\U0008849a^ý\x11Á\x9fÒ\U000daa3cnè7ºï\x89\U000d5fdb\x87¦Ä`\x1cÔtÌ\U000dfd72\x1d?hº\ue5df(\x019õå-uÑµ𨄥\'\x91\U000dbe55¶È\x84\x03¡:yð\U000903d8\U000f8ecb\\i\x96\U000777a9¤®¡U\x9e¶\U000d4fa1\x12ÂX\x17\x81\x85:\x1b\x83\x81èÿkÕc£M»\U0005c3bb¼\x8b\x84âÓ[{\U000ae00d\x9c3s!í휪É÷=:Í\xad\x83jk\U000ce0fcãÉê*»Eù\x0b\x14\x92½\U000e0e0c\x187gÍ*É\U00051b9bè00ȅ\U0001146c\U0003c00091S001111]1111\U000454000\U00066b2elõ¶ååÑÓ\x82î9@\x11\x81¿æA\U00080a867;\x84\x7f¸»t g£𠈫C\U0007b83f\x19\x98~<øx[¿\x02R\x06w«×\x86\U000c53d7.\U0009625c𰌡_\U0003a0c0\U000110ed﮽\x13\U000a0d42µ\x13n(ÁM\x8cC\U00033b28\x92ýaD\U000dbf51\U000e0b35e\x02𫸈°ÊO\U00064b76\x18\x8a\x94\U000bad81\x0e!\U000b1eb6ã\U0004712aê\U0005ad2e$𧙛\U0009b972a3yCî\tQ£³cÛk\x04k\x10Ñf\U0006fbbcÜBfL\U000f4f13&¬Ø,\x16\U0006a055\U000befac\U000a6b00\x1dôL\x1f]ÿw*È1̀00111000Z¼J±=³¿ö\x0c³\U000d6d5búý¸\x93פּ¿\x02K\U0010545cS~$¨\U000b19d6¼å\U000e172d\U0005768c=\U0003f498𧟣ã¦\x97ADT\x14Ø\U0001aa07児\x08Öl*\x9fÅËm\x06Â\U000f2525\U00101ab7¹\U000d38814b¡å𬝖3\x9a¬Ìp\x80í\U000da764\x0eªÄQáP\x85~\U00014cbd\U000ff5076\U000f8ab9\U000ed299tb^¦ÕåÒjy\U0009a2ab\U0003b90cD7\xa0NÂI\x85ì¶Ê\U0004f115²«@ô©\x10v\x84òZ\x00÷\U0009f394\x01Y¾\x10tÏ\U000675b0\x1e«:𠡸-TÚ\U00089e9e5\U00064417Ñ,ìâ¾\x8b\x8c\x03³Òeñ´Ã\x90öÞ\x10\x1an\U00059781©\U000e65c5m\x82Â\x04Ú@n4§¥t\U000b3625\U000c19c6\x18\x96\U0003b853IA\U0007a10a善\x17\x18¿\x97SM£x\x85\x12¢\x8f\x15^3kꢗ\U000c1676¼J횱=-x\U00085d35\t1Ë§\U000d8c00w\U00051900±\x81\U000a71c6R\x1eS\U000bf751\x01\U0007741eäMéí\x85Ø!\U0001f8b6\U000831ac\U000cf429\x1b\U0008c237¸\U000be723É\x06òðûæIó\x00\twÏ\U00046d6a\x8bLëØ\x1eðÆ\r\x91Äé\U00092a08𭷎n\x05Ñ§q\x14:é¾\x8d\U000dec23\x08@\U000cc796î\x0cù\U000412d7\U00012d33\U000fdb3a𨵈Ý\U000b7cf1\U000aa50d¸OÌ\xa0\x14õ7M_\x17_\x02\x0e\x13ªyy¢Ì\x9fx:Ú\U000b14e3\x98i÷\x0f\U000b07aeò\x99\U00109c81\U00041b80²\x03I¾G¬\U000a678ac\tw\x0b´ý\x81ðøj{\U0001dd02#=´§µ\U00012634\x94\U000c9119æ\x16⤛di<䪳ô\x0e\x9edìY𖡠\U000ecad7öp¨Þ?Ò\x83ÜC\x12~\'Ã\U000af314\x95Ó\U000f5c0c²"\U00038133\x93\x95['}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '\U00097330\U001068ddÚÃñ\x16=9\x7f}!À\x14óg\x92à^\U0009b2a1Øö\U000c45d4É\x895þ\x13\U000da063ïÙ´\U0005dcdff\U0010dfe8\U000db5b4S𑈹ªg\U00060bf7À\x13\x9fê¡\xa0Z豻\xad\x10j\ni\x0bL\x97\x8d\x98Àªã\U0004b71b\U000f6fca\x04\U000ccd8e^Ö\xad\x1c\x98\U0003f51dO±\U0009a619x*»m\x9d\U000eab4cd\U0006d96c?\x18\rbv\x82íf>\x9cd\xad\x87\U0004f4d0h\x80\x97\x94\U0001c4b5\U000397bd¤v:»\U00048505¥\U000a21f8\U00034c29JàãÄ\x11\U000ea12f\x0c¥\x85\U00039d41ëV\x88$tï\U00088a9cp\x87;üà¹\x03\x95H´\x89\U000f384f\U0008afa2\x93Eh0\U000b7f7f𠆥_\x83A\x0fC!ä{\x12\U00070b5c¦õl\r\U001004d6\x0cô6\x15¡¯Üô¸é\x1a1¿q\U00049026\x17\U000cb662í\U000493bc\U0006ff40\U0008a9e0\x83\x81Âº®c\x81j\x0c¢Ï¥;çoØ\U000a5f33\U000633d9\U000b3780\U0009a898ÁH\U000a9221-\U000810c4KÄ\U000f6106A°a)\x17\x16OÝ\x8a\U000514eePbøÆIº𮦸/\U000e52ec\U000eef9fÅ£\r±\x80\x8cj¢ø6ôZ*\U000f3d84GZ\U000b9eb1\x86à\x9f\U000cf3ce$𗥳N#C×\U00108b13Pó¤/>eò\U0004c160K\U000f0884\U0007fa0a#³"1kë𡗃d\x7f\U000a2b1a&\x85\U000d0f72¸\U00052687*\x0e\x03ÜófD\x9b\x85×\U000ee2ba\U00102876\'ᗓ\x08\x0c\x0c\x80\U00085558\x8a\x1cꂺ¥\xad001\x83Z##{î3Ò5\U000d7b95Oq+¦F⳰\U00040a99qÖéÅÇM𣖋Ú\U0010ff47õlÈ\U000f2b37?🙇"Â»¦±pµ\x13\U000f74aa\U0007a5f3Å\t¥Ä\x7fÆçD?\x15\x08\x98\x8e½·6\U000f785f\x86bé\x1b\x91_\x1dì§\x19\U0008fd25Ë³$ûv>|J\U001034fcR¹Ã[\x13ã\U00072463\U000aa17b\x8fÞIu\U00088ef9\x93\x1e𤇇ÔGg\U0010854d¹Ù-ú\rÁ\x1fD?4\x84±»÷ðSÇ\U0008849a^ý\x11Á\x9fÒ\U000daa3cnè7ºï\x89\U000d5fdb\x87¦Ä`\x1cÔtÌ\U000dfd72\x1d?hº\ue5df(\x019õå-uÑµ𨄥\'\x91\U000dbe55¶È\x84\x03¡:yð\U000903d8\U000f8ecb\\i\x96\U000777a9¤®¡U\x9e¶\U000d4fa1\x12ÂX\x17\x81\x85:\x1b\x83\x81èÿkÕc£M»\U0005c3bb¼\x8b\x84âÓ[{\U000ae00d\x9c3s!í휪É÷=:Í\xad\x83jk\U000ce0fcãÉê*»Eù\x0b\x14\x92½\U000e0e0c\x187gÍ*É\U00051b9bè00ȅ\U0001146c\U0003c00091S001111]1111\U000454000\U00066b2elõ¶ååÑÓ\x82î9@\x11\x81¿æA\U00080a867;\x84\x7f¸»t g£𠈫C\U0007b83f\x19\x98~<øx[¿\x02R\x06w«×\x86\U000c53d7.\U0009625c𰌡_\U0003a0c0\U000110ed﮽\x13\U000a0d42µ\x13n(ÁM\x8cC\U00033b28\x92ýaD\U000dbf51\U000e0b35e\x02𫸈°ÊO\U00064b76\x18\x8a\x94\U000bad81\x0e!\U000b1eb6ã\U0004712aê\U0005ad2e$𧙛\U0009b972a3yCî\tQ£³cÛk\x04k\x10Ñf\U0006fbbcÜBfL\U000f4f13&¬Ø,\x16\U0006a055\U000befac\U000a6b00\x1dôL\x1f]ÿw*È1̀00111000Z¼J±=³¿ö\x0c³\U000d6d5búý¸\x93פּ¿\x02K\U0010545cS~$¨\U000b19d6¼å\U000e172d\U0005768c=\U0003f498𧟣ã¦\x97ADT\x14Ø\U0001aa07児\x08Öl*\x9fÅËm\x06Â\U000f2525\U00101ab7¹\U000d38814b¡å𬝖3\x9a¬Ìp\x80í\U000da764\x0eªÄQáP\x85~\U00014cbd\U000ff5076\U000f8ab9\U000ed299tb^¦ÕåÒjy\U0009a2ab\U0003b90cD7\xa0NÂI\x85ì¶Ê\U0004f115²«@ô©\x10v\x84òZ\x00÷\U0009f394\x01Y¾\x10tÏ\U000675b0\x1e«:𠡸-TÚ\U00089e9e5\U00064417Ñ,ìâ¾\x8b\x8c\x03³Òeñ´Ã\x90öÞ\x10\x1an\U00059781©\U000e65c5m\x82Â\x04Ú@n4§¥t\U000b3625\U000c19c6\x18\x96\U0003b853IA\U0007a10a善\x17\x18¿\x97SM£x\x85\x12¢\x8f\x15^3kꢗ\U000c1676¼J횱=-x\U00085d35\t1Ë§\U000d8c00w\U00051900±\x81\U000a71c6R\x1eS\U000bf751\x01\U0007741eäMéí\x85Ø!\U0001f8b6\U000831ac\U000cf429\x1b\U0008c237¸\U000be723É\x06òðûæIó\x00\twÏ\U00046d6a\x8bLëØ\x1eðÆ\r\x91Äé\U00092a08𭷎n\x05Ñ§q\x14:é¾\x8d\U000dec23\x08@\U000cc796î\x0cù\U000412d7\U00012d33\U000fdb3a𨵈Ý\U000b7cf1\U000aa50d¸OÌ\xa0\x14õ7M_\x17_\x02\x0e\x13ªyy¢Ì\x9fx:Ú\U000b14e3\x98i÷\x0f\U000b07aeò\x99\U00109c81\U00041b80²\x03I¾G¬\U000a678ac\tw\x0b´ý\x81ðøj{\U0001dd02#=´§µ\U00012634\x94\U000c9119æ\x16⤛di<䪳ô\x0e\x9edìY𖡠\U000ecad7öp¨Þ?Ò\x83ÜC\x12~\'Ã\U000af314\x95Ó\U000f5c0c²"\U00038133\x93\x95['}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001766s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001562s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001828s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': True}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001682s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001598s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001625s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001709s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001642s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001659s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '@\U00041fd72\x86S¿'], 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '@\U00041fd72\x86S¿'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00186s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['@\U00041fd72\x86S¿', '@\U00041fd72\x86S¿'], 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['@\U00041fd72\x86S¿', '@\U00041fd72\x86S¿'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001711s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['@\U00041fd72\x86S¿', '@\U00041fd72\x86S¿'], 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['@\U00041fd72\x86S¿', '@\U00041fd72\x86S¿'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001616s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['@\U00041fd72\x86S¿', '@\U00041fd72\x86S¿'], 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['@\U00041fd72\x86S¿', '@\U00041fd72\x86S¿'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001915s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['@¿2\x86S¿', '@\U00041fd72\x86S¿'], 'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['@¿2\x86S¿', '@\U00041fd72\x86S¿'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['@¿2\x86S¿', '@\U00041fd72\x86S¿'], 'password': ['', '31', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['@¿2\x86S¿', '@\U00041fd72\x86S¿'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '31', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001724s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['@¿2\x86S¿', '@¿2\x86S¿'], 'password': ['', '31', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['@¿2\x86S¿', '@¿2\x86S¿'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '31', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00179s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['𑣫º\x93}¾\U0005fbacÙ\ue38c', '', '\x18\x94\x85\x12m8\U00077364£\xa0Ø\x9bÝ¤Ñ\U000d9878.§'], 'password': '\U0003f25b\x90\x916*\U000d5db9¯H\xa0X\x7f$\nô\x02\U000d976bïñå\x99ÿ÷\x04Ð\U0007acaf\x8a4j\x12\U000c72f7\U000c41d5\x01(Ì-9\U000661fbÊ\U0001b7e0V¶\U0007b8c91¯\U000e4cf3\U0001e5be\x0fN\x00oP\x9aÍ\U000e667a\x9fS\x81ò\U000b8ecc\x0bvËP\U000b3111m`î@ÉFd𪆗æö憅h;\U0007ad8a\x89ªÃ\x0eæ\U00045efc81à\U000b98d5 «q\x85Ç\U000ce2a8£PÐ\U0004b931\U0003626d\x81\U00077abe\U000f3fdd\x93\U00058b24ø)Vz\U0008e19cÚ8\x06\U000b4265\x82\U0007269fÑw寉\U0006fe1d{Ô\x17Þø\U001021fb±\U000776e7&^ï\x04\r\U000c3aab\x03\U0001615d\x03\x8dZ\U00048ddcf蓼 \x95âª\x9b!Ì\U0004cb46k=&𠮪\x0fa\U000fea21Ê𠺭p£\xad\x07î\x9d£y3â\x04jª¥K\U000b32f3£*\U0010eec9ù\U000495d9\U000e0db6|+ßú\U000c83c8\x83ûtHC\U0005d680\x90rÓÆÇ5\x17ª\x11P¶\x00:û\U0004940aXtwL\x9cK\tùx÷ÿX\x07ÿÂµ\x9a¢ro\x85\U000d4b07ss\x01\U0004ed1el\U000a75c6\U00059f0d\U00084b20øb\U000f371b\U00049aba\x11$\U000720ce\U000d2e43êÐî\x9fWç°S¶\x97\x1cSS$FÅ\x91ò¡£p£/B\'\x18¤X\r\x06\x03$\x9c\x8dË¤\U00094c48ÇÈó\U0004a850\u1977\U000345ceÝÞ\\v´\x7f\x9fI)¸K\U000db764Ù\x17\U0010ae3e\x1aÀ\xa0\x15øl?\U0008cc2fd\x84\U000f5776\x9c\U000a637b\U0007ed53\x07vTÈ\U0009c604\x17Úâ½Þ\U0008750e\x9a4\x04\x17*ÓÇ¢üÅ𘭇È\x8e\U00097f932\U000e3c06ìZ\U000a8a6c¶\x04Üý\U00048897Y0J\x05\U0005273f\U00039681À\x9a\x11\x86Â=\x82Ù±$腿\U000ab6e4û\x97\x88Í¸\x17𝥤9Ó\x8e>ü\n\U000a9fab\x85\x82\x96=à?t\x14𓐇\x9e\x0c\U0003348dÊ\x03\xa0\x82Bë\x14D\x14dø\U00099317o¾\x07\x93¸\x85\x9a÷_µ.O>\U000b7c61\U000901e2Ë"NI#¸î雪\U000d14bf\U0010a6e8:@I\U0010a841ü9ä𭰴¦ \x85~\'ø\U0004cc40fÿyöônñ7Êü\x08\U00090ae5\x18vY\x1d\U000f1bb6\xadnU\x8cgu\U000ea154}\U000b6f9a\x1fß\U000b6670\x99ûî\x88Ôõ\xadw+\x06\x03a\x82M\U000e38aa\x8cM𗖅\U000c79d3¹\U0007e511ç÷\x01\U000ac206q\xa0V´¿ÜÞ[\U000eeffa𬸤a.\U000a1c5c﮸uòúíÑ\x01xuhy\U000382983fûÄ\U000b34258M\U000da8042úC!\U000a8272¸\U000b5e85¤\x8d¥ô\x7f\x1fÚ*ª\x07\x8bPo|\U000da2a6C\U000df9db\U0010576få\U0008f099R\U000806b7©Jc\U00032039\x84\U0001e603c𦒮\U0010032a\x8e\x85ã\x11\x0eE²\U00036f23u`\x1b"ô\x0e\U00068ae7/\x19O\x98ý\x92òóÀ;\x87æf1\U0005115b4õ\U0009a798ôKg\x8e:/$\U0007aa52\x89\xad\x90\x00\x1f2Ðù\x9b𨔏ÑÛ\x11Ó]m\x1b\rñ\x1b\U00074a67-Ó®\x84?:7H\r\U00092e46\x80é\x0f©﹄¬h\U0010ed28\U00076a29y\x94\U00032704\x95u\U000dded2\x1de\x1fÌý¼Î\U0005e124>¡È\U000f458bÉ\x92\U0008e102#u\r\U00034e4fyºRÁ.õý\U000c33deõ\x98\x97«\x8e\x1c= ã\x0f@àÔÙÂ\U000f1569\x01\x972Î\t\x1buðâ\x10ÏE\U0007f978¸\U000e62ba\x17½\U000b7ee2\x0b\U00075064𫓗긱çýÙñ{¡UÍ\xa0\x93øá*]\x1c"-ø}Ç\x06ÿ\x9a\x16äLß\U000d62a7\U000cceb1no®\x96\x83\U00035b73»ázV\x12\x8cÿ¦\U00045764=\x9f𢕠Û\x83𧆞¢\x8e\U000b4e08\U00076f98^\x83\U0010375e\x02\U0003575d\x01®\x06+\x99kuî\U00011eb8\x90»\U000c2fa8¯¡¥¡\x8a×j衦e\x98\U0007a3c0\ufff75~P\U0005c9d9\U000abd58\U0004bf97왂ÚÅÐ\U000d8110{.\x84æÍ\x0fõ\U00060333\U00090620\x81\x0c£\x9c=%Ë4Vî´©e´\x14OÉéV\x86\x87X2𮙇ýc(𥽙é\U000ab8ae\U0007dbf0\U000b85fa\U000da06a\U000458bd\x99\U000e4de2Ì2\U00044170\U000c98cbú\U00107988DÉ\x00aÙ?¶\U00034ede\x1fý¯\U000f47e7\U00079d98d\x9b¤ÿÁ}¢2¼ªO𠅿\x1cI¸\x80V5þêf¢a\x8cñ\x15Ó\U000cce25©c½𱅊¼\x89\U000c67b2\U0004f028óë}®Qç\U00078d4e;}1\x8d\x1f\U0005aa9d4(\x88\x17\x97L©å\U000ed9bc¯\x8c\x08\x82\x9bd\x89\U000e1b81>\x19\x81;\x94\x8e\U000b3c24 jØâ/7¸úBÄ$KXU¢"6\x04~\U00093ebc¯¤Ë×44~5B\x1bd¢sc\U000684ba¦,\x9f\x14U \x07\x17=rjii\U0007d847\x83ð\x0c𘄡û±>Å\\\x80\x04\U000af702à\U000723b1½I\x86\x03å\U00056b208\x13#ô𬆗3\x0c\x7fY\x19:ê\r*\U00087372\x95\x0c\x03á\U000bde23`Iáô¬\x97Í}\x17\nÎ\x8bºsÅðZ'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['𑣫º\x93}¾\U0005fbacÙ\ue38c', '', '\x18\x94\x85\x12m8\U00077364£\xa0Ø\x9bÝ¤Ñ\U000d9878.§'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002144s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['𑣫º\x93}¾\U0005fbacÙ\ue38c', '\x18\x94\x85\x12m8\U00077364£\xa0Ø\x9bÝ¤Ñ\U000d9878.§', '\x18\x94\x85\x12m8\U00077364£\xa0Ø\x9bÝ¤Ñ\U000d9878.§'], 'password': '\U0003f25b\x90\x916*\U000d5db9¯H\xa0X\x7f$\nô\x02\U000d976bïñå\x99ÿ÷\x04Ð\U0007acaf\x8a4j\x12\U000c72f7\U000c41d5\x01(Ì-9\U000661fbÊ\U0001b7e0V¶\U0007b8c91¯\U000e4cf3\U0001e5be\x0fN\x00oP\x9aÍ\U000e667a\x9fS\x81ò\U000b8ecc\x0bvËP\U000b3111m`î@ÉFd𪆗æö憅h;\U0007ad8a\x89ªÃ\x0eæ\U00045efc81à\U000b98d5 «q\x85Ç\U000ce2a8£PÐ\U0004b931\U0003626d\x81\U00077abe\U000f3fdd\x93\U00058b24ø)Vz\U0008e19cÚ8\x06\U000b4265\x82\U0007269fÑw寉\U0006fe1d{Ô\x17Þø\U001021fb±\U000776e7&^ï\x04\r\U000c3aab\x03\U0001615d\x03\x8dZ\U00048ddcf蓼 \x95âª\x9b!Ì\U0004cb46k=&𠮪\x0fa\U000fea21Ê𠺭p£\xad\x07î\x9d£y3â\x04jª¥K\U000b32f3£*\U0010eec9ù\U000495d9\U000e0db6|+ßú\U000c83c8\x83ûtHC\U0005d680\x90rÓÆÇ5\x17ª\x11P¶\x00:û\U0004940aXtwL\x9cK\tùx÷ÿX\x07ÿÂµ\x9a¢ro\x85\U000d4b07ss\x01\U0004ed1el\U000a75c6\U00059f0d\U00084b20øb\U000f371b\U00049aba\x11$\U000720ce\U000d2e43êÐî\x9fWç°S¶\x97\x1cSS$FÅ\x91ò¡£p£/B\'\x18¤X\r\x06\x03$\x9c\x8dË¤\U00094c48ÇÈó\U0004a850\u1977\U000345ceÝÞ\\v´\x7f\x9fI)¸K\U000db764Ù\x17\U0010ae3e\x1aÀ\xa0\x15øl?\U0008cc2fd\x84\U000f5776\x9c\U000a637b\U0007ed53\x07vTÈ\U0009c604\x17Úâ½Þ\U0008750e\x9a4\x04\x17*ÓÇ¢üÅ𘭇È\x8e\U00097f932\U000e3c06ìZ\U000a8a6c¶\x04Üý\U00048897Y0J\x05\U0005273f\U00039681À\x9a\x11\x86Â=\x82Ù±$腿\U000ab6e4û\x97\x88Í¸\x17𝥤9Ó\x8e>ü\n\U000a9fab\x85\x82\x96=à?t\x14𓐇\x9e\x0c\U0003348dÊ\x03\xa0\x82Bë\x14D\x14dø\U00099317o¾\x07\x93¸\x85\x9a÷_µ.O>\U000b7c61\U000901e2Ë"NI#¸î雪\U000d14bf\U0010a6e8:@I\U0010a841ü9ä𭰴¦ \x85~\'ø\U0004cc40fÿyöônñ7Êü\x08\U00090ae5\x18vY\x1d\U000f1bb6\xadnU\x8cgu\U000ea154}\U000b6f9a\x1fß\U000b6670\x99ûî\x88Ôõ\xadw+\x06\x03a\x82M\U000e38aa\x8cM𗖅\U000c79d3¹\U0007e511ç÷\x01\U000ac206q\xa0V´¿ÜÞ[\U000eeffa𬸤a.\U000a1c5c﮸uòúíÑ\x01xuhy\U000382983fûÄ\U000b34258M\U000da8042úC!\U000a8272¸\U000b5e85¤\x8d¥ô\x7f\x1fÚ*ª\x07\x8bPo|\U000da2a6C\U000df9db\U0010576få\U0008f099R\U000806b7©Jc\U00032039\x84\U0001e603c𦒮\U0010032a\x8e\x85ã\x11\x0eE²\U00036f23u`\x1b"ô\x0e\U00068ae7/\x19O\x98ý\x92òóÀ;\x87æf1\U0005115b4õ\U0009a798ôKg\x8e:/$\U0007aa52\x89\xad\x90\x00\x1f2Ðù\x9b𨔏ÑÛ\x11Ó]m\x1b\rñ\x1b\U00074a67-Ó®\x84?:7H\r\U00092e46\x80é\x0f©﹄¬h\U0010ed28\U00076a29y\x94\U00032704\x95u\U000dded2\x1de\x1fÌý¼Î\U0005e124>¡È\U000f458bÉ\x92\U0008e102#u\r\U00034e4fyºRÁ.õý\U000c33deõ\x98\x97«\x8e\x1c= ã\x0f@àÔÙÂ\U000f1569\x01\x972Î\t\x1buðâ\x10ÏE\U0007f978¸\U000e62ba\x17½\U000b7ee2\x0b\U00075064𫓗긱çýÙñ{¡UÍ\xa0\x93øá*]\x1c"-ø}Ç\x06ÿ\x9a\x16äLß\U000d62a7\U000cceb1no®\x96\x83\U00035b73»ázV\x12\x8cÿ¦\U00045764=\x9f𢕠Û\x83𧆞¢\x8e\U000b4e08\U00076f98^\x83\U0010375e\x02\U0003575d\x01®\x06+\x99kuî\U00011eb8\x90»\U000c2fa8¯¡¥¡\x8a×j衦e\x98\U0007a3c0\ufff75~P\U0005c9d9\U000abd58\U0004bf97왂ÚÅÐ\U000d8110{.\x84æÍ\x0fõ\U00060333\U00090620\x81\x0c£\x9c=%Ë4Vî´©e´\x14OÉéV\x86\x87X2𮙇ýc(𥽙é\U000ab8ae\U0007dbf0\U000b85fa\U000da06a\U000458bd\x99\U000e4de2Ì2\U00044170\U000c98cbú\U00107988DÉ\x00aÙ?¶\U00034ede\x1fý¯\U000f47e7\U00079d98d\x9b¤ÿÁ}¢2¼ªO𠅿\x1cI¸\x80V5þêf¢a\x8cñ\x15Ó\U000cce25©c½𱅊¼\x89\U000c67b2\U0004f028óë}®Qç\U00078d4e;}1\x8d\x1f\U0005aa9d4(\x88\x17\x97L©å\U000ed9bc¯\x8c\x08\x82\x9bd\x89\U000e1b81>\x19\x81;\x94\x8e\U000b3c24 jØâ/7¸úBÄ$KXU¢"6\x04~\U00093ebc¯¤Ë×44~5B\x1bd¢sc\U000684ba¦,\x9f\x14U \x07\x17=rjii\U0007d847\x83ð\x0c𘄡û±>Å\\\x80\x04\U000af702à\U000723b1½I\x86\x03å\U00056b208\x13#ô𬆗3\x0c\x7fY\x19:ê\r*\U00087372\x95\x0c\x03á\U000bde23`Iáô¬\x97Í}\x17\nÎ\x8bºsÅðZ'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['𑣫º\x93}¾\U0005fbacÙ\ue38c', '\x18\x94\x85\x12m8\U00077364£\xa0Ø\x9bÝ¤Ñ\U000d9878.§', '\x18\x94\x85\x12m8\U00077364£\xa0Ø\x9bÝ¤Ñ\U000d9878.§'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001748s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '𑣫º627¬𠨀1734m7d13\x9b721Û577\x18\x94458\U0007736413\x9b721Û570𐳩\U00069900Ȃ\U00043900\U000d5db9¯H\xa0X\x7f$\nô\x02\U000d976bïñå\x99ÿ÷\x04Ð\U0007acaf\x8a4j\x12\U000c72f7\U000c41d5\x01(Ì-9\U000661fbÊ\U0001b7e0V¶\U0007b8c91¯\U000e4cf3\U0001e5be\x0fN\x00oP\x9aÍ\U000e667a\x9fS\x81ò\U000b8ecc\x0bvËP\U000b3111m`î@ÉFd𪆗æö憅h;\U0007ad8a\x89ªÃ\x0eæ\U00045efc81à\U000b98d5 «q\x85Ç\U000ce2a8£PÐ\U0004b931\U0003626d\x81\U00077abe\U000f3fdd\x93\U00058b24ø)Vz\U0008e19cÚ8\x06\U000b4265\x82\U0007269fÑw寉\U0006fe1d{Ô\x17Þø\U001021fb±\U000776e7&^ï\x04\r\U000c3aab\x03\U0001615d\x03\x8dZ\U00048ddcf蓼 \x95âª\x9b!Ì\U0004cb46k=&𠮪\x0fa\U000fea21Ê𠺭p£\xad\x07î\x9d£y3â\x04jª¥K\U000b32f3£*\U0010eec9ù\U000495d9\U000e0db6|+ßú\U000c83c8\x83ûtHC\U0005d680\x90rÓÆÇ5\x17ª\x11P¶\x00:û\U0004940aXtwL\x9cK\tùx÷ÿX\x07ÿÂµ\x9a¢ro\x85\U000d4b07ss\x01\U0004ed1el\U000a75c6\U00059f0d\U00084b20øb\U000f371b\U00049aba\x11$\U000720ce\U000d2e43êÐî\x9fWç°S¶\x97\x1cSS$FÅ\x91ò¡£p£/B\'\x18¤X\r\x06\x03$\x9c\x8dË¤\U00094c48ÇÈó\U0004a850\u1977\U000345ceÝÞ\\v´\x7f\x9fI)¸K\U000db764Ù\x17\U0010ae3e\x1aÀ\xa0\x15øl?\U0008cc2fd\x84\U000f5776\x9c\U000a637b\U0007ed53\x07vTÈ\U0009c604\x17Úâ½Þ\U0008750e\x9a4\x04\x17*ÓÇ¢üÅ𘭇È\x8e\U00097f932\U000e3c06ìZ\U000a8a6c¶\x04Üý\U00048897Y0J\x05\U0005273f\U00039681À\x9a\x11\x86Â=\x82Ù±$腿\U000ab6e4û\x97\x88Í¸\x17𝥤9Ó\x8e>ü\n\U000a9fab\x85\x82\x96=à?t\x14𓐇\x9e\x0c\U0003348dÊ\x03\xa0\x82Bë\x14D\x14dø\U00099317o¾\x07\x93¸\x85\x9a÷_µ.O>\U000b7c61\U000901e2Ë"NI#¸î雪\U000d14bf\U0010a6e8:@I\U0010a841ü9ä𭰴¦ \x85~\'ø\U0004cc40fÿyöônñ7Êü\x08\U00090ae5\x18vY\x1d\U000f1bb6\xadnU\x8cgu\U000ea154}\U000b6f9a\x1fß\U000b6670\x99ûî\x88Ôõ\xadw+\x06\x03a\x82M\U000e38aa\x8cM𗖅\U000c79d3¹\U0007e511ç÷\x01\U000ac206q\xa0V´¿ÜÞ[\U000eeffa𬸤a.\U000a1c5c﮸uòúíÑ\x01xuhy\U000382983fûÄ\U000b34258M\U000da8042úC!\U000a8272¸\U000b5e85¤\x8d¥ô\x7f\x1fÚ*ª\x07\x8bPo|\U000da2a6C\U000df9db\U0010576få\U0008f099R\U000806b7©Jc\U00032039\x84\U0001e603c𦒮\U0010032a\x8e\x85ã\x11\x0eE²\U00036f23u`\x1b"ô\x0e\U00068ae7/\x19O\x98ý\x92òóÀ;\x87æf1\U0005115b4õ\U0009a798ôKg\x8e:/$\U0007aa52\x89\xad\x90\x00\x1f2Ðù\x9b𨔏ÑÛ\x11Ó]m\x1b\rñ\x1b\U00074a67-Ó®\x84?:7H\r\U00092e46\x80é\x0f©﹄¬h\U0010ed28\U00076a29y\x94\U00032704\x95u\U000dded2\x1de\x1fÌý¼Î\U0005e124>¡È\U000f458bÉ\x92\U0008e102#u\r\U00034e4fyºRÁ.õý\U000c33deõ\x98\x97«\x8e\x1c= ã\x0f@àÔÙÂ\U000f1569\x01\x972Î\t\x1buðâ\x10ÏE\U0007f978¸\U000e62ba\x17½\U000b7ee2\x0b\U00075064𫓗긱çýÙñ{¡UÍ\xa0\x93øá*]\x1c"-ø}Ç\x06ÿ\x9a\x16äLß\U000d62a7\U000cceb1no®\x96\x83\U00035b73»ázV\x12\x8cÿ¦\U00045764=\x9f𢕠Û\x83𧆞¢\x8e\U000b4e08\U00076f98^\x83\U0010375e\x02\U0003575d\x01®\x06+\x99kuî\U00011eb8\x90»\U000c2fa8¯¡¥¡\x8a×j衦e\x98\U0007a3c0\ufff75~P\U0005c9d9\U000abd58\U0004bf97왂ÚÅÐ\U000d8110{.\x84æÍ\x0fõ\U00060333\U00090620\x81\x0c£\x9c=%Ë4Vî´©e´\x14OÉéV\x86\x87X2𮙇ýc(𥽙é\U000ab8ae\U0007dbf0\U000b85fa\U000da06a\U000458bd\x99\U000e4de2Ì2\U00044170\U000c98cbú\U00107988DÉ\x00aÙ?¶\U00034ede\x1fý¯\U000f47e7\U00079d98d\x9b¤ÿÁ}¢2¼ªO𠅿\x1cI¸\x80V5þêf¢a\x8cñ\x15Ó\U000cce25©c½𱅊¼\x89\U000c67b2\U0004f028óë}®Qç\U00078d4e;}1\x8d\x1f\U0005aa9d4(\x88\x17\x97L©å\U000ed9bc¯\x8c\x08\x82\x9bd\x89\U000e1b81>\x19\x81;\x94\x8e\U000b3c24 jØâ/7¸úBÄ$KXU¢"6\x04~\U00093ebc¯¤Ë×44~5B\x1bd¢sc\U000684ba¦,\x9f\x14U \x07\x17=rjii\U0007d847\x83ð\x0c𘄡û±>Å\\\x80\x04\U000af702à\U000723b1½I\x86\x03å\U00056b208\x13#ô𬆗3\x0c\x7fY\x19:ê\r*\U00087372\x95\x0c\x03á\U000bde23`Iáô¬\x97Í}\x17\nÎ\x8bºsÅðZ', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001736s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': 387}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 387, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001786s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001734s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001693s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [''], 'password': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001757s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó'], 'password': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001635s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó'], 'password': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00181s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'password': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '¤\U000b253b±ó'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001823s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'password': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001815s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'password': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '𠤃237\U00040dd3\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x0fyAÓ\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '𠤃237\U00040dd3\U000d1eefßÁ\x81\U0006f2af', 'B´®ïÚ𧯝', '\U000a3327', '\x8a4=', '\U000a3327'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001559s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001774s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001633s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "<script>alert('xss')</script>"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001577s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001718s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001795s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ['w', ',$', 'úûzÃyÓ¾䷞qËÊ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ['w', ',$', 'úûzÃyÓ¾䷞qËÊ']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['w', ',$', 'úûzÃyÓ¾䷞qËÊ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001525s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['0', ',$', 'úûzÃyÓ¾䷞qËÊ'], 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['0', ',$', 'úûzÃyÓ¾䷞qËÊ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00237s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['0', ',$', '0'], 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['0', ',$', '0'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001684s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['0', ',$', '0'], 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['0', ',$', '0'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002013s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['055', '', '0'], 'password': '  '}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['055', '', '0'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001573s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['055', '', '0', '', '3']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['055', '', '0', '', '3'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['055', '', '0', '', '3']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001635s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['055', '', '0', '', '3'], 'password': ['X9', 'o', '\x89¹', '', '$', '¡Û\U0007d07fw\x94\U00105f83\x89\x0b\U000521bcÔ', '\x08±']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['055', '', '0', '', '3'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['X9', 'o', '\x89¹', '', '$', '¡Û\U0007d07fw\x94\U00105f83\x89\x0b\U000521bcÔ', '\x08±'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001675s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '  ', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001486s
====================================================================================================
2025-09-19 00:23:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001618s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001775s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'N@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001558s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'HuLR@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001694s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'HuLR@FsvApRRy.t.asid.Q.axch0.T.fOx', 'password': 'O'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00181s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`n=@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001753s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`n=@YeHpj.KzMqi7.oYH2-c0.rehaB', 'password': '\U0006f003'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001803s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'IAsvK@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001725s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'IAsvK@r.mUSIC', 'password': 'È6¹¯Č\U0008c345Đæĩ[qËìĹe`ġ\U000c1835\U000371d6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001566s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ypf@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001552s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ypf@iP.TRADInG', 'password': 'ÄÑĮįiúA'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001481s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '3@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00188s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '3@X.i.ioFaSyXICLHH.NEvkrUKe.Nc', 'password': 'x'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001546s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '3@X.i.ioFaSyXICLHH.NrvkrUKe.Nc', 'password': 'x'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001706s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '3@X.i.ioFaSyXICLHH.NrvkrUKe.NC', 'password': 'x'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001991s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '30106@A.B.dOCS', 'password': '0\U0001094e㝇'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00171s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '30106@A.A.dOCS', 'password': '0\U0001094e㝇'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00191s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '30106@A.A.dOCS', 'password': '0\U0001094e㝇'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001692s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '30136@A.A.dOCS', 'password': '0\U0001094e㝇'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001696s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "y!vcr'6g@rJKaJaAMNk.gOv", 'password': '\U000de826\U00071392\U000a9eaeñ\U0009cb8a\U000c066bĴħ\U000963d5\\6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "y!vcr'6g@rJKaJaMMNk.gOv", 'password': '\U000de826\U00071392\U000a9eaeñ\U0009cb8a\U000c066bĴħ\U000963d5\\6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001885s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "y!vcr'6g@rJKaJaMMNk.gOv", 'password': '\U000de826\U00071392\U000a9eaeñ\U0009cb8a\U000c066bĴħ\U000963d5\\6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001665s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "y!vcr'6g@rJKaJaMMNk.gOv", 'password': '\U00060a48\U0006104b\U000113d677\U0009cb8a\U000c066bĴħ\U000963d5\\6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "y!vcr'6g@Fe1C6HX.s.H.u6uTzmA2.kTdyyC.B5A4L77UKUP92y254Q507afwKCYgH.rJKaJaMMNj7.gOv", 'password': 'Á\U000f9bafÒ\U000fa6efħÇþU8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001526s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "y!vcr'6g@Fe1C6HX.s.H.u6uTzmA2.kTdyyC.B5A4L77UKUP92y254Q507KfwKCYgH.rJKaJaMMNj7.gOv", 'password': 'Á\U000f9bafÒ\U000fa6efħÇþU8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002047s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "y!vcr'6g@Fe1C6HX.s.H.u6uTzmA2.kTdyyC.B5A4L77UKUP92y254Q50KKfwKCYgH.rJKaJaMMNj7.gOv", 'password': 'Á\U000f9bafÒ\U000fa6efħÇþU8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001572s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '-EKl#qmKxb@qIZ.RbPxS9W9fIMpFEvx.HoMEDePOt', 'password': 'Į'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001664s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '-EKl#qmKxb@qIZ.RbPxM9W9fIMpFEvx.HoMEDePOt', 'password': 'Į'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001626s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '-EKl#qmKxb@qIZ.RbPxM9W9EIMpFEvx.HoMEDePOt', 'password': 'Į'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001616s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '-EKl#qmKxb@qIZ.RbPxM9W9EIMpFEvx.HoMEDePOt', 'password': 'ĮÖMBc\\n¹'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001542s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '-EKl#qmKxb@qIZ.A0000Evx.RbP00000.HoMEDePOt', 'password': 'ĮÖMBc\\n¹'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001878s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '-EKl#qmKxb@qIZ.qIZ.RbP00000.HoMEDePOt', 'password': 'ĮÖMBc\\n¹'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '-EKl#qmKxb@qIZ.qIZ.qbP00000.HoMEDePOt', 'password': 'ĮÖMBc\\n¹'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '+o+@Z3QT4v.z.UH7dqv.Z.P.FVfr9Pd.dznsO.gtY.k.WindoWS', 'password': 'N?H\U0007d437'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001683s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '+o+@Z3QT4v.z.UH7dqv.Z.P.Frfr9Pd.dznsO.gtY.k.WindoWS', 'password': 'N?H\U0007d437'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001593s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '+o+@Z3QT4v.z.UH7dqv.Z.P.Frfr9Pd.dznsO.ztY.k.WindoWS', 'password': 'N?H\U0007d437'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001704s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '+o+@Z3QT4v.z.zH7dqv.Z.P.Frfr9Pd.dznsO.ztY.k.WindoWS', 'password': 'N?H\U0007d437'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001678s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '+o+@Z3QT4v.z.zH7dqv.Z.P.Frfr9Pd.dznsO.zH7dqv.k.WindoWS', 'password': 'N?H\U0007d437'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001594s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '+o+@Z3QT4v.z.zH7dHv.Z.P.Frfr9Pd.dznsO.zH7dqv.k.WindoWS', 'password': 'N?H\U0007d437'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001636s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '+o+@ZH7dHv.z.zH7dHv.Z.P.Frfr9Pd.dznsO.zH7dqv.k.WindoWS', 'password': 'N?H\U0007d437'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001639s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8Ccm1/rM&J@A.D70k.RMB.t.x-xRg-pS.g.T.D.TW', 'password': 'Ã\U0001c381'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00157s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8Ccm1/rM&J@A.D70k.RMB.t.x-xRg-pk.g.T.D.TW', 'password': 'Ã\U0001c381'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001844s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8Ccm1/rM&J@A.D7gk.RMB.t.x-xRg-pk.g.T.D.TW', 'password': 'Ã\U0001c381'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8Ccm1/rM&J@A.D7gk.RMB.t.x-xRg-pk.g.T.D.TW', 'password': 'Ã𡁈'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00161s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8Ccm1/rM&J@A.D7gk.RMk.t.x-xRg-pk.g.T.D.TW', 'password': 'Ã𡁈'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001917s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8Ccm1/rM&J@A.D7gk.RMk.t.x-xRg-pk.g.T.D.TW', 'password': 'Ã𡁈'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8Ccm1/rM&J@A.D7gk.RMk.t.x-xRg-pk.g.T.D.TW', 'password': 'Ã𡁈'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001603s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Oz*r^@V.ugTwnQhyIr6.BOsch', 'password': '\U0006349ch8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00184s
====================================================================================================
2025-09-19 00:23:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '5z*r^@V.ugTwnQhyIr6.BOsch', 'password': '\U0006349ch8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001651s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '5z*r^@V.ugTwnQhyIr6.BOsch', 'password': '\U0006349ch60Æ\U000e1bd0 Ď\U0001abc8ã°»'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001535s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '5z0@B.A.Ag', 'password': '⽂/M[(J.]B$'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001636s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '5z0@A.A.Ag', 'password': '⽂/M[(J.]B$'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001639s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '5z0@E.B.A.A.Ag', 'password': '㱆'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001612s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '5z0@E.B.A.A.Ag', 'password': '00+*N¦\U00083b23¹{¹İÿīęÕīLÕíF'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001759s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'bR@m9Ng.oF38roct.X.XN--3pXu8K', 'password': 'ęħ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001717s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'bR@X.oF38roct.X.XN--3pXu8K', 'password': 'ęħ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001738s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'bR@X.oF38roct.X.XN--3pXu8K', 'password': 'ħħ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001688s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'bR@X.oF38ooct.X.XN--3pXu8K', 'password': 'ħħ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001609s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'bR@X.oF38ooct.X.XN--3pXu8K', 'password': 'ħħħKĚë\U00055fa6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001848s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'bR@o.oF38ooct.X.XN--3pXu8K', 'password': 'ħħħKĚë\U00055fa6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001682s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'bR@o.X.X.XN--3pXu8K', 'password': 'ħħħKĚë\U00055fa6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001687s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VOMXt@r.R.coaCH', 'password': 'ò£\U0007fd75ĝBģU½>äÆ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001688s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VOOXt@r.R.coaCH', 'password': 'ò£\U0007fd75ĝBģU½>äÆ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001648s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VOOXt@r.r.coaCH', 'password': 'ò£\U0007fd75ĝBģU½>äÆ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001685s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VOOXt@r.r.coaCH', 'password': 'ò£\U0007fd75\ueb44'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001693s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VOOXt@r.r.coaCH', 'password': 'ò£\U0007fd75\ueb44òßµ2ĳ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001538s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VOOXt@r.r.coACH', 'password': 'ò£\U0007fd75\ueb44òßµ2ĳ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002455s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VOOXt@r.r.coACH', 'password': 'ò£\U0007fd75\U00011b48ģ\U0004ba46'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001539s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'RHj|{lK$3u63Ra@u6Ec.r.Nj9.scZsXp7U.b.cLAimS', 'password': '¶'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001796s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'RHj|{lK$3u63Ra@u6Ec.scZsXp7U.Nj9.scZsXp7U.b.cLAimS', 'password': '¶'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001691s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'RHj|{lK$3u63Ra@ucZsXp7c.scZsXp7U.Nj9.scZsXp7U.b.cLAimS', 'password': '¶'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001651s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'RHj|{lK$3u63Ra@ucZsXp7U.scZsXp7U.Nj9.scZsXp7U.b.cLAimS', 'password': '¶'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001648s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'RHj|{lK$3u63Ra@ucZsXp7U.scZsXp7U.Nj9.sXZsXp7U.b.cLAimS', 'password': '¶'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001551s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'RHj|{lK$3u63Ra@ucZsXp7U.scZsXp7U.Nj9.ucZsXp7U.b.cLAimS', 'password': '¶'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001667s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'RHj|{lK$3u63Ra@ucZsXp7U.NcZsXp7U.Nj9.ucZsXp7U.b.cLAimS', 'password': '¶'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001448s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%/|C@A.AMFAM', 'password': '\U00032b8aÉÃcÁ\U000c4f0fFÂĠÄ.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001627s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%/|C@A.AMFAM', 'password': '\U00032b8aÉÃcc\U000c4f0fFÂĠÄ.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001536s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '1331C@A.AMFAM', 'password': '\U00032b8aÉÃcc\U000c4f0fFÂĠÄ.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001793s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '1331C@A.AMFAM', 'password': '\U00032b8aÉÃcc\U00032b8aFÂĠÄ.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001714s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '1311C@A.AMFAM', 'password': '\U00032b8aÉÃcc\U00032b8aFÂĠÄ.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001502s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '1311C@A.AMFAM', 'password': '\U00032b8aÉÃcc\U00032b8aFÂĠÄ3\uf6dfÜĹÅõĘc®D'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001966s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '1311C@A.AMFAM', 'password': '\U00032b8a04221R6𨩂'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001497s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fx#7KGam*n@RNW.H.hM.hhop.n.wZPtPRPnw5aZJb6eljni.eja2WLtX.d.p.KzeKx--A0DemitLXy.y.mS', 'password': 'Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001812s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fx#7KGam*n@RNW.H.hM.hhop.n.wZPtPRPnw5aZJb6eljni.ehop.d.p.KzeKx--A0DemitLXy.y.mS', 'password': 'Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001682s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fx#7KGam*n@RNW.H.hM.hzeKx--A0DemitLXy.n.wZPtPRPnw5aZJb6eljni.ehop.d.p.KzeKx--A0DemitLXy.y.mS', 'password': 'Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002434s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fx#7KGam*n@RNW.H.hM.hzeKx--A0DemitLXy.n.wZPtPRPnw5aZJb6eljni.ehop.d.y.KzeKx--A0DemitLXy.y.mS', 'password': 'Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001604s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fx#7KGam*n@RNW.H.hM.AmitLXy.nX000000000.wZPtPRPnw5aZJb6eljni.ehop.d.y.KzeKx--A0DemitLXy.y.mS', 'password': 'Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00169s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fx#7KGam*n@RNW.H.hM.AmitLXy.nX00000000y.wZPtPRPnw5aZJb6eljni.ehop.d.y.KzeKx--A0DemitLXy.y.mS', 'password': 'Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fx#7KGam*n@RNW.H.hM.AmitLXy.nX00000000y.wZPtPRPnw5aZJb6eljni.ehop.nX00000000y.y.KzeKx--A0DemitLXy.y.mS', 'password': 'Û'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'BQ@LbnYn.lOaNs', 'password': 'aXÉ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'QQ@LbnYn.lOaNs', 'password': 'aXÉ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00155s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'QQ@B2.lOaNs', 'password': '001'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001698s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'QQ@B2.lOaNs', 'password': '001'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00162s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'QQ@B2.lOaNs', 'password': '000'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001559s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'QQ2@B.AiG', 'password': '11'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001561s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'QQ2@U.A1a.B.AiG', 'password': 'Úí'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001546s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'r@oCbZIAbRKmeXwDBb9.COUPoN', 'password': '-"_慀¡'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001995s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'r@B.COUPoN', 'password': '00000000⩆'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00165s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'r@B1.COUPoN', 'password': '5'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0017s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'r@Z7mvrBB1BKz5M.TszW6u9sC.P.AYOOAh9Wi-q.oFL.Ge.B1.COUPoN', 'password': 'Òàá'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001556s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'r@o.Ge.B1.COUPoN', 'password': '0㱁0\u1942'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001572s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001571s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_´'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001548s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_v\U000a2ec0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001553s
====================================================================================================
2025-09-19 00:23:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_w'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001592s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_º'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001659s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\n¶\U000888a2\U000c2b8bM'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001713s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00038b47Ä'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001655s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001601s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Y\U00082a6d5y\U00081519'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002099s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_¥\x10'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001621s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_,忹~\x98j'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001481s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Y'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001512s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_YYÒj*'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0015s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_YY*j*'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001567s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_YY*j*'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001711s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_jY*j*'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001502s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_*Y*j*'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001881s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_*Y*j*'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001623s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00059b44'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001578s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\ue6acN'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001553s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0b00\x96ÿ\U000d7c868'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001557s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0b00\x96ÿ\U000d7c868'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00169s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0b00ÿÿ\U000d7c868'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001519s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0b00ÿÿ𠬈'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0b00ÿ\U00060803𠬈'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_çÌ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001508s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÌÌ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001794s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÌÌÌ®>'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001882s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÌÌÌ3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00143s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÌÌÌ3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001547s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÌÌÌ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00162s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÌÌÌÌW'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001581s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_h\x96\\\x12\U000464a8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001614s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_h\x96\\\x12\x12'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001606s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_h\x96\\\x12\\'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001581s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00080c03'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001508s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_è'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00152s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x15v\x88`\x80'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001508s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x15\x88\x88`\x80'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001539s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ý\U000cef7f\U00076652Ñ\x97'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001643s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ý\U000cef7f\U00076652\U000a49fa'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001744s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ý\U000cef7f\U00076652𢀀ú'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001861s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ý\U00076652𢀀ú'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001436s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ý\U00076652𢀀Ý'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00163s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ý\U00076652\U00076652Ý'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001715s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ý\U00076652\U00076652M'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001669s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001626s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U6x8Y'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U6x8Y'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001469s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U688Y'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001535s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U6888'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001491s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U6882'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001494s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U6282'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00153s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00107537'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001542s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00107537'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00174s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_䬫'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001686s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ë*'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001456s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000b0a06'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001541s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000b0a06\U000b0a06\x98'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001627s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000b0a06\U000b0a06\x98\U000b0a06 '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001557s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_L\x8b\U0009de65'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001581s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_L\x8b93â'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001889s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_L\x8bâ3â'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001716s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_L\x8b\x8b3â'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001538s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_L\x8b\x8b3â'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001577s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8b\x8b\x8b3â'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001612s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8b\x8b\x8b\x8bâ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001852s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_F\U0004d362ì\x1a6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001691s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_F\U0004d362ì\x1aA'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001703s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Fìì\x1aA'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001606s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ììì\x1aA'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001837s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002165s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000109750'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001654s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000109751'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00151s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00073380A\x80ç]'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001573s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00073380A'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001686s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000af8c0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001571s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000af8c00\U000e025f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001696s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000af8c00\U000e025f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000e025f0\U000e025f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001842s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000e025f0ǥsÕ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001735s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ú\U000a7373\x95'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001478s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ú\U000a7373s\x95'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ú\U0010494e\x83'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001555s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ú\U0010494eú'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001553s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_312E'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00159s
====================================================================================================
2025-09-19 00:23:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001639s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_çñ?c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001628s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00056bcaí=u®'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001903s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00056bcaí=u®'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001627s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00056bcau=u®'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001765s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_621'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001623s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_6212'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_6211'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001587s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_6221'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001494s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_÷'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001548s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_÷'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001595s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_÷÷'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001581s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𐀀½\U000efd31\x18\U0010d236'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00163s
====================================================================================================
2025-09-19 00:23:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𐀀½\U000efd31AC'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002221s
====================================================================================================
2025-09-19 00:24:39 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MjQzMjc5fQ.PaTYLdYL14JYAD38ksurYSDksTJoyVjtKmvMfj3kRVg', 'token_type': 'bearer', 'expires_in': 1799}}
     Elapsed: 0.002835s
====================================================================================================
2025-09-19 00:24:39 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  },
  "dictionary_item_removed": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:24:39 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002064s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001614s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001693s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 0}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001616s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 57, 'password': 64}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 57, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 64, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001568s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ' '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001802s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001717s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/$F&@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001518s
====================================================================================================
2025-09-19 00:24:40 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/$F&@Z.Q.VJE6IvKeqp.QqRxY.Mk.wHoSWHO', 'password': '»\U00104b66»äë'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001648s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "q5h3HQY'XehK5KrM@A.com", 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001662s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "q5h3HQY'XehK5KrM@mDaqJyA2dGmadY.t.scHOlaRshIpS", 'password': '&èëĝ\U0008ed2dÃU'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001867s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '9*0fE!e*R|#WVUrHG~P@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002125s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '9*0fE!e*R|#WVUrHG~P@q.V.P.J5RQ.b.i.q.L.wywzOfWR.wt.wInNErS', 'password': '\U0005d4cc\U000919e6Ċ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001584s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fh!BQwgIt@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001383s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fh!BQwgIt@FwVePS.qfuzdcJY.f.e.aw.pr', 'password': 'Ě³ıą'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001523s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eI@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001511s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eI@Jm8xV.o.gRottWKi.bNCPBM9-QK.l.y.Soccer', 'password': '\U0001ec2d\U000af0e9'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001541s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eI@Jm8xV.o.gRottWKi.bNCPBM9-QK.l.y.Soccer', 'password': '\U0001ec2d\U0001ec2d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00218s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eI@Jm8xV.o.gRottWKi.bRottWKK.l.y.Soccer', 'password': '\U0001ec2d\U0001ec2d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001615s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eI@Jm8xV.o.l.bRottWKK.l.y.Soccer', 'password': '\U0001ec2d\U0001ec2d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001615s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eI@Jm8xV.o.l.bRottWKK.o.y.Soccer', 'password': '\U0001ec2d\U0001ec2d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001565s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eI@Jm8xV.o.l.bRottWKK.J.y.Soccer', 'password': '\U0001ec2d\U0001ec2d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0015s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eI@Jm8xV.o.l.bRottWKK.J.y.Soccer', 'password': '\U0002f5421\U0002f541'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001593s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '{kLo/8tT||J@b9f.Itv', 'password': 'ÖĘĝġ0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001635s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '{kLo/8tT||J@J.b.Itv', 'password': '0ÖĘĝġ0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00163s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '{kLo/8tT||J@ruLfSegnrt36.t.A113647BC.C.aIg', 'password': "\U0005230cJØþ½Ĳµ\U000af546\U00063bc9'"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00175s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '{kLo/8tT||J@ruLfSegnrt36.t.AuLfSegnrt36.C.aIg', 'password': "\U0005230cJØþ½Ĳµ\U000af546\U00063bc9'"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001647s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '{kLo/8tT||J@ruLfSegnrt36.C.AuLfSegnrt36.C.aIg', 'password': "\U0005230cJØþ½Ĳµ\U000af546\U00063bc9'"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001788s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '{kLo/8tT||J@ruLfSegnrt36.C.AuLfSegntt36.C.aIg', 'password': "\U0005230cJØþ½Ĳµ\U000af546\U00063bc9'"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001524s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '{kLo/8tT||J@A.C.aIg', 'password': '𠥖ZLY/(""3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00156s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=yF}jazu-eF86p{@k.niSsAY', 'password': 'ĎĤvĐp=\U00088fb7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001587s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=yF}jazu-eF86p{@k.niSsAY', 'password': 'ĎĤvĐp=\U00088fb7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=yp}jazu-eF86p{@k.niSsAY', 'password': 'ĎĤvĐp=\U00088fb7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001505s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=ypyjazu-eF86p{@k.niSsAY', 'password': 'ĎĤvĐp=\U00088fb7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001837s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=ypyjazu-eF86p{@k.niSsAY', 'password': 'ĎĤvĐp=\U00088fb7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00185s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=ypyjazu-eF86p{@N.A.niSsAY', 'password': '753'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001745s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=ypyj=zu-eF86p{@N.A.niSsAY', 'password': '753'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001741s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lHyC{9Bf#C@oJ.WJx658KONClet.li', 'password': "'ħ\ue3bd🯈"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001538s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lHyC{9Bf#C@oJx658KONCleJ.WJx658KONClet.li', 'password': "'ħ\ue3bd🯈"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001494s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lHyC{9Bf#C@oJx658KONCleJ.WJx658KONC5et.li', 'password': "'ħ\ue3bd🯈"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00168s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lHyC{9Bf#C@oJx658KONCleJ.WJx658KONC5eJ.li', 'password': "'ħ\ue3bd🯈"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001735s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lHyC{9Bf#C@oJx658K0.WJx658KONC5eJ.li', 'password': 'ㅃ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0017s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lHyC{9Bf#C@oJx658K0.WJx658KONC5eJ.li', 'password': '\U0007094eÞa'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001654s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lHyC{9Bf#C@oJx658K0.WJx658KNNC5eJ.li', 'password': '\U0007094eÞa'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001605s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'uH6w~@NbkL8L.c.JjW.taObaO', 'password': '\U000dec28¦\U0003a68dáQ\U00032158eàjĽ8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001529s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'uH6w~@JjL.taObaO', 'password': 'L'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001581s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'uH6w~@Jj010.taObaO', 'password': ' UuëÔP'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001934s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'uH6w~@Jj010.taObaO', 'password': '\U0007097bUuëÔP'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001785s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'uH6w~@u.J.taObaO', 'password': '00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'uH6w~@u.u.taObaO', 'password': '00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00166s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'uH6ww@u.u.taObaO', 'password': '00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001618s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '&@Z.LRhdRr.lv.h.YXtne.U.taXI', 'password': 'IČ\U0004a072\U00053e2c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001563s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '&@Z.LRtdRr.lv.h.YXtne.U.taXI', 'password': 'IČ\U0004a072\U00053e2c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001775s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '&@Z.Lv.lv.h.YXtne.U.taXI', 'password': 'IČ\U0004a072\U00053e2c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001498s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '&@Z.Lv.lv.h.YXtnv.U.taXI', 'password': 'IČ\U0004a072\U00053e2c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001659s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '&@Z.Lv.lv.h.YXtnv.U.TaXI', 'password': 'IČ\U0004a072\U00053e2c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001588s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '&@Z.Lv.lv.h.YXttv.U.TaXI', 'password': 'IČ\U0004a072\U00053e2c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001688s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '&@Z.Lv.lv.h.YXttv.U.TaXI', 'password': '\U000b0c48Ø𐹵ĉ×úÈ8\U000df05f\U0007e0da\U0008baf3\U000597d8JĉıÞ\U0007e34cVá\U000767b1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001731s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'p@lL5Ym.FJXPZjc.Mba', 'password': 'I]`ÊyíĢùĳ¢Ì'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001612s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'p@FJXPZjc.FJXPZjc.Mba', 'password': 'I]`ÊyíĢùĳ¢Ì'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001655s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0p@FJXPZjc.FJXPZjc.Mba', 'password': 'I]`ÊyíĢùĳ¢Ì'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001937s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'yNY=H@U.i.XN--tCkWe', 'password': '\U0004e6c6sľ\U000e3f13Þ\xadč'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001679s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'yNY=H@U.i.B.XN--TCkWe', 'password': '\U0004e6c6sľ\U000e3f13Þ\xadč'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001584s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'yNY=H@U.i.B.XN--TCkWe', 'password': '\U0004e6c6sľ\U000e3f13Þ\xadč'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00158s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'yNY=H@i.i.B.XN--TCkWe', 'password': '\U0004e6c6sľ\U000e3f13Þ\xadč'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001505s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'yNY=H@i.B.XN--TCkWe', 'password': '0\U0004e6c6sľ\U000e3f13Þ\xadč'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001572s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'yNY=H@B.B.XN--TCkWe', 'password': '0\U0004e6c6sľ\U000e3f13Þ\xadč'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001644s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'yNY=H@F.E4534q454eevO5hbSM.D.B.B.XN--TCkWe', 'password': 'ĖØ\U00051d19ıÐ\U00059600\U00080f9eÖ𦆥.«+\U00059e2aÀ´\U00076087ß'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001852s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'iJz}@k78kHI0u.xN--mgBX4Cd0ab', 'password': 'Āġë¾ĕz'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002471s
====================================================================================================
2025-09-19 00:24:41 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'iJz}@k7HkHI0u.xN--mgBX4Cd0ab', 'password': 'Āġë¾ĕz'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001584s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'iJz}@k7HkHI03.xN--mgBX4Cd0ab', 'password': 'Āġë¾ĕz'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00177s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'iJzJ@k7HkHI03.xN--mgBX4Cd0ab', 'password': 'Āġë¾ĕz'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001619s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'iJzJ@k7Hk7I03.xN--mgBX4Cd0ab', 'password': 'Āġë¾ĕz'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001698s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'iJzJ@B.xN--mgBX4Cd0ab', 'password': '0い'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001547s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'iJzJ@c-sf.bvIAy.a.Rc5aa.Akp-eY.A.xN--mgBX4Cd0ab', 'password': 'īĞö'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002031s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zrq`@fmjN7.MIi.ZXF.ufKA.B.P.V.h9QycR.d.W.eIoPN.ACadEmY', 'password': 'N'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001579s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zrq`@fmjN7.MIi.ZXF.ufKA.B.d.V.h9QycR.d.W.eIoPN.ACadEmY', 'password': 'N'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001609s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zrq`@fmjN7.MIi.ZXF.ufKA.B.d.MIi.h9QycR.d.W.eIoPN.ACadEmY', 'password': 'N'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00171s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zrq`@ZX.ufKA.B.d.MIi.h9QycR.d.W.eIoPN.ACadEmY', 'password': '0\U00010953'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001508s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zrq`@ZX.ufKA.W.d.MIi.h9QycR.d.W.eIoPN.ACadEmY', 'password': '0\U00010953'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001568s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zrq`@ZX.ufKA.W.d.MIi.h9QycR.d.W.eIoPN.ACadEmY', 'password': '0\U00010953\U00010953cĖ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001569s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zrq`@ZX.ufKA.W.d.MIi.h9QycR.d.W.eIoPN.ACadEmY', 'password': '0\U00010953\U00010953cĖ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001594s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'v@n.MortgAGE', 'password': 'ĵD§±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001618s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'v@n.MortgAGE', 'password': 'ĵD§±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001567s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0C0@n.COM', 'password': 'ĵD§±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001756s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0C@B.coM', 'password': '\U0003fd467§±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001673s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0C@B.coM', 'password': '\U0003fd467§±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001592s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '40@A1.cOM', 'password': '4§±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001586s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '40@A1.cOM', 'password': '4§±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001594s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eVp@s.yRG.Ne', 'password': '.ıē'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001636s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eVp@y.yRG.Ne', 'password': '.ıē'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001561s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eVp@y.yRG.Ne', 'password': 'ⵃ6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eVp@yR.Ne', 'password': '1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001526s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eVp0@q.aAjtM5hK.A0.Aig', 'password': '¬bGd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001588s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'eVp0@aAjtM5hK.aAjtM5hK.A0.Aig', 'password': '¬bGd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001558s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@B.aig', 'password': 'Ɂ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001517s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ewj@rm42n.vcG.xN--MGberp4A5d4Ar', 'password': 'µ\U0005f9d5ð'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001531s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ewj@vcG.vcG.xN--MGberp4A5d4Ar', 'password': 'µ\U0005f9d5ð'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ewj@D.v.xN--MGberp4A5d4Ar', 'password': '1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001487s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Ewj@D.D.xN--MGberp4A5d4Ar', 'password': '1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001587s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'qb%^NZPP`JY6FD&@xHZA.s.Bb', 'password': 'L\U0008c3a2%Ĥĺ\U00106b45]m>\U000ab2dbóĪK¦ár\xadB¼'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001575s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'qb%^NZPP`JY6FD&@xHZA.xHZA.Bb', 'password': 'L\U0008c3a2%Ĥĺ\U00106b45]m>\U000ab2dbóĪK¦ár\xadB¼'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00191s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'qb%^NZPP`JY6FD&@x50.Bb', 'password': '0\U00010952S'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001609s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'qb%^NZPP`JY6FD&@x50.bb', 'password': '0\U00010952S'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001561s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'qb%^NZPP`JY6FD&@x50.bb', 'password': '0\U00010952S'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001586s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'qb%^NZPP`JY6FD&@E.rFL2.Kxz.A00gqHYk.x00.bb', 'password': '\U000fb04e\U0010f487F'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001483s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001642s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x96\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001683s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_^'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001297s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00098bba'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001584s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Í'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001581s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_e½)'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001568s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x18í¨Ç'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001642s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_-'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00154s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000746b3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001659s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_÷f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001631s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_u(g\x88é'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001661s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_¡'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00168s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_¡h\U00105a2c\U000c934d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001421s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_¡h\U00105a2c\U000c934d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001589s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c934dh\U00105a2c\U000c934d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001652s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c934d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00149s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c934dÐ\x8f\x16'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001587s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c934d\U000c934d\U0004b8f9M'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001613s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_}Æ\U000b2ec5×»'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001593s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_}Æ\U000b2ec5×\U000b2ec5'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00195s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_}Æ\U000b2ec5××'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001749s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_}2\U000b2ec5××'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001569s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_×2\U000b2ec5××'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001706s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_×2'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001593s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_22'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001373s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00107e1381¾'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001615s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00080a06'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001541s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00080a06\U00080a06F\U000b5282X'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001592s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00010a0812Ä\x11'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00145s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𠨆6𬴁j:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001761s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𠨆𠨆𬴁j:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001604s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𠨆𠨆𬴁\U0006096a:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001514s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x14\x17isN'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001548s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x14\x17i\x17N'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001534s
====================================================================================================
2025-09-19 00:24:42 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x14\x14i\x17N'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00147s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x14\x14i\x17i'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001538s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x14\x14i\x170'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001742s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x14'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001718s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\\{\x9d\x02u'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001769s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1\x9c\U000f3bc5²\U00103dbe'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001493s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1\x9c\U00103dbe'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001636s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1B𠨑BB'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001575s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_2B𠨑BB'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001686s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_BB𠨑BB'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001688s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_BB𠨑BB'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': "test_password_BB𠨑1'"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001462s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_l'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001721s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q\U000beda1L\x19»'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001811s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q\U000beda1L\x19»'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001636s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q\U000beda1L\x19»'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001447s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q𰬂'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001547s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q𐅠m\U000fe941\U00078ec8'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001614s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Qø'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001638s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000a04ce\x03'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00163s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000a04ce\U000979ce'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001638s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000a04ce'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001642s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000a04ceÎ\U000123b0Þ\x01'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001535s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000a04ceÎ\U000123b0\x01\x01'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001528s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000a04ceÎ\U000e0b044 '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001586s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000a04ceÎ\U000e0b04\U00040a00¥'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001473s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𪯴'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001505s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𪯴𪯴üÅæ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001601s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𪯴𪯴üÅæ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001482s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𪯴𪯴üô3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001669s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𪯴𪯴üô3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001902s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_A\x0bô𪯴ü'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001366s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_A𥠂1\U0002fd02'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001583s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ú¢þbÏ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001524s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ú¢þbÏ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001593s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_01'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001499s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_11'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001607s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001582s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ñè'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002052s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ñè'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00134s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ø'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001471s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ØØx^'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001577s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ØØxx'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001576s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1Øxx'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001518s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𐨃'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001592s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𐨃𐨃'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001405s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_10'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001363s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ñ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001573s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÑH'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001455s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_HH'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001767s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_HH'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001662s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_HH'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001503s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_31'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001607s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001652s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÇÜF@'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001876s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÇÜF@'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001911s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÇÜF@'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001643s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÇÜ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001712s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÇÇ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001708s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_5Ç'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001504s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_5\U000709e7t#\U00019720'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001732s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_fzIr\x0b'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001339s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_frIr\x0b'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001861s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_frIr'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001473s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_fIIr'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001558s
====================================================================================================
2025-09-19 00:24:43 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_fIfr'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001679s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MjQzODkwfQ.ais1D-9KpCbbkr3sM-9n1V18uQ5Zuxtvkt9NA0whWbw', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.00242s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  },
  "dictionary_item_removed": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002903s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 0}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001808s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 19867}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 19867, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 19867}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001671s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ' '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001708s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.00206s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 10003}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 10003, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 10003}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001746s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001747s
====================================================================================================
2025-09-19 00:34:50 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001718s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001817s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '../../etc/passwd'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001734s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001705s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001713s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': 3397}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 3397, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001735s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0, 'password': 3397}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 3397, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.01747s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0, 'password': 0}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001866s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001734s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '    '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001713s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001699s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': -115}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -115, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001768s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001748s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001979s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ' '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ' '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001794s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['æ('], 'password': 37}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['æ('], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 37, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.0022s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['æ('], 'password': 19216725}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['æ('], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 19216725, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00181s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['æ(', 'æ(', '𥍲\U00038a02S(ñ\x15éýË', '', ':÷\U00069c93a,¾Ò¨¦Sx/\U0004e0f2\x7f^\U00061689ÊÊl\U000b5a69Y', 'Õ', ')\x11\U00059a9e\x83¹\U00077802ÎI¸\x1cH\x8avú3<n\U000e9426', '𧘿NY\x86Þé', '', 'ß½䱗\x1b\U000db381', '\x84yâúº', 'j-\U000a6522ã\U00065bbaé\U000c842eý', '|ðÎ\U000626d3', '', 'TîtÀ/\U000dd630𐆍\x8e', '\x8c\U000d2b7e¯6\U00095106\x96\U000b36c9Zîy', '\x87', '\x1aþ\U00109195Ä°Oun\U00068dc5\U0006a285oh\U000f1956\U000f6d3e\\9\U0007df36u×', '\t_', '²ßÐ\x16']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['æ(', 'æ(', '𥍲\U00038a02S(ñ\x15éýË', '', ':÷\U00069c93a,¾Ò¨¦Sx/\U0004e0f2\x7f^\U00061689ÊÊl\U000b5a69Y', 'Õ', ')\x11\U00059a9e\x83¹\U00077802ÎI¸\x1cH\x8avú3<n\U000e9426', '𧘿NY\x86Þé', '', 'ß½䱗\x1b\U000db381', '\x84yâúº', 'j-\U000a6522ã\U00065bbaé\U000c842eý', '|ðÎ\U000626d3', '', 'TîtÀ/\U000dd630𐆍\x8e', '\x8c\U000d2b7e¯6\U00095106\x96\U000b36c9Zîy', '\x87', '\x1aþ\U00109195Ä°Oun\U00068dc5\U0006a285oh\U000f1956\U000f6d3e\\9\U0007df36u×', '\t_', '²ßÐ\x16'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['æ(', 'æ(', '𥍲\U00038a02S(ñ\x15éýË', '', ':÷\U00069c93a,¾Ò¨¦Sx/\U0004e0f2\x7f^\U00061689ÊÊl\U000b5a69Y', 'Õ', ')\x11\U00059a9e\x83¹\U00077802ÎI¸\x1cH\x8avú3<n\U000e9426', '𧘿NY\x86Þé', '', 'ß½䱗\x1b\U000db381', '\x84yâúº', 'j-\U000a6522ã\U00065bbaé\U000c842eý', '|ðÎ\U000626d3', '', 'TîtÀ/\U000dd630𐆍\x8e', '\x8c\U000d2b7e¯6\U00095106\x96\U000b36c9Zîy', '\x87', '\x1aþ\U00109195Ä°Oun\U00068dc5\U0006a285oh\U000f1956\U000f6d3e\\9\U0007df36u×', '\t_', '²ßÐ\x16']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001884s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['æ(', 'æ(', '𥍲\U00038a02S(ñ\x15éýË', '', ':÷\U00069c93a,¾Ò¨¦Sx/\U0004e0f2\x7f^\U00061689ÊÊl\U000b5a69Y', 'Õ', ')\x11\U00059a9e\x83¹\U00077802ÎI¸\x1cH\x8avú3<n\U000e9426', '𧘿NY\x86Þé', '', 'ß½䱗\x1b\U000db381', '\x84yâúº', 'j-\U000a6522ã\U00065bbaé\U000c842eý', '|ðÎ\U000626d3', '', 'TîtÀ/\U000dd630𐆍\x8e', '\x8c\U000d2b7e¯6\U00095106\x96\U000b36c9Zîy', '\x87', '\x1aþ\U00109195Ä°Oun\U00068dc5\U0006a285oh\U000f1956\U000f6d3e\\9\U0007df36u×', '\t_', '²ßÐ\x16'], 'password': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['æ(', 'æ(', '𥍲\U00038a02S(ñ\x15éýË', '', ':÷\U00069c93a,¾Ò¨¦Sx/\U0004e0f2\x7f^\U00061689ÊÊl\U000b5a69Y', 'Õ', ')\x11\U00059a9e\x83¹\U00077802ÎI¸\x1cH\x8avú3<n\U000e9426', '𧘿NY\x86Þé', '', 'ß½䱗\x1b\U000db381', '\x84yâúº', 'j-\U000a6522ã\U00065bbaé\U000c842eý', '|ðÎ\U000626d3', '', 'TîtÀ/\U000dd630𐆍\x8e', '\x8c\U000d2b7e¯6\U00095106\x96\U000b36c9Zîy', '\x87', '\x1aþ\U00109195Ä°Oun\U00068dc5\U0006a285oh\U000f1956\U000f6d3e\\9\U0007df36u×', '\t_', '²ßÐ\x16'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001966s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'password': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001856s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'password': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001933s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'password': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U000f2139\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['¯', "é\U000eb426ÅàÊ\U000ae2d0\U000b9993`ç'\U00086a17\x10", "fN\U00105937âÅ'òÇâù\U0006f4aa\x05z\x93\x9dh", '~', 'ø\x93æ@\x8d', '\x18\x00¿ß¿\U000ed8a2', 'É8', '\U000f1c84\x19¿?²)\x01$', '\x80', '\x1e0', '\U0009d669\U000779d7õÖ', 'G', 'Ïb\x92$zÍ¾²\U000e4cc0ý', 'Õ\n', 'j*Æ', 'ÑÕÍ\U0009676c¬\x03\U000de28f', 'Ð', '\U0010ce05º\x96A\t\U0003b44b\U0003aa50m𥡔x¸ÊH'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00193s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x98hÑ¦\x9eÏ=·WBÕ\U0006f202\U000bcafd\U000ea5e0¥l\U0004feea1å\U000eaecc>°\x0f𘉞9\x9f\x11\x9f𐧴ß\U000a3199\U000e5ece\U0005089dPCñõ\x04\x14¾[ö\x9d\x03ç<⸘iPR\x87\U000f334aY𬧒\x84º\x7f\x19þ\x81𧦀\x88ôîC1³ÿ\x0f\xad\U000661b7{©\x8fØ)S\U000c9043qÕ𥩩>®똅Zþ\U000fd01byq\U00082ae3&qaÚ𧑑H\x96gÒo\U00038d76°½ä\U000dbdbf»ÃY\x19\x9cïçåe\U000a28be\x08\U000bc91f𩫹p\U000d913a,\U0010eb02Y\U0010abfc\x81\x14\x15`³;¨Å\U00103130ÒÙGa¦\U00038b46\U0010af48\U000d63cf [¨_$³\U000134f5ìoU\U000ba3df\x94£![û\x812\x07\x87«𬜱\x1d𨛹¸®S\U0003833fõ\x08/>@´*@`\t÷\U000abc83.\uebf8àñ\x82\x0e\nÙ\U0010871bæ\x93ô\U0005e236`ý\x1böS+µqÿï\U0005654bÆ\U0007991b¨\U000f36d57DøV\x01tÐÝ\U0007b5c3^Ìæ\U0005c0cd\U0001c811Ëg\x85u\x7frØ²f\x96\x86¥Iª\U000e14fd0ª\x8bSAèi\U00088581ó^\U000ba620i\U00053230\x86J\x85l\x92(\x858\U0009ecbb\x89Hi\x1d\U000aac48Æ𠌧<`𦙇o\x80\x08\x1dn\U000726c3ä¥\x96\t9ê\x98§\U0008ffabK$Ù>𭤁\U000531b5\U00071e60Ë\x02(\U000a5be5¹\x1cZ\x81¾\x94\x176»\x1e|©:L\U0005799eò>\x7fæÝ\U00074685ý_-\x9f\t*\n\x84n¾ËÑ\x02ñaXY\U00040005\x02@Ô\x1aëÚ\x95D3𡤫¨\\M,xu_q-\x93\x8f\U00100473\x8cm\x8c\x12\U00035ba2\x7f\x1d%x\U000c376c\x8dE\x9b\U000b44a8\U000e70a39u_§\x06\x1f\U0003d57fÛL\x1a\x87!eéX\x02Å"ûqf\U000f7cad`\x0e\x16lÁÈ\U000f99905¥𘔩×v\U000858a7\x1a\x1aBÐÉ\U000b6f92±ú\x14\x12ÆRõål\U0007afb8¨.\x89\U000efb4c퀒5\x95D/8\x9d\U0001564a\x93H\U0004c2e7e\x98x»¹\x06©ãH\x9d\U000f8ce5\xadý\\Ð\x17W&\U0009c363𐁆Üq\rñÏ/ømÒ\U00079cd7\x01`%Èû§Z\x86Ðç\x8f\x99µ\U000e95afB¡𣌖\x8aµ55ùÅb\U000e8348L\U000ee2fdÈd\x90\x0b\U000c0a24C\x9c\U000d751b\x96Ô\x91ÌÄ\x96\t\x9a\x8f\x04\x90Ú±\U0007ea31\U0008f784-9\x15\x9c\U000b3848\x1a`ô\x9e(\x03=\x84\x8e?Ñn²ÂÇ\x93®QÅjÑ\x9f\x93@Ç\x1aÄQÇ~\x92;^´Ô\x06ë\U000ab4109U\U000f9112\U0010e92e\x1bê;¶OC6¹âÜÝ\x1b\U0008f83anÃ\U000155bcYÕ¨𡙤»Àå\U000e4a97&HPhí\U000d359dh𘒱J~Ì!V\x03##,c\x04á¸\x0c\U000dedfe÷\U000f9f73\x19#5ùc\U000b2008_3\U000a232f\U0007f18dW\x03ñ\x149©H\U0003fe85Ë!Y\x8bm|:Ỏ\x83¼Àè\U00041200\nP{![ØÁ?¾|_â\x05\x9f[\x9ef¤\U00099d05\U0006c72d`\U000c74f3\x1eCæg~Óÿ\x8aý\x11*\xad\x8c`\U00106ddbÇ\U000b6061Ù\x11u\U000b9505\x07\U0006db5a¢oô\x0fÎ\U0008d3abæ\U000c56b2êI\x1bä\x16\U00085293\x7f´\x18\x80ôü\U001037d2\x86ÿ\U0003606f4\x0c\U00102173DÀ\U0007df0f6SÍø]+\x8c®W3\U0004e494i\x8fÓA\U000817daÍ|3jó¿¶\'ó\U00095e31<=ºt\xadyÜ)¥«Û\x8f¹\U00108233N\U0008a43f\U0007dcbd\U00075bf4Ë.\x0eòe\x02\U000e7098×\U0006cf58¢Åþ}\U00092e7a-õ\U00088276Ò\U000adcd5\x83\x91𦙽$\U000f2094\x8eZ©\x19×Ê\U000bd595\U00032927I\x02}\U0010d3ec1QÞ\U000baa20¬$öTñ©\U000a7d2a\U000c3b6c;\U0004a090ÌX\U0005a6f3´𗀸𥣗ìÐa{Æ\x02\U000ba9c4^\U000f33e9D×xº\x8eò\U0009e83câ%\U00105336ë\U0005d1f6Å\x1cn=@y¹ÈKy3w\x16Z"\U000ec1eb\x1bò)\U0010fc618Sà\x13\x10ïkå\U0003f86e\x85<ÒlD]\U000ed9efÖ\xadr~R\U00053460\U0001be85À\x92 Õ¢W*6<\U0007fd79\tE8\x85_°gê\x01Uoý\x9bð$\U000de266Eµ\x9e\x9e\uead6\x8a𪔁úÎ\x9c𢹹Î+\x83Ø&þ~\x00&»\x18\U00061272ùJ¹ü÷\x0cD\x86Ë&8\U000a10b8÷U¿ñ\x89ù\U0001def7/𛰝\U00054fe6S\x96Zp\U0004ed07\U000ceb72ø\x7f\x1df\U000ab182ù\U0005eb7eã*\x18<\U0004a413\x12\'øÉ\U00053783Ù`Ý4â|rM[V\U000f8927ö\x03%þÆ¦?q\U000f75abÑÁ\U0007474d\U00080d65\U000a7e0f\tµ䚂\U000fd532Û\x90\x9a¢\x10\x8b\U0003654d\U000bea98æ\U000e1ee9Â.\n\x18¤~9Ø·\x9d8YÝú´\x0c«¹\x05+Û𓂇Aw\x1dé\U00053e70\U000113b8üÐ¯cE\U0005e0e4?$Ò\x1fÿÕ\U00056fe5¯ÝÝ\x84\x0bó}N¤\U000fa92dÎ|¿\U0003dcfa°\x17Q\\ëÑ²ñ\x15\x9d\x08´Õ\x0b\x12ÿ\x9e\x1b𫍤Dûfz\x94\'!}\U00095ebcí±\x1c"@\x91ªÓPA\x8b\x03.\x80V=ÂL\x8a½èç\x87o骨\x84\t¬a\U000f21a2\U00015e42\x1aRãTxI\U000a0a49W¸\x1f\U000ac995\x1f\n\U000f0132µ\x87ô§\x84Íӣ^í§àì\U00083fc8"\U00048477\x8aìÍð𢡖\\Y<\U0004a99e¿ÔA\x0fYË\x15\U000416a9\U000fbb88\U0004c439\x16à6\x88\U0005e7de\x02\U000ce6d4¨Ç\x94}\x99\x91/v\x93ⱬ4\U00066de0¿×e%¤Ï)×\U0005485d\x16Fâ\x9d\U000b134d\x01\U00089f63\U000f8edbI\U00085413\xadÙ\U000bdce4§\U0010c57aY\x84[ê\U0010ffb1\x81\U00074bac\U00011399ÉZ\U000d6352ªM\x85\x13\\\U0008417ab\x81\x07X÷ª\U000c179d\U00011670÷Ý*M[\x0f\x11äûü\U0004cea8Èý8ñ|\U000345f5¼?[\x16𥯟ës\U000552b1|\U0003194d\x8cúý\U0004869aÛ\x1b·<Â8\x9cv½1öªµí\x85\x07\x0eQ\x98IÔäß\U000f86c7\x11Íeú\U000344be\U000199eb\x9d\x13\U000ddc9fýnPU{ÂZ\U0005b38eÚ[\U000914d6¸ôº\U00063dd4\x15\U000a5196\x86\U000e1c1c\x8dºÊDôV*<ó\U000b32726ÈÆ¹?üß\U000b483dþñ\U000d6bf5\U00063c0d#¶NÑ\x82\x1bÐ&Xï\U000a3c0dô \x9e¨¹ý\x89\U000b95e4\x1a\x81\U00075544', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00211s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'Þ\x04Æ¼\x96¸v\x1a\U0008bad4øÜ\x97»´Y\U00082869\U0004fc91Ò\U000cd36a:zàÊl¬\U000554636\x7f\U0004a887\U000a11fbBôÖU\x8d\x8d\x08A\U00065079Ä]9¯«Þ\U000c0d0fÙ\x88Qæa\x81\U000bf35f+\x87\x80ûm¤\U00084945\x1f§\U000e35c6\U000e83a7¦Ô\x8b\U000651ddD×øÀ\'¥\x98\U000566a2\x8dK\U000e48a0È\U000dd830\U00039a7c<\x0c½\U000eef376û]\x92L\U000a706cB\U000a0f86]§\x90\U0007d790Æ#\U000d97ed\x9f\x12ìÎ*@=\x14\xad\x82\x83êj\U00048ea2[ÐÝ\U000b6d6cÀ𦕻O\x8fQ¸⮊\x83+Åöö\U00103666\x97îaO㊙\U00090d4e𛆛𩤿\x99\x03WÂ\U000730acg\x00\x92\x8as;\U000d2326\U0009c6e6¬ØÜR\U00051636ØµÆ¾\x0b\x19\U000780faå\U000e88ecsS\x8d7»KÝ\U000e67e3ª\U000401acY\x82\x8fî_\x05ä8°Ú\U0008d30d\x1fÉ$n\x837JÜû=\U000a6c6c\U00066ce3åyu𦶢B\x85\x92/u\U00099aa3¬a\U000fb567\x9d\x08\x1cxD\x96]Æ{SÖB±\x9büZ\x14\x18\x05`òòøt8Y¶jT\\«îÀì>\x99\U00089769\x0bÖ\U000d6c6e=Jk\x1e\U00019283\U0008cb0fÝ\U000598eaå\U000d15cb\x8a\U0007a371\x03\U000d0853©?eK&\x0c\x98)·í𮂚Rlª\U00098306\x98\tã-\U00048b47\U00048c71\x1fÃÞW\x91F\x02ûÒ\U00096190d\U000c9a6a\U000ffbed½\U000c447f2;§\x84#L¸\x02]¹\x12Ë1\x9fxàìῧ\x0b\U000b14ca\U000a8d58l,Ú\U0005fb92\x9e\x045¾\x89\x00-Ù\U000eb00a®\x04»\x0c]\U000e0796~B[\x8bÖ7^\U000f38d8æ\U00046cdc×:\x0eô+\x83zGËq\x1b\x82ÑÊ±Â/\x99bo¥\x86Áù¹&\x18V²\x88²\x17\x05\U00034885ã\U0007c13eO\U00092ef5\xad\x80eá3NÔ\xa0\U0005f74d 69\x1a´\x13êw\rÒ\U000e553c\U000b0cac𩃹o}V$M/\x96{î«\U0006b807Ï(\x148\x92jæ5.Þ\xa0à\x82³?¾mR\U00034e9c\x8aýq\xadèdud\U000d8c44l\x1cÚ\x0e\x83\x8e¼\x83#þâ\x86\x80\U0005b80e\U000cdf0a\U000d8233\U000d177dn®)\x19\U000f2c9eÖ\x1dû\x1e3\U0010eea6\U0005f402\x9d!ç¢\U000d4458\U0008972aw9í\U000ace84\U0001ff44\U000d6159\U0008228b\x9d\x01E\x0f\xad\x14\U0004d959F¬Òß3\xa03\U0005f313)#𤸩Í³¢\U00076bda\U000b58a3O\x19¼q\x89\U000c75e1ÿ\U000803deS\x08\U00043cad\U0004c58eÙùî[°`\U000dcba4\U000abe5bÉ¢Æe6\U000e971c\x98Ü´\U0008692f\U000b226e°\U000a8073𑶍@\U000e9aec7\U00041e83B\U000e9281Ïßü\x98\rÂ\U00083ede\x97>\U00097935¡Ì\x86𱅿¦ë$B\U000359c42]?¡\x08\U000fbd1d$\U000b026d,\x0bW\x80÷@>\x82ÑLnÙ\x04\U000b7f2a¶5\x93\U000a2496\x85è\'í¯\x83d(<Æ\U00060686\x0bsþ\U000b687d\x1dÎT?¼ö\U0003217au\x96\x902~X\rÇÜ\x95³\x1c\x07\xa0±𗀌\x04Ã\x9dË\U000e0c6c\U00064b73\x1d\x91\U000a56ba\x86\x84\x11\x9e\x82\U000340ba\xa06-\x13\x82\x9fû\x9e\x081Uh9\U000acef9\x05Õy2\U000ebdd8\x9fË\U0007ca44ï\x06\x96\x10Ça¼ÙX³\n3ç\U000665a42ñ\x83³U\x86\x05¥OvÕ\x7fcP\x1b\x1e6\U000a6dc4_Å\U000e94f4Å;âµ\U000f2470\x9fÚ\x8a$\x939ë _\U000d4e0f\U000abbc0xDG\U000cd4acjË\x15\U000c8f67`\U0006cbb3M\U00058a465ö·©\U00033bd0㙔\U0003f72fÅ·o$"\x89_\x0eÖ\x9f^Ï\U000cadbd¼\x0c÷W\U000e508a\U00105ed6ñM䕟J\U0005d4fc_j\x00l\x02\U000ade05Û\U000ecede\U00067e5bÆ\x1bÓ]\U0004815f\U0005bdb8\U0010d74dò7í6MZ-\x89âµ_Eü-\x94ê\x18ß¡Në{¹¹\x02§3ë\x17³ã\x0bÂn\x83\U0007c01c}¹C\U000569e2\x0c\x0f,\x1c"\x9aÀ\U0001e608#·Ýj螉\x9eçï\x02ó\U0007e0bd\U000d9fc1q\x1f\U0007a86dùÈ\x1bâ\x96¼\U0009f2a9Úý\U0008c3a9\xa0×àßcæ\x00÷k\U000d7a7dãö\U0010cc9e\x92#òÞÌÿ\x10l´\x92>\U00011859R\nÞ\x1cTG\'X¾\U0009c80e\U000386804Y¦0\x87JÏ÷𧱦}¢\x8a\U000f2f47)¿ESÌDë2ôÅ_V\\ºó#\U0006a17c}\U0005b0f9\x83q¨>®m\x01\U0003a885\x93Q\x9f\U000cfef53\x89¿\x12å\U001066d6\x1eÔzÚh\\vÓ!T\x99·ÖÏ@0Ñ\x10w\U000e11de`\U000c0cc8S\U0003f4281\x8e»\x87ÁË\x13j/Ôï\U00086c16¥`\U000a45bd\U0004f591"nß\x89$Í\U000f3886\tBt\x03jv\U0010b439\x82Z\x1e·Q\x03G\U00041d9c0gP갥¢ìUJö\U0004e3447]Ó´ÒR\U00094c38\U000bdd1eä\x94\U000da528ûU\x19£\x10·R\U0010117d£±\U000eb5b5\x9eÖµH\U0007ab0cËÇãÊ\x13Ê§\x1f𓆂i\U00041bb6\U000e4c23H\x12à_OÊ\x91ó\U000e826f\x81\U00109608ª¿\U0010d849R\U000c2dee\uf34a0RQ\U000bd53d\U0007696bi\U00051d4b©æ\U000588eaíïªÁó\U00071a677ùéy7]9è\x19\U000fe99a@¥ï@Å\xa0\x00È,\x9fª\x17\x99S4\x11\U000a7f1d°ê\U0010cf2f¡5\x1d\U00034489\x9c\tYl¼2ê²\U000886cc\x9b𖩐\U00045c88\U000de6d5"\U0002f62b\U0003e579VôcU\U0006f6bcQcÏÑn]\U0001e29f\U0001fc8d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001912s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'Þ\x04Æ¼\x96¸v\x1a\U0008bad4øÜ\x97»´Y\U00082869\U0004fc91Ò\U000cd36a:zàÊl¬\U000554636\x7f\U0004a887\U000a11fbBôÖU\x8d\x8d\x08A\U00065079Ä]9¯«Þ\U000c0d0fÙ\x88Qæa\x81\U000bf35f+\x87\x80ûm¤\U00084945\U0005f313§\U000e35c6\U000e83a7¦Ô\x8b\U000651ddD×øÀ\'¥\x98\U000566a2\x8dK\U000e48a0È\U000dd830\U00039a7c<\x0c½\U000eef376û]\x92L\U000a706cB\U000a0f86]§\x90\U0007d790Æ#\U000d97ed\x9f\x12ìÎ*@=\x14\xad\x82\x83êj\U00048ea2[ÐÝ\U000b6d6cÀ𦕻O\x8fQ¸⮊\x83+Åöö\U00103666\x97îaO㊙\U00090d4e𛆛𩤿\x99\x03WÂ\U000730acg\x00\x92\x8as;\U000d2326\U0009c6e6¬ØÜR\U00051636ØµÆ¾\x0b\x19\U000780faå\U000e88ecsS\x8d7»KÝ\U000e67e3ª\U000401acY\x82\x8fî_\x05ä8°Ú\U0008d30d\x1fÉ$n\x837JÜû=\U000a6c6c\U00066ce3åyu𦶢B\x85\x92/u\U00099aa3¬a\U000fb567\x9d\x08\x1cxD\x96]Æ{SÖB±\x9büZ\x14\x18\x05`òòøt8Y¶jT\\«îÀì>\x99\U00089769\x0bÖ\U000d6c6e=Jk\x1e\U00019283\U0008cb0fÝ\U000598eaå\U000d15cb\x8a\U0007a371\x03\U000d0853©?eK&\x0c\x98)·í𮂚Rlª\U00098306\x98\tã-\U00048b47\U00048c71\x1fÃÞW\x91F\x02ûÒ\U00096190d\U000c9a6a\U000ffbed½\U000c447f2;§\x84#L¸\x02]¹\x12Ë1\x9fxàìῧ\x0b\U000b14ca\U000a8d58l,Ú\U0005fb92\x9e\x045¾\x89\x00-Ù\U000eb00a®\x04»\x0c]\U000e0796~B[\x8bÖ7^\U000f38d8æ\U00046cdc×:\x0eô+\x83zGËq\x1b\x82ÑÊ±Â/\x99bo¥\x86Áù¹&\x18V²\x88²\x17\x05\U00034885ã\U0007c13eO\U00092ef5\xad\x80eá3NÔ\xa0\U0005f74d 69\x1a´\x13êw\rÒ\U000e553c\U000b0cac𩃹o}V$M/\x96{î«\U0006b807Ï(\x148\x92jæ5.Þ\xa0à\x82³?¾mR\U00034e9c\x8aýq\xadèdud\U000d8c44l\x1cÚ\x0e\x83\x8e¼\x83#þâ\x86\x80\U0005b80e\U000cdf0a\U000d8233\U000d177dn®)\x19\U000f2c9eÖ\x1dû\x1e3\U0010eea6\U0005f402\x9d!ç¢\U000d4458\U0008972aw9í\U000ace84\U0001ff44\U000d6159\U0008228b\x9d\x01E\x0f\xad\x14\U0004d959F¬Òß3\xa03\U0005f313)#𤸩Í³¢\U00076bda\U000b58a3O\x19¼q\x89\U000c75e1ÿ\U000803deS\x08\U00043cad\U0004c58eÙùî[°`\U000dcba4\U000abe5bÉ¢Æe6\U000e971c\x98Ü´\U0008692f\U000b226e°\U000a8073𑶍@\U000e9aec7\U00041e83B\U000e9281Ïßü\x98\rÂ\U00083ede\x97>\U00097935¡Ì\x86𱅿¦ë$B\U000359c42]?¡\x08\U000fbd1d$\U000b026d,\x0bW\x80÷@>\x82ÑLnÙ\x04\U000b7f2a¶5\x93\U000a2496\x85è\'í¯\x83d(<Æ\U00060686\x0bsþ\U000b687d\x1dÎT?¼ö\U0003217au\x96\x902~X\rÇÜ\x95³\x1c\x07\xa0±𗀌\x04Ã\x9dË\U000e0c6c\U00064b73\x1d\x91\U000a56ba\x86\x84\x11\x9e\x82\U000340ba\xa06-\x13\x82\x9fû\x9e\x081Uh9\U000acef9\x05Õy2\U000ebdd8\x9fË\U0007ca44ï\x06\x96\x10Ça¼ÙX³\n3ç\U000665a42ñ\x83³U\x86\x05¥OvÕ\x7fcP\x1b\x1e6\U000a6dc4_Å\U000e94f4Å;âµ\U000f2470\x9fÚ\x8a$\x939ë _\U000d4e0f\U000abbc0xDG\U000cd4acjË\x15\U000c8f67`\U0006cbb3M\U00058a465ö·©\U00033bd0㙔\U0003f72fÅ·o$"\x89_\x0eÖ\x9f^Ï\U000cadbd¼\x0c÷W\U000e508a\U00105ed6ñM䕟J\U0005d4fc_j\x00l\x02\U000ade05Û\U000ecede\U00067e5bÆ\x1bÓ]\U0004815f\U0005bdb8\U0010d74dò7í6MZ-\x89âµ_Eü-\x94ê\x18ß¡Në{¹¹\x02§3ë\x17³ã\x0bÂn\x83\U0007c01c}¹C\U000569e2\x0c\x0f,\x1c"\x9aÀ\U0001e608#·Ýj螉\x9eçï\x02ó\U0007e0bd\U000d9fc1q\x1f\U0007a86dùÈ\x1bâ\x96¼\U0009f2a9Úý\U0008c3a9\xa0×àßcæ\x00÷k\U000d7a7dãö\U0010cc9e\x92#òÞÌÿ\x10l´\x92>\U00011859R\nÞ\x1cTG\'X¾\U0009c80e\U000386804Y¦0\x87JÏ÷𧱦}¢\x8a\U000f2f47)¿ESÌDë2ôÅ_V\\ºó#\U0006a17c}\U0005b0f9\x83q¨>®m\x01\U0003a885\x93Q\x9f\U000cfef53\x89¿\x12å\U001066d6\x1eÔzÚh\\vÓ!T\x99·ÖÏ@0Ñ\x10w\U000e11de`\U000c0cc8S\U0003f4281\x8e»\x87ÁË\x13j/Ôï\U00086c16¥`\U000a45bd\U0004f591"nß\x89$Í\U000f3886\tBt\x03jv\U0010b439\x82Z\x1e·Q\x03G\U00041d9c0gP갥¢ìUJö\U0004e3447]Ó´ÒR\U00094c38\U000bdd1eä\x94\U000da528ûU\x19£\x10·R\U0010117d£±\U000eb5b5\x9eÖµH\U0007ab0cËÇãÊ\x13Ê§\x1f𓆂i\U00041bb6\U000e4c23H\x12à_OÊ\x91ó\U000e826f\x81\U00109608ª¿\U0010d849R\U000c2dee\uf34a0RQ\U000bd53d\U0007696bi\U00051d4b©æ\U000588eaíïªÁó\U00071a677ùéy7]9è\x19\U000fe99a@¥ï@Å\xa0\x00È,\x9fª\x17\x99S4\x11\U000a7f1d°ê\U0010cf2f¡5\x1d\U00034489\x9c\tYl¼2ê²\U000886cc\x9b𖩐\U00045c88\U000de6d5"\U0002f62b\U0003e579VôcU\U0006f6bcQcÏÑn]\U0001e29f\U0001fc8d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001818s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'Þ\x04Æ¼\x96¸v\x1a\U0008bad4øÜ\x97»´Y\U00082869\U0004fc91Ò\U000cd36a:zàÊl¬\U000554636\x7f\U0004a887\U000a11fbBôÖU\x8d\x8d\x08A\U00065079Ä]9¯«Þ\U000c0d0fÙ\x88Qæa\x81\U000bf35f+\x87\x80ûm¤\U00084945\U0005f313§\U000e35c6\U000e83a7¦Ô\x8b\U000651ddD×øÀ\'¥\x98\U000566a2\x8dK\U000e48a0È\U000dd830\U00039a7c<\x0c½\U000eef376û]\x92L\U000a706cB\U000a0f86]§\x90\U0007d790Æ#\U000d97ed\x9f\x12ìÎ*@=\x14\xad\x82\x83êj\U00048ea2[ÐÝ\U000b6d6cÀ𦕻O\x8fQ¸⮊\x83+Åöö\U00103666\x97îaO㊙\U00090d4e𛆛𩤿\x99\x03WÂ\U000730acg\x00\x92\x8as;\U000d2326\U0009c6e6¬ØÜR\U00051636ØµÆ¾\x0b\x19\U000780faå\U000e88ecsS\x8d7»KÝ\U000e67e3ª\U000401acY\x82\x8fî_\x05ä8°Ú\U0008d30d\x1fÉ$n\x837JÜû=\U000a6c6c\U00066ce3åyu𦶢B\x85\x92/u\U00099aa3¬a\U000fb567\x9d\x08\x1cxD\x96]Æ{SÖB±\x9büZ\x14\x18\x05`òòøt8Y¶jT\\«îÀì>\x99\U00089769\x0bÖ\U000d6c6e=Jk\x1e\U00019283\U0008cb0fÝ\U000598eaå\U000d15cb\x8a\U0007a371\x03\U000d0853©?eK&\x0c\x98)·í𮂚Rlª\U00098306\x98\tã-\U00048b47\U00048c71\x1fÃÞW\x91F\x02ûÒ\U00096190d\U000c9a6a\U000ffbed½\U000c447f2;§\x84#L¸\x02]¹\x12Ë1\x9fxàìῧ\x0b\U000b14ca\U000a8d58l,Ú\U0005fb92\x9e\x045¾\x89\x00-Ù\U000eb00a®\x04»ã]\U000e0796~B[\x8bÖ7^\U000f38d8æ\U00046cdc×:\x0eô+\x83zGËq\x1b\x82ÑÊ±Â/\x99bo¥\x86Áù¹&\x18V²\x88²\x17\x05\U00034885ã\U0007c13eO\U00092ef5\xad\x80eá3NÔ\xa0\U0005f74d 69\x1a´\x13êw\rÒ\U000e553c\U000b0cac𩃹o}V$M/\x96{î«\U0006b807Ï(\x148\x92jæ5.Þ\xa0à\x82³?¾mR\U00034e9c\x8aýq\xadèdud\U000d8c44l\x1cÚ\x0e\x83\x8e¼\x83#þâ\x86\x80\U0005b80e\U000cdf0a\U000d8233\U000d177dn®)\x19\U000f2c9eÖ\x1dû\x1e3\U0010eea6\U0005f402\x9d!ç¢\U000d4458\U0008972aw9í\U000ace84\U0001ff44\U000d6159\U0008228b\x9d\x01E\x0f\xad\x14\U0004d959F¬Òß3\xa03\U0005f313)#𤸩Í³¢\U00076bda\U000b58a3O\x19¼q\x89\U000c75e1ÿ\U000803deS\x08\U00043cad\U0004c58eÙùî[°`\U000dcba4\U000abe5bÉ¢Æe6\U000e971c\x98Ü´\U0008692f\U000b226e°\U000a8073𑶍@\U000e9aec7\U00041e83B\U000e9281Ïßü\x98\rÂ\U00083ede\x97>\U00097935¡Ì\x86𱅿¦ë$B\U000359c42]?¡\x08\U000fbd1d$\U000b026d,\x0bW\x80÷@>\x82ÑLnÙ\x04\U000b7f2a¶5\x93\U000a2496\x85è\'í¯\x83d(<Æ\U00060686\x0bsþ\U000b687d\x1dÎT?¼ö\U0003217au\x96\x902~X\rÇÜ\x95³\x1c\x07\xa0±𗀌\x04Ã\x9dË\U000e0c6c\U00064b73\x1d\x91\U000a56ba\x86\x84\x11\x9e\x82\U000340ba\xa06-\x13\x82\x9fû\x9e\x081Uh9\U000acef9\x05Õy2\U000ebdd8\x9fË\U0007ca44ï\x06\x96\x10Ça¼ÙX³\n3ç\U000665a42ñ\x83³U\x86\x05¥OvÕ\x7fcP\x1b\x1e6\U000a6dc4_Å\U000e94f4Å;âµ\U000f2470\x9fÚ\x8a$\x939ë _\U000d4e0f\U000abbc0xDG\U000cd4acjË\x15\U000c8f67`\U0006cbb3M\U00058a465ö·©\U00033bd0㙔\U0003f72fÅ·o$"\x89_\x0eÖ\x9f^Ï\U000cadbd¼\x0c÷W\U000e508a\U00105ed6ñM䕟J\U0005d4fc_j\x00l\x02\U000ade05Û\U000ecede\U00067e5bÆ\x1bÓ]\U0004815f\U0005bdb8\U0010d74dò7í6MZ-\x89âµ_Eü-\x94ê\x18ß¡Në{¹¹\x02§3ë\x17³ã\x0bÂn\x83\U0007c01c}¹C\U000569e2\x0c\x0f,\x1c"\x9aÀ\U0001e608#·Ýj螉\x9eçï\x02ó\U0007e0bd\U000d9fc1q\x1f\U0007a86dùÈ\x1bâ\x96¼\U0009f2a9Úý\U0008c3a9\xa0×àßcæ\x00÷k\U000d7a7dãö\U0010cc9e\x92#òÞÌÿ\x10l´\x92>\U00011859R\nÞ\x1cTG\'X¾\U0009c80e\U000386804Y¦0\x87JÏ÷𧱦}¢\x8a\U000f2f47)¿ESÌDë2ôÅ_V\\ºó#\U0006a17c}\U0005b0f9\x83q¨>®m\x01\U0003a885\x93Q\x9f\U000cfef53\x89¿\x12å\U001066d6\x1eÔzÚh\\vÓ!T\x99·ÖÏ@0Ñ\x10w\U000e11de`\U000c0cc8S\U0003f4281\x8e»\x87ÁË\x13j/Ôï\U00086c16¥`\U000a45bd\U0004f591"nß\x89$Í\U000f3886\tBt\x03jv\U0010b439\x82Z\x1e·Q\x03G\U00041d9c0gP갥¢ìUJö\U0004e3447]Ó´ÒR\U00094c38\U000bdd1eä\x94\U000da528ûU\x19£\x10·R\U0010117d£±\U000eb5b5\x9eÖµH\U0007ab0cËÇãÊ\x13Ê§\x1f𓆂i\U00041bb6\U000e4c23H\x12à_OÊ\x91ó\U000e826f\x81\U00109608ª¿\U0010d849R\U000c2dee\uf34a0RQ\U000bd53d\U0007696bi\U00051d4b©æ\U000588eaíïªÁó\U00071a677ùéy7]9è\x19\U000fe99a@¥ï@Å\xa0\x00È,\x9fª\x17\x99S4\x11\U000a7f1d°ê\U0010cf2f¡5\x1d\U00034489\x9c\tYl¼2ê²\U000886cc\x9b𖩐\U00045c88\U000de6d5"\U0002f62b\U0003e579VôcU\U0006f6bcQcÏÑn]\U0001e29f\U0001fc8d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001794s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002179s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00207s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -167}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -167, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -167}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002083s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': '\x07|\x1a³\x80\U0005173d\x81ë\U0004623aÊ\U000ce7b0¸OÕo9\uf4f0Ó¬\U000f8191\U000b49b8 \x0f\U00054d57\U00060d86ðUÕ\U000b6f94?x\U00085630õÙê\U000e191aûæÿî\x99ëy\x80\U00049a39çi\U000e5f24ìÈ\n\U000d1a91Âj\x13²\U000f19b1ªæ\x10ñ𗢢Úp@\x96ÐôÔGzr\U000f59a7\U000ea5b8\x89j8\x8aâI¦í´i\U000e4bfePÂ\U00064672\U0006e0ab8\U0003443f𗒮ÙÑý\ue0d1Õ\uf58bò\U0007d867®\x82\x14-\U000efd46õ\U0007af81\x17r\U00109543¯`\x08\U000b4e19K\x7fmyG\U00061719Ë%\x05:U6-Z\x8bö(r:\x83÷\x88»\U0004f5e2É\x8d±k\x1cK\x90\x98gwSÞ\x98\x86 Õ\x06\U0005e4a5Â\U000e72edÜ\x14Û\U000d29bbê\U0002f572Îph\x08×\U00037e66\U000197dfñåpä%.ð\U00051542\x97\x85¨\U000fb69c\x1eµ²\x1f𢑧\x82Û\x80晙ò\x1a\x93\x07°-ÈÓ\U00037700~éJ\U000485d6陴?ôX¤ù\U0004fbfeÿ\x85Ì\U000cfac9çõå\x7fÁ»\x8f7\U00095885ä8ø¨o©¸\x93Z\x82\U00108bc2Ù\'¼\x184s\x1ax|®\U000e79e4\U0008eceb\x87SÆ\U0007deb9\x02(\U00031ab5\U0006e613𦞥\x81\x9b²,1\x96\U000f4659\x8b\U000b5d2bè\U00068830ÊßO\U000b1848HÃ\U000b334f @\x05½°P^½ë{\x00\t¿#\x05\x01S\U000c6c9f\x1e©6¦v\x05c?áÜ;\U0004e7c6§l2\x13Qôe^\x93Ë§Ì)yR¾\x15Î\U000f9426ú¾-vX\x0c\U00037186\U000b9157-ÿ\U0008cd93\U000db7bfvì\x84Äy\U0009458bÇÐ#^/|Û\x91çÞ¸\x0eD¶\x89\x14UwÔ0\x83\x11\U000619ee\U00106efar¼秩\x95𬼐*\x1dJ\x17\x81\U000795a2\x8bÇ·\x18!\t\U000ea404è©\x16鑏\x151çTÞÂýi\U0009c6d9xÝL\U000ac45fÉSÔ\x85\U000c522c\x94Z¤ê\x9c\U000967d7r_g齇\x12ºXI\x8cqlÈ·xyê\x8aÒâAÒH脴½Û:\U000d697fiÕ\U000f5345Ü\U000dab46\x14ý\x83\U000708e6Bn\U000803ae`\t\x07\x17PE\U0010395cæ\U000c344b@\x85y¬G¥ÿ\U0006c6f7\x14\U0004ffec\U00045b4c~\x84\x99\U000ab962¹\x99\U000dca9cy\x06M*ÐÞ:\x8d\x1eÑ\x86,\x02\x86ö¶\x13¥i\tQÝ\x89\\Òí\U000c0c10w0\U0008c97eÚ\x82k\x03.\U000d7c3bO\U0005c51d¨\x85©õÖ𨉕\x99\x90_8<\x0bÑÂ𡼽\x19´×a\uf463-p\U000bf508;e\x05eQ\x0câ\x13Ù8Ò\x9f¡e·\x8f,ße\U000b8ecc\x12\U000ffaf8\x14ëð\U000148cf\x16\U00098461Ã\U0008a62b\U00036de3Æ#\x8fN\U000d898dë𮚮\U000b28a0Æ\x81l\U0004b680ýb^÷\U0003bd1e]\x8e\x95\U00050548ÔÞ\x12m𨅬.hç¸\x88\x0cÀOF¨+Nde\U00089601\U0004e029Ð\U00014cb5â\x170a¡ðÂæ\U0004bdc5\x86\x8f𦵱\x1d¥\x8c\x90\x1a¸\U000f8f9fI¢DÔ\x89\x03\U0003499c\x80fÕt\x9d¤\U00062a47\U000ae0f7b\U000ed523ðl\'¢\U0003986c9\U00018d9c\x82¼\x9bn\x1b÷-\x14)F\U0007814dt\x9f\U000b19b9©\U000ddc8a\x8a"𬵬?ª\U0005c325°\U000c2b9cs\x83²1\x82£Öï\U000a2139_å>\x9a×\U0009828d?I1\x81C\U0010a7f0\x87\U000c7fc4\U000e1ba0\U000f0dc6¬\U0004d86a\U0010c65a1\U0005c184\U0007adecÏÞzi\U0006ef00;>AÏ¿³À\x8c\x9a¦^\x9cºb¶Ñ¯\x9a\x98½\x18Ò糍\U00099883\x84\U000b7052\x85,Ö\U000f373e\U000b4389\x102¬\x8fï\x94þW)5\U000411ba#E Q\U000aea75/;\x8f\x92ÑKa\x80\U000db064\x0bâ`\U00055f9d\U00085043K\x06¯\x10=M$Aþ\x93\U000f5078À\x81\x8fÔÓÕHo\x16¼\U0010bbcfæ\x95ê\x18W®\x8d\x87±\x08Æk®à\x12R\x89âv\x0b/r𪮬㿍!/\U00090e7a\U00053930\U0003b20cå𫖘û³Àà*\U000483fa!\U000b70f5\x06\U00104094ü3¸\x90𮀛]¯\x12ú\x90àH\x04\x87*\x1b\x81ª·ç\x84m\x8b\U0009174b25\x85ðÆ2\U00078144Ø\x8c\U0006b89e\x8f\x0b¢÷\x1d\U000fc96e\U00055c1c(¡ÂÚ\x15\U0007c1c8ç)\U00095eceu\U000525d0ºÏ\x19\x99ËÈ饵\U0007aeab·yÒ\U00090dd4ø\x12c~åì\x9ch\x12\U000e0e9d\x14m*\x07\x1fáÍi¾\\\U000bed6fvù\U0007f28c|\x80\U000e4395F@xGªv\x92\x917\rCë5\nÝÔ\U00088f99ö\x1eu\x88^)\x8dvq¨\U00032984ùñ\U00036ebc\x8a+\U0001032a\U0008d02bbÏ\x11\x0c𪚸ÝëñÏ{\x8e\U000e431cⓀOÊ𦪪=\x8a\U000ab277iÓ\x0eA\x19J\x90T\x01®ÝêJ\U000a5968Ó\U00010528\x9e\U000b7f85%áÙÊËN\x04\U0005d45eú¿\x9bò\x7f퓟7½\U0003b1a0ÎÄº\xad\x02¯yB\x1a\x81¹;\x14èO\x85¿\x9dçvÏ£#\x16\U000316b8&Õ\x03\U000ccb94ï\U000e139d\x86\x87¬´RH\U000a456a\x7fy\x92#¬\U00044ad9\U0005741fïÕ§í\x05J\x91xÖ\U00032cb7{\x9b\x9c¶t\U000f96f6ëÂ\U000f6e95\U0010eefcØ#Ó\x91\x1a\U000c5393È\x1d$\x0e\x17À}\U000b498e\U0010a19dÛÀ\U000dd384Y\U000d2e73|_\r\U0008ac321\U00045568¯\x01\x0bl\xadKßÌÞfÜ\U0008316f2h\U0005cf64𫨓3ÿµÕþôZ¦.´aY\U000489b6\U00010574¬©\U00038159\U000784c5Å~|\x88èm <%\U000d92bbö\xa0\x80J~$ÐØ[𡨳)éﾆ\U0001260a\x8d\U000538b5¢q\U0005c1de²-Ã\U00074527\x85\x9b%v\U0005b510\U0008d4dd\U000a54cbÁ!\U0005805dÎ_\U000be223Ü\x97@8a¥tè\U00041f2e\U000b06bf\x17\U00049133ÿY\U000d5782𗋃\U00103124\x12\U0003aa10BÿØ¦î\U00013af4d\U00043a7a~𧧿 UÙ\x11\x1b\x13\U0006ff51Á\U000c936cÆÆ\x9b𝂎\x1dî\x16ï\x87\x11>É;v6Ì\U00090fa8\U0003e8b3\U000391f2\x03¼\xa0Û»\U000513dci\x7f\U000c6be2P,TÐ%5\U000a78d3\x00\x85úG\nÚ\U00035dd0\x7f;\xa0\U000b2e65ÑìSSjÌ𨅄鴩\U000d947d\U0001d3b38\U000e2803x¦\ue51f\U00103109\x85\x1b\x92\U00057187å\x07\U0010cdac\x8b1\x00°¹3]\x1b\U000e0989\x16\U000a9b11\x1c\x99Êaü\x8d¿\U0004880fïdj\x90\x84Î\\Ç&\x06ëq\U0009f195\U0010f0ffª'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001841s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002657s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001952s
====================================================================================================
2025-09-19 00:34:51 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002081s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'ôº}ì¸\x15\x87\x01¨Í\U000d111aê$\x0cù|\x0eç\x96Ú¾c\xa0\\r\U000b83d6Ô\x82Ç}𭾙\x08â9;¯ª뉰\U00049d54uo𑈸\x03ß3\x134}\U0006ec3a[\'Ý\U000e11cdÏþ䄔s{\x12.Þ\x16C\x157悧èßmå\U000ee519àR!E\U0003d350/m\U0003ecd1uì\U000bd0c9\x1aó¹Cô/\x9aL\x16\U0009b49eÍU(ñÄfÈ𫍪\U000518ce(\x8f*ñ\x9aÂ,\U000559c0\xa0\U000e3018\x03\x8c¯Hè`Z\x19_\x80\U000cbd64\x1a-b7|&ßî7*æÇÊl\U000ee085PA\x86´\x98CÕlO\U000f08c1\U0008b9fe;\U000f1a34\x1e\x88%\U000966df\U00010e4a\x80É𦯔\U0006c32c\U0001b5a7H~öÖ\x1a\x90\U00016414-vÀA\x99²B§3\x1e\x1a\U00081a93\x86û©\x93ÒøTW¾\U000f6d75yél\U00077cf2m\x00j\U000d0b05Qî¼\xad\U0009be3e\x90^ª\x98SâôÄ\U00056999ÕÅE\U0007d11d\x9cÐ\x05\x97\x7f\U000d8446𖽤\x9aÇ9\x9b좽¹ît\x9b\U0008cd14¤\x81f\x9d\x9aóOi\x8f\U000fc600^É¨ú\x98s\x7f\x15!\x12\x89G\U00076dca\x7f\U00012958\x0b\xa0íî\U000435bc\U000a081cd&ÿ«\U000aa8a4ç\næ\x83\U0008faac\U000471cfJ\U000b4e60vQÖñ"stÜ®e\x11\U000cb1c4\U0010d04d\U000cc429\x9e\U000e16a9d.\x94\U0009ae8fÆËï«\U00093097\'F蜗Ó\x0bdh¤ç\U000b81e4ø\U000cec74\x05\U00101154Ê\'\U000b9df4t®\x91B\x92\x88谭[µ»Ó"\U000fadb2E\t\x9f\x1bã𩲓\x08\x94±\x7fa«E$o\x99î\x9b\U00078165T\U000996b2\U00038284]\U00101e7eûþ5)D\U0009bb90KÂÃÏX£\U000fb295sI\x8fD4𧽿\x04\U0004d4b9[+RÅåø\x8a\U000f65bfè\x8d7\x0bêyÂE1~\tPÊã\x02§}\U000a91cf\x0f\U00106d8a±ò»V\x9f\U0010f512\x9d_û2Ó¨9\x9al\U000ca998û6\x88]\U0010d573\t0«ti\x84äï\U00073b76e\U000fdd5b\x9b!7\U00093896¸\U00104a7dË¶8e×\x84\U00106fe3Ê\x0e\x0cñ\U00013f9e\x01\U00092812»\x04\x80Î\x03¬Ã\U000b8c58Ã7\x89\x0euk딸-\x01\U00104727\x9ey@\U0007a84eþÍ4𗩑\U00055ab3\U00051d9eøÂ9í\U00108e2fQ8v\x1eÂ9\x9b\x9d\U00053d91C\x14\uefbaÝý\U000de23a\U0009ddcfþ{¼|E\U0002f18c\U0010f542\x19\x14Wô¹k\x82ÆJ\U000a13a5\U00046953\U000a4b93,W}£%\x99Î@Ü\x16\U00084701\U00092699\ueb5a𭬸û\U0008503að{°\x08\x85éqù\x18»f\x8aãÆG\x81Éõ|^t\x92䎑¦ü\x9aFã\x8e·\U00103c66ô\U000fdaed,/\x10ú\U000bb0d3\x9e\U001095d6à\U00038857\U00070746\x18OÒ𪔥å}|´È¿H\U000b17e1ZXù0\x16\x96\U0005e502x𩄇\U0001a135Ó\x82ÿß\x91\U000c6859\x8aꣷc;mÂi🔧@=¸2\x07·Ì0\x1a\x1eÞÄÀ5²þ¡\x0eԝôC\x0c\U00093cd4\U000e73bb\U000ebac5\U000e6da0\x064fu\x80\x04犈\x04j®Ñq5E(\x12õlb:\x0cb\xa0Ò\U00074637/a\U000aa3bf\x9447𫙎J\x8b\x81Z\U000edea2\U00099f9f\x99ÏP\U00056b44ÈSÙ\x7f\x0f\U00036027!pM`\U0004ce1d\x88ö\x9b»\'£Ì\U0004b91e©©\\𒇺$\x08î],Â\U00062a5cW\U000c4c30vp\U000cbe34¾\U000b642a\x0c\x17\x89eÄÛ\x8bÎ\U000d4211Iùfù«H\x11§c\U000a5e96\x8e³\x1a\U000f2c32\U000f56cbY\x13Ù\U0001ba06¤\U00049d25Ề\U00077ba0ßa\x00i6\x14p\r)ýfæÂä,{\U00064649<Þ\U0001abd4ë\U000f1d4c4=𡶢HYÓ\U0001fcf0e\x13Ñp\x81\x8b󠄷"ó[kË\x15¶~|W|\U00084b47*U×\U000e4cde\'ÑÄ`\U0004fd17Ù\r)\x03xdªÐ\x8c¯¼\U00085c98¸æ\\n³\U000a16df\x1eÞ{lã/º8\'\x04\x941\U000e3dc2\U000397c8\x97\x01\x112å𥵼\U0009b5ce^~°aù\x01🨧8"ï%@ú\U000c1105ù\U000908bf¨Ø\x11ÇS¹\U00092c27\x04ã\U0009531eÛ\x7fË\U00041402\x9bf\x02r\U000720c4x\x13\U000dd910¿¬\U000ef95a\U00106ef6\x8b\x06µ\x18\x80÷\x84\xad\x0cº\U0005ae3c>®ù±\x9d\n𦝯\U000b3b2c}CÍ«.¼\'\U000a352f|Q\xa0\x8c\U000f6a4e\U00061428\U000e7d08FÈWÅÞ\x9dìíH\x10EÞ\U00033d79<\U000f251dãü\U000b575bõ瓿\n\x85p\U000e3e9bC\nÆ ç\x13\U0006ad4a÷Îìí÷Ñ\U000a94eb\x031\x94\x8e\U0006788a\U0004fba1pc\U000c9a4c.m®Q9\x90\x00eØ\x12É\U00046069\U000a7a71\U000be4769\U00051450\U00050a37<\x1c}\x18lô\U00070733\x1eÑ\x90¡I¤ù{Y\x0c\x86u>\x83𰒥Å\U0008851b-\x191\x0b!õ\x04Õ\x8c8{\xad\xa0\U00058d8a¯%£\U000eae4f\U0010cb12ëúÐ\U0006b83b=\x9d\U000971ecæ\x91\x99\U000d9f2b]Jú𘉺¹ͫ\x88Â𧣕Á\x06òb=\x99\x90¡\U000a9368ÙøÁú\U000d4aa5\x93þÔË\U00083905+´ê&\U00083993\U000f8c42£\x16/$°𔗱ê\x9bxïÈ\x0eÈÎD\U000b5de7W𗜨\x1b¼\U000f9b04¯ÖùøÙè\x1f¥þ\U000d651dÇ\x1d\U000cdf3b\x15㽔f\x8e\t\x83\x98y£P»C\U00084e67\x87UM\x95\U00048c14¥?NF3쇟u©\U000d58b5·c!\U000e1e68aB²\x93ÜÀ\U0004f282\U000c7c2b\x15c³\U00012592T\x19\xa0\U0004c3a9Ööv\x07!zô\x9d:\x05j\U000f608e¨#\U000d33c0ÍLK~î}Uf\U000925e3ñÉIó\x88Èÿ\x8f-\U00045f87\x9d\'\U000cd1d1\x98Y(\x99Æïü]ç\x06ür\U00089d33\x11\x8aD×ö悊o\U0007343a𝡍\x93\U000bfdd7ìµuf𥙽4\U0010f677^Î^\U000afbd3¡\U000a0281(½g\U000da31e"`s\U000fc358\U00095060\x19;z×ü\x94𫷕á\xadÿ$ÜKÎ@\x0c\x97U\x16\U000e3c1b\U000d822f\x92\xad袗ü\x8a\n\nµ\U000bc1da\U0010f16fM\x81iö{R\U000d5bfd[\x95t0\x1f_ó³\x13\x82"ö\'&¢ô4\x87\U0003dc71Â\x7f½\U000ac0b1Ê\U00011e9að5\x9d|<懔𮮆:µ\x1f\x1b=±\x05È\x9b𗬏R\U0010948d\U00034ecc÷ö2\\ø\x13ß\U000dc7e5ëÄ\x03_[Í\x84Ö?1Ê\x17í\x071\x9b\x8b&aÜ\U0006c267\x95\U000ca0d6d`\U0010f8e4o\U000baceb\x14QMÏ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001805s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'ôº}ì¸\x15\x87\x01¨Í\U000d111aê$\x0cù|\x0eç\x96Ú¾c\xa0\\r\U000b83d6Ô\x82Ç}𭾙\x08â9;¯ª뉰\U00049d54uo𑈸\x03ß3\x134}\U0006ec3a[\'Ý\U000e11cdÏþ䄔s{\x12.Þ\x16C\x157悧èßmå\U000ee519àR!E\U0003d350/m\U0003ecd1uì\U000bd0c9\x1aó¹Cô/\x9aL\x16\U0009b49eÍU(ñÄfÈ𫍪\U000518ce(\x8f*ñ\x9aÂ,\U000559c0\xa0\U000e3018\x03\x8c¯Hè`Z\x19_\x80\U000cbd64\x1a-b7|&ßî7*æÇÊl\U000ee085PA\x86´\x98CÕlO\U000f08c1\U0008b9fe;\U000f1a34\x1e\x88%\U000966df\U00010e4a\x80É𦯔\U0006c32c\U0001b5a7H~öÖ\x1a\x90\U00016414-vÀA\x99²B§3\x1e\x1a\U00081a93\x86û©\x93ÒøTW¾\U000f6d75yél\U00077cf2m\x00j\U000d0b05Qî¼\xad\U0009be3e\x90^ª\x98SâôÄ\U00056999ÕÅE\U0007d11d\x9cÐ\x05\x97\x7f\U000d8446𖽤\x9aÇ9\x9b좽¹ît\x9b\U0008cd14¤\x81f\x9d\x9aóOi\x8f\U000fc600^É¨ú\x98s\x7f\x15!\x12\x89G\U00076dca\x7f\U00012958\x0b\xa0íî\U000435bc\U000a081cd&ÿ«\U000aa8a4ç\næ\x83\U0008faac\U000471cfJ\U000b4e60vQÖñ"stÜ®e\x11\U000cb1c4\U0010d04d\U000cc429\x9e\U000e16a9d.\x94\U0009ae8fÆËï«\U00093097\'F蜗Ó\x0bdh¤ç\U000b81e4ø\U000cec74\x05\U00101154Ê\'\U000b9df4t®\x91B\x92\x88谭[µ»Ó"\U000fadb2E\t\x9f\x1bã𩲓\x08\x94±\x7fa«E$o\x99î\x9b\U00078165T\U000996b2\U00038284]\U00101e7eûþ5)D\U0009bb90KÂÃÏX£\U000fb295sI\x8fD4𧽿\x04\U0004d4b9[+RÅåø\x8a\U000f65bfè\x8d7\x0bêyÂE1~\tPÊã\x02§}\U000a91cf\x0f\U00106d8a±ò»V\x9f\U0010f512\x9d_û2Ó¨9\x9al\U000ca998û6\x88]\U0010d573\t0«ti\x84äï\U00073b76e\U000fdd5b\x9b!7\U00093896¸\U00104a7dË¶8e×\x84\U00106fe3Ê\x0e\x0cñ\U00013f9e\x01\U00092812»\x04\x80Î\x03¬Ã\U000b8c58Ã7\x89\x0euk딸-\x01\U00104727\x9ey@\U0007a84eþÍ4𗩑\U00055ab3\U00051d9eøÂ9í\U00108e2fQ8v\x1eÂ9\x9b\x9d\U00053d91C\x14\uefbaÝý\U000de23a\U0009ddcfþ{¼|E\U0002f18c\U0010f542\x19\x14Wô¹k\x82ÆJ\U000a13a5\U00046953\U000a4b93,W}£%\x99Î@Ü\x16\U00084701\U00092699\ueb5a𭬸û\U0008503að{°\x08\x85éqù\x18»f\x8aãÆG\x81Éõ|^t\x92䎑¦ü\x9aFã\x8e·\U00103c66ô\U000fdaed,/\x10ú\U000bb0d3\x9e\U001095d6à\U00038857\U00070746\x18OÒ𪔥å}|´È¿H\U000b17e1ZXù0\x16\x96\U0005e502x𩄇\U0001a135Ó\x82ÿß\x91\U000c6859\x8aꣷc;mÂi🔧@=¸2\x07·Ì0\x1a\x1eÞÄÀ5²þ¡\x0eԝôC\x0c\U00093cd4\U000e73bb\U000ebac5\U000e6da0\x064fu\x80\x04犈\x04j®Ñq5E(\x12õlb:\x0cb\xa0Ò\U00074637/a\U000aa3bf\x9447𫙎J\x8b\x81Z\U000edea2\U00099f9f\x99ÏP\U00056b44ÈSÙ\x7f\x0f\U00036027!pM`\U0004ce1d\x88ö\x9b»\'£Ì\U0004b91e©©\\𒇺$\x08î],Â\U00062a5cW\U000c4c30vp\U000cbe34¾\U000b642a\x0c\x17\x89eÄÛ\x8bÎ\U000d4211Iùfù«H\x11§c\U000a5e96\x8e³\x1a\U000f2c32\U000f56cbY\x13Ù\U0001ba06¤\U00049d25Ề\U00077ba0ßa\x00i6\x14p\r)ýfæÂä,{\U00064649<Þ\U0001abd4ë\U000f1d4c4=𡶢HYÓ\U0001fcf0e\x13Ñp\x81\x8b󠄷"ó[kË\x15¶~|W|\U00084b47*U×\U000e4cde\'ÑÄ`\U0004fd17Ù\r)\x03xdªÐ\x8c¯¼\U00085c98¸æ\\n³\U000a16df\x1eÞ{lã/º8\'\x04\x941\U000e3dc2\U000397c8\x97\x01\x112å𥵼\U0009b5ce^~°aù\x01🨧8"ï%@ú\U000c1105ù\U000908bf¨Ø\x11ÇS¹\U00092c27\x04ã\U0009531eÛ\x7fË\U00041402\x9bf\x02r\U000720c4x\x13\U000dd910¿¬\U000ef95a\U00106ef6\x8b\x06µ\x18\x80÷\x84\xad\x0cº\U0005ae3c>®ù±\x9d\n𦝯\U000b3b2c}CÍ«.¼\'\U000a352f|Q\xa0\x8c\U000f6a4e\U00061428\U000e7d08FÈWÅÞ\x9dìíH\x10EÞ\U00033d79<\U000f251dãü\U000b575bõ瓿\n\x85p\U000e3e9bC\nÆ ç\x13\U0006ad4a÷Îìí÷Ñ\U000a94eb\x031\x94\x8e\U0006788a\U0004fba1pc\U000c9a4c.m®Q9\x90\x00eØ\x12É\U00046069\U000a7a71\U000be4769\U00051450\U00050a37<\x1c}\x18lô\U00070733\x1eÑ\x90¡I¤ù{Y\x0c\x86u>\x83𰒥Å\U0008851b-\x191\x0b!õ\x04Õ\x8c8{\xad\xa0\U00058d8a¯%£\U000eae4f\U0010cb12ëúÐ\U0006b83b=\x9d\U000971ecæ\x91\x99\U000d9f2b]Jú𘉺¹ͫ\x88Â𧣕Á\x06òb=\x99\x90¡\U000a9368ÙøÁú\U000d4aa5\x93þÔË\U00083905+´ê&\U00083993\U000f8c42£\x16/$°𔗱ê\x9bxïÈ\x0eÈÎD\U000b5de7W𗜨\x1b¼\U000f9b04¯ÖùøÙè\x1f¥þ\U000d651dÇ\x1d\U000cdf3b\x15㽔f\x8e\t\x83\x98y£P»C\U00084e67\x87UM\x95\U00048c14¥?NF3\U000646490\U000a0d75©\U000d58b5·c!\U000e1e68aB²\x93ÜÀ\U0004f282\U000c7c2b\x15c³\U00012592T\x19\xa0\U0004c3a9Ööv\x07!zô\x9d:\x05j\U000f608e¨#\U000d33c0ÍLK~î}Uf\U000925e3ñÉIó\x88Èÿ\x8f-\U00045f87\x9d\'\U000cd1d1\x98Y(\x99Æïü]ç\x06ür\U00089d33\x11\x8aD×ö悊o\U0007343a𝡍\x93\U000bfdd7ìµuf𥙽4\U0010f677^Î^\U000afbd3¡\U000a0281(½g\U000da31e"`s\U000fc358\U00095060\x19;z×ü\x94𫷕á\xadÿ$ÜKÎ@\x0c\x97U\x16\U000e3c1b\U000d822f\x92\xad袗ü\x8a\n\nµ\U000bc1da\U0010f16fM\x81iö{R\U000d5bfd[\x95t0\x1f_ó³\x13\x82"ö\'&¢ô4\x87\U0003dc71Â\x7f½\U000ac0b1Ê\U00011e9að5\x9d|<懔𮮆:µ\x1f\x1b=±\x05È\x9b𗬏R\U0010948d\U00034ecc÷ö2\\ø\x13ß\U000dc7e5ëÄ\x03_[Í\x84Ö?1Ê\x17í\x071\x9b\x8b&aÜ\U0006c267\x95\U000ca0d6d`\U0010f8e4o\U000baceb\x14QMÏ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002126s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': 'ôº}ì¸\x15\x87\x01¨Í\U000d111aê$\x0cù|\x0eç\x96Ú¾c\xa0\\r\U000b83d6Ô\x82Ç}𭾙\x08â9;¯ª뉰\U00049d54uo𑈸\x03ß3\x134}\U0006ec3a[\'Ý\U000e11cdÏþ䄔s{\x12.Þ\x16C\x157悧èßmå\U000ee519àR!E\U0003d350/m\U0003ecd1uì\U000bd0c9\x1aó¹Cô/\x9aL\x16\U0009b49eÍU(ñÄfÈ𫍪\U000518ce(\x8f*ñ\x9aÂ,\U000559c0\xa0\U000e3018\x03\x8c¯Hè`Z\x19_\x80\U000cbd64\x1a-b7|&ßî7*æÇÊl\U000ee085PA\x86´\x98CÕlO\U000f08c1\U0008b9fe;\U000f1a34\x1e\x88%\U000966df\U00010e4a\x80É𦯔\U0006c32c\U0001b5a7H~öÖ\x1a\x90\U00016414-vÀA\x99²B§3\x1e\x1a\U00081a93\x86û©\x93ÒøTW¾\U000f6d75yél\U00077cf2m\x00j\U000d0b05Qî¼\xad\U0009be3e\x90^ª\x98SâôÄ\U00056999ÕÅE\U0007d11d\x9cÐ\x05\x97\x7f\U000d8446𖽤\x9aÇ9\x9b좽¹ît\x9b\U0008cd14¤\x81f\x9d\x9aóOi\x8f\U000fc600^É¨ú\x98s\x7f\x15!\x12\x89G\U00076dca\x7f\U00012958\x0b\xa0íî\U000435bc\U000a081cd&ÿ«\U000aa8a4ç\næ\x83\U0008faac\U000471cfJ\U000b4e60vQÖñ"stÜ®e\x11\U000cb1c4\U0010d04d\U000cc429\x9e\U000e16a9d.\x94\U0009ae8fÆËï«\U00093097\'F蜗Ó\x0bdh¤ç\U000b81e4ø\U000cec74\x05\U00101154Ê\'\U000b9df4t®\x91B\x92\x88谭[µ»Ó"\U000fadb2E\t\x9f\x1bã𩲓\x08\x94±\x7fa«E$o\x99î\x9b\U00078165T\U000996b2\U00038284]\U00101e7eûþ5)D\U0009bb90KÂÃÏX£\U000fb295sI\x8fD4𧽿\x04\U0004d4b9[+RÅåø\x8a\U000f65bfè\x8d7\x0bêyÂE1~\tPÊã\x02§}\U000a91cf\x0f\U00106d8a±ò»V\x9f\U0010f512\x9d_û2Ó¨9\x9al\U000ca998û6\x88]\U0010d573\t0«ti\x84äï\U00073b76e\U000fdd5b\x9b!7\U00093896¸\U00104a7dË¶8e×\x84\U00106fe3Ê\x0e\x0cñ\U00013f9e\x01\U00092812»\x04\x80Î\x03¬Ã\U000b8c58Ã7\x89\x0euk딸-\x01\U00104727\x9ey@\U0007a84eþÍ4𗩑\U00055ab3\U00051d9eøÂ9í\U00108e2fQ8v\x1eÂ9\x9b\x9d\U00053d91C\x14\uefbaÝý\U000de23a\U0009ddcfþ{¼|E\U0002f18c\U0010f542\x19\x14Wô¹k\x82ÆJ\U000a13a5\U00046953\U000a4b93,W}£%\x99Î@Ü\x16\U00084701\U00092699\ueb5a𭬸û\U0008503að{°\x08\x85éqù\x18»f\x8aãÆG\x81Éõ|^t\x92䎑¦ü\x9aFã\x8e·\U00103c66ô\U000fdaed,/\x10ú\U000bb0d3\x9e\U001095d6à\U00038857\U00070746\x18OÒ𪔥å}|´È¿H\U000b17e1ZXù0\x16\x96\U0005e502x𩄇\U0001a135Ó\x82ÿß\x91\U000c6859\x8aꣷc;mÂi🔧@=¸2\x07·Ì0\x1a\x1eÞÄÀ5²þ¡\x0eԝôC\x0c\U00093cd4\U000e73bb\U000ebac5\U000e6da0\x064fu\x80\x04犈\x04j®Ñq5E(\x12õlb:\x0cb\xa0Ò\U00074637/a\U000aa3bf\x9447𫙎J\x8b\x81Z\U000edea2\U00099f9f\x99ÏP\U00056b44ÈSÙ\x7f\x0f\U00036027!pM`\U0004ce1d\x88ö\x9b»\'£Ì\U0004b91e©©\\𒇺$\x08î],Â\U00062a5cW\U000c4c30vp\U000cbe34¾\U000b642a\x0c\x17\x89eÄÛ\x8bÎ\U000d4211Iùfù«H\x11§c\U000a5e96\x8e³\x1a\U000f2c32\U000f56cbY\x13Ù\U0001ba06¤\U00049d25Ề\U00077ba0ßa\x00i6\x14p\r)ýfæÂä,{\U00064649<Þ\U0001abd4ë\U000f1d4c4=𡶢HYÓ\U0001fcf0e\x13Ñp\x81\x8b󠄷"ó[kË\x15¶~|W|\U00084b47*U×\U000e4cde\'ÑÄ`\U0004fd17Ù\r)\x03xdªÐ\x8c¯¼\U00085c98¸æ\\n³\U000a16df\x1eÞ{lã/º8\'\x04\x941\U000e3dc2\U000397c81\U00070c59\x112å𥵼\U0009b5ce^~°aù\x01🨧8"ï%@ú\U000c1105ù\U000908bf¨Ø\x11ÇS¹\U00092c27\x04ã\U0009531eÛ\x7fË\U00041402\x9bf\x02r\U000720c4x\x13\U000dd910¿¬\U000ef95a\U00106ef6\x8b\x06µ\x18\x80÷\x84\xad\x0cº\U0005ae3c>®ù±\x9d\n𦝯\U000b3b2c}CÍ«.¼\'\U000a352f|Q\xa0\x8c\U000f6a4e\U00061428\U000e7d08FÈWÅÞ\x9dìíH\x10EÞ\U00033d79<\U000f251dãü\U000b575bõ瓿\n\x85p\U000e3e9bC\nÆ ç\x13\U0006ad4a÷Îìí÷Ñ\U000a94eb\x031\x94\x8e\U0006788a\U0004fba1pc\U000c9a4c.m®Q9\x90\x00eØ\x12É\U00046069\U000a7a71\U000be4769\U00051450\U00050a37<\x1c}\x18lô\U00070733\x1eÑ\x90¡I¤ù{Y\x0c\x86u>\x83𰒥Å\U0008851b-\x191\x0b!õ\x04Õ\x8c8{\xad\xa0\U00058d8a¯%£\U000eae4f\U0010cb12ëúÐ\U0006b83b=\x9d\U000971ecæ\x91\x99\U000d9f2b]Jú𘉺¹ͫ\x88Â𧣕Á\x06òb=\x99\x90¡\U000a9368ÙøÁú\U000d4aa5\x93þÔË\U00083905+´ê&\U00083993\U000f8c42£\x16/$°𔗱ê\x9bxïÈ\x0eÈÎD\U000b5de7W𗜨\x1b¼\U000f9b04¯ÖùøÙè\x1f¥þ\U000d651dÇ\x1d\U000cdf3b\x15㽔f\x8e\t\x83\x98y£P»C\U00084e67\x87UM\x95\U00048c14¥?NF3\U000646490\U000a0d75©\U000d58b5·c!\U000e1e68aB²\x93ÜÀ\U0004f282\U000c7c2b\x15c³\U00012592T\x19\xa0\U0004c3a9Ööv\x07!zô\x9d:\x05j\U000f608e¨#\U000d33c0ÍLK~î}Uf\U000925e3ñÉIó\x88Èÿ\x8f-\U00045f87\x9d\'\U000cd1d1\x98Y(\x99Æïü]ç\x06ür\U00089d33\x11\x8aD×ö悊o\U0007343a𝡍\x93\U000bfdd7ìµuf𥙽4\U0010f677^Î^\U000afbd3¡\U000a0281(½g\U000da31e"`s\U000fc358\U00095060\x19;z×ü\x94𫷕á\xadÿ$ÜKÎ@\x0c\x97U\x16\U000e3c1b\U000d822f\x92\xad袗ü\x8a\n\nµ\U000bc1da\U0010f16fM\x81iö{R\U000d5bfd[\x95t0\x1f_ó³\x13\x82"ö\'&¢ô4\x87\U0003dc71Â\x7f½\U000ac0b1Ê\U00011e9að5\x9d|<懔𮮆:µ\x1f\x1b=±\x05È\x9b𗬏R\U0010948d\U00034ecc÷ö2\\ø\x13ß\U000dc7e5ëÄ\x03_[Í\x84Ö?1Ê\x17í\x071\x9b\x8b&aÜ\U0006c267\x95\U000ca0d6d`\U0010f8e4o\U000baceb\x14QMÏ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001832s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001608s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001588s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001639s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001836s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001911s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001939s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '', ''], 'password': '\U0003dcd59B\x83\U000c58ccö3\U00081b47gãv\U000b0207\U00036e44\U00037f81\x91\x04\x03뻸\x12\U0004667e牕eõ\x90]\U0005f5d4g/\x9f\x19\U000ff622\U00052ddc-\U0009b0c6\x97¢Ú\x91𩪦f.\U0010424bå𫖔\U000fb0cc\U000f33a4Q\xa0\x1e)¤Ø\U00082f25\U0007debdé»\U0004b6ce\U000d3da4Uõ\x0f\U0009f4e99|𝈵𞋍Ið\x15\U000af133Ó\U000bb66ckGi\x1açÒ\x0b\U0005ecbfrÇ\x8eü{\x10\U000ebe46\U000ba6f7\'Õa\U00106826\x90\x03S\U000be321&\U0010535cQ\x88\U0010d544n£$\x18É\x83!\rÿ\U000a8bcdr\U000cf3f1\x94Ü0\x84JHä\nv\U000c81a9\U000c0f9f𤑃l\x9c|\x12ð{T\x84\x8d+\U000f2a4d\U001067d1d^\x11eh"þ" \x0b\U000a8461\U00066e0c b\x84ð¯\x8béb5³\x8b¶E?i\x16£\x01\x06±ó¡Õ\x96~9\U000191cdaÑ° w³\x9dþVÂ\x87Ö\x8e\x04\U000b1553\U0003ccbdu\x99cß\x83P\x89\x97𧂣Ê§\x95/#Ð\r«M2´éûP\x97¾D𩷜KnüöÖ÷\'\x8eÃO[\x10U\x1exh\x10\U000fde3dk\U0006e1aeJ\x16Í\U00048ee9f\U00107784íL5\U00091bce\U0001e256d9¥ãgZ¶\U0003b2ef\U0001a8c7\x9c\x12\x00\U00038f20æª\x17\x04ws\x89\U000e1eab\x10\U000e5ff4\U00065aa5\x97\x00%\U0007925bä*\tT\U000a676b\U000f829e\x07Ð\U000e1fcc\x10\x97YL£LF·\x98\x02\U00043e73i»\U000d9a6e\x83\x96\U00105aea[µ§\xa0æk\x92Ãñ\U0005f39d𭮽\x19^¹Ô\xad\x0c\x04Ø\U000908b3n\xadÎ\U000cd09c\x9b\x8cM\U00090bdbÚ¤´\x1a\U000da48e\x1aÍÙ\x92\x8f\U0003c22cu«®á\U0007a14f\x02\U000b4687\U0008aad3í\U000769d0\U0006b5bc\x98T½t#\U000c151e\ts¬𣦂\U000f4eb1\r|\x19\U0008a619\x1e;\U000646a7k\U0009194e\x94\U00043861P\x91\xa0&¡8¾Ïoùôñ\U000e1ceeã\x17µ\x8a\x7f\U000489cf¥¶\U000fffb00\x91\U0003da2b\x80\x07ø£\U00066698ëµ\U000fd236³\x8e\x0eyjÐ\U000bd1ff\U000dfb56§\U000d89ca{\U00074c4d\x9fÌ]\U000a7d35\x11ì\U0005756f\U000b735e£\U00109067\U000b6cf2\x1aU\x17I|\U00037197Ó»©붅|\U000cc4eeG𡕃\x85A\U000cea8a\x1dfW\U0005d1afMßJ\U000fa1a1\x83êË»4\U00046adb笸-go\U0003826aæ\x9cv¦J¯\U00013f47ð§\U0006ddecz}f³t\U000a7364n®\U000fc904Ö{^qÄú\U0003bd2f\x83uÏªv^ A\U00071760¨Ä]\U0006cd7bSÊq¾Z\rO \x16ó\x16SZ\x03XÂøÄ\U000f10b1\x8c\x8e[5´òTù\x9fJ\x15\x14Á\U0006a786ù\x9a¡\x86{\U00104a6c]jÞ\U000f9b0eÐà\n\x19ï\U000c87be×\U000b5f8c\x97¯Ñ\U000cc1c5C@Þ\U00057093\x86\U0002ff47Ð7\x7fýycYx\x1dÒ¾rV=Ó\U000384ce\x94Ò´(\x9aáMÔåÉÏ;\U0008312f©5"ò>ZcÊúáÈ¿íÀø\x9frO\x1b6èÅ®\U000cfa71gA\U0003b6efyÒ\x1c\x14H\x9a{Nz\x8c\U000640fbê|«®.üù}yNÑ©ÉHÛíó¢\x0f\x81\xadû®öY÷\U000ab8d9ù{\U000b9582𰳅%Ô\U000f78acp-\x05\U000d7479@\x85BpÐ\x11ªGô5æßX\x11\U00072330ªGÄæß\x87\r°\x13\x97\x06?R\t\U000af708°\x8cV\x04\U00014151\x0e\x16§\x02Ä¿\U0005fdffÒ\x96Ô\U0010bb76\'°«\t\U00105742Ò\x13\U0004bc69ýg10W¸=ß\x02\U00106911\U000b26a6ö \U000dd1ed\x92S\x18\x17\x80鰮DÆeöD\n×\U000777c9\x9c\x8c鼧\U000c1e67\x83<ã:M»\U0009a589R\U000ab777\x92r\x83«r©9Gs\x7f\U000bde3cÞ\x08#)þ\'\U00088f93v\x82\x18\x7f\x18\x8f6\x89(s\x97Á\x89\U0001cc69 \x9btÍ\x19\U000f2c76AÙøCÙ屉\U000607c0è®\U00055839ùk\U000f89ba:$\U00100215sHmr\U00076399ß,y𣡭Ç\U00038819Z}\x82\x17\x00\U0008e5dd\x15\x071.\x9b)\U00090515â¥Ù\x94@?^+\x84\U0005090c\x17\U0006ee5a\U000fa80c4\x86°¡\u09ffÉ¬Ð\x10×Cks\x9a\x96\x90¦ª3𤍆1\x8d½\U0003ef44ßâ\x17q\U0005745f\U00107a0fÕµ;xº\U000e1b17ñ/S_¼⽦\U000fde7f\x80\U00069d4fzàò¢Û\x16\x00Ç\x93\x06à\U0004d4c1Ä,𦭻\U000d17aa¶zn\U0006a366`ã\U00088a8b\U000dd10eU\x92\x08\t#°\x82\x96\U000862ec\U00097d44KÙ¸¾\U0006ebbe\xa0æpd\x17𢖇𤢽\U00019795\x19É£Äû(£®z\x13£\x88eÔd\x99]´\U0007cd27D\U000f3f4el\U000114dd[\U000344bfn\U00054452¿ÃÃ?\U000d3e30\x16\x82*5\U0009ae60S\U001089d7\x1f÷\x8eßÛ\U00093d60\U00102446\U00094f91\x01\x8c\U000e6ead*r\U0006a03e`\tö\U0007b8afô\x95\x9c\x85?«O²´\U00048fba«\x06\U000835b4X¥\U00043be6Õ\U001080bf7\U00051903\U00031650Í\U000bfa7c\U00099019\x18½\U000d223fß\U0008463d諠¿/\x8e\U0007ae60ïv\U0001ea28À\U000ad0ee\x93þ\U00072b75\U000904efGÞ\x92ö[âÔú\U0007501eä\xa0)\x86ào\x8aÇ\x9f\x9d¦\U000c4e57ø]\x97ÌÈ\x86ödÊ¾\x93T,··BW¬q\U000e6adbJßÚñ<\U00080186è±\U000a2df4\U0008e161½ꐛå\x9b\\\U000b0199ê\x1d\x95PÕ¬³\x1dzoª\x0eÿ½\x86#\x1cFì½ªE>x¤\x1bwîï@>Ô\x94\U000ce9aa\x06\U00012deb}\U000457e98i\x08\U00014c7d?\U000c01afÍKU\x13\x1f\x86:æD\U0004a486\U00077c84ÿ\U000ec033\U00047259Î·\x06\U000f41d8\\𨸵\x13Û\x89x²\U00105b70¦¿\x966\U000e711c¼\x85\x97Ñ\U000fa03bî1\xa0ÿ\U00040f29z\x06\x88ý\x96ØPnJ\U0010be1c\nVÄ\x8a\x83\U0005e4da\U000d1f11\x87i;&\U0003d26c¤Iý#\x03'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002816s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001876s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['Ò', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', 'ïA\U00056601\U000dc71c\x00À \x13Ì\U00019ecc\rË\x7fè', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['Ò', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', 'ïA\U00056601\U000dc71c\x00À \x13Ì\U00019ecc\rË\x7fè', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002144s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['Ò', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', 'ïA\U00056601\U000dc71c\x00À \x13Ì\U00019ecc\rË\x7fè', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['Ò', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', 'ïA\U00056601\U000dc71c\x00À \x13Ì\U00019ecc\rË\x7fè', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001906s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', 'ïA\U00056601\U000dc71c\x00À \x13Ì\U00019ecc\rË\x7fè', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', 'ïA\U00056601\U000dc71c\x00À \x13Ì\U00019ecc\rË\x7fè', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001787s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', 'ïA\U00056601\U000dc71c\x00À \x13Ì\U00019ecc\rË\x7fè', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', 'ïA\U00056601\U000dc71c\x00À \x13Ì\U00019ecc\rË\x7fè', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001748s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', '', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', '', '²\x84\U00098d3eÐ-', '', '\U00102c39\U00035262m\x06', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002078s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', '', '\U00102c39\U00035262m\x06', '', '\U00102c39\U00035262m\x06', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', '', '\U00102c39\U00035262m\x06', '', '\U00102c39\U00035262m\x06', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001808s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', '', '\U00102c39\U00035262m\x06', '', '\U00102c39\U00035262m\x06', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['', '\x19¯', 'ºÁ¼\U00057c2d\U0007de93"', 'à\U0009d3ad', 'åq', '¶äø\U000c41b5Ò', '\x07\U000614c7\U0009c89d!', '\U000d0446\x9f', '', '\U00102c39\U00035262m\x06', '', '\U00102c39\U00035262m\x06', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001833s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "<script>alert('xss')</script>"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001749s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002022s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001695s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001846s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001703s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': '     '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001679s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002001s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001681s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002015s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001705s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['yð', 'ßÉM\x02a', '»', '\U0005c44c\U00100f13¬\x0e\x14\xa0', '', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['yð', 'ßÉM\x02a', '»', '\U0005c44c\U00100f13¬\x0e\x14\xa0', '', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001939s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67', '\x0e\x14\xa0', '', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67', '\x0e\x14\xa0', '', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001972s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67', '\x0e\x14\xa0', '', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67', '\x0e\x14\xa0', '', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001809s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67', '\x0e\x14\xa0', '', '']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67', '\x0e\x14\xa0', '', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001905s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001712s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67', 'yð', '\x16c^y']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['yð', 'ßÉM\x02a27𠨅5#=\x1f67', 'yð', '\x16c^y'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001814s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -27241, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -27241, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001766s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -27241, 'password': -3490}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -27241, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -3490, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001739s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -27241, 'password': -3490}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -27241, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -3490, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001759s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -27241, 'password': -27241}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -27241, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -27241, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 746, 'password': ['5À0ÄÂ¯´&èF', '\U00085b6f/', '\x18', '\x93\x8e', '\x83VÜdÊ\U000a0947xÌ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 746, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['5À0ÄÂ¯´&èF', '\U00085b6f/', '\x18', '\x93\x8e', '\x83VÜdÊ\U000a0947xÌ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002117s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 746, 'password': ['5À0ÄÂ¯´&èF', '\U00085b6f/', '\x18', '\x93\x8e', 'dVÜdÊ\U000a0947xÌ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 746, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['5À0ÄÂ¯´&èF', '\U00085b6f/', '\x18', '\x93\x8e', 'dVÜdÊ\U000a0947xÌ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001949s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 746, 'password': ['5À\x93ÄÂ¯´&èF', '\U00085b6f/', '\x18', '\x93\x8e', 'dVÜdÊ\U000a0947xÌ']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 746, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['5À\x93ÄÂ¯´&èF', '\U00085b6f/', '\x18', '\x93\x8e', 'dVÜdÊ\U000a0947xÌ'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002024s
====================================================================================================
2025-09-19 00:34:52 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '../../etc/passwd'}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001717s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -106, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -106, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00169s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -106, 'password': 37}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -106, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 37, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001747s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 23757056}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 23757056, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 23757056}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001831s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': True}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001708s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001902s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zw41@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001635s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'zw41@Q2MWg6NU26C.xr.a04.GFI4.x4x.N.tqQC.cL.HOSting', 'password': 'Ċ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001689s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fv0mSAakC0oq@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001627s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'fv0mSAakC0oq@g.M.vYAsPZOn6.B.PResS', 'password': 'Ģ®'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001612s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8G@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '8G@M.fKamG.x.kk.XN--imR513N', 'password': '𒎊\xa0I9b'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001592s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`P@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001689s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`P@I.fEdex', 'password': 'ôŀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001759s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'D@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001625s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'D@a.WZdIHhFNM3olgD.Z.gtN.JzRRQ2GEMods5.fr', 'password': '\U000ac62da'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002256s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'D@a.WZdIHhFNM3olgD.Z.gzRRQ2GEMods5.JzRRQ2GEMods5.fr', 'password': '\U000ac62da'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001786s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'D@a.WZdIHhFNM3olgD.Z.Z.JzRRQ2GEMods5.fr', 'password': '\U000ac62da'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001749s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'D@a.WZdIHhFNM3olgD.Z.Z.JzRRQ2GEMods5.fr', 'password': '\U000ac62da'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001716s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'D@a.WZdIGhFNM3olgD.Z.Z.JzRRQ2GEMods5.fr', 'password': '\U000ac62da'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001979s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'D@a.WZdIGhFNM3olgD.Z.Z.JzRRQ2GEMods3.fr', 'password': '\U000ac62da'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001735s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'D@a.WZdQGhFNM3olgD.Z.Z.JzRRQ2GEMods3.fr', 'password': '\U000ac62da'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001854s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'DAW@qkw.w.gE', 'password': '\U0010dafaÇĘ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0019s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'DDW@qkw.w.gE', 'password': '\U0010dafaÇĘ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00174s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'DDW@qkw.q.gE', 'password': '\U0010dafaÇĘ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001757s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'DDW@qkw.q.gE', 'password': '\U0010dafaÇÇ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001642s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'DDW@q.q.gE', 'password': '\U0010dafaÇÇ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001735s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'DDW@q.q.gE', 'password': '\U0010dafaÇÇÇU}\U0003382aĆ\U000ebcb0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001683s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'DDW@q.q.gE', 'password': '@\U00010dc7ÇÇU}\U0003382aĆ\U000ebcb0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001711s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'k^Ri@z.S.n.GRaphICS', 'password': 'K±U'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002023s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'k^Ri@n.S.n.GRaphICS', 'password': 'K±U'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001803s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'k^Ri@n.S.n.GRaphICS', 'password': 'K±3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001698s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'k^Ri@n.n.n.GRaphICS', 'password': 'K±3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001668s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'k^Ri@n.n.n.GRapHICS', 'password': 'K±3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001672s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'k^Ri@n.n.n.GRaPHICS', 'password': 'K±3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001702s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'k^Ri@n.n.n.GraPHICS', 'password': 'K±3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001959s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@T1L8.X.IStanbuL', 'password': '=ě'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00171s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@TLL8.X.IStanbuL', 'password': '=ě'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001689s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@TLL8.TLL8.IStanbuL', 'password': '=ě'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001675s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@TLL8.TLL8.ISTanbuL', 'password': '=ě'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001721s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@m0J60INA.Ku.M8ARqa.F.grATis', 'password': '·©×s\U000c5abc]TygĵÖ쀵\U0009e9bcć¡ćfã\U000c825at'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001844s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@m0J60INA.Ku.M8ARqa.M8ARqa.grATis', 'password': '·©×s\U000c5abc]TygĵÖ쀵\U0009e9bcć¡ćfã\U000c825at'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001943s
====================================================================================================
2025-09-19 00:34:53 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@m0J60INA.m0J60INA.M8ARqa.M8ARqa.grATis', 'password': '·©×s\U000c5abc]TygĵÖ쀵\U0009e9bcć¡ćfã\U000c825at'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002077s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@m0J60INA.m0J00INA.M8ARqa.M8ARqa.grATis', 'password': '·©×s\U000c5abc]TygĵÖ쀵\U0009e9bcć¡ćfã\U000c825at'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001697s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@m0J60INA.m0J00INA.M8ARqa.m0J00INA.grATis', 'password': '·©×s\U000c5abc]TygĵÖ쀵\U0009e9bcć¡ćfã\U000c825at'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002095s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@m0J60INA.m0J00INA.M8ARqa.m0J00INA.grAtis', 'password': '·©×s\U000c5abc]TygĵÖ쀵\U0009e9bcć¡ćfã\U000c825at'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001672s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l@m0J60INA.m0J00INA.M8ARqa.m0J00I0A.grAtis', 'password': '·©×s\U000c5abc]TygĵÖ쀵\U0009e9bcć¡ćfã\U000c825at'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001997s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '^gB1=@l.Xn--mGBX4cd0AB', 'password': 'J'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001929s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '^gB1=@l.Xn--mGBX4cD0AB', 'password': 'J'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001712s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=gB1=@l.Xn--mGBX4cD0AB', 'password': 'J'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001511s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=gB1=@l.Xn--mGBX4CD0AB', 'password': 'J'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001659s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=gB1=@l.Xn--mGBX4Cd0AB', 'password': 'J'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001557s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=gB1=@l.Xn--mGBX4Cd0AB', 'password': 'JÎ¸eðÞ¹'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002031s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=gB1=@l.Xn--mGBX4Cd0AB', 'password': 'JÎ¸eðÞ¹'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00172s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`4bKV2gWyb@aO.CeNteR', 'password': 'ĈÜ\U000738ddÉ\U000a114e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001803s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`4bKV2gWyg@aO.CeNteR', 'password': 'ĈÜ\U000738ddÉ\U000a114e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001739s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`4bKV2gWyg@aO.CeNteR', 'password': 'ĈÉ\U000738ddÉ\U000a114e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001878s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`4bKV2gWyg@B.CeNteR', 'password': '1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00162s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`4bKV2gWyg@B1.CeNteR', 'password': 'İíİ/9ęġı'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001716s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`4bKV2gWyg@B1.ceNteR', 'password': 'İíİ/9ęġı'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001705s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '`4bKV2gWyg@B1.ceNteR', 'password': 'İíİ/9ęġı'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001828s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'dt}-0k@bYT7.TiCOVny3Fn7X.s.viG', 'password': '\U000d65b0÷\U00061d98&ÃĴ\U000d08d16åĮÝ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001805s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'dt}-0k@bYT7.TiCOVny3Fn7X.s.viG', 'password': '\U000d65b0÷\U00061d98&Ã1\U000d08d16åĮÝ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001816s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'dt}-0k@bYT7.TiCOVny3Fn7X.s.viG', 'password': '\U000d65b0÷\U00061d98&Ã1\U000d08d16åĮÝ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002313s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'dt}-0k@bYTX.TiCOVny3Fn7X.s.viG', 'password': '\U000d65b0÷\U00061d98&Ã1\U000d08d16åĮÝ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001801s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'dt}-0k@bYTX.biCOVny3Fn7X.s.viG', 'password': '\U000d65b0÷\U00061d98&Ã1\U000d08d16åĮÝ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002154s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'dt}-0k@bYTX.biCOVnV3Fn7X.s.viG', 'password': '\U000d65b0÷\U00061d98&Ã1\U000d08d16åĮÝ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001765s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'dt}-0k@bYTX.bYTX.s.viG', 'password': '\U000d65b0÷\U00061d98&Ã1\U000d08d16åĮÝ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001771s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'NA-ieZ3rmAz@d.lIPSy', 'password': 'E\U0008e333w\U000480f1\U0003f4e2\U000bf10b\U0006940bÈģYĥðB'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001766s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'NA-ieZ3rm3z@d.lIPSy', 'password': 'E\U0008e333w\U000480f1\U0003f4e2\U000bf10b\U0006940bÈģYĥðB'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001714s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'NA-ieZ3rm3z@d.lIPSy', 'password': 'E\U0008e333w\U000480f1\U0003f4e2\U00090a48D'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001711s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'NA-ieZ3rm3z@d.lIPSy', 'password': 'E\U0008e333w\U000480f1\U0003f4e2\U00090a48D\U00046328Ĳ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001756s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'NA-ieZ3mm3z@d.lIPSy', 'password': 'E\U0008e333w\U000480f1\U0003f4e2\U00090a48D\U00046328Ĳ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'NA3ieZ3mm3z@d.lIPSy', 'password': 'E\U0008e333w\U000480f1\U0003f4e2\U00090a48D\U00046328Ĳ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001737s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'NA3ieZ3mm3z@d.liPSy', 'password': 'E\U0008e333w\U000480f1\U0003f4e2\U00090a48D\U00046328Ĳ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001663s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=@hYl.SHAngRilA', 'password': '¤ă'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001739s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0{10@B0.aIG', 'password': '1601>'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001789s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0{10@C.B.B0.aIG', 'password': '\U00060f4f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001874s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0{00@C.B.B0.aIG', 'password': '\U00060f4f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001707s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0{00@C.B0.B0.aIG', 'password': '\U00060f4f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001726s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@A001.Aig', 'password': 'Ł00\U00060f4f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001602s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@A0.A.Aig', 'password': '10'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001725s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%m+JOo5@s.LanD', 'password': 'K'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001592s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%m+JOo5@s.LanD', 'password': 'KJÝ\U000ada5f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001726s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%m+JOo5@s.LanD', 'password': 'KJÝ\U000ada5fJ¯úp'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001717s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%m+JOo5@s.LanD', 'password': 'KJÝ\U000ada5f1¯úp'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002134s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%m+JOo5@s.LanD', 'password': 'KJÝ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00241s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%m+JOo5@s.LanD', 'password': 'KJ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001918s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%m+JOo5Of0@a5.B.aNz', 'password': '\U0003480f\U0007ad5dÞI\U00087ecc'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001704s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'v79Nw_9_PwpOqF^}@R.vOTO', 'password': '4ĉĮÇĔ§\U0005057f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001674s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0v79Nw_9_PwpOqF^}@R.vOTO', 'password': '4ĉĮÇĔ§\U0005057f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0v@ZGk7I.I.G.b.YAMaXun', 'password': '𐩁ł5'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001563s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0v@ZGk7I.I.G.b.YAMaXun', 'password': '𐩁ł10hĈ\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002136s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0v@IGk7I.I.G.b.YAMaXun', 'password': '𐩁ł10hĈ\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001883s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0v@IGk7I.I.G.I.YAMaXun', 'password': '𐩁ł10hĈ\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001839s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0v@I.G.I.YAMaXun', 'password': '𐩂'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00167s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'o@v6n7S.eS.t.DOWnLOad', 'password': 'ëÑJ\U000bbc80į\U001083baºŀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001732s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'o@v6n7S.eS.A0.AnZ', 'password': 'ëÑJ\U000bbc80į\U001083baºŀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00218s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'o@v6n7S.eS.v6n7S.AnZ', 'password': 'ëÑJ\U000bbc80į\U001083baºŀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001674s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'o@v6n7S.e6n7S.v6n7S.AnZ', 'password': 'ëÑJ\U000bbc80į\U001083baºŀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001924s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@v6n7S.e6n7S.v6n7S.AnZ', 'password': 'ëÑJ\U000bbc80į\U001083baºŀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001854s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '1@v6n7S.e6n7S.M0016n7S.aL', 'password': 'ëÑJ\U000bbc80į\U001083baºŀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001714s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '1@v6n7S.e6n7S.M0016n7S.aL', 'password': 'ëÑJ\U000bbc80į\U001083baºŀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001798s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Jnu-g/%@e1Tl.Icl46.X.o.xN--Q7Ce6A', 'password': 'ĖÀ\U0005c6c4čð\U000eded9d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001745s
====================================================================================================
2025-09-19 00:34:54 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Jnu-g/%@e.Icl46.X.o.xN--Q7Ce6A', 'password': '00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001817s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002134s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_u'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001875s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x92\x81'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00152s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x19$\U000f3b32ä\x00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001523s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x15'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001663s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000384cc\U000e4cebi\U000ed67f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001642s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ï\x0fß\x8a±'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001767s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001756s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000ab73bÉ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001764s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_§\x96'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001762s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x87wÉÉÑ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001705s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_YÍ\x87'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001745s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_YÍ\x87Í'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002211s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_YÍ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001514s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÍÍ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001631s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÍÍ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÍÍÍÔ\U0009ce92'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001853s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÍÍÍÔ\U0009ce92'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001701s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q^𦞧Ê'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001683s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q^ADC'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001791s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q^^DC'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001673s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_QC^DC'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001707s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Q'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001762s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_©\r\x8b½:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001835s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_©\r\x8b½:'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001946s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_쿡Ç\U000bf477\x0bÉ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001575s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_3Ç\U000bf477\x0bÉ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001599s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_3Ç\U000bf477ÉÉ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001594s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_3Ç\U000bf477'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001638s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_3ÇÇ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00179s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_젃ÇÇ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001876s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_젃젃Ç'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001665s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Môsüþ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00174s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_üôsüþ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001654s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_sôsüþ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001728s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_süsüþ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001676s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_süüüþ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001617s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_süüüü'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001769s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_süüüü'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001533s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ñ\U0005bf05'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ñ\U000c2c6e\x12Æ@'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001866s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ñ\U000c2c6e<3Æ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001773s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ñ\U000c2c6e<1Æ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001771s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ñ𰨂'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001838s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ñ𑨀'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001712s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ñ\U000509b5'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001644s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000bb020\U0008b603ç'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000bb020'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001673s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000bb020r§\U000fdbb3\U000aedca'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001748s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000bb020r§\U000fdbb3狚'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001697s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰀'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001659s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰀¹ìÇ&'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001637s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰀¹ìÇ&'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001596s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ú\x8b¢\x83𨟅'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00164s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_43\x8b¢\x83'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00188s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_43\x8b¢\x83'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001704s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_4\x8b\x8b¢\x83'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_40\x8b¢\x83'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001665s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_40\x8b¢4'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001672s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001679s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Qì.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001626s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_.ì.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001621s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_...'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001846s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_.1.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001706s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_.𐰁0\U000fa89e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001325s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_.𐰁0\U000fa89e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001666s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0a0110\U000fa89e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001721s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': "test_password_\x82f'Ì"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001703s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8211'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001776s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x82\x821'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001668s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_23du\x1e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001727s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_23d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001727s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_23'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001686s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_33'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001312s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_g½\uf1e6\U0003e18a𬂱'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001919s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_g½\uf1e6\U0003e18a𬂱'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001687s
====================================================================================================
2025-09-19 00:34:55 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_g½\uf1e63'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001596s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_g½0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001678s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_g00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002019s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_g00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001719s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_g000'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001754s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ð\x9c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001706s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ÐÐ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001754s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ð\U001009f5\U0010555c'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001537s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𑤀1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𑤀1\x03Ww'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001662s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𑤀1\x03\x03w'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00163s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𑤀1\x03\x03w'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001639s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x06\x06'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002079s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰃¼'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001767s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰃'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00171s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰃𰰃\U00043f2a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00169s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰃𰰃\U00043f2a\U00043f2aò'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001569s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰃𰰃$$2'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00159s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𰰃𰰃$𰰃2'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001554s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_&Î\U00093b3b7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001697s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_&Î𑈲7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001539s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_&7𑈲7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001657s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_&7𑈲77'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002122s
====================================================================================================
2025-09-19 00:34:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_&7𑈲71'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001765s
====================================================================================================
2025-09-19 00:37:56 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginAPI 登录
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': '123456'}
✅ <Response>
     Response Body: {'ret_code': 0, 'message': '登录成功', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhb21ha2VyIiwiZXhwIjoxNzU4MjQ0MDc2fQ.TjQ693EXUSJ5uUnXX9f_ZDoyFqoK2lzJrupt_EtRhRA', 'token_type': 'bearer', 'expires_in': 1800}}
     Elapsed: 0.002586s
====================================================================================================
2025-09-19 00:37:56 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "integer",
        "null"
      ],
      "new_value": "integer"
    },
    "root['properties']['message']['type']": {
      "old_type": "list",
      "new_type": "JsonType",
      "old_value": [
        "string",
        "null"
      ],
      "new_value": "string"
    }
  },
  "dictionary_item_removed": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:37:56 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002602s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[api_object.get_diff:276]-[WARNING]:[SchemaDiff] 模型<TokenResponseData> 发生变化：
 {
  "type_changes": {
    "root['properties']['ret_code']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "integer",
      "new_value": [
        "integer",
        "null"
      ]
    },
    "root['properties']['message']['type']": {
      "old_type": "str",
      "new_type": "list",
      "old_value": "string",
      "new_value": [
        "string",
        "null"
      ]
    }
  },
  "dictionary_item_added": [
    "root['properties']['detail']"
  ]
}
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[api_object.update_schema_if_needed:291]-[INFO]:[SchemaDiff] 模型<TokenResponseData> ，已更新schema缓存
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001914s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\x8a\U0009b082\U0010bb6c㾀²«\U000cdc63s¹6L·kÉÿèGs\x0fÑ\x9b\U000bb68b퀨\x9búÓ\x13\x1c𪂽8Ì=$\U00108c11ß\x9c\U000d388f\x06\x12\U00067dba\U00101070\x87&\U0003575bc£â9\x84ÁìÑßÑ{\U000e21c9¡õ÷\U000f7c09\U000bf975Í·\x08M¯»·\x8e\uf09b\x98Ò\x9b\U000dfba2\x1d\x15@F¨f\U0008c831歱Z$\U00082e64§A\x92\U0005bc15\U0001597b\x18\x9aa\U0010d447𰛁¦\x86\U000eca25ºX\U000fb000/\x8b9\x83ÏØ\U000441eb\U000b0579Ó\U00036177Û¿\x97õ\x17\U000592a4 qw¯è\x05\x18\U000d2ec5\U000be5a8!Ì褓\x84À璀\U00071e53$T¶\U000ca181H\x00ÖR\x1c²%yꖬÆ\U000a0ecb\x84%±+\U00083234\U000faee4\x10E\x84jÞ\U000f9c62\x18\U00063bf2/iy."2ç\U000a2fee3¥b»d\x0f+Áí\U0007650a¯ð~n\x00 \x14H^\x84N®\xad\U000dd352°«uu犖ô\U0003362c\U000ef10b7k\x83䚈\U001039e0\U00033ea5\U00059d63}\x07\U00073977kÛò\U000b5dd5\x96\U00061300ó\U000d19ed\x14\U0001b148at\x82ûº\U0009f2ef§~\x91\x0b.V\x88M\x90\U000ea4aa\U0007b9ccÿ-\U00081127ÿ$𔒉¿\U000d9de928\U0006d507¬éÃfæ\U000dcee0c\U000f8d2f\x02\U0001e977ßï\U0004dd1aº\x10´)\U0008fc7c\U000b9b38Ó G³uá\U00073d3f\x94\U000ec551<\x88\x11ê&\U000c5572Ô@ìø×¡\U000c090b\x01âA³\x8c·^^¢|³`\x94¶I9𢹺rôÚ\x86¢\U000615f8Y\x10÷Xô\x87Þi¿𡲆ä&\U0007a37c\U0009aeec\x1cìv\U0005d643pC\U0004d140p\x18\U00108b60þÞ¨?û$`L\x01\U00100b66¹å4ú\x97𠚭}Ü\x8a\U000fea46êÓ\x93\U000bd2e4/hæ\x10ì\U0010cd98È\x89𘮝\U0002ec50<×xꮒS\x11W»V\x8eþoRl*Ý\x98\x07𡮣\x88\x9e\U00060a1b\x19\U00015849ö\nWúÿ[I\U0004bce2Þ\\\x05o,\U000a3bd4$Ú\U0005d3b3n\U000917c6A\U000dabef4Ð𣒼\x8c\x0f\U0010bdc8\x08×uy\x01=¯¶[DÌ\x81\U000a95a3\x19\x96\U00072eadÕ\x0eî¼Ï{3¢\x1dã`^𒀱\x8bLª\x02¿㉟õÞ\U000d789fFÊÚT»ä\x12pK8¡?I\U000e10f7{~\x8c¨+\U000333f2\U00010f96ÖÕ\x18µET\x82ôi\x87\x0fëvaä\U00046f25_Ý\x15çÒ«g¨$Þ\x03\U000851b2@oK\x11#Ý\x12ä²âß"j\U0002fc2bºÀ;FU0QfJäz\x0fÃ\x08Ù£\x10\x90\x00S\x8d\x85\x15ý\x9cAÿ\U000e80b2\x9b=EºÖ\x853\U00099f3eþ¤\U0007136c\x8bý_#²_\x14\x05ñ\x99Ø\x8f¸löî\x1bJ\U0009dab2ÑË\U0008f404\U000594b3\x04Èû^qpÂ\U0007ce22\x93^a𠙙ì¬«\x16o\x89\U0004eabb\U000ba34e\x94\t\U0009ac25\U000fd8d6\U00045f5eÝd\U000f5443´𮭄þ|\U000385b9\U000eb25a´á\uf44aw\x05òål\x8bÅ\x1cPþe\U00012cdb«\x98\U00064afc\x06\U000828c2JH\r/4\x13\U000d4d84\U000c1318+íGµ𢪓ÇâA\U0005e80fý𪛇0]ì\x15\x84\x85\U000bc80e\x1c떼3\U000dfc66\U000be30f\x98.H§ÄR\x1b\U00069f4a\x80\U000b29fd³;.QÖÂ:\x81B\x01\x10-\U000a510d\x87Ð\uf040ü\x0e\x8b\U000b23c8+`û+\U000618a8\x19¼\x0b´uA\U000576e7ñØ\x11\x00\U000a2c1b\x0c¹g\x8ar\U0003b35b\x16ï4o\U000fa12aàÝj\x92\U000be477\x18\U000d568fÜ\x1dx\x16\x8d\x88`ä~\x00su\U000f2aaeÀ\U000983e2𫻽-F\x96\x1ca\x8aN\r,𱀇ÕÉ&\x1d\U00012ddfÇï2\U0008e35a\rÒ(î\U000e6577\'\x10\x1d\U000c66a2A«\U00100054\U000df876\x147ôý\U0008a85f]ÀÎ!Ý\x90Mu\x1b\x9bÛå[ï\U000d4106éÜH\x98èÚc\U0003ff07\U000c64e9\U000a7c7fzo¸\x07颋[#\x95\U000d9511!¦®ñ·áG\x9a\x12õlÙ~n;\x01Û\x0fúh¸Õ\U0010d546v¬¼¹\U000f4b48\U000a01a8Ã\U000d3622\U00095a6c\U00102c42\x7f+Ý\x1b\t$±\U00033824+9𥷤\x117=\x93-\U0003f288\U0009fbcb8^\x98\xadPH¹!\x14²XQ\U000a132b\U000b4e30\U0005e520G¸\U000a8d43§\U0005aafbæ+é\x12\U0010d4a2Õæh쀊¥{Í~¥\U000fbdc5\U000f398b±£\x0b\x81\x9b\U0006238cÎ\x81ë¯\U00054060Þã\U000ad7a9ß\x10\U00104b46B¸\U000f1d6e\x85pµH쏼\U0003c4e2Ä\x0c\x11\x83\U00045f61*\x8e\tþ4R\nÎlÊ+-º\U001027b3\U000bbc0af_Nk\x9c\x97<\'2Ø\xa0ñT\x84»kHÊ¿\U0009ec68큹\x91[\U0006843dKÇ0\x1fÔtO\nö\x91\U0008c8cd\x8f\U000dd327êdu\x84M©\U000df2a5\U000c139e\x1e\U000bb1d5\x92\x88\x02\x06¿\U000bf15d¶\rØ½ÖV\x9c\U000de070\x0f}_{ëñ\x80eÃÊ%¸BÈ"m\U0007a208"FQ±Q\x92\U00102671\U000b30a8ð¼fpå\U0005c1d7ô\ue846ÒÎ\x9e\x1a¬\x93Z\x17\U0009007b?Í\x8eÞ\U00084109\U00061f80Ó\x87G\x98Ú\x7f\\Xï\U000a5f14C\U0004dc53·\U000ea72e\x91\n4H\U000f95d0\xa0%ïD4Æy§5\x1f¹&\x7f\U00100f86\x82\x9e´\x13{\U0001a50f«£\U00099ae7¶\x01\x1cÁgë\x8ec\x0c@\x07¶\x15\x98|\x1f\\#\x86\x94s괈\x97\x06,Ò\x93Î.\U0006248eè\x84E¿ªl\U00032ff4G\x95´>çÙì_]ÏÍ좶#7\U0003770bÒò\U000dd9e5\x13õ\U0006bd41\U0008b6d1\x10Ò¢Õå»\U000a4775\x1am\x10\U00052ef8Pc*\U0010f06d\U000b6f86{]\x86u\x8b\U000e6e9c2[OÁ\U0003873eI\x0f®*Çéc!\x0c\U000b6604?\x9a8\U000adcdbMDh\U000e928c\U000f7757\U00099170\U00059458\\\xa0¼é\x0f?\U000a379f@½1\x07vYy7*;/[ê\U00076dc9ôoc\U00065c7c訽¾ªÚ\U000dce92·\U000b1ff0\U0007822eÉ¶rÛ\x8c\x06¢¦áT{¼ðﯥ8\x10eÎ´\U0009b37b\U0004467e¬\x91gÄóÝJéc\x06õeå\U0010e74d\x19y\x19þ·á>»s2ç\U0007e4ff\x80A½W\U000b9246ÏA\U000a2226\U0005c41b\x12<\x84\U0004c1b7t\x7f\'ö\U000b255d\x90J\U000b052aèU)\\_¿o±õÄ\U00046af7\x08»Ï\x96ß\x05\x07o£¹\x19<î¼\U000dcf89yÍ\x0e\x02S\x84ß\x9cH\U001090d7\U00101e45¨(\x07ª\U0001b374=qỽ®M\x07R\U000be44c\U000e6032\x01êvÉ\U000c5435\x1fÇ\x85B$O¦ò\U0004df73\x88\x94\x10$\x9d\x94KBÓ\x12\xadA\x92\U0004fe65Ñ\x97E', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001793s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001833s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001774s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001696s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "<script>alert('xss')</script>", 'password': -28046}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -28046, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002044s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': False}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001908s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': True}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001846s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': ''}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002067s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 0}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002164s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 125, 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 125, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002006s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 189}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 189, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001767s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001772s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': '   '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001717s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '   ', 'password': '  '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001627s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001735s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ['']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001744s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '', '1', ''], 'password': ['']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '', '1', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001745s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '', '1', ''], 'password': ['']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '', '1', ''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001845s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [''], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': ['']}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001941s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U00045e54Æf\x8a³8;\U000b99b7D@\x0bL\x9f\x96þx\U0001ab96/Vºp\xad\x9cfÿ\x1f\x0e\U000bd99bäGANT¡.§\x1c\x13~;ÕB\U0001b8a0\U00058531}l\U0004af9c@ÏTê\U0001e4e2i\U000bd038\U0006709020\x1a_gMM3L¼≪_ñ\xa0-Ô-2É\U000b29b0\x9b\x9d§Q\x04𐂺M\U000e7f0f¢\U0003f2e1鑕Î\U0004fad5B¯HÓ7\U000f5810Ç(¯®𘠞ÎçÝ\x18\x1a\U000b9ef3yÔ𦒂Ùù\U000d8e5asÛ»6\x90\x9b:»ió\x05c\x9e𡐃\U000e1688N&𰰔ç\x1c\x83\U000e0b7cU\x96\U000dab1f\U000bff56ýø\x1f8éÐ\x8aÝÝ\U00012898𪶌\U0008c077ü遷\x11\x15\U000773f4\x8fsº𡍋6Qî\U0008db63\U000a85d7\U000d3996\U0009cef9®\U0009aff7?P²\x01|\U000aca29\U0009fa83o\U000744f9\U00061d41ÿ\x94ð\x05ÚÙ¦\x7f\U000bbb72\x1a\U000d8da0Ú𩤬R\U0003da65Y01C}\x1e\U00063492}´®\x00±x~&*LVµ\x1dauéÃô\U0001fa77\U000894af?áÓ\x9b\x92*𡌞ÄY*±ª\x14\U000bc71a\x00ô\x031ÊP$\x05ì\U000d3f52Q9w\x15ë\x88\U000f87ea\x80𬆋ÔL\x9c`\U0010cbc8~ß\x8a\x07ÎAâ\x11\x07:ïE\x14B4½we?R\U0010040b\r\U00090d6e\U00063d01ÏÙXÅ\x1bSÍ\U000672b3\x9a\x1dmA\U000113a6\U000c22d5r\U000c77a3\x9aEÈ\U000d6820Âþ`\x0c\U0005fcfcó\U00060d01\x88q\x9b\x81CR~Â÷\x08\x86©Ð[T\x14\U00036af1çÍ\U00094a09\x1a\U000bc1fd»\U000b405e\U000f9201<\x11i\U0010e6ac\x9e\x97w\x9fªÆ\U000abbddxþ\U0004f2beÊ§¹éì\U001045b5\U000b29e3t\x81"\U000ff3da9Ê\x10×@¶@Ué\U0004d31f¡óÝ@ö䠂î7ú]\U0005348a×0𡬉¯{«\U000d5247ã\U00040766藺KÁr\x89\U000af24d5\x9ag¬\'¤Ë\U000425c0÷ò(ö\x98\U000bfaef\x08\r龻P8\x9f¬\xad¥\x8fÚ?\U0008150fZ\x16~\U000369eb§H\U000b11cföM\x18ao\x13\x83i\U00075356ê\U0009f3ad\x1d\x7f]yÍ\U000c8399\U00041193\x10\U000b71cf\U00069eb2Fp\x856Ý;ºE£Ø\U000b2f85ÞIÍ\U00091ae0𰽵V\x97Ûç\U0009dc51ÀøÒ\x8f\U000f83b0ÉÏ\x95Ô|0§Lp\U00068fe9&,v𨪇µØêê:\x16}Jy\x1eÆ\U00087479Ï\x0e0\x07\U00079f62\x85ý\x05¤3_A¼ï\U0004ba87ï\x9aÈ»\'(cÓ\x1f]Ò\U000716a3\x90哨@\x93\x12þ\\\x1c\U00065684@ìÛÞÄ\U00065e28Ôg,qhÊ£\x90\x94\U000b2bc1ÜßJ¼Â\x10¢\x11\xadvÿ\x1d)\U000e6812/iE\U00061873¾ꉴ\x0b_RÔ\x8a\U000f8730Æ®8n\x9d÷Ú9éÚó\x1e\x00!\U000e9a65½\x80\x1fLU\U00045d0d\U00061456+óØ!Z\x95:\x93é·\x14\x1c\x96ËJ¦\x84.uÌ¶nö\U000ac7daÓÞýÂ\xa0\\迎m\x81¶ßL\x9dÀ9è\x9c\x8d\x14\U00046e9fùÔ\x14êðO+\U000f8c71xL,a\U00108c539Í®\x8dE¦â6\U000c87f0ê©Ãab\x1b\U0008547d@\x1fÏ콷>\x8bo\U00062513G\x88.\x18Å\x11\x83\x80\x8b\U0004e89dõ\x10.Ã\U00032741ââîÑ\U000c9eca¶\U0001ab54ýÚ\x17\x9bÞ\U0003d07d\x14\x12\x98\U000b86e8\x0fá¬¢댜\U00034688°´|\x9f\U0008d766ç¹ÐÑ1\x87H&B\x92oÌ÷ X\U00057ab3§\x8b\x04÷º\x19\U000e3617ê_í\U0003c84e\x00Là\U0001dd06ÏvI¹#6\U0008b8cdÿZ@\x90Ñ\U000ea1d40ÿ;\U000c031bcüø\x1a\x94éÝA\x0fÒä2ú+?`Õ\U0006cfd1\x88\U001059beqpÇ\x08\x9f\x01)\x14Û𧉪gá\x17¼\x1cF𢷭\U00091cd4Jâ~\U00039a0aôô\U00034de6\U000929a7{\xad𞲈þâväô\U000f01d6\U000dd9cdc «Äº¬\x933T\U000b0242-\U00067fcdm\U0004ec9fß\U000f9aeeçÊp\U000c4c4a\x89\U0005fc07G\x0c\U000584a9\x92ÕX!*¸Èg\n´ËN\U000ce3eeº\U0009ba9d\x05\U00019a15\U0008bc55Â\x9b\U000f98d3\U00056973\U000b178d\x82æ<\x0b\U0006805c·\x8c\x03OV\x87/;\U000a7ad0\\\x99\x07y\x11ð\U00107516üåî;\U0009192a\U00062b85s\x18\x848\x8f\U001025fe9ê¾«\x89\x0c©\x7f\U00032ee1\x85ø_\U0001ea51\x9e:áÚu\x92èÎ𨶂i\U000c9fffé\x0f\U000924a8dA\x17G\U0007b48d\U000ba4e8Ö»\U0006236f$¿\U000eb181°n\x9dh\x8cTL°;\U0007d6dfíA#\x91\x9bòÉ\x1cíõ2\x15\t\xa0\U000db710\x9cJà\t<\U00045e5c¨³\U000fd88fW´6\x00¹𥌪\x00u\U000e569e¼\U0006f946\U000a8738ú\x07Dël\x7f\x07\U0004ba2fD\x85ïL\x05xf\U000afa77\U0002fade\U000956a0\U000dc3b9´\U000e14e8·U,\x18¨4\U000738d0ÿ¬§\U00050cd0%G\U000d9ccc\U000f1c83\x1c\U0005847a\x93Y;!üXòl\x08\U00033497䬴\tÒyæ\U0001c763\U0007b305;\U000b3aff|#[T\'¤\U000a61e4)Ë\U00105a47\U00095ece\x7f', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002231s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001856s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': []}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.002028s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': ['\U00059d60', '\U0009aedd½QhóãD\U00056186쒆T&', '', '77ÊwA', '\x8fMW']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00059d60', '\U0009aedd½QhóãD\U00056186쒆T&', '', '77ÊwA', '\x8fMW'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001824s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': ['\U00059d60', '\U0009aedd½QhóãD\U00056186쒆T&', '', '77ÊwA', '\x8fMW']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['\U00059d60', '\U0009aedd½QhóãD\U00056186쒆T&', '', '77ÊwA', '\x8fMW'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002377s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002202s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001709s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001646s
====================================================================================================
2025-09-19 00:37:57 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --", 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00181s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': "' OR '1'='1' --"}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001815s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '𨔾Ô,f\U0004d130Ð\U000cf844ð\x92Ò\r\x15ö\x89\x08$9\U00032a31\U0006b5d3U\\\x1aI5\x8a\U00073187ÝÇ\U000b9387\x91}\U0007a020÷,𬚋\U000e0514,\tzo\U000ab337p¢\x9b²>:ë\x9e¼á×\U00041490\U000a4756\x1dÏ\x84𭡱ü\x17\x1b_\x83\U000985cf㗳6\U000ced05\x084FÚ\x9cà\x1cV×·\x9f%û鴓cèÀ\U000e5270\U00094796𥱭e\x8f\x0b´ö}öU\x7ff\x81×Ú\U000d260fnM\U0001a4c8\x99÷\U0003e012Ì¶\U0006509a\x86H¨\x1eìÜ°\U0007f0e0)Ü`\x0f´\x94\U000e22b3M\x1bE¹¸*){òêE¾\x1e¨+1\x03\x89¥¶¾\x96´9𑲃ÿ\U000d3174°僙m]Ô\U000e694bZé\x17hZå\x11\x91^\U000807f2\x00K"\x1fYü\U0007bc41\x9bÌ\U0010b7b7¶¬`\x8c\x9b3ò#\U00060e57(Õ5«\U00045840\x83ô\U000847ba\x85¤\U000c108c=\x90-[\x9c\'\x84\x0c\U000dcd6aZÄt\x0bñ´p\U0003b73c\U00083c9cõ¸\U00055e38\U000d5f2eÀ\t\U000eb4f8¢h\U0003d7d3\U000810a8ÿ\'Å{Ågê\x12Ã%Íbá£÷!]À\x9f\x1aÑ¿\x16kºSã¦Év\x97J\x17ò\x93H\x14¨\U0006e6de\U0006df2e\x84WÕãs\x9e}\U00098b9e³\U0004a1a2YÓî\x87z\x0b3£¡\U000e1836\x8e\x0c\U000e2448\x11ÈúµA1RØöÍ%\x1eÐ|ÖÔ\x9c\x91\x98\x7fóæü\x16F\x15\U00087ef2}\U000af9cc\x9e\r«zå\x8eR\U000b9706𘄰b\x02ñ,Ø\U000b3041\U000d9abcõï\x9e\x0fÂÜþ³\x96\x03\x97"Ü\U0007c4e0\x16\x1c~QG#Ì .\x06H\x9eZdV\x1axA%\U0008ea1c¤\x19¬\U000f7861ø\x82½E\U0010c1c9\U000a5265\x00\x9c\U000fea46!B\x06¾\t\xa0\U00048903F𭗷\x97\x86\x84Ñ\U000bfec4\x8f@Ï\x10𭑹\U000521c7Áá<É\U00043895簤½Ê\x03\x82±a\x9a¼f\x11\U000e6402\x91Æ+𰍝+»\U000a677f5\x03𭿟Á\x84\U0007ceabvPîó\U000149b2\x15\U00100f18\U000807c9]\U0001b920\x1eÈmM\x8f{e¯\U0003d557\U00011ded`\U00065457@}\x81\x8cï\x93\U0009c83e\x14¿\x19v¡\x8cïs*\U00066a4déE\U000b60a4àÙ𡈍\U0010701b=Ö\U00098dfcÎ\t\x97JE\x8d\x18µÕ«ãö¾}\U0007e03aoè\U000f40aeo°¶}É¢a\U000bd844\U0007ea0e\U000d75b8\x93C\U000320ab\x85x\U00047a2e\x05Ïïâó\U000aeee4ë\r\xad¼Ô \x8c\U000fd7e9\x885©~\U000cc6f0uÕ\x1f©ü~\U000327f3,I÷4䇡\U0006d9b7b@\U000ae135\U000d5a7aé¨¤D𧾥\U0004a45fØæðÇn\U000f84cc»\U000d65d7Oé[uú7]~\x85û\x1c\xad\x95çM\U0006680eÇ\x96\x89Ôß°w\U000a71c8\x17Rë/3\x8d\x89+\x80\x8e\xa0\U000b8d8b\x03\U000ff188ã\U000e5fa7~Tᢊ£ý:\x9a$ÿ«\x912\U000cd1efÛÒ\U0010c940?\U0008fe10\U0009cfb0O¶\x08÷¶ufÍ\x92P\U00052f59Ý\U0009fc90Ì𰬟Á\U000ba871,ë𪸦C\U00031eafÑ\x8eiº\U0007c2e5\x1a\x96\U000df129n\U0007ea0c2\x01\x82¼\U0002fc92\x88Ëtp¡\x92`/\xadú\U00059151q°¤\U00100696\x0cð{öþ¾\x0f\U0006d919\U000cde26뒌\x86\x8d\U00055c37o\U000357a9\U0003933cP\x81\x85D2\U0006da38\U000f9644Ë©\U0007098bÁ\U00097acbÿ¹\U000d8c22ÇWÍ·O\x98\U000ede8a\U000ca8f6ïYÖu\x87O+\U0003b978\x83íB𐑔wNúọ𑻲.A\U00109b79\U000db964\U000696a1-cóa\x8b\U0001fcb5zô¥~\x7f\x18\x81F±Ê\U000aaf199\x9bX\x93lpé\U000c346dý𔒠质\nÖ%&\x94\U000ac6d6,,\x88*\U0001e8f4Z.±Ð\U000ed83a¢\U000e4c6f\x9d\U000e23beÛU\x18\x0b\U00044fab[\x1bÎ\U0003b2b8ô6Àâ\\@\x9d¿{¤\xadI\U0009553eJ\x17\U0001bf85Æ\'\U0003cc19\x8b珲m\U00019ed4ÉÏB\x0c}\x8cïÖÓ\x07\x0b\x99¡\x82¶wÏdÁ÷\x08\x14\x84eñ\x96:ïï\x9a9±3.fºUß\U000fb346\x11씹\x9be:y\x80Ù\U000d356cð\x0cr\U000e3aa0©\\\U000669c0[\U00038730XÙ\U0002f68c#\x9f:|t\U00099aee9\U000dad2d\U0008c150\x84\x9f\x13õx\x15üÁ$5Åk7>GÙ9\x91ö¾é\U000acfd5úíÆ\U000a947bÒpð\U0004ccbb\x90Mz\U00032bc9Ú𑲤½1\U000bcd2d±\U000a3102£÷{\x9f\x0f²B.\x12\x9b5Ç\x87Ë\x17åè¥Z\U000d3900Ó\U00031f6eã\x86¡qÞ\x1bMÍ?"\x88»µZï|脾\U000dc866\x17¤PÛ¥\U00102d35𫤧üêpMN\x98\U00056346c\x03õ\x9dYµÔ\x9c\x91w\x85¦\U0003dd64\x87\U000fc5c6¼\U00096945\U000bca49\U000e7736¶q\U0006bddd\U000abdb1Â\x06£màÍG\x15\x16HæE£K\U0010a32c\U0004ef6d{\U0006ff4e~ét\x900\x17ä\U000b2e0eC\x81¬\x17P\U0006eacf\x84R\x87*\x8by«\x99\U00087349Ñ\U0007cb0b\x92\U0009b616Iw\x03¿\x91Ë\xadða𤜓vÜ\x1c\U000dac33w\U00091ceb\U000e94c9é\U000ef47bph\U00068c7c\x8cÙ\x8bë+ruk^\U00039636]\U0010fbc90(ÁmÌ\x90|²>º\x12}Á\U000eae18àÆ\x8b\x909\U0001c2ed¬\'\x87vE@×\U000528a8ÊÈ-!\U00109e6e#âp·|²\U000d82faâ𮋎\x8fâ\U00013599ýH=Øâù\U000ce575â\x84𘓯\U000828d8}\U0009de52\xa0\U000972c4öD,\x1bKj7591çg3þ\x90a\U000a09b8\U0003814cµí\U000842beMúõ\x9f©!ãß\x80Þ\x97\x84ËÓ\U000c8e89M\x87f\x98\x96\U000ed5c7\U000914bd\x14¸\x8a¾®µiÙãÊ\U0007b0deì\U000c5b02\U00050993\U0008d7b1\U0001ea123\x83\U00094639QÄF \x07ä{,\U00056af1ý@ùÜ\U00053dfe\x00³õìVò\U0001034d¾\U000473ee¾z$\x92𥖴\U0010e381킋Æ5À\U0009e4e5S\x1cèÂ\U0010e28a\x9a5pz\\§{', 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001799s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001749s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001724s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001731s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': '\U00109275óô\U00053b8e`´¥(\x0f\U000470f4r\x17ö:VÝÆ\'µ¥\x1d𭠇ì\U00034fef\U000a17edNø7Jd\U000e9c82\U000ea954\x82\x05ð\x98nå\x0e£\nVP\U0006c1c6\U000e75da²c T¾\nÐ𪗞\U0004b351s\x1aìz\xa0\x94U5e\x8e\U000f9623¡@&\x91n°c\U000cc8dfÐ\U0005ac30R{8ô´·k(<ºó)\U000ed216î\x81]\x14ä\x04\x0e\n]\U000ed63eãL²i\U000f5f91,´\U000e24c4\x9bq1\x94片hÀöᴅ\U000d4113¬\x1c\U0010c7b6¯#m\x93#¥𖦡#\U00039703¥ó\x02\U000b69f1\x1dQ\x1f}\x96Ü\U00060244\U0004264dY\x9du\x87\x8b\x9fI\x0f÷R\x08µ\x80\x81X\'ÉÃl\x0c\x08Ô·sê\x8f\x116*\U000afcef\U000e7f49\U000fa66b\x87\x1f\x91w\x86s\x0ba\U000a543f&\x90àóbn\U000e9944ph\nZ\x18+*_ÒÑH\x9d\U0010736a\U000d91ad´Ý\U000c86fe\x042b𡐒ZÃú\x17\U0008241b\x1bk\U000995ac¤ç½Å\x8b¨\'\x06\U00078e49K=Ó\U000ae48e\U00013436Ñò1¾W]\x13\U0007be67²b¶Sc\x1aªÜÇNªXé}\x82ý\U0003ccb3O\U000dddd7Ç¿Ò\U00014b6b\U000635eaäR\x84\U00102298\xa0\nïÅä5\x06I)\x8d¿𘖀DôM𞋫®G6.𗱖À\xadù$\U00063892gø_õ\U0008462e«\U000e4550\x86û\U001077aa\U0010aad0\U000c8ecdNÊ\U0003651a\U0010e125\x1cËC\U00061b35\x9c\x04Ò\x97ÃÜ\x99\U0010b7a9û¿³,\x91Î\x10u·\r)ÕZ\x8dUX\x8c\x00Rù|\x11!l©\U000cc536¥{늴Çx\x1aê\U000ddc53\U000b35edü&\U000f07d0\U000ac639¾øÙ\U000f512d\U0009f0b9Pö;ñÎFýD\x9c\U000e4de9\x0f\xad\x95}\U0009c0fbÒªÃ\x97\rëº\U00055ab4\U000afc1a\U0004ef39Á\x9d\U000d70d8°\x8aH\U0005bd5c_\U000c2eb1\U00074da7ÿ\x02\x9dÖá\U0010a7a3ëIS²\U00049b7d\U000c8da2Þ,\x91ýÒý\x87𡷾þ\x90=o\U000d616a\'"¾äù\x80iáãlÑ\U000611bbå~¯\x90©\x9eh\x85Éñö?ìÌÄæDI\x94Ð\x0e\tª§h\x93r\x1dÖ\x1dÁýs\x82\U000bbc41¨~+i±\x93\x8e\x1aB\x8ecꩰu\x7fN\U000feb82´\'h\U00079073\x11\U000870cfÜ?\U0004f0a3i]\U00019013ª\x06Ãs\U0009b4deï\U000546df\x1d\U00066bc3Ø&¨\nô>±e\x0bh\x1c\x8aÎÜ{\x04\x1bUßk\U0009a8ee®\U000da055®V>\U00062727S\uf364NÆ!]\x06\x9b\U000ca8a9\U0009ad4bJ\x1e!\x00\x8abdá÷\U000bbb59y\x1e\x10\x91\x81\U0003fc59\x96\x9a°¯¤\U00052689!\x99\x11𤇤.\x82\x02D\'TfÃÅD\t\U0004bb20F\x96z\x12¹\x18\x04ÊÎä"\x13\x16\x03~Eò¸\x1d]X(\U0006c118Õ\x96\U000bb40df¢\x00©Á\x11ù·@õ\U0005e81d\U000f2d09U\U00042379\x9bG|\x02`4O\x8dH\x93䌰{\x07ó\U000d780cd\x92G\U000de031\U000c6fe1âÓÑ\x12\U0008bb40ä|D\U000f17b7«ù\U00058ae4Vx\x07\x18;D\x7fk\U00063b5fôQ\U000a3656*\x84Ab\x05\x0c\x9eKiÕçæð¨\x8c>\U0010e662\U000a78be\U00043060S\x00Ë\U00067164p\x81\U00104e65»þe\U0009dc78â\U0004be66\U000edbdf\r\U0003c7635A\U0005f62a\U0007bd06\U000b7477#3\x08>úä®\x85r,Q𭙳\U001076f4¨\U000b01c5\U00108272\x87þ\x9blþ\U0010c46eÄ®\x0b\x11]®Ä\rgü¾òPJ®Ú\U0003d45emãðÿ\U000a69561ú\x8fÇ\xa0ÍÊR»\U0008479dñÂ\x85²Õ3|"Þ3\U000650c4¤W>ç\x135n\U0003a903²\U000b56f4ìP×\U00078cc1\x8f|\U000e1836s\x19\x9b\U000fb0b9Ú£\x91Ì\n\x10>\x91¼\u1a8fÞ«\U001014c6c¥\x0e\x1e\x1c2\U0010f953ýª\U0010c64a|\x0b>\U000b9814\x8fË\U0005e0e8\U0001a119\nÊ×¹ú|\U00109b87<o\U000e33c0î\U00095c3f\x84\U00108680\\1\U000492beL\x01÷¼×Z\U000fbcf5\U00097a28,\x8cÌ\x80\x9bú$R7\U0007b5fa\x08\x1cÇ\U00107c0e\x0fòú\U00063f25E\x89\x12öò\U000fc1fb\x9ec¥\U00101cb6ªå´\r\x8b¬F#\U000f0b9a\U00067e3cÔ¼2lZ»k\x08\x0bÕ\U00062399\U000196caP\x0c\U000aa0db^/\U000bd80d[Æ\x9b\U000e06f8\x02Ö\x029á\tôM\x8e\U0005f1eck\U00063297\x19\x13\x89\U0005e8459CÇ®Ñ\x8dÔ¥ü墾¬é\x06ep®\U00066796\x8f𭝮\r\x19\x18\r\x88^\x86eö\U000c99f9I\x83}\x1fÒ.¨\U000867bf{\U000e5e91åå5\x8aÑu\U000d42e0𬵥\x83\x8a\U0005eb2b\x94Î\U0001ac95\U0006abf2,MÊ\x8et¤\x0f;I\x7f\x18\x8d;\U000c8da9áþ&\U000f9881;¯\U0009492bÄÅ\x8e\x9d¾\x87䟍KÞ\U00062f55òÀY\U000df8a5Z\U0008dd07äÈÛ\U000b496c_\x9d\U000d9990\U0010985b@\x9d\U000f2d6e\x9b§\x0f\x07×\U0004a483Ï0\x8e\U000d6125Ö\U0004d584¶q0Ú\x97\U0008f799*ß\U00087d4b\U0001502aßi\x01\x9fåÌ\U0008fb04𰡱\x07ó\U000a82b2\U0005675dÙ\'\U000a894dR\U00041529ý|Ý\x85\U000b69acE\U000146b0Ï\x07*ç\x9a?\U000aea97\U000cbe13õ^\U000a952cL\U0008f825+\U000d551c¬.\x0c/0\x94\x7f\x9eå\x8d\x8b*\U0004daa1\U000b13d8\x90\x0b¿C\x9byt\U0003ade9å\x0ci´¢¨f<\x93¿\x93ñÄâ/ä\U000e7de7\x1d\U000cd087wè!\x10\U00081716\n\x89\U0005bfaa-Ñ\U0008dd6f尌Ìq\x7f\U000a356d\U000fbd5a\U0004bdee\U0010d28a-_\x92v®m\x06D\U000adb85ì\x81\U000f5866EJÔ\x90V\x13=9Îõð\x8e»Æ3È8\x90\U0001bbb5\U0003abd2\x83\U00079584¨\U0010d1b0Ê×𩿨H\x1bñ\x95æ\x95LÚÑ\x0e\x8dK\x92B誧\x02\xa02ö\x13.\x05r\U000aea76s\x0eóí\x91 ÙE\x84ÄÍõ\U0005b882\U000a6600ì6³øòU\U000cc8b9Ô\U0010a250\x10\U0003b479Á\xa0Ûé\x04×$Ò\x89\t'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001764s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': '\U00109275óô\U00053b8e`´¥(\x0f\U000470f4r\x17ö:VÝÆ\'µ¥\x1d𭠇ì\U00034fef\U000a17edNø7Jd\U000e9c82\U000ea954\x82\x05ð\x98nå\x0e£\nVP\U0006c1c6\U000e75da²c T¾\nÐ𪗞\U0004b351s\x1aìz\xa0\x94U5e\x8e\U000f9623¡@&\x91n°c\U000cc8dfÐ\U0005ac30R{8ô´·k(<ºó)\U000ed216î\x81]\x14ä\x04\x0e\n]\U000ed63eãL²i\U000f5f91,´\U000e24c4\x9bq1\x94片hÀöᴅ\U000d4113¬\x1c\U0010c7b6¯#m\x93#¥𖦡#\U00039703¥ó\x02\U000b69f1\x1dQ\x1f}\x96Ü\U00060244\U0004264dY\x9du\x87\x8b\x9fI\x0f÷R\x08µ\x80\x81X\'ÉÃl\x0c\x08Ô·sê\x8f\x116*\U000afcef\U000e7f49\U000fa66b\x87\x1f\x91w\x86s\x0ba\U000a543f&\x90àóbn\U000e9944ph\nZ\x18+*_ÒÑH\x9d\U0010736a\U000d91ad´Ý\U000c86fe\x042b𡐒ZÃú\x17\U0008241b\x1bk\U000995ac¤ç½Å\x8b¨\'\x06\U00078e49K=Ó\U000ae48e\U00013436Ñò1¾W]\x13\U0007be67²b¶Sc\x1aªÜÇNªXé}\x82ý\U0003ccb3O\U000dddd7Ç¿Ò\U00014b6b\U000635eaäR\x84\U00102298\xa0\nïÅä5\x06I)\x8d¿𘖀DôM𞋫®G6.𗱖À\xadù$\U00063892gø_õ\U0008462e«\U000e4550\x86û\U001077aa\U0010aad0\U000c8ecdNÊ\U0003651a\U0010e125\x1cËC\U00061b35\x9c\x04Ò\x97ÃÜ\x99\U0010b7a9û¿³,\x91Î\x10u·\r)ÕZ\x8dUX\x8c\x00Rù|\x11!l©\U000cc536¥{늴Çx\x1aê\U000ddc53\U000b35edü&\U000f07d0\U000ac639¾øÙ\U000f512d\U0009f0b9Pö;ñÎFýD\x9c\U000e4de9\x0f\xad\x95}\U0009c0fbÒªÃ\x97\rëº\U00055ab4\U000afc1a\U0004ef39Á\x9d\U000d70d8°\x8aH\U0005bd5c_\U000c2eb1\U00074da7ÿ\x02\x9dÖá\U0010a7a3ëIS²\U00049b7d\U000c8da2Þ,\x91ýÒý\x87𡷾þ\x90=o\U000d616a\'"¾äù\x80iáãlÑ\U000611bbå~¯\x90©\x9eh\x85Éñö?ìÌÄæDI\x94Ð\x0e\tª§h\x93r\x1dÖ\x1dÁýs\x82\U000bbc41¨~+i±\x93\x8e\x1aB\x8ecꩰu\x7fN\U000feb82´\'h\U00079073\x11\U000870cfÜ?\U0004f0a3i]\U00019013ª\x06Ãs\U0009b4deï\U000546df\x1d\U00066bc3Ø&¨\nô>±e\x0bh\x1c\x8aÎÜ{\x04\x1bUßk\U0009a8ee®\U000da055®V>\U00062727S\uf364NÆ!]\x06\x9b\U000ca8a9\U0009ad4bJ\x1e!\x00\x8abdá÷\U000bbb59y\x1e\x10\x91\x81\U0003fc59\x96\x9a°¯¤\U00052689!\x99\x11𤇤.\x82\x02D\'TfÃÅD\t\U0004bb20F\x96z\x12¹\x18\x04ÊÎä"\x13\x16\x03~Eò¸\x1d]X(\U0006c118Õ\x96\U000bb40df¢\x00©Á\x11ù·@õ\U0005e81d\U000f2d09U\U00042379\x9bG|\x02`4O\x8dH\x93䌰{\x07ó\U000d780cd\x92G\U000de031\U000c6fe1âÓÑ\x12\U0008bb40ä|D\U000f17b7«ù\U00058ae4Vx\x07\x18;D\x7fk\U00063b5fôQ\U000a3656*\x84Ab\x05\x0c\x9eKiÕçæð¨\x8c>\U0010e662\U000a78be\U00043060S\x00Ë\U00067164p\x81\U00104e65»þe\U0009dc78â\U0004be66\U000edbdf\r\U0003c7635A\U0005f62a\U0007bd06\U000b7477#3\x08>úä®\x85r,Q𭙳\U001076f4¨\U000b01c5\U00108272\x87þ\x9blþ\U0010c46eÄ®\x0b\x11]®Ä\rgü{òPJ®Ú\U0003d45emãðÿ\U000a69561ú\x8fÇ\xa0ÍÊR»\U0008479dñÂ\x85²Õ3|"Þ3\U000650c4¤W>ç\x135n\U0003a903²\U000b56f4ìP×\U00078cc1\x8f|\U000e1836s\x19\x9b\U000fb0b9Ú£\x91Ì\n\x10>\x91¼\u1a8fÞ«\U001014c6c¥\x0e\x1e\x1c2\U0010f953ýª\U0010c64a|\x0b>\U000b9814\x8fË\U0005e0e8\U0001a119\nÊ×¹ú|\U00109b87<o\U000e33c0î\U00095c3f\x84\U00108680\\1\U000492beL\x01÷¼×Z\U000fbcf5\U00097a28,\x8cÌ\x80\x9bú$R7\U0007b5fa\x08\x1cÇ\U00107c0e\x0fòú\U00063f25E\x89\x12öò\U000fc1fb\x9ec¥\U00101cb6ªå´\r\x8b¬F#\U000f0b9a\U00067e3cÔ¼2lZ»k\x08\x0bÕ\U00062399\U000196caP\x0c\U000aa0db^/\U000bd80d[Æ\x9b\U000e06f8\x02Ö\x029á\tôM\x8e\U0005f1eck\U00063297\x19\x13\x89\U0005e8459CÇ®Ñ\x8dÔ¥ü墾¬é\x06ep®\U00066796\x8f𭝮\r\x19\x18\r\x88^\x86eö\U000c99f9I\x83}\x1fÒ.¨\U000867bf{\U000e5e91åå5\x8aÑu\U000d42e0𬵥\x83\x8a\U0005eb2b\x94Î\U0001ac95\U0006abf2,MÊ\x8et¤\x0f;I\x7f\x18\x8d;\U000c8da9áþ&\U000f9881;¯\U0009492bÄÅ\x8e\x9d¾\x87䟍KÞ\U00062f55òÀY\U000df8a5Z\U0008dd07äÈÛ\U000b496c_\x9d\U000d9990\U0010985b@\x9d\U000f2d6e\x9b§\x0f\x07×\U0004a483Ï0\x8e\U000d6125Ö\U0004d584¶q0Ú\x97\U0008f799*ß\U00087d4b\U0001502aßi\x01\x9fåÌ\U0008fb04𰡱\x07ó\U000a82b2\U0005675dÙ\'\U000a894dR\U00041529ý|Ý\x85\U000b69acE\U000146b0Ï\x07*ç\x9a?\U000aea97\U000cbe13õ^\U000a952cL\U0008f825+\U000d551c¬.\x0c/0\x94\x7f\x9eå\x8d\x8b*\U0004daa1\U000b13d8\x90\x0b¿C\x9byt\U0003ade9å\x0ci´¢¨f<\x93¿\x93ñÄâ/ä\U000e7de7\x1d\U000cd087wè!\x10\U00081716\n\x89\U0005bfaa-Ñ\U0008dd6f尌Ìq\x7f\U000a356d\U000fbd5a\U0004bdee\U0010d28a-_\x92v®m\x06D\U000adb85ì\x81\U000f5866EJÔ\x90V\x13=9Îõð\x8e»Æ3È8\x90\U0001bbb5\U0003abd2\x83\U00079584¨\U0010d1b0Ê×𩿨H\x1bñ\x95æ\x95LÚÑ\x0e\x8dK\x92B誧\x02\xa02ö\x13.\x05r\U000aea76s\x0eóí\x91 ÙE\x84ÄÍõ\U0005b882\U000a6600ì6³øòU\U000cc8b9Ô\U0010a250\x10\U0003b479Á\xa0Ûé\x04×$Ò\x89\t'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001861s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '1\U0003fc000(\U000369000000\U000470f4r\x17ö:VÝÆ\'µ¥\x1d𭠇ì\U00034fef\U000a17edNø7Jd\U000e9c82\U000ea954\x82\x05ð\x98nå\x0e£\nVP\U0006c1c6\U000e75da²c T¾\nÐ𪗞\U0004b351s\x1aìz\xa0\x94U5e\x8e\U000f9623¡@&\x91n°c\U000cc8dfÐ\U0005ac30R{8ô´·k(<ºó)\U000ed216î\x81]\x14ä\x04\x0e\n]\U000ed63eãL²i\U000f5f91,´\U000e24c4\x9bq1\x94片hÀöᴅ\U000d4113¬\x1c\U0010c7b6¯#m\x93#¥𖦡#\U00039703¥ó\x02\U000b69f1\x1dQ\x1f}\x96Ü\U00060244\U0004264dY\x9du\x87\x8b\x9fI\x0f÷R\x08µ\x80\x81X\'ÉÃl\x0c\x08Ô·sê\x8f\x116*\U000afcef\U000e7f49\U000fa66b\x87\x1f\x91w\x86s\x0ba\U000a543f&\x90àóbn\U000e9944ph\nZ\x18+*_ÒÑH\x9d\U0010736a\U000d91ad´Ý\U000c86fe\x042b𡐒ZÃú\x17\U0008241b\x1bk\U000995ac¤ç½Å\x8b¨\'\x06\U00078e49K=Ó\U000ae48e\U00013436Ñò1¾W]\x13\U0007be67²b¶Sc\x1aªÜÇNªXé}\x82ý\U0003ccb3O\U000dddd7Ç¿Ò\U00014b6b\U000635eaäR\x84\U00102298\xa0\nïÅä5\x06I)\x8d¿𘖀DôM𞋫®G6.𗱖À\xadù$\U00063892gø_õ\U0008462e«\U000e4550\x86û\U001077aa\U0010aad0\U000c8ecdNÊ\U0003651a\U0010e125\x1cËC\U00061b35\x9c\x04Ò\x97ÃÜ\x99\U0010b7a9û¿³,\x91Î\x10u·\r)ÕZ\x8dUX\x8c\x00Rù|\x11!l©\U000cc536¥{늴Çx\x1aê\U000ddc53\U000b35edü&\U000f07d0\U000ac639¾øÙ\U000f512d\U0009f0b9Pö;ñÎFýD\x9c\U000e4de9\x0f\xad\x95}\U0009c0fbÒªÃ\x97\rëº\U00055ab4\U000afc1a\U0004ef39Á\x9d\U000d70d8°\x8aH\U0005bd5c_\U000c2eb1\U00074da7ÿ\x02\x9dÖá\U0010a7a3ëIS²\U00049b7d\U000c8da2Þ,\x91ýÒý\x87𡷾þ\x90=o\U000d616a\'"¾äù\x80iáãlÑ\U000611bbå~¯\x90©\x9eh\x85Éñö?ìÌÄæDI\x94Ð\x0e\tª§h\x93r\x1dÖ\x1dÁýs\x82\U000bbc41¨~+i±\x93\x8e\x1aB\x8ecꩰu\x7fN\U000feb82´\'h\U00079073\x11\U000870cfÜ?\U0004f0a3i]\U00019013ª\x06Ãs\U0009b4deï\U000546df\x1d\U00066bc3Ø&¨\nô>±e\x0bh\x1c\x8aÎÜ{\x04\x1bUßk\U0009a8ee®\U000da055®V>\U00062727S\uf364NÆ!]\x06\x9b\U000ca8a9\U0009ad4bJ\x1e!\x00\x8abdá÷\U000bbb59y\x1e\x10\x91\x81\U0003fc59\x96\x9a°¯¤\U00052689!\x99\x11𤇤.\x82\x02D\'TfÃÅD\t\U0004bb20F\x96z\x12¹\x18\x04ÊÎä"\x13\x16\x03~Eò¸\x1d]X(\U0006c118Õ\x96\U000bb40df¢\x00©Á\x11ù·@õ\U0005e81d\U000f2d09U\U00042379\x9bG|\x02`4O\x8dH\x93䌰{\x07ó\U000d780cd\x92G\U000de031\U000c6fe1âÓÑ\x12\U0008bb40ä|D\U000f17b7«ù\U00058ae4Vx\x07\x18;D\x7fk\U00063b5fôQ\U000a3656*\x84Ab\x05\x0c\x9eKiÕçæð¨\x8c>\U0010e662\U000a78be\U00043060S\x00Ë\U00067164p\x81\U00104e65»þe\U0009dc78â\U0004be66\U000edbdf\r\U0003c7635A\U0005f62a\U0007bd06\U000b7477#3\x08>úä®\x85r,Q𭙳\U001076f4¨\U000b01c5\U00108272\x87þ\x9blþ\U0010c46eÄ®\x0b\x11]®Ä\rgü{òPJ®Ú\U0003d45emãðÿ\U000a69561ú\x8fÇ\xa0ÍÊR»\U0008479dñÂ\x85²Õ3|"Þ3\U000650c4¤W>ç\x135n\U0003a903²\U000b56f4ìP×\U00078cc1\x8f|\U000e1836s\x19\x9b\U000fb0b9Ú£\x91Ì\n\x10>\x91¼\u1a8fÞ«\U001014c6c¥\x0e\x1e\x1c2\U0010f953ýª\U0010c64a|\x0b>\U000b9814\x8fË\U0005e0e8\U0001a119\nÊ×¹ú|\U00109b87<o\U000e33c0î\U00095c3f\x84\U00108680\\1\U000492beL\x01÷¼×Z\U000fbcf5\U00097a28,\x8cÌ\x80\x9bú$R7\U0007b5fa\x08\x1cÇ\U00107c0e\x0fòú\U00063f25E\x89\x12öò\U000fc1fb\x9ec¥\U00101cb6ªå´\r\x8b¬F#\U000f0b9a\U00067e3cÔ¼2lZ»k\x08\x0bÕ\U00062399\U000196caP\x0c\U000aa0db^/\U000bd80d[Æ\x9b\U000e06f8\x02Ö\x029á\tôM\x8e\U0005f1eck\U00063297\x19\x13\x89\U0005e8459CÇ®Ñ\x8dÔ¥ü墾¬é\x06ep®\U00066796\x8f𭝮\r\x19\x18\r\x88^\x86eö\U000c99f9I\x83}\x1fÒ.¨\U000867bf{\U000e5e91åå5\x8aÑu\U000d42e0𬵥\x83\x8a\U0005eb2b\x94Î\U0001ac95\U0006abf2,MÊ\x8et¤\x0f;I\x7f\x18\x8d;\U000c8da9áþ&\U000f9881;¯\U0009492bÄÅ\x8e\x9d¾\x87䟍KÞ\U00062f55òÀY\U000df8a5Z\U0008dd07äÈÛ\U000b496c_\x9d\U000d9990\U0010985b@\x9d\U000f2d6e\x9b§\x0f\x07×\U0004a483Ï0\x8e\U000d6125Ö\U0004d584¶q0Ú\x97\U0008f799*ß\U00087d4b\U0001502aßi\x01\x9fåÌ\U0008fb04𰡱\x07ó\U000a82b2\U0005675dÙ\'\U000a894dR\U00041529ý|Ý\x85\U000b69acE\U000146b0Ï\x07*ç\x9a?\U000aea97\U000cbe13õ^\U000a952cL\U0008f825+\U000d551c¬.\x0c/0\x94\x7f\x9eå\x8d\x8b*\U0004daa1\U000b13d8\x90\x0b¿C\x9byt\U0003ade9å\x0ci´¢¨f<\x93¿\x93ñÄâ/ä\U000e7de7\x1d\U000cd087wè!\x10\U00081716\n\x89\U0005bfaa-Ñ\U0008dd6f尌Ìq\x7f\U000a356d\U000fbd5a\U0004bdee\U0010d28a-_\x92v®m\x06D\U000adb85ì\x81\U000f5866EJÔ\x90V\x13=9Îõð\x8e»Æ3È8\x90\U0001bbb5\U0003abd2\x83\U00079584¨\U0010d1b0Ê×𩿨H\x1bñ\x95æ\x95LÚÑ\x0e\x8dK\x92B誧\x02\xa02ö\x13.\x05r\U000aea76s\x0eóí\x91 ÙE\x84ÄÍõ\U0005b882\U000a6600ì6³øòU\U000cc8b9Ô\U0010a250\x10\U0003b479Á\xa0Ûé\x04×$Ò\x89\t', 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001976s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001916s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 94}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 94, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001451s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': 0}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001681s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0, 'password': 122}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 122, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00144s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0, 'password': 0}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001632s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0, 'password': -4594951730957932466}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -4594951730957932466, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001591s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0, 'password': -6247511253375295}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -6247511253375295, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001683s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -6247511253375295, 'password': -6247511253375295}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -6247511253375295, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -6247511253375295, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002146s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U0001a37b\U000e08f1\x11\x91\'彦\x87\x93J\U00055d5e\x0fÿ´\x13\U000443af+¬TK\x17CV\U00066404üòÇ<"±\x81ù¶ý\x9d?y\x07\U00039bda¢ñk\U000e38bb\x18\U001067faI\U00084cc46_AéÆvÙ]°V\x15ü\U000e332d\x8b\U0007934dOu@𧐟\x83¶Þ¥\U000812a9\U00064b76鄊÷\x8f\U000dace7\x95𩼳\x14\x12\U000689cb.,\U00016121\x86Í\U000ac795\x94"\x80Ø>â^º\U0004497e\x07\U0001ba9c,<8$ÖÎ«?\x9bî)õtzò¿*3\U0005ba7c \x84:*\U000f3147°¸\U000b6710Ò\U0005fcb4<ø\\\U00059564Ýú\x9c·8\U000a7c2cÅÆ\x8b\U0010fd9e\U00079861ZõM\x8câh\U0003eabdaù6yÚjS9+ºk\x87\x89pÏf\uf44e\x93\U000fbe08cÜ𧱌ö¿û\U000c037fî\x8cæÓ3\x01>I\U000f3802"\x8c\x87\x00«ÑNµ\U000b766cá\U00096af5\x99\rÈ^#ú>\r\\S£\x19#ds\U00079370ö\x0bG\U0003a42e\x84\x13\x02N\U00059eaeOÚ§\x7f\x96óÁ\x03\U0003ca3b ù\xad5Ç\x1e\x84\U00045782\U00092932~Û+²^\U00063b76\x1f\x06\U000c5b39\x13\x0c\U00073d67ãõË\x11yæø䴠\x11\U000cc4acÂ\x10\x07\x10Ü\U0004dc64\U000e5532\x1f\U000539cd\x8e#åÉ\x0bí\U0009b375\x87\x81\U000822d0\x95\U000df5c2\x08\U0009e03f\x85¤l@\U000cd0d6\x8fÈ\ueeea\x1d\x02\U000d90ddëÞE\'𨹖%\U000f7123í敇\x95\U0006d9c8\x14fÉ£y\U00083ffa\U0005aefarÌ¯_~5\'"3\U0009c892`Æ\x89âq\x9c-Ï\U001098d7\t\U0009bc62æ\U00068e97\x9a`å\U000c0b13\x88¤2p\x1dô{\U0008ed2fH\x9cg¢%\U0010734bóÙ\U000bc1e5óý\x82\U00056082\x1bwHÎ\x82\U0009ef5b\U000f44de\nüò\x05Ì»\U000fe0fd\U000e49d3\x957\x96\U000d5130\U0007cfea\x1aõ\U000cb70a\U000f7b29\x9c\U0003e1b1unCHQ\U0006d104ë\U0007ba73×ó«\U00081d1e\U000cee983ê럳Ì ¡á\x8dÈ&\x89ÒÐ@\U0010bfdbíB1_\x8f\x88_o\x9fk[E\U00036d8fÎ\U000c3992|-¾\x0f\U000d100c\U000f4c0d\x8c#\U000ecdb8ìi\x92CÜ%\u0a7d\x82\U0010ef32\U000f3380\\𡄼\U00071411\U000f6688¸ñT¬BR-\U0003d7beR\U000b34901¢\U000e715dÿ\x16Ò\x8cZ¼þ÷3ö憸o\U000d0759\x12^Ç|?\U00066a18%\x99𗷴\r\x95øÿêk\U000f974c\U0006dfe3-\x06\x901[\U000fd02b(\U000d70710 Ý?ö[\U000f61e2¨Ü«\x8e\x00\U000fa19f¯\nÇ²dð𤏼\x13\x80\x91ÄÞ!\U00042fb1\U00077cd6qö"VJ½a\x8b:qÂ\U000a690f\U000389afÒ§B{\x8a:4q_Ý\x99³/Ð-üÐ°)\U000a1f13m\U0001e8fa\x05\U0003221c\U00037608\x0e\U0005d520i7ë\x08t\x89\x92.ÄÐ\U000374e0E¯\r\x00l\U000f192a1\xad·¨$à!¦\U00013f71ª\U0005d304\U0003c717\x90\x06Û\x1cÌ\U0010764fø\x88Â\U00070ff1ª\x18\x9c\x98¬LhXß+ß\x17\x83¥\U000ae617¿\x82Äp\U0001355eîÒ\x00ú\U00054419\x00\x06\U000e7543𩲤\U000f96c1ý\U00058a9a\U00068773\U0007266f\x06𫖯#\x02Ô陲Ç\U000db2d2k7R\U000b455dúÜ\U000e0474(ñ-\x92¥M³Hã\x0c\x9c\x8cÀµ¼\x8d\U0003bb5fÍt*ù\x8cè¹!ÁUိ\U000fbbb8ºÀ𗠏\x88\U000bd66d\U000320f4\U00094df8\U00061510B~hò¢cYí¥\x06Ë\x0e\x08\U000bd019÷\U00073606P퇑Ç\xa0\x15{â\x8cÂ\x7f\x80©A*Ë\U00060555+»\U000901b9\U000cae05t~3O^üE:d>\x11Å\x19\x82\U000dc33cRG@H³y\x8c\x1d)\U0005cdef\U0008fb54È:\x8f«Ï8ím\'𗗂\U00019c42\U00054629Ã\U0003fac02IG§\x85䔄ÓD\x80𝠔\x7fÊ\x16\U000bc6a9~Xüë\U000d3b01\x15\x86\x8fÈ𣐟ñA\x0e\U001082fa\x1dÇ\x82\t\x85 X\x7f\U000a4474P\U0001965f\U00106125=\x05\U000dfadd¨ÅZ6𛉰U\U000a3a41`å\U000ccdb6G\x92Î\U000bf54d»¤ûåU\U000ecd64\x83\x82A!V\x83L\U000f65d6þ\U000f6952æ2\x99\x9c\x19µ\x89Ð\x81=\\ú\\\U00046fe7Ë\U000a98cd\U000a0e80\U00053bc2kg«þn\x9boC\x0eM\U00075220Ý!\x8d|\xad\x02Vú\x08\x16!´\U00085342\x99®\nq\U0009090f¬×\x10U\x98Àóå峤\x17ç{×ÃÐB\U0009a65a\x94\x7fÌ\x10\x18\U0001adf0\x9fà\\Ú®\x03É\x94Ô\x06£\x95ÖaÅ\U0008de58ÑäÞ\x9f\x8cóËn\x1cb¶\x95þ\U0006402dK \U00033f93\x8f\x1e\U001014f1Ë\x9bé\x9e\U00062d56\x80\x04\x16\U000e9261ê\x94𗵠\U0006f3d9ö\U000f59b1/"𪟛©Kb\x13\U000a84fa\U000621b9\x96T\x8f\U00096038.®%\x8cG\U000fb371\U0009250f\U0010e2b8\U0005a073é\U000d72b4Õ\U00074292ñb\U000c5dc8®ºR\x18Ú\x06ãÿ\x9e\U0006b1b4\x0eO\U000873de/È\x0f\x10G\x08<@\U000d77bfK§\U000e6c1aÓ\U000936b7=P¯&ÿs\x04Ð!U\U000bf111\U0008faed\U0009c0a5c§\U000f9929Æ¤"\U000c2718¤\U000d1926\x05\t𦒱\U000c63a7\U000f7662à9\U0009bbce&µÕ\U000470fc¥\x96ä\U000413d8f\x0b\x96\U0008c770zcÕÜîñ\x1a\U000540ec\U000ae6af*\U0005638bú5\U000ae50a\x1d\x0f\U0006db79ó«~cýeü\x8eõ\U000ad5d4Í{:\x18\x1c¹\xad\U0004256e\U0008c1e1Ø÷\x81@ð\x18ên-\x95\tøMq@R𮬈|s¶/\U0006a8f5wí\x82\nPGÃy\x12ö\x10©#`µ/âÍU/÷\x88´\x12`\U0004b951r\x05\U000949a1\U000a3d71\U000f8017\x0bØ\x0e\x12\U00062431>£°\U000acd75\x15RM$<ø輾L\x189»\x8bÐ³\U0010780d\x91!\x1fú\x88î蹅ó\U0009daf0\x0f~R\U000c3eb6\U000f7a231u\x9dD^Â𗼄\x1aG\U0007ef22nñ`\U000da360÷@\n\x80/¬\nÂÐ\U000b728f𦗌\U0001de87®z\x03\U00059104\U00108e16\x9d\U0001f1e1É\U0005e7306Ë\x8a\x81,𤢕\xad8\U000e97f4Ú\x80\x96\x01ç*»\x02tV\x10\x88\U0010e9de=\'\U000cc276\x8fì\x95¥N\x0c\x11\x02Ç\x13\x1añ\U000e8022\x0eè\U000a763e\U000f64b1rfîó?-Ò\U0010b715)Kö\x90²\U000d0369³U½X\x82Èñ¹Må5\x12\x04×OÙ96\xad\x16ü\x170\U0010b66f\x0f\U0008bdcf#´\x13<£ûÍ\x8eaI\x1aµ\x99Õg\U0006739f&¼&\x8e\U0001dee0\U00070feb=Ò\U000666a6\x88h\U000912f3uS\U00073781ÌrË\U00048882\U000f56aeÔ\U0010f2d16½²óäßÜ®K©\x00㌼Y\x9dx\U0009fd35Æò\x8aÈÙ\x10\U000bc77eX\x1c\U0008ac7cç\U0008abe6|¿ÙoTËÇLq\ue024\x98\U000ce75b\U0001dd56\x11𠴂ëy\uf5fe3\x96\U00019c40\U0010e33fÑ\U00062d69´\U000f67ea\x04ꈺ\x1aæÿ\x0b\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001676s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U0001a37b\U000e08f1\x11\x91\'彦\x87\x93J\U00055d5e\x0fÿ´\x13\U000443af+¬TK\x17CV\U00066404üòÇ<"±\x81ù¶ý\x9d?y\x07\U00039bda¢ñk\U000e38bb\x18\U001067faI\U00084cc46_AéÆvÙ]°V\x15ü\U000e332d\x8b\U0007934dOu@𧐟\x83¶Þ¥\U000812a9\U00064b76鄊÷\x8f\U000dace7\x95𩼳\x14\x12\U000689cb.,\U00016121\x86Í\U000ac795\x94"\x80Ø>â^º\U0004497e\x07\U0001ba9c,<8$ÖÎ«?\x9bî)õtzò¿*3\U0005ba7c \x84:*\U000f3147°¸\U000b6710Ò\U0005fcb4<ø\\\U00059564Ýú\x9c·8\U000a7c2cÅÆ\x8b\U0010fd9e\U00079861ZõM\x8câh\U0003eabdaù6yÚjS9+ºk\x87\x89pÏf\uf44e\x93\U000fbe08cÜ𧱌ö¿û\U000c037fî\x8cæÓ3\x01>I\U000f3802"\x8c\x87\x00«ÑNµ\U000b766cá\U00096af5\x99\rÈ^#ú>\r\\S£\x19#ds\U00079370ö\x0bG\U0003a42e\x84\x13\x02N\U00059eaeOÚ§\x7f\x96óÁ\x03\U0003ca3b ù\xad5Ç\x1e\x84\U00045782\U00092932~Û+²^\U00063b76\x1f\x06\U000c5b39\x13\x0c\U00073d67ãõË\x11yæø䴠\x11\U000cc4acÂ\x10\x07\x10Ü\U0004dc64\U000e5532\x1f\U000539cd\x8e#åÉ\x0bí\U0009b375\x87\x81\U000822d0\x95\U000df5c2\x08\U0009e03f\x85¤l@\U000cd0d6\x8fÈ\ueeea\x1d\x02\U000d90ddëÞE\'𨹖%\U000f7123í敇\x95\U0006d9c8\x14fÉ£y\U00083ffa\U0005aefarÌ¯_~5\'"3\U0009c892`Æ\x89âq\x9c-Ï\U001098d7\t\U0009bc62æ\U00068e97\x9a`å\U000c0b13\x88¤2p\x1dô{\U0008ed2fH\x9cg¢%\U0010734bóÙ\U000bc1e5óý\x82\U00056082\x1bwHÎ\x82\U0009ef5b\U000f44de\nüò\x05Ì»\U000fe0fd\U000e49d3\x957\x96\U000d5130\U0007cfea\x1aõ\U000cb70a\U000f7b29\x9c\U0003e1b1unCHQ\U0006d104ë\U0007ba73×ó«\U00081d1e\U000cee983ê럳Ì ¡á\x8dÈ&\x89ÒÐ@\U0010bfdbíB1_\x8f\x88_o\x9fk[E\U00036d8fÎ\U000c3992|-¾\x0f\U000d100c\U000f4c0d\x8c#\U000ecdb8ìi\x92CÜ%\u0a7d\x82\U0010ef32\U000f3380\\𡄼\U00071411\U000f6688¸ñT¬BR-\U0003d7beR\U000b34901¢\U000e715dÿ\x16Ò\x8cZ¼þ÷3ö憸o\U000d0759\x12^Ç|?\U00066a18%\x99𗷴\r\x95øÿêk\U000f974c\U0006dfe3-\x06\x901[\U000fd02b(\U000d70710 Ý?ö[\U000f61e2¨Ü«\x8e\x00\U000fa19f¯\nÇ²dð𤏼\x13\x80\x91ÄÞ!\U00042fb1\U00077cd6qö"VJ½a\x8b:qÂ\U000a690f\U000389afÒ§B{\x8a:4q_Ý\x99³/Ð-üÐ°)\U000a1f13m\U0001e8fa\x05\U0003221c\U00037608\x0e\U0005d520i7ë\x08t\x89\x92.ÄÐ\U000374e0E¯\r\x00l\U000f192a1\xad·¨$à!¦\U00013f71ª\U0005d304\U0003c717\x90\x06Û\x1cÌ\U0010764fø\x88Â\U00070ff1ª\x18\x9c\x98¬LhXß+ß\x17\x83¥\U000ae617¿\x82Äp\U0001355eîÒ\x00ú\U00054419\x00\x06\U000e7543𩲤\U000f96c1ý\U00058a9a\U00068773\U0007266f\x06𫖯#\x02Ô陲Ç\U000db2d2k7R\U000b455dúÜ\U000e0474(ñ-\x92¥M³Hã\x0c\x9c\x8cÀµ¼\x8d\U0003bb5fÍt*ù\x8cè¹!ÁUိ\U000fbbb8ºÀ𗠏\x88\U000bd66d\U000320f4\U00094df8\U00061510B~hò¢cYí¥\x06Ë\x0e\x08\U000bd019÷\U00073606P퇑Ç\xa0\x15{â\x8cÂ\x7f\x80©A*Ë\U00060555+»\U000901b9\U000cae05t~3O^üE:d>\x11Å\x19\x82\U000dc33cRG@H³y\x8c\x1d)\U0005cdef\U0008fb54È:\x8f«Ï8ím\'𗗂\U00019c42\U00054629Ã\U0003fac02IG§\x85䔄ÓD\x80𝠔\x7fÊ\x16\U000bc6a9~Xüë\U000d3b01\x15\x86\x8fÈ𣐟ñA\x0e\U001082fa\x1dÇ\x82\t\x85 X\x7f\U000a4474P\U0001965f\U00106125=\x05\U000dfadd¨ÅZ6𛉰U\U000a3a41`å\U000ccdb6G\x92Î\U000bf54d»¤ûåU\U000ecd64\x83\x82A!V\x83L\U000f65d6þ\U000f6952æ2\x99\x9c\x19µ\x89Ð\x81=\\ú\\\U00046fe7Ë\U000a98cd\U000a0e80\U00053bc2kg«þn\x9boC\x0eM\U00075220Ý!\x8d|\xad\x02Vú\x08\x16!´\U00085342\x99®\nq\U0009090f¬×\x10U\x98Àóå峤\x17ç{×ÃÐB\U0009a65a\x94\x7fÌ\x10\x18\U0001adf0\x9fà\\Ú®\x03É\x94Ô\x06£\x95ÖaÅ\U0008de58ÑäÞ\x9f\x8cóËn\x1cb¶\x95þ\U0006402dK \U00033f93\x8f\x1e\U001014f1Ë\x9bé\x9e\U00062d56\x80\x04\x16\U000e9261ê\x94𗵠\U0006f3d9ö\U000f59b1/"𪟛©Kb\x13\U000a84fa\U000621b9\x96T\x8f\U00096038.®%\x8cG\U000fb371\U0009250f\U0010e2b8\U0005a073é\U000d72b4Õ\U00074292ñb\U000c5dc8®ºR\x18Ú\x06ãÿ\x9e\U0006b1b4\x0eO\U000873de/È\x0f\x10G\x08<@\U000d77bfK§\U000e6c1aÓ\U000936b7=P¯&ÿs\x04Ð!U\U000bf111\U0008faed\U0009c0a5c§\U000f9929Æ¤"\U000c2718¤\U000d1926\x05\t𦒱\U000c63a7\U000f7662à9\U0009bbce&µÕ\U000470fc¥\x96ä\U000413d8f\x0b\x96\U0008c770zcÕÜîñ\x1a\U000540ec\U000ae6af*\U0005638bú5\U000ae50a\x1d\x0f\U0006db79ó«~cýeü\x8eõ\U000ad5d4Í{:\x18\x1c¹\xad\U0004256e\U0008c1e1Ø÷\x81@ð\x18ên-\x95\tøMq@R𮬈|s¶/\U0006a8f5wí\x82\nPGÃy\x12ö\x10©=`µ/âÍU/÷\x88´\x12`\U0004b951r\x05\U000949a1\U000a3d71\U000f8017\x0bØ\x0e\x12\U00062431>£°\U000acd75\x15RM$<ø輾L\x189»\x8bÐ³\U0010780d\x91!\x1fú\x88î蹅ó\U0009daf0\x0f~R\U000c3eb6\U000f7a231u\x9dD^Â𗼄\x1aG\U0007ef22nñ`\U000da360÷@\n\x80/¬\nÂÐ\U000b728f𦗌\U0001de87®z\x03\U00059104\U00108e16\x9d\U0001f1e1É\U0005e7306Ë\x8a\x81,𤢕\xad8\U000e97f4Ú\x80\x96\x01ç*»\x02tV\x10\x88\U0010e9de=\'\U000cc276\x8fì\x95¥N\x0c\x11\x02Ç\x13\x1añ\U000e8022\x0eè\U000a763e\U000f64b1rfîó?-Ò\U0010b715)Kö\x90²\U000d0369³U½X\x82Èñ¹Må5\x12\x04×OÙ96\xad\x16ü\x170\U0010b66f\x0f\U0008bdcf#´\x13<£ûÍ\x8eaI\x1aµ\x99Õg\U0006739f&¼&\x8e\U0001dee0\U00070feb=Ò\U000666a6\x88h\U000912f3uS\U00073781ÌrË\U00048882\U000f56aeÔ\U0010f2d16½²óäßÜ®K©\x00㌼Y\x9dx\U0009fd35Æò\x8aÈÙ\x10\U000bc77eX\x1c\U0008ac7cç\U0008abe6|¿ÙoTËÇLq\ue024\x98\U000ce75b\U0001dd56\x11𠴂ëy\uf5fe3\x96\U00019c40\U0010e33fÑ\U00062d69´\U000f67ea\x04ꈺ\x1aæÿ\x0b\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001802s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U0001a37b\U000e08f1\x11\x91\'彦\x87\x93J\U00055d5e\x0fÿ´\x13\U000443af+¬TK\x17CV\U00066404üòÇ<"±\x81ù¶ý\x9d?y\x07\U00039bda¢ñk\U000e38bb\x18\U001067faI\U00084cc46_AéÆvÙ]°V\x15ü\U000e332d\x8b\U0007934dOu@𧐟\x83¶Þ¥\U000812a9\U00064b76鄊÷\x8f\U000dace7\x95𩼳\x14\x12\U000689cb.,\U00016121\x86Í\U000ac795\x94"\x80Ø>â^º\U0004497e\x07\U0001ba9c,<8$ÖÎ«?\x9bî)õtzò¿*3\U0005ba7c \x84:*\U000f3147°¸\U000b6710Ò\U0005fcb4<ø\\\U00059564Ýú\x9c·8\U000a7c2cÅÆ\x8b\U0010fd9e\U00079861ZõM\x8câh\U0003eabdaù6yÚjS9+ºk\x87\x89pÏf\uf44e\x93\U000fbe08cÜ𧱌ö¿û\U000c037fî\x8cæÓ3\x01>I\U000f3802"\x8c\x87\x00«ÑNµ\U000b766cá\U00096af5\x99\rÈ^#ú>\r\\S£\x19#ds\U00079370ö\x0bG\U0003a42e\x84\x13\x02N\U00059eaeOÚ§\x7f\x96óÁ\x03\U0003ca3b ù\xad5Ç\x1e\x84\U00045782\U00092932~Û+²^\U00063b76\x1f\x06\U000c5b39\x13\x0c\U00073d67ãõË\x11yæø䴠\x11\U000cc4acÂ\x10\x07\x10Ü\U0004dc64\U000e5532\x1f\U000539cd\x8e#åÉ\x0bí\U0009b375\x87\x81\U000822d0\x95\U000df5c2\x08\U0009e03f\x85¤l@\U000cd0d6\x8fÈ\ueeea\x1d\x02\U000d90ddëÞE\'𨹖%\U000f7123í敇\x95\U0006d9c8\x14fÉ£y\U00083ffa\U0005aefarÌ¯_~5\'"3\U0009c892`Æ\x89âq\x9c-Ï\U001098d7\t\U0009bc62æ\U00068e97\x9a`å\U000c0b13\x88¤2p\x1dô{\U0008ed2fH\x9cg¢%\U0010734bóÙ\U000bc1e5óý\x82\U00056082\x1bwHÎ\x82\U0009ef5b\U000f44de\nüò\x05Ì»\U000fe0fd\U000e49d3\x957\x96\U000d5130\U0007cfea\x1aõ\U000cb70a\U000f7b29\x9c\U0003e1b1unCHQ\U0006d104ë\U0007ba73×ó«\U00081d1e\U000cee983ê럳Ì ¡á\x8dÈ&\x89ÒÐ@\U0010bfdbíB1_\x8f\x88_o\x9fk[E\U00036d8fÎ\U000c3992|-¾\x0f\U000d100c\U000f4c0d\x8c#\U000ecdb8ìi\x92CÜ%\u0a7d\x82\U0010ef32\U000f3380\\𡄼\U00071411\U000f6688¸ñT¬BR-\U0003d7beR\U000b34901¢\U000e715dÿ\x16Ò\x8cZ¼þ÷3ö憸o\U000d0759\x12^Ç|?\U00066a18%\x99𗷴\r\x95øÿêk\U000f974c\U0006dfe3-\x06\x901[\U000fd02b(\U000d70710 Ý?ö[\U000f61e2¨Ü«\x8e\x00\U000fa19f¯\nÇ²dð𤏼\x13\x80\x91ÄÞ!\U00042fb1\U00077cd6qö"VJ½a\x8b:qÂ\U000a690f\U000389afÒ§B{\x8a:4q_Ý\x99³/Ð-üÐ°)\U000a1f13m\U0001e8fa\x05\U0003221c\U00037608\x0e\U0005d520i7ë\x08t\x89\x92.ÄÐ\U000374e0E¯\r\x00l\U000f192a1\xad·¨$à!¦\U00013f71ª\U0005d304\U0003c717\x90\x06Û\x1cÌ\U0010764fø\x88Â\U00070ff1ª\x18\x9c\x98¬LhXß+ß\x17\x83¥\U000ae617¿\x82Äp\U0001355eîÒ\x00ú\U00054419\x00\x06\U000e7543𩲤\U000f96c1ý\U00058a9a\U00068773\U0007266f\x06𫖯#\x02Ô陲Ç\U000db2d2k7R\U000b455dúÜ\U000e0474(ñ-\x92¥M³Hã\x0c\x9c\x8cÀµ¼\x8d\U0003bb5fÍt*ù\x8cè¹!ÁUိ\U000fbbb8ºÀ𗠏\x88\U000bd66d\U000320f4\U00094df8\U00100901111111Ȁ\U0006ae000Ë\x0e\x08\U000bd019÷\U00073606P퇑Ç\xa0\x15{â\x8cÂ\x7f\x80©A*Ë\U00060555+»\U000901b9\U000cae05t~3O^üE:d>\x11Å\x19\x82\U000dc33cRG@H³y\x8c\x1d)\U0005cdef\U0008fb54È:\x8f«Ï8ím\'𗗂\U00019c42\U00054629Ã\U0003fac02IG§\x85䔄ÓD\x80𝠔\x7fÊ\x16\U000bc6a9~Xüë\U000d3b01\x15\x86\x8fÈ𣐟ñA\x0e\U001082fa\x1dÇ\x82\t\x85 X\x7f\U000a4474P\U0001965f\U00106125=\x05\U000dfadd¨ÅZ6𛉰U\U000a3a41`å\U000ccdb6G\x92Î\U000bf54d»¤ûåU\U000ecd64\x83\x82A!V\x83L\U000f65d6þ\U000f6952æ2\x99\x9c\x19µ\x89Ð\x81=\\ú\\\U00046fe7Ë\U000a98cd\U000a0e80\U00053bc2kg«þn\x9boC\x0eM\U00075220Ý!\x8d|\xad\x02Vú\x08\x16!´\U00085342\x99®\nq\U0009090f¬×\x10U\x98Àóå峤\x17ç{×ÃÐB\U0009a65a\x94\x7fÌ\x10\x18\U0001adf0\x9fà\\Ú®\x03É\x94Ô\x06£\x95ÖaÅ\U0008de58ÑäÞ\x9f\x8cóËn\x1cb¶\x95þ\U0006402dK \U00033f93\x8f\x1e\U001014f1Ë\x9bé\x9e\U00062d56\x80\x04\x16\U000e9261ê\x94𗵠\U0006f3d9ö\U000f59b1/"𪟛©Kb\x13\U000a84fa\U000621b9\x96T\x8f\U00096038.®%\x8cG\U000fb371\U0009250f\U0010e2b8\U0005a073é\U000d72b4Õ\U00074292ñb\U000c5dc8®ºR\x18Ú\x06ãÿ\x9e\U0006b1b4\x0eO\U000873de/È\x0f\x10G\x08<@\U000d77bfK§\U000e6c1aÓ\U000936b7=P¯&ÿs\x04Ð!U\U000bf111\U0008faed\U0009c0a5c§\U000f9929Æ¤"\U000c2718¤\U000d1926\x05\t𦒱\U000c63a7\U000f7662à9\U0009bbce&µÕ\U000470fc¥\x96ä\U000413d8f\x0b\x96\U0008c770zcÕÜîñ\x1a\U000540ec\U000ae6af*\U0005638bú5\U000ae50a\x1d\x0f\U0006db79ó«~cýeü\x8eõ\U000ad5d4Í{:\x18\x1c¹\xad\U0004256e\U0008c1e1Ø÷\x81@ð\x18ên-\x95\tøMq@R𮬈|s¶/\U0006a8f5wí\x82\nPGÃy\x12ö\x10©=`µ/âÍU/÷\x88´\x12`\U0004b951r\x05\U000949a1\U000a3d71\U000f8017\x0bØ\x0e\x12\U00062431>£°\U000acd75\x15RM$<ø輾L\x189»\x8bÐ³\U0010780d\x91!\x1fú\x88î蹅ó\U0009daf0\x0f~R\U000c3eb6\U000f7a231u\x9dD^Â𗼄\x1aG\U0007ef22nñ`\U000da360÷@\n\x80/¬\nÂÐ\U000b728f𦗌\U0001de87®z\x03\U00059104\U00108e16\x9d\U0001f1e1É\U0005e7306Ë\x8a\x81,𤢕\xad8\U000e97f4Ú\x80\x96\x01ç*»\x02tV\x10\x88\U0010e9de=\'\U000cc276\x8fì\x95¥N\x0c\x11\x02Ç\x13\x1añ\U000e8022\x0eè\U000a763e\U000f64b1rfîó?-Ò\U0010b715)Kö\x90²\U000d0369³U½X\x82Èñ¹Må5\x12\x04×OÙ96\xad\x16ü\x170\U0010b66f\x0f\U0008bdcf#´\x13<£ûÍ\x8eaI\x1aµ\x99Õg\U0006739f&¼&\x8e\U0001dee0\U00070feb=Ò\U000666a6\x88h\U000912f3uS\U00073781ÌrË\U00048882\U000f56aeÔ\U0010f2d16½²óäßÜ®K©\x00㌼Y\x9dx\U0009fd35Æò\x8aÈÙ\x10\U000bc77eX\x1c\U0008ac7cç\U0008abe6|¿ÙoTËÇLq\ue024\x98\U000ce75b\U0001dd56\x11𠴂ëy\uf5fe3\x96\U00019c40\U0010e33fÑ\U00062d69´\U000f67ea\x04ꈺ\x1aæÿ\x0b\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002082s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U0001a37b\U000e08f1\x11\x91\'彦\x87\x93J\U00055d5e\x0fÿ´\x13\U000443af+¬TK\x17CV\U00066404üòÇ<"±\x81ù¶ý\x9d?y\x07\U00039bda¢ñk\U000e38bb\x18\U001067faI\U00084cc46_AéÆvÙ]°V\x15ü\U000e332d\x8b\U0007934dOu@𧐟\x83¶Þ¥\U000812a9\U00064b76鄊÷\x8f\U000dace7\x95𩼳\x14\x12\U000689cb.,\U00016121\x86Í\U000ac795\x94"\x80Ø>â^º\U0004497e\x07\U0001ba9c,<8$ÖÎ«?\x9bî)õtzò¿*3\U0005ba7c \x84:*\U000f3147°¸\U000b6710Ò\U0005fcb4<ø\\\U00059564Ýú\x9c·8\U000a7c2cÅÆ\x8b\U0010fd9e\U00079861ZõM\x8câh\U0003eabdaù6yÚjS9+ºk\x87\x89pÏf\uf44e\x93\U000fbe08cÜ𧱌ö¿û\U000c037fî\x8cæÓ3\x01>I\U000f3802"\x8c\x87\x00«ÑNµ\U000b766cá\U00096af5\x99\rÈ^#ú>\r\\S£\x19#ds\U00079370ö\x0bG\U0003a42e\x84\x13\x02N\U00059eaeOÚ§\x7f\x96óÁ\x03\U0003ca3b ù\xad5Ç\x1e\x84\U00045782\U00092932~Û+²^\U00063b76\x1f\x06\U000c5b39\x13\x0c\U00073d67ãõË\x11yæø䴠\x11\U000cc4acÂ\x10\x07\x10Ü\U0004dc64\U000e5532\x1f\U000539cd\x8e#åÉ\x0bí\U0009b375\x87\x81\U000822d0\x95\U000df5c2\x08\U0009e03f\x85¤l@\U000cd0d6\x8fÈ\ueeea\x1d\x02\U000d90ddëÞE\'𨹖%\U000f7123í敇\x95\U0006d9c8\x14fÉ£y\U00083ffa\U0005aefarÌ¯_~5\'"3\U0009c892`Æ\x89âq\x9c-Ï\U001098d7\t\U0009bc62æ\U00068e97\x9a`å\U000c0b13\x88¤2p\x1dô{\U0008ed2fH\x9cg¢%\U0010734bóÙ\U000bc1e5óý\x82\U00056082\x1bwHÎ\x82\U0009ef5b\U000f44de\nüò\x05Ì»\U000fe0fd\U000e49d3\x957\x96\U000d5130\U0007cfea\x1aõ\U000cb70a\U000f7b29\x9c\U0003e1b1unCHQ\U0006d104ë\U0007ba73×ó«\U00081d1e\U000cee983ê럳Ì ¡á\x8dÈ&\x89ÒÐ@\U0010bfdbíB1_\x8f\x88_o\x9fk[E\U00036d8fÎ\U000c3992|-¾\x0f\U000d100c\U000f4c0d\x8c#\U000ecdb8ìi\x92CÜ%\u0a7d\x82\U0010ef32\U000f3380\\𡄼\U00071411\U000f6688¸ñT¬BR-\U0003d7beR\U000b34901¢\U000e715dÿ\x16Ò\x8cZ¼þ÷3ö憸o\U000d0759\x12^Ç|?\U00066a18%\x99𗷴\r\x95øÿêk\U000f974c\U0006dfe3-\x06\x901[\U000fd02b(\U000d70710 Ý?ö[\U000f61e2¨Ü«\x8e\x00\U000fa19f¯\nÇ²dð𤏼\x13\x80\x91ÄÞ!\U00042fb1\U00077cd6qö"VJ½a\x8b:qÂ\U000a690f\U000389afÒ§B{\x8a:4q_Ý\x99³/Ð-üÐ°)\U000a1f13m\U0001e8fa\x05\U0003221c\U00037608\x0e\U0005d520i7ë\x08t\x89\x92.ÄÐ\U000374e0E¯\r\x00l\U000f192a1\xad·¨$à!¦\U00013f71ª\U0005d304\U0003c717\x90\x06Û\x1cÌ\U0010764fø\x88Â\U00070ff1ª\x18\x9c\x98¬LhXß+ß\x17\x83¥\U000ae617¿\x82Äp\U0001355eîÒ\x00ú\U00054419\x00\x06\U000e7543𩲤\U000f96c1ý\U00058a9a\U00068773\U0007266f\x06𫖯#\x02Ô陲Ç\U000db2d2k7R\U000b455dúÜ\U000e0474(ñ-\x92¥M³Hã\x0c\x9c\x8cÀµ¼\x8d\U0003bb5fÍt*ù\x8cè¹!ÁUိ\U000fbbb8ºÀ𗠏\x88\U000bd66d\U000320f4\U00094df8\U00100901111111Ȁ\U0006ae000Ë\x0e\x08\U000bd019÷\U00073606P퇑Ç\xa0\x15{â\x8cÂ\x7f\x80©A*Ë\U00060555+»\U000901b9\U000cae05t~3O^üE:d>\x11Å\x19\x82\U000dc33cRG@H³y\x8c\x1d)\U0005cdef\U0008fb54È:\x8f«Ï8ím\'𗗂\U00019c42\U00054629Ã\U0003fac02IG§\x85䔄ÓD\x80𝠔\x7fÊ\x16\U000bc6a9~Xüë\U000d3b01\x15\x86\x8fÈ𣐟ñA\x0e\U001082fa\x1dÇ\x82\t\x85 X\x7f\U000a4474P\U0001965f\U00106125=\x05\U000dfadd¨ÅZ6𛉰U\U000a3a41`å\U000ccdb6G\x92Î\U000bf54d»¤ûåU\U000ecd64\x83\x82A!V\x83L\U000f65d6þ\U000f6952æ2\x99\x9c\x19µ\x89Ð\x81=\\ú\\\U00046fe7Ë\U000a98cd\U000a0e80\U00053bc2kg«þn\x9boC\x0eM\U00075220Ý!\x8d|\xad\x02Vú\x08\x16!´\U00085342\x99®\nq\U0009090f¬×\x10U\x98Àóå峤\x17ç{×ÃÐB\U0009a65a\x94\x7fÌ\x10\x18\U0001adf0\x9fà\\Ú®\x03É\x94Ô\x06£\x95ÖaÅ\U0008de58ÑäÞ\x9f\x8cóËn\x1cb¶\x95þ\U0006402dK \U00033f93\x8f\x1e\U001014f1Ë\x9bé\x9e\U00062d56\x80\x04\x16\U000e9261ê\x94𗵠\U0006f3d9ö\U000f59b1/"𪟛©Kb\x13\U000a84fa\U000621b9\x96T\x8f\U00096038.®%\x8cG\U000fb371\U0009250f\U0010e2b8\U0005a073é\U000d72b4Õ\U00074292ñb\U000c5dc8®ºR\x18Ú\x06ãÿ\x9e\U0006b1b4\x0eO\U000873de/È\x0f\x10G\x08<@\U000d77bfK§\U000e6c1aÓ\U000936b7=P¯&ÿs\x04Ð!U\U000bf111\U0008faed\U0009c0a5c§\U000f9929Æ¤"\U000c2718¤\U000d1926\x05\t𦒱\U000c63a7\U000f7662à9\U0009bbce&µÕ\U000470fc¥\x96ä\U000413d8f\x0b\x96\U0008c770zcÕÜîñ\x1a\U000540ec\U000ae6af*\U0005638bú5\U000ae50a\x1d\x0f\U0006db79ó«~cýeü\x8eõ\U000ad5d4Í{:\x18\x1c¹\xad\U0004256e\U0008c1e1Ø÷\x81@ð\x18ên-\x95\tøMq@R𮬈|s¶/\U0006a8f5wí\x82\nPGÃy\x12ö\x10©=`µ/âÍU/÷\x88´\x12`\U0004b951r\x05\U000949a1\U000a3d71\U000f8017\x0bØ\x0e\x12\U00062431>£°\U000acd75\x15RM$<ø輾L\x189»\x8bÐ³\U0010780d\x91!\x1fú\x88î蹅ó\U0009daf0\x0f~R\U000c3eb6\U000f7a231u\x9dD^Â𗼄\x1aG\U0007ef22nñ`\U000da360÷@\n\x80/¬\nÂÐ\U000b728f𦗌\U0001de87®z\x03\U00059104\U00108e16\x9d\U0001f1e1É\U0005e7306Ë\x8a\x81,𤢕\xad8\U000e97f4Ú\x80\x96\x01ç*»\x02tV\x10\x88\U0010e9de=\'\U000cc276\x8fì\x95¥N\x0c\x11\x02Ç\x13\x1añ\U000e8022\x0eè\U000a763e\U000f64b1rfîó?-Ò\U0010b715)Kö\x90²\U000d0369³U½X\x82Èñ¹Må5\x12\x04×OÙ96\xad\x16ü\x170\U0010b66f\x0f\U0008bdcf#´\x13<£ûÍ\x8eaI\x1aµ\x99Õg\U0006739f&¼&\x8e\U0001dee0\U00070feb=Ò\U000666a6\x88h\U000912f3uS\U00073781ÌrË\U00048882\U000f56aeÔ\U0010f2d16½²óäJÜ®K©\x00㌼Y\x9dx\U0009fd35Æò\x8aÈÙ\x10\U000bc77eX\x1c\U0008ac7cç\U0008abe6|¿ÙoTËÇLq\ue024\x98\U000ce75b\U0001dd56\x11𠴂ëy\uf5fe3\x96\U00019c40\U0010e33fÑ\U00062d69´\U000f67ea\x04ꈺ\x1aæÿ\x0b\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002058s
====================================================================================================
2025-09-19 00:37:58 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '\U0001a37b\U000e08f1\x11\x91\'彦\x87\x93J\U00055d5e\x0fÿ´\x13\U000443af+¬TK\x17CV\U00066404üòÇ<"±\x81ù¶ý\x9d?y\x07\U00039bda¢ñk\U000e38bb\x18\U001067faI\U00084cc46_AéÆvÙ]°V\x15ü\U000e332d\x8b\U0007934dOu@𧐟\x83¶Þ¥\U000812a9\U00064b76鄊È\x8f\U000dace7\x95𩼳\x14\x12\U000689cb.,\U00016121\x86Í\U000ac795\x94"\x80Ø>â^º\U0004497e\x07\U0001ba9c,<8$ÖÎ«?\x9bî)õtzò¿*3\U0005ba7c \x84:*\U000f3147°¸\U000b6710Ò\U0005fcb4<ø\\\U00059564Ýú\x9c·8\U000a7c2cÅÆ\x8b\U0010fd9e\U00079861ZõM\x8câh\U0003eabdaù6yÚjS9+ºk\x87\x89pÏf\uf44e\x93\U000fbe08cÜ𧱌ö¿û\U000c037fî\x8cæÓ3\x01>I\U000f3802"\x8c\x87\x00«ÑNµ\U000b766cá\U00096af5\x99\rÈ^#ú>\r\\S£\x19#ds\U00079370ö\x0bG\U0003a42e\x84\x13\x02N\U00059eaeOÚ§\x7f\x96óÁ\x03\U0003ca3b ù\xad5Ç\x1e\x84\U00045782\U00092932~Û+²^\U00063b76\x1f\x06\U000c5b39\x13\x0c\U00073d67ãõË\x11yæø䴠\x11\U000cc4acÂ\x10\x07\x10Ü\U0004dc64\U000e5532\x1f\U000539cd\x8e#åÉ\x0bí\U0009b375\x87\x81\U000822d0\x95\U000df5c2\x08\U0009e03f\x85¤l@\U000cd0d6\x8fÈ\ueeea\x1d\x02\U000d90ddëÞE\'𨹖%\U000f7123í敇\x95\U0006d9c8\x14fÉ£y\U00083ffa\U0005aefarÌ¯_~5\'"3\U0009c892`Æ\x89âq\x9c-Ï\U001098d7\t\U0009bc62æ\U00068e97\x9a`å\U000c0b13\x88¤2p\x1dô{\U0008ed2fH\x9cg¢%\U0010734bóÙ\U000bc1e5óý\x82\U00056082\x1bwHÎ\x82\U0009ef5b\U000f44de\nüò\x05Ì»\U000fe0fd\U000e49d3\x957\x96\U000d5130\U0007cfea\x1aõ\U000cb70a\U000f7b29\x9c\U0003e1b1unCHQ\U0006d104ë\U0007ba73×ó«\U00081d1e\U000cee983ê럳Ì ¡á\x8dÈ&\x89ÒÐ@\U0010bfdbíB1_\x8f\x88_o\x9fk[E\U00036d8fÎ\U000c3992|-¾\x0f\U000d100c\U000f4c0d\x8c#\U000ecdb8ìi\x92CÜ%\u0a7d\x82\U0010ef32\U000f3380\\𡄼\U00071411\U000f6688¸ñT¬BR-\U0003d7beR\U000b34901¢\U000e715dÿ\x16Ò\x8cZ¼þ÷3ö憸o\U000d0759\x12^Ç|?\U00066a18%\x99𗷴\r\x95øÿêk\U000f974c\U0006dfe3-\x06\x901[\U000fd02b(\U000d70710 Ý?ö[\U000f61e2¨Ü«\x8e\x00\U000fa19f¯\nÇ²dð𤏼\x13\x80\x91ÄÞ!\U00042fb1\U00077cd6qö"VJ½a\x8b:qÂ\U000a690f\U000389afÒ§B{\x8a:4q_Ý\x99³/Ð-üÐ°)\U000a1f13m\U0001e8fa\x05\U0003221c\U00037608\x0e\U0005d520i7ë\x08t\x89\x92.ÄÐ\U000374e0E¯\r\x00l\U000f192a1\xad·¨$à!¦\U00013f71ª\U0005d304\U0003c717\x90\x06Û\x1cÌ\U0010764fø\x88Â\U00070ff1ª\x18\x9c\x98¬LhXß+ß\x17\x83¥\U000ae617¿\x82Äp\U0001355eîÒ\x00ú\U00054419\x00\x06\U000e7543𩲤\U000f96c1ý\U00058a9a\U00068773\U0007266f\x06𫖯#\x02Ô陲Ç\U000db2d2k7R\U000b455dúÜ\U000e0474(ñ-\x92¥M³Hã\x0c\x9c\x8cÀµ¼\x8d\U0003bb5fÍt*ù\x8cè¹!ÁUိ\U000fbbb8ºÀ𗠏\x88\U000bd66d\U000320f4\U00094df8\U00100901111111Ȁ\U0006ae000Ë\x0e\x08\U000bd019÷\U00073606P퇑Ç\xa0\x15{â\x8cÂ\x7f\x80©A*Ë\U00060555+»\U000901b9\U000cae05t~3O^üE:d>\x11Å\x19\x82\U000dc33cRG@H³y\x8c\x1d)\U0005cdef\U0008fb54È:\x8f«Ï8ím\'𗗂\U00019c42\U00054629Ã\U0003fac02IG§\x85䔄ÓD\x80𝠔\x7fÊ\x16\U000bc6a9~Xüë\U000d3b01\x15\x86\x8fÈ𣐟ñA\x0e\U001082fa\x1dÇ\x82\t\x85 X\x7f\U000a4474P\U0001965f\U00106125=\x05\U000dfadd¨ÅZ6𛉰U\U000a3a41`å\U000ccdb6G\x92Î\U000bf54d»¤ûåU\U000ecd64\x83\x82A!V\x83L\U000f65d6þ\U000f6952æ2\x99\x9c\x19µ\x89Ð\x81=\\ú\\\U00046fe7Ë\U000a98cd\U000a0e80\U00053bc2kg«þn\x9boC\x0eM\U00075220Ý!\x8d|\xad\x02Vú\x08\x16!´\U00085342\x99®\nq\U0009090f¬×\x10U\x98Àóå峤\x17ç{×ÃÐB\U0009a65a\x94\x7fÌ\x10\x18\U0001adf0\x9fà\\Ú®\x03É\x94Ô\x06£\x95ÖaÅ\U0008de58ÑäÞ\x9f\x8cóËn\x1cb¶\x95þ\U0006402dK \U00033f93\x8f\x1e\U001014f1Ë\x9bé\x9e\U00062d56\x80\x04\x16\U000e9261ê\x94𗵠\U0006f3d9ö\U000f59b1/"𪟛©Kb\x13\U000a84fa\U000621b9\x96T\x8f\U00096038.®%\x8cG\U000fb371\U0009250f\U0010e2b8\U0005a073é\U000d72b4Õ\U00074292ñb\U000c5dc8®ºR\x18Ú\x06ãÿ\x9e\U0006b1b4\x0eO\U000873de/È\x0f\x10G\x08<@\U000d77bfK§\U000e6c1aÓ\U000936b7=P¯&ÿs\x04Ð!U\U000bf111\U0008faed\U0009c0a5c§\U000f9929Æ¤"\U000c2718¤\U000d1926\x05\t𦒱\U000c63a7\U000f7662à9\U0009bbce&µÕ\U000470fc¥\x96ä\U000413d8f\x0b\x96\U0008c770zcÕÜîñ\x1a\U000540ec\U000ae6af*\U0005638bú5\U000ae50a\x1d\x0f\U0006db79ó«~cýeü\x8eõ\U000ad5d4Í{:\x18\x1c¹\xad\U0004256e\U0008c1e1Ø÷\x81@ð\x18ên-\x95\tøMq@R𮬈|s¶/\U0006a8f5wí\x82\nPGÃy\x12ö\x10©=`µ/âÍU/÷\x88´\x12`\U0004b951r\x05\U000949a1\U000a3d71\U000f8017\x0bØ\x0e\x12\U00062431>£°\U000acd75\x15RM$<ø輾L\x189»\x8bÐ³\U0010780d\x91!\x1fú\x88î蹅ó\U0009daf0\x0f~R\U000c3eb6\U000f7a231u\x9dD^Â𗼄\x1aG\U0007ef22nñ`\U000da360÷@\n\x80/¬\nÂÐ\U000b728f𦗌\U0001de87®z\x03\U00059104\U00108e16\x9d\U0001f1e1É\U0005e7306Ë\x8a\x81,𤢕\xad8\U000e97f4Ú\x80\x96\x01ç*»\x02tV\x10\x88\U0010e9de=\'\U000cc276\x8fì\x95¥N\x0c\x11\x02Ç\x13\x1añ\U000e8022\x0eè\U000a763e\U000f64b1rfîó?-Ò\U0010b715)Kö\x90²\U000d0369³U½X\x82Èñ¹Må5\x12\x04×OÙ96\xad\x16ü\x170\U0010b66f\x0f\U0008bdcf#´\x13<£ûÍ\x8eaI\x1aµ\x99Õg\U0006739f&¼&\x8e\U0001dee0\U00070feb=Ò\U000666a6\x88h\U000912f3uS\U00073781ÌrË\U00048882\U000f56aeÔ\U0010f2d16½²óäJÜ®K©\x00㌼Y\x9dx\U0009fd35Æò\x8aÈÙ\x10\U000bc77eX\x1c\U0008ac7cç\U0008abe6|¿ÙoTËÇLq\ue024\x98\U000ce75b\U0001dd56\x11𠴂ëy\uf5fe3\x96\U00019c40\U0010e33fÑ\U00062d69´\U000f67ea\x04ꈺ\x1aæÿ\x0b\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001772s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 31611, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 31611, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001737s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 31611, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 31611, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001597s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 31611, 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 31611, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001618s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['öþXÛ\x18s\U000c44b1^}ÎÖYI\U00013d4f捲¬R3¢'], 'password': 14}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['öþXÛ\x18s\U000c44b1^}ÎÖYI\U00013d4f捲¬R3¢'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 14, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001953s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['öþXÛ\x18s\U000c44b1^}ÎÖYI\U00013d4f捲¬R3¢'], 'password': -17701465}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['öþXÛ\x18s\U000c44b1^}ÎÖYI\U00013d4f捲¬R3¢'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -17701465, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001728s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['öþXÛ𠸃75\x1f54\U0003d7065\U00060c19\U00013d4f捲¬R3¢'], 'password': -17701465}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['öþXÛ𠸃75\x1f54\U0003d7065\U00060c19\U00013d4f捲¬R3¢'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -17701465, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001728s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['öþXÛ𠸃75\x1f54\U0003d7065\U00060c19\U00013d4f捲¬R3¢'], 'password': 8457754}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['öþXÛ𠸃75\x1f54\U0003d7065\U00060c19\U00013d4f捲¬R3¢'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 8457754, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001862s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': '   '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001718s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x18', '\x91\x0b>\U0008a7fc\x10"a', '\x83«Wq', '\U0003d10e\U00081df6'], 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x18', '\x91\x0b>\U0008a7fc\x10"a', '\x83«Wq', '\U0003d10e\U00081df6'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001769s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x18', '\x91\x0b>\U00055a081', '"a', '\x83«Wq', '\U0003d10e\U00081df6'], 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x18', '\x91\x0b>\U00055a081', '"a', '\x83«Wq', '\U0003d10e\U00081df6'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001809s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x18', '\x91\x0b>\U00055a081', '"a', 'W«Wq', '\U0003d10e\U00081df6'], 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x18', '\x91\x0b>\U00055a081', '"a', 'W«Wq', '\U0003d10e\U00081df6'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001999s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x18', '\x91\x0b>\U00055a081', '"a', 'W«Wq', '\U0003d10e\U00081df6'], 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x18', '\x91\x0b>\U00055a081', '"a', 'W«Wq', '\U0003d10e\U00081df6'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x18', '\x91\x0b>\U00055a081', '"a', 'W«Wq', '\U0003d10e\U00081df6'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x18', '\x91\x0b>\U00055a081', '"a', 'W«Wq', '\U0003d10e\U00081df6'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001688s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x18', '\x91\x0b>\U00055a081', '\U0003d10e\U00081df6', 'W«Wq', '\U0003d10e\U00081df6'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x18', '\x91\x0b>\U00055a081', '\U0003d10e\U00081df6', 'W«Wq', '\U0003d10e\U00081df6'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00175s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['\x18', '\x91\x0b>\U00055a08', '3\U0003d10e\U00081df6', 'W«Wq', '\U0003d10e\U00081df6'], 'password': '../../etc/passwd'}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['\x18', '\x91\x0b>\U00055a08', '3\U0003d10e\U00081df6', 'W«Wq', '\U0003d10e\U00081df6'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001781s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': False}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001824s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '£å3Í\r·\x0c¬\U0005ad5c\U00042c07ç\U0003fec6#V\\Î\x0fý\U0008b01d\x91\U000f12b4ä\ná\x95å\U000d2fb99~\x10\x81\tl\U000e6d6c\U000e2cd6\x9f\U000c1d91QQaí~\x12\x83¥\U00082b35Y\x17\U000c6e98ꚖQÝ¹\x84\U000b4913q©|D\U000fe4a0ª\x8dµ\U000fb873\x8dL"\U00048083\U0004b8ce\x88ïa?\U000acc7b\U0001ee6bP\r\U000f80d5e\x95\U00048b5e\x14"·\U0005d2f7Ôe\x1ccäaV\x16\U000cc4a9\x94ç§}\'p\U0007dc28p\U00100981ãù¢ñ\U000da359\x19r\x86𫼥\x07þuô;©\x1aÂMx\U000780e1\x1e\U000f76ef½e\x92\x89\t\x8e%\x8c\x02\x7fù\U000477d2q,\x03|\x85·n¾\U0010a342\x96yýé\U00099b80\x99\U0005b15a_ðáµÎ\U0010fd55\U000d72f9ö~Û\x05¸¾GOÊ#*\U0006ec03\x9a\U0003b6e1\x92Ó2\x98tM\U000327eb\U000ad736c𡳍\U0009354c\U000cf721\x1eA¨5ôÐ\U000acd22𮦯\x8fàü\U00098bddàÑ\x0c\xadC\x13tWµ-T\x99R\x1eX/¤Ø\U000d08fb¿È¬\U000867e0¸³´\tP\x8b\x03¿\U0004d63er\U0008341f1ó\x1emÀ\U000e95bb\x11ðf\U000f26efª\x11ÝN\x89§\U00088316\x9bãâ\U0008f9b0ÚØ\x93Dq\U00047f9aûGEn©\U00105bd1\U0002ef37Ú\U001037c5\x99\rÑ\U00099b41¬\x04\x94\x19ó\x92K\U0005c2fb\x9f\x14\x0e¥\x86\x8bÔ\x00lÆËùËF\x88\x1e\x8eüºò\U000d868a\U000731d1\x12\x04\U0003aae1\x97%Â\xad\U000aec96\x17ý\x96røÆ🮙\x98µ6½\xadþ¸óñü_÷Ñõ%©Í£8²%¿ñ𠕻\U000cad10\U000e3a3e\U00047e5a\\7J7=Æ\U000e2bb7I5g\U0007ea8d\U0010bf9e\ne\U000a1f0aá¡\x81\U000af0ebE\x9e\U000834b3Â&óè\x800\x9e\U000c94cf\x97«\x83·\U0006b3b9,\U000a8266i¾\U000cd369:\x11\x0f\x07\U0010115b¼\U000ef742K\x7fJ\U00051d27#됧\U00054c7em\U0008efb0\x07²\x1c\x0eò\U0006210e\U0008bcf4{\U000f2210Í\x8d\U000bde30à\U00010f85·Cüé°í^\U00014ab7k;\U001091123\x90º\U000b3d34øµr!«ý\U000df94ad\x0e\U000d1114M_ËQ𥭥\x18\U00065576\x0btG¦E\x84L\x1d\x05\U000cc4d3\x0c¦\x8f\U0005b75c\x89\U0003979d\U000d05a6\x95%\U000e56c5Ü\U000d657fÊ\x98ª-fj@Ã.ïL𰤽\x12\x90w©|\x8c \\\U0004a1d9Å?¾×\x1f\U00015af5\U00067bb3\U000c7c17L§\x89\n\x19$\x17\U000f3e8aý\U000e662c\x9d«Foë𭫜\U00046a16\x00Ò\U00105bff\x14\x84¡\U000812ef\U000b54bf\U0005e8e1⟌Ñ%JÅ\x90ú\x9béUK`¦ﮡ(iãb\U0003e7f1êp=\x08\U000e75c2\U000c6590D\U00014d17P\U000feca0\x17sDÓéá\x88L_,¼·2\x9e¯Ëì\U0003a028Q\U000cca00üÉ)\x82\U00055ff2|ø\x181.\xa0\U00049648Ù_\x8c\U000fdc70\x94𑋶`¦°xqû;D0K\x13]Qo06\x02\U0006b2f8´4\x99Ù\U0003fa8e渗ß\x0e»\U000da231¯Kî\U000ba133ÍÔ9ú#\U000a29c7\U000ae8b4Õ\x90ßÒå~¤H𧌾\U000a7022£\xadÛ\x0bÑ/\U00084715Á\U00050008\U00062668Ë\U000b9350\x84·é"\U00102fdd\U000a994e\U0003ceabRý~\x8e(¢𨧱ÅE\x116<¬£øKv\U000c1621¶e\xad\U0009cef5©¿M\x19fK\'?Ôv\U00105e60q\x15\x80\x8eß\x04Å\U0008f183\x1a\x9b$\U000c9da6Ô\x1d\x17ý\x1a}\U000e5ed3#\U0006bdd9\r\U000f323b\x03Gä\U0006df35o0¯^¦ip×\x083¿4ÕÜ\x12\x02𛆢@\x16\x1f\x19ÿ\x0e*\x0f¨Ê¨쬓¬u\x1bõ\x04º\x19V\x97\U00105267𠿈DuU\U000cfba13ÂÁÏ\U00031565Ý\U0003c02bè\x80\U000b2389\x9d\x0b\x04xP\x94ôîE;\x0bä\x1f\xadj.\\\x83\x88\U0004a6e4ú¹\U00087d60¤\nþ\x1dvІI\x15A\x92N\x19\x8f\x1a\xadá\x1ctb½MàR\x05ú²/É\U0003eed3\U000dab74¢\U000bb668𭰚IÍ\U000dafd2ñ\U000e1f88[\x04r𥡸Ø\x9e\U0003846e$RP\U000a2730\x0bTt\U000d74e6\U0008f47b\x9f\x16Åô3\U0004941e^\U000ca978\x12\x06\x0c\U000fcf81£\x94\U000a4e4dmë«³Ý¡\x81¡ëð-ÒáÔÇTtNïÝS\x07\U0003ba2d¿u\x97"\x8dQq$\U000b9719\U000d4703\U000a7529\x9a}\x8c\x8c\U000689c3¼893Ðþ7µzF\U000c50caÁ¢𭄓\U000c44bd_4\U0005146abK\U0009981cW\x1a\U0003a8e8´\U00010a360D\x00ù®\x90\x1c¦¿m\x02iÌ9叕8\ue3b9巛\U00047ee9åÂ@¶S\x9a\x00\x89\x81𭥑<aBU¶¨V\x8e$6\x9e°Ð\U00092782õ\x88NC<N\t\x80󠇎¸àd\U000c3c3aª2\U0001ab5d\U000ebf2bÕ붽Dd\x84õwra\U0005e0bc}Ø:\U0001e8fc\U000cf896\U00043169\U000341cf\U0002f24a\U00061fbf\U000b7f04\U000ac060\U00036af3¹f´æ\x17út\U000922dew䁎\U00093a1aHâ\x92;\x80X\x87Ì\x82\x07j±\U000d1b1avü-UÙ\U0003e8dfÉ\x0bä\x94\U000ac10e=ãw¸\x98\U00085d37«\x89là§úªXÝÎT\'S2\x82ÑYn\x96\x00\U000c42f1QÄ\x06ÚóûQ\U00061dc3ã©¦\xad0ÆZg\U000cdbe1<B\x1cXc\x82\x0bwÐ\x06\U0001c8bc\x8e\xa0\x9d\U0003cbfe\\\\\U00046e6b\x18\U0001ce63\x80\U00098b46&\x0bIT\U000e86c0\t\U000bb40a\U000ac8cc\U00102089梦ï¸Ó𰧎êl\U00035445\U0001e6b9¨V\U000e8ee4¢R\x1d\U0010cf54(\U00038483\x9c0\xadãÛ\x03\\Ø\x07À÷Æ"üg´©á\x86`\x05\U00016263HFì\U0010cee1\x00\U000abb80x.\U0008b9c5\U000c1de7\rø{\x1b\x9bÛ\U000b46d1EÙ¥n¾\x9e³\x85/:¹\x05\r\x98\U0008e9122\U0001b3c6æÏ\U0004d8b4Õ%ç}¹\x18\U000399ca\U000eb196<@\x1fæ\x7f\x97\x8e£Ê\x14Ú\U0004b7a1\U000edb30>Xß\x9f\U00055552\x98&\x18Å\x8fR+ì`\x97ü\U00051134\U000a5e56\x1f\x90\x18\U00051d70\U000100ff9r\x02\U000489f5"=\U0008694b\x95°\x85à#æ够\U0006a36fÁM\U0006d19dMà\U000ed40d\U000bd85e', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001773s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '£å3Í\r·\x0c¬\U0005ad5c\U00042c07ç\U0003fec6#V\\Î\x0fý\U0008b01d\x91\U000f12b4ä\ná\x95å\U000d2fb99~\x10\x81\tl\U000e6d6c\U000e2cd6\x9f\U000c1d91QQaí~\x12\x83¥\U00082b35Y\x17\U000c6e98ꚖQÝ¹\x84\U000b4913q©|D\U000fe4a0ª\x8dµ\U000fb873\x8dL"\U00048083\U0004b8ce\x88ïa?\U000acc7b\U0001ee6bP\r\U000f80d5e\x95\U00048b5e\x14"·\U0005d2f7Ôe\x1ccäaV\x16\U000cc4a9\x94ç§}\'p\U0007dc28p\U00100981ãù¢ñ\U000da359\x19r\x86𫼥\x07þuô;©\x1aÂMx\U000780e1\x1e\U000f76ef½e\x92\x89\t\x8e%\x8c\x02\x7fù\U000477d2q,\x03|\x85·n¾\U0010a342\x96yýé\U00099b80\x99\U0005b15a_ðáµÎ\U0010fd55\U000d72f9ö~Û\x05¸¾GOÊ#*\U0006ec03\x9a\U0003b6e1\x92Ó2\x98tM\U000327eb\U000ad736c𡳍\U0009354c\U000cf721\x1eA¨5ôÐ\U000acd22𮦯\x8fàü\U00098bddàÑ\x0c\xadC\x13tWµ-T\x99R\x1eX/¤Ø\U000d08fb¿È¬\U000867e0¸³´\tP\x8b\x03¿\U0004d63er\U0008341f1ó\x1emÀ\U000e95bb\x11ðf\U000f26efª\x11ÝN\x89§\U00088316\x9bãâ\U0008f9b0ÚØ\x93Dq\U00047f9aûGEn©\U00105bd1\U0002ef37Ú\U001037c5\x99\rÑ\U00099b41¬\x04\x94\x19ó\x92K\U0005c2fb\x9f\x14\x0e¥\x86\x8bÔ\x00lÆËùËF\x88\x1e\x8eüºò\U000d868a\U000731d1\x12\x04\U0003aae1\x97%Â\xad\U000aec96\x17ý\x96røÆ🮙\x98µ6½\xadþ¸óñü_÷Ñõ%©Í£8²%¿ñ𠕻\U000cad10\U000e3a3e\U00047e5a\\7J7=Æ\U000e2bb7I5g\U0007ea8d\U0010bf9e\ne\U000a1f0aá¡\x81\U000af0ebE\x9e\U000834b3Â&óè\x800\x9e\U000c94cf\x97«\x83·\U0006b3b9,\U000a8266i¾\U000cd369:\x11\x0f\x07\U0010115b¼\U000ef742K\x7fJ\U00051d27#됧\U00054c7em\U0008efb0\x07²\x1c\x0eò\U0006210e\U0008bcf4{\U000f2210Í\x8d\U000bde30à\U00010f85·Cüé°í^\U00014ab7k;\U001091123\x90º\U000b3d34øµr!«ý\U000df94ad\x0e\U000d1114M_ËQ𥭥\x18\U00065576\x0btG¦E\x84L\x1d\x05\U000cc4d3\x0c¦\x8f\U0005b75c\x89\U0003979d\U000d05a6\x95%\U000e56c5Ü\U000d657fÊ\x98ª-fj@Ã.ïL𰤽\x12\x90w©|\x8c \\\U0004a1d9Å?¾×\x1f\U00015af5\U00067bb3\U000c7c17L§\x89\n\x19$\x17\U000f3e8aý\U000e662c\x9d«Foë𭫜\U00046a16\x00Ò\U00105bff\x14\x84¡\U000812ef\U000b54bf\U0005e8e1⟌Ñ%JÅ\x90ú\x9béUK`¦ﮡ(iãb\U0003e7f1êp=\x08\U000e75c2\U000c6590D\U00014d17P\U000feca0\x17sDÓéá\x88L_,¼·2\x9e¯Ëì\U0003a028Q\U000cca00üÉ)\x82\U00055ff2|ø\x181.\xa0\U00049648Ù_\x8c\U000fdc70\x94𑋶`¦°xqû;D0K\x13]Qo06\x02\U0006b2f8´4\x99Ù\U0003fa8e渗ß\x0e»\U000da231¯Kî\U000ba133ÍÔ9ú#\U000a29c7\U000ae8b4Õ\x90ßÒå~¤H𧌾\U000a7022£\xadÛ\x0bÑ/\U00084715Á\U00050008\U00062668Ë\U000b9350\x84·é"\U00102fdd\U000a994e\U0003ceabRý~\x8e(¢𨧱ÅE\x116<¬£øKv\U000c1621¶e\xad\U0009cef5©¿M\x19fK\'?Ôv\U00105e60q\x15\x80\x8eß\x04Å\U0008f183\x1a\x9b$\U000c9da6Ô\x1d\x17ý\x1a}\U000e5ed3#\U0006bdd9\r\U000f323b\x03Gä\U0006df35o0¯^¦ip×\x083¿4ÕÜ\x12\x02𛆢@\x16\x1f\x19ÿ\x0e*\x0f¨Ê¨쬓¬u\x1bõ\x04º\x19V\x97\U00105267𠿈DuU\U000cfba13ÂÁÏ\U00031565Ý\U0003c02bè\x80\U000b2389\x9d\x0b\x04xP\x94ôîE;\x0bä\x1f\xadj.\\\x83\x88\U0004a6e4ú¹\U00087d60¤\nþ\x1dvІI\x15A\x92N\x19\x8f\x1a\xad¸\x1ctb½MàR\x05ú²/É\U0003eed3\U000dab74¢\U000bb668𭰚IÍ\U000dafd2ñ\U000e1f88[\x04r𥡸Ø\x9e\U0003846e$RP\U000a2730\x0bTt\U000d74e6\U0008f47b\x9f\x16Åô3\U0004941e^\U000ca978\x12\x06\x0c\U000fcf81£\x94\U000a4e4dmë«³Ý¡\x81¡ëð-ÒáÔÇTtNïÝS\x07\U0003ba2d¿u\x97"\x8dQq$\U000b9719\U000d4703\U000a7529\x9a}\x8c\x8c\U000689c3¼893Ðþ7µzF\U000c50caÁ¢𭄓\U000c44bd_4\U0005146abK\U0009981cW\x1a\U0003a8e8´\U00010a360D\x00ù®\x90\x1c¦¿m\x02iÌ9叕8\ue3b9巛\U00047ee9åÂ@¶S\x9a\x00\x89\x81𭥑<aBU¶¨V\x8e$6\x9e°Ð\U00092782õ\x88NC<N\t\x80󠇎¸àd\U000c3c3aª2\U0001ab5d\U000ebf2bÕ붽Dd\x84õwra\U0005e0bc}Ø:\U0001e8fc\U000cf896\U00043169\U000341cf\U0002f24a\U00061fbf\U000b7f04\U000ac060\U00036af3¹f´æ\x17út\U000922dew䁎\U00093a1aHâ\x92;\x80X\x87Ì\x82\x07j±\U000d1b1avü-UÙ\U0003e8dfÉ\x0bä\x94\U000ac10e=ãw¸\x98\U00085d37«\x89là§úªXÝÎT\'S2\x82ÑYn\x96\x00\U000c42f1QÄ\x06ÚóûQ\U00061dc3ã©¦\xad0ÆZg\U000cdbe1<B\x1cXc\x82\x0bwÐ\x06\U0001c8bc\x8e\xa0\x9d\U0003cbfe\\\\\U00046e6b\x18\U0001ce63\x80\U00098b46&\x0bIT\U000e86c0\t\U000bb40a\U000ac8cc\U00102089梦ï¸Ó𰧎êl\U00035445\U0001e6b9¨V\U000e8ee4¢R\x1d\U0010cf54(\U00038483\x9c0\xadãÛ\x03\\Ø\x07À÷Æ"üg´©á\x86`\x05\U00016263HFì\U0010cee1\x00\U000abb80x.\U0008b9c5\U000c1de7\rø{\x1b\x9bÛ\U000b46d1EÙ¥n¾\x9e³\x85/:¹\x05\r\x98\U0008e9122\U0001b3c6æÏ\U0004d8b4Õ%ç}¹\x18\U000399ca\U000eb196<@\x1fæ\x7f\x97\x8e£Ê\x14Ú\U0004b7a1\U000edb30>Xß\x9f\U00055552\x98&\x18Å\x8fR+ì`\x97ü\U00051134\U000a5e56\x1f\x90\x18\U00051d70\U000100ff9r\x02\U000489f5"=\U0008694b\x95°\x85à#æ够\U0006a36fÁM\U0006d19dMà\U000ed40d\U000bd85e', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001845s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '£å3Í\r·\x0c¬\U0005ad5c\U00042c07ç\U0003fec6#V\\Î\x0fý\U0008b01d\x91\U000f12b4ä\ná\x95å\U000d2fb99~\x10\x81\tl\U000e6d6c\U000e2cd6\x9f\U000c1d91QQaí~\x12\x83¥\U00082b35Y\x17\U000c6e98ꚖQÝ¹\x84\U000b4913q©|D\U000fe4a0ª\x8dµ\U000fb873\x8dL"\U00048083\U0004b8ce\x88ïa?\U000acc7b\U0001ee6bP\r\U000f80d5e\x95\U00048b5e\x14"·\U0005d2f7Ôe\x1ccäaV\x16\U000cc4a9\x94ç§}\'p\U0007dc28p\U00100981ãù¢ñ\U000da359\x19r\x86𫼥\x07þuô;©\x1aÂMx\U000780e1\x1e\U000f76ef½e\x92\x89\t\x8e%\x8c\x02\x7fù\U000477d2q,\x03|\x85·n¾\U0010a342\x96yýé\U00099b80\x99\U0005b15a_ðáµÎ\U0010fd55\U000d72f9ö~Û\x05¸¾GOÊ#*\U0006ec03\x9a\U0003b6e1\x92Ó2\x98tM\U000327eb\U000ad736c𡳍\U0009354c\U000cf721\x1eA¨5ôÐ\U000acd22𮦯\x8fàü\U00098bddàÑ\x0c\xadC\x13tWµ-T\x99R\x1eX/¤Ø\U000d08fb¿È¬\U000867e0¸³´\tP\x8b\x03¿\U0004d63er\U0008341f1ó\x1emÀ\U000e95bb\x11ðf\U000f26efª\x11ÝN\x89§\U00088316\x9bãâ\U0008f9b0ÚØ\x93Dq\U00047f9aûGEn©\U00105bd1\U0002ef37Ú\U001037c5\x99\rÑ\U00099b41¬\x04\x94\x19ó\x92K\U0005c2fb\x9f\x14\x0e¥\x86\x8bÔ\x00lÆËùËF\x88\x1e\x8eüºò\U000d868a\U000731d1\x12\x04\U0003aae1\x97%Â\xad\U000aec96\x17ý\x96røÆ🮙\x98µ0½\xadþ¸óñü_÷Ñõ%©Í£8²%¿ñ𠕻\U000cad10\U000e3a3e\U00047e5a\\7J7=Æ\U000e2bb7I5g\U0007ea8d\U0010bf9e\ne\U000a1f0aá¡\x81\U000af0ebE\x9e\U000834b3Â&óè\x800\x9e\U000c94cf\x97«\x83·\U0006b3b9,\U000a8266i¾\U000cd369:\x11\x0f\x07\U0010115b¼\U000ef742K\x7fJ\U00051d27#됧\U00054c7em\U0008efb0\x07²\x1c\x0eò\U0006210e\U0008bcf4{\U000f2210Í\x8d\U000bde30à\U00010f85·Cüé°í^\U00014ab7k;\U001091123\x90º\U000b3d34øµr!«ý\U000df94ad\x0e\U000d1114M_ËQ𥭥\x18\U00065576\x0btG¦E\x84L\x1d\x05\U000cc4d3\x0c¦\x8f\U0005b75c\x89\U0003979d\U000d05a6\x95%\U000e56c5Ü\U000d657fÊ\x98ª-fj@Ã.ïL𰤽\x12\x90w©|\x8c \\\U0004a1d9Å?¾×\x1f\U00015af5\U00067bb3\U000c7c17L§\x89\n\x19$\x17\U000f3e8aý\U000e662c\x9d«Foë𭫜\U00046a16\x00Ò\U00105bff\x14\x84¡\U000812ef\U000b54bf\U0005e8e1⟌Ñ%JÅ\x90ú\x9béUK`¦ﮡ(iãb\U0003e7f1êp=\x08\U000e75c2\U000c6590D\U00014d17P\U000feca0\x17sDÓéá\x88L_,¼·2\x9e¯Ëì\U0003a028Q\U000cca00üÉ)\x82\U00055ff2|ø\x181.\xa0\U00049648Ù_\x8c\U000fdc70\x94𑋶`¦°xqû;D0K\x13]Qo06\x02\U0006b2f8´4\x99Ù\U0003fa8e渗ß\x0e»\U000da231¯Kî\U000ba133ÍÔ9ú#\U000a29c7\U000ae8b4Õ\x90ßÒå~¤H𧌾\U000a7022£\xadÛ\x0bÑ/\U00084715Á\U00050008\U00062668Ë\U000b9350\x84·é"\U00102fdd\U000a994e\U0003ceabRý~\x8e(¢𨧱ÅE\x116<¬£øKv\U000c1621¶e\xad\U0009cef5©¿M\x19fK\'?Ôv\U00105e60q\x15\x80\x8eß\x04Å\U0008f183\x1a\x9b$\U000c9da6Ô\x1d\x17ý\x1a}\U000e5ed3#\U0006bdd9\r\U000f323b\x03Gä\U0006df35o0¯^¦ip×\x083¿4ÕÜ\x12\x02𛆢@\x16\x1f\x19ÿ\x0e*\x0f¨Ê¨쬓¬u\x1bõ\x04º\x19V\x97\U00105267𠿈DuU\U000cfba13ÂÁÏ\U00031565Ý\U0003c02bè\x80\U000b2389\x9d\x0b\x04xP\x94ôîE;\x0bä\x1f\xadj.\\\x83\x88\U0004a6e4ú¹\U00087d60¤\nþ\x1dvІI\x15A\x92N\x19\x8f\x1a\xad¸\x1ctb½MàR\x05ú²/É\U0003eed3\U000dab74¢\U000bb668𭰚IÍ\U000dafd2ñ\U000e1f88[\x04r𥡸Ø\x9e\U0003846e$RP\U000a2730\x0bTt\U000d74e6\U0008f47b\x9f\x16Åô3\U0004941e^\U000ca978\x12\x06\x0c\U000fcf81£\x94\U000a4e4dmë«³Ý¡\x81¡ëð-ÒáÔÇTtNïÝS\x07\U0003ba2d¿u\x97"\x8dQq$\U000b9719\U000d4703\U000a7529\x9a}\x8c\x8c\U000689c3¼893Ðþ7µzF\U000c50caÁ¢𭄓\U000c44bd_4\U0005146abK\U0009981cW\x1a\U0003a8e8´\U00010a360D\x00ù®\x90\x1c¦¿m\x02iÌ9叕8\ue3b9巛\U00047ee9åÂ@¶S\x9a\x00\x89\x81𭥑<aBU¶¨V\x8e$6\x9e°Ð\U00092782õ\x88NC<N\t\x80󠇎¸àd\U000c3c3aª2\U0001ab5d\U000ebf2bÕ붽Dd\x84õwra\U0005e0bc}Ø:\U0001e8fc\U000cf896\U00043169\U000341cf\U0002f24a\U00061fbf\U000b7f04\U000ac060\U00036af3¹f´æ\x17út\U000922dew䁎\U00093a1aHâ\x92;\x80X\x87Ì\x82\x07j±\U000d1b1avü-UÙ\U0003e8dfÉ\x0bä\x94\U000ac10e=ãw¸\x98\U00085d37«\x89là§úªXÝÎT\'S2\x82ÑYn\x96\x00\U000c42f1QÄ\x06ÚóûQ\U00061dc3ã©¦\xad0ÆZg\U000cdbe1<B\x1cXc\x82\x0bwÐ\x06\U0001c8bc\x8e\xa0\x9d\U0003cbfe\\\\\U00046e6b\x18\U0001ce63\x80\U00098b46&\x0bIT\U000e86c0\t\U000bb40a\U000ac8cc\U00102089梦ï¸Ó𰧎êl\U00035445\U0001e6b9¨V\U000e8ee4¢R\x1d\U0010cf54(\U00038483\x9c0\xadãÛ\x03\\Ø\x07À÷Æ"üg´©á\x86`\x05\U00016263HFì\U0010cee1\x00\U000abb80x.\U0008b9c5\U000c1de7\rø{\x1b\x9bÛ\U000b46d1EÙ¥n¾\x9e³\x85/:¹\x05\r\x98\U0008e9122\U0001b3c6æÏ\U0004d8b4Õ%ç}¹\x18\U000399ca\U000eb196<@\x1fæ\x7f\x97\x8e£Ê\x14Ú\U0004b7a1\U000edb30>Xß\x9f\U00055552\x98&\x18Å\x8fR+ì`\x97ü\U00051134\U000a5e56\x1f\x90\x18\U00051d70\U000100ff9r\x02\U000489f5"=\U0008694b\x95°\x85à#æ够\U0006a36fÁM\U0006d19dMà\U000ed40d\U000bd85e', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001834s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '£å3Í\r·\x0c¬\U0005ad5c\U00042c07ç\U0003fec6#V\\Î\x0fý\U0008b01d\x91\U000f12b4ä\ná\x95å\U000d2fb99~\x10\x81\tl\U000e6d6c\U000e2cd6\x9f\U000c1d91QQaí~\x12\x83¥\U00082b35Y\x17\U000c6e98ꚖQÝ¹\x84\U000b4913q©|D\U000fe4a0ª\x8dµ\U000fb873\x8dL"\U00048083\U0004b8ce\x88ïa?\U000acc7b\U0001ee6bP\r\U000f80d5e\x95\U00048b5e\x14"·\U0005d2f7Ôe\x1ccäaV\x16\U000cc4a9\x94ç§}\'p\U0007dc28p\U00100981ãù¢ñ\U000da359\x19r\x86𫼥\x07þuô;©\x1aÂMx\U000780e1\x1e\U000f76ef½e\x92\x89\t\x8e%\x8c\x02\x7fù\U000477d2q,\x03|\x85·n¾\U0010a342\x96yýé\U00099b80\x99\U0005b15a_ðáµÎ\U0010fd55\U000d72f9ö~Û\x05¸¾GOÊ#*\U0006ec03\x9a\U0003b6e1\x92Ó2\x98tM\U000327eb\U000ad736c𡳍\U0009354c\U000cf721\x1eA¨5ôÐ\U000acd22𮦯\x8fàü\U00098bddàÑ\x0c\xadC\x13tWµ-T\x99R\x1eX/¤Ø\U000d08fb¿È¬\U000867e0¸³´\tP\x8b\x03¿\U0004d63er\U0008341f1ó\x1emÀ\U000e95bb\x11ðf\U000f26efª\x11ÝN\x89§\U00088316\x9bãâ\U0008f9b0ÚØ\x93Dq\U00047f9aûGEn©\U00105bd1\U0002ef37Ú\U001037c5\x99\rÑ\U00099b41¬\x04\x94\x19ó\x92K\U0005c2fb\x9f\x14\x0e¥\x86\x8bÔ\x00lÆËùËF\x88\x1e\x8eüºò\U000d868a\U000731d1\x12\x04\U0003aae1\x97%Â\xad\U000aec96\x17ý\x96røÆ🮙\x98µ0½\xadþ¸óñü_÷Ñõ%©Í£8²%¿ñ𠕻\U000cad10\U000e3a3e\U00047e5a\\7J7=Æ\U000e2bb7I5g\U0007ea8d\U0010bf9e\ne\U000a1f0aá¡\x81\U000af0ebE\x9e\U000834b3Â&óè\x800\x9e\U000c94cf\x97«\x83·\U0006b3b9,\U000a8266i¾\U000cd369:\x11\x0f\x07\U0010115b¼\U000ef742K\x7fJ\U00051d27#됧\U00054c7em\U0008efb0\x07²\x1c\x0eò\U0006210e\U0008bcf4{\U000f2210Í\x8d\U000bde30à\U00010f85·Cüé°í^\U00014ab7k;\U001091123\x90º\U000b3d34øµr!«ý\U000df94ad\x0e\U000d1114M_ËQ𥭥\x18\U00065576\x0btG¦E\x84L\x1d\x05\U000cc4d3\x0c¦7\U0005b75c\x89\U0003979d\U000d05a6\x95%\U000e56c5Ü\U000d657fÊ\x98ª-fj@Ã.ïL𰤽\x12\x90w©|\x8c \\\U0004a1d9Å?¾×\x1f\U00015af5\U00067bb3\U000c7c17L§\x89\n\x19$\x17\U000f3e8aý\U000e662c\x9d«Foë𭫜\U00046a16\x00Ò\U00105bff\x14\x84¡\U000812ef\U000b54bf\U0005e8e1⟌Ñ%JÅ\x90ú\x9béUK`¦ﮡ(iãb\U0003e7f1êp=\x08\U000e75c2\U000c6590D\U00014d17P\U000feca0\x17sDÓéá\x88L_,¼·2\x9e¯Ëì\U0003a028Q\U000cca00üÉ)\x82\U00055ff2|ø\x181.\xa0\U00049648Ù_\x8c\U000fdc70\x94𑋶`¦°xqû;D0K\x13]Qo06\x02\U0006b2f8´4\x99Ù\U0003fa8e渗ß\x0e»\U000da231¯Kî\U000ba133ÍÔ9ú#\U000a29c7\U000ae8b4Õ\x90ßÒå~¤H𧌾\U000a7022£\xadÛ\x0bÑ/\U00084715Á\U00050008\U00062668Ë\U000b9350\x84·é"\U00102fdd\U000a994e\U0003ceabRý~\x8e(¢𨧱ÅE\x116<¬£øKv\U000c1621¶e\xad\U0009cef5©¿M\x19fK\'?Ôv\U00105e60q\x15\x80\x8eß\x04Å\U0008f183\x1a\x9b$\U000c9da6Ô\x1d\x17ý\x1a}\U000e5ed3#\U0006bdd9\r\U000f323b\x03Gä\U0006df35o0¯^¦ip×\x083¿4ÕÜ\x12\x02𛆢@\x16\x1f\x19ÿ\x0e*\x0f¨Ê¨쬓¬u\x1bõ\x04º\x19V\x97\U00105267𠿈DuU\U000cfba13ÂÁÏ\U00031565Ý\U0003c02bè\x80\U000b2389\x9d\x0b\x04xP\x94ôîE;\x0bä\x1f\xadj.\\\x83\x88\U0004a6e4ú¹\U00087d60¤\nþ\x1dvІI\x15A\x92N\x19\x8f\x1a\xad¸\x1ctb½MàR\x05ú²/É\U0003eed3\U000dab74¢\U000bb668𭰚IÍ\U000dafd2ñ\U000e1f88[\x04r𥡸Ø\x9e\U0003846e$RP\U000a2730\x0bTt\U000d74e6\U0008f47b\x9f\x16Åô3\U0004941e^\U000ca978\x12\x06\x0c\U000fcf81£\x94\U000a4e4dmë«³Ý¡\x81¡ëð-ÒáÔÇTtNïÝS\x07\U0003ba2d¿u\x97"\x8dQq$\U000b9719\U000d4703\U000a7529\x9a}\x8c\x8c\U000689c3¼893Ðþ7µzF\U000c50caÁ¢𭄓\U000c44bd_4\U0005146abK\U0009981cW\x1a\U0003a8e8´\U00010a360D\x00ù®\x90\x1c¦¿m\x02iÌ9叕8\ue3b9巛\U00047ee9åÂ@¶S\x9a\x00\x89\x81𭥑<aBU¶¨V\x8e$6\x9e°Ð\U00092782õ\x88NC<N\t\x80󠇎¸àd\U000c3c3aª2\U0001ab5d\U000ebf2bÕ붽Dd\x84õwra\U0005e0bc}Ø:\U0001e8fc\U000cf896\U00043169\U000341cf\U0002f24a\U00061fbf\U000b7f04\U000ac060\U00036af3¹f´æ\x17út\U000922dew䁎\U00093a1aHâ\x92;\x80X\x87Ì\x82\x07j±\U000d1b1avü-UÙ\U0003e8dfÉ\x0bä\x94\U000ac10e=ãw¸\x98\U00085d37«\x89là§úªXÝÎT\'S2\x82ÑYn\x96\x00\U000c42f1QÄ\x06ÚóûQ\U00061dc3ã©¦\xad0ÆZg\U000cdbe1<B\x1cXc\x82\x0bwÐ\x06\U0001c8bc\x8e\xa0\x9d\U0003cbfe\\\\\U00046e6b\x18\U0001ce63\x80\U00098b46&\x0bIT\U000e86c0\t\U000bb40a\U000ac8cc\U00102089梦ï¸Ó𰧎êl\U00035445\U0001e6b9¨V\U000e8ee4¢R\x1d\U0010cf54(\U00038483\x9c0\xadãÛ\x03\\Ø\x07À÷Æ"üg´©á\x86`\x05\U00016263HFì\U0010cee1\x00\U000abb80x.\U0008b9c5\U000c1de7\rø{\x1b\x9bÛ\U000b46d1EÙ¥n¾\x9e³\x85/:¹\x05\r\x98\U0008e9122\U0001b3c6æÏ\U0004d8b4Õ%ç}¹\x18\U000399ca\U000eb196<@\x1fæ\x7f\x97\x8e£Ê\x14Ú\U0004b7a1\U000edb30>Xß\x9f\U00055552\x98&\x18Å\x8fR+ì`\x97ü\U00051134\U000a5e56\x1f\x90\x18\U00051d70\U000100ff9r\x02\U000489f5"=\U0008694b\x95°\x85à#æ够\U0006a36fÁM\U0006d19dMà\U000ed40d\U000bd85e', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001716s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '£å3Í\r·\x0c¬\U0005ad5c\U00042c07ç\U0003fec6#V\\Î\x0fý\U0008b01d\x91\U000f12b4ä\ná\x95å\U000d2fb99~\x10\x81\tl\U000e6d6c\U000e2cd6\x9f\U000c1d91QQaí~\x12\x83¥\U00082b35Y\x17\U000c6e98ꚖQÝ¹\x84\U000b4913q©|D\U000fe4a0ª\x8dµ\U000fb873\x8dL"\U00048083\U0004b8ce\x88ïa?\U000acc7b\U0001ee6bP\r\U000f80d5e\x95\U00048b5e\x14"·\U0005d2f7Ôe\x1ccäaV\x16\U000cc4a9\x94ç§}\'p\U0007dc28p\U00100981ãù¢ñ\U000da359\x19r\x86𫼥\x07þuô;©\x1aÂMx\U000780e1\x1e\U000f76ef½e\x92\x89\t\x8e%\x8c\x02\x7fù\U000477d2q,\x03|\x85·n¾\U0010a342\x96yýé\U00099b80\x99\U0005b15a_ðáµÎ\U0010fd55\U000d72f9ö~Û\x05¸¾GOÊ#*\U0006ec03\x9a\U0003b6e1\x92Ó2\x98tM\U000327eb\U000ad736c𡳍\U0009354c\U000cf721\x1eA¨5ôÐ\U000acd22𮦯\x8fàü\U00098bddàÑ\x0c\xadC\x13tWµ-T\x99R\x1eX/¤Ø\U000d08fb¿È¬\U000867e0¸³´\tP\x8b\x03¿\U0004d63er\U0008341f1ó\x1emÀ\U000e95bb\x11ðf\U000f26efª\x11ÝN\x89§\U00088316\x9bãâ\U0008f9b0ÚØ\x93Dq\U00047f9aûGEn©\U00105bd1\U0002ef37Ú\U001037c5\x99\rÑ\U00099b41¬\x04\x94\x19ó\x92K\U0005c2fb\x9f\x14\x0e¥\x86\x8bÔ\x00lÆËùËF\x88\x1e\x8eüºò\U000d868a\U000731d1\x12\x04\U0003aae1\x97%Â\xad\U000aec96\x17ý\x96røÆ🮙\x98µ0½\xadþ¸óñü_÷Ñõ%©Í£8²%¿ñ𠕻\U000cad10\U000e3a3e\U00047e5a\\7J7=Æ\U000e2bb7I5g\U0007ea8d\U0010bf9e\ne\U000a1f0aá¡\x81\U000af0ebE\x9e\U000834b3Â&óè\x800\x9e\U000c94cf\x97«\x83·\U0006b3b9,\U000a8266i¾\U000cd369:\x11\x0f\x07\U0010115b¼\U000ef742K\x7fJ\U00051d27#됧\U00054c7em\U0008efb0\x07²\x1c\x0eò\U0006210e\U0008bcf4{\U000f2210Í\x8d\U000bde30à\U00010f85·Cüé°í^\U00014ab7k;\U001091123\x90º\U000b3d34øµr!«ý\U000df94ad\x0e\U000d1114M_ËQ𥭥\x18\U00065576\x0btG¦E\x84L\x1d\x05\U000cc4d3\x0c¦7\U0005b75c\x89\U0003979d\U000d05a6\x95%\U000e56c5Ü\U000d657fÊ\x98ª-fj@Ã.ïL𰤽\x12\x90w©|\x8c \\\U0004a1d9Å?¾×\x1f\U00015af5\U00067bb3\U000c7c17L§\x89\n\x19$\x17\U000f3e8aý\U000e662c\x9d«Foë𭫜\U00046a16\x00Ò\U00105bff\x14\x84¡\U000812ef\U000b54bf\U0005e8e1⟌Ñ%JÅ\x90ú\x9béUK`¦ﮡ(iãb\U0003e7f1êp=\x08\U000e75c2\U000c6590D\U00014d17P\U000feca0\x17sDÓéá\x88L_,¼·2\x9e¯Ëì\U0003a028Q\U000cca00üÉ)\x82\U00055ff2|ø\x181.\xa0\U00049648Ù_\x8c\U000fdc70\x94𑋶`¦°xqû;D0K\x13]Qo06\x02\U0006b2f8´4\x99Ù\U0003fa8e渗ß\x0e»\U000da231¯Kî\U000ba133ÍÔ9ú#\U000a29c7\U000ae8b4Õ\x90ßÒå~¤H𧌾\U000a7022£\xadÛ\x0bÑ/\U00084715Á\U00050008\U00062668Ë\U000b9350\x84·é"\U00102fdd\U000a994e\U0003ceabRý~\x8e(¢𨧱ÅE\x116<¬£øKv\U000c1621¶e\xad\U0009cef5©¿M\x19fK\'?Ôv\U00105e60q\x15\x80\x8eß\x04Å\U0008f183\x1a\x9b$\U000c9da6Ô\x1d\x17ý\x1a}\U000e5ed3#\U0006bdd9\r\U000f323b\x03Gä\U0006df35o0¯^¦ip×\x083¿4ÕÜ\x12\x02𛆢@\x16\x1f\x19ÿ\x0e*\x0f¨Ê¨쬓¬u\x1bõ\x04º\x19V\x97\U00105267𠿈DuU\U000cfba13ÂÁÏ\U00031565Ý\U0003c02bè\x80\U000b2389\x9d\x0b\x04xP\x94ôîE;\x0bä\x1f\xadj.\\\x83\x88\U0004a6e4ú¹\U00087d60¤\nþ\x1dvІI\x15A\x92N\x19\x8f\x1a\xad¸\x1ctb½MàR\x05ú²/É\U0003eed3\U000dab74¢\U000bb668𭰚IÍ\U000dafd2ñ\U000e1f88[\x04r𥡸Ø\x9e\U0003846e$RP\U000a2730\x0bTt\U000d74e6\U0008f47b\x9f\x16Åô3\U0004941e^\U000ca978\x12\x06\x0c\U000fcf81£\x94\U000a4e4dmë«³Ý¡\x81¡ëð-ÒáÔÇTtNïÝS\x07\U0003ba2d¿u\x97"\x8dQq$\U000b9719\U000d4703\U000a7529\x9a}\x8c\x8c\U000689c3¼893Ðþ7µzF\U000c50caÁ¢𭄓\U000c44bd_4\U0005146abK\U0009981cW\x1a\U0003a8e8´\U00010a360D\x00ù®\x90\x1c¦¿m\x02iÌ9叕8\ue3b9巛\U00047ee9åÂ@¶S\x9a\x00\x89\x81𭥑<aBU¶¨V\x8e$6\x9e°Ð\U00092782õ\x88NC<N\t\x80󠇎¸àd\U000c3c3aª2\U0001ab5d\U000ebf2bÕ붽Dd\x84õwra\U0005e0bc}Ø:\U0001e8fc\U000cf896\U00043169\U000341cf\U0002f24a\U00061fbf\U000b7f04\U000ac060\U00036af3¹f´æ\x17út\U000922dew䁎\U00093a1aHâ\x92;\x80X\x87Ì\x82\x07j±\U000d1b1avü-UÙ\U0003e8dfÉ\x0bä\x94\U000ac10e=ãw¸\x98\U00085d37«\x89là§úªXÝÎT\'S2\x82ÑYn\x96\x00\U000c42f1QÄ\x06ÚóûQ\U00061dc3ã©¦\xad0ÆZg\U000cdbe1<B\x1cXc\x82\x0bwÐ\x06\U0001c8bc\x8e\xa0\x9d\U0003cbfe\\\\\U00046e6b\x18\U0001ce63\x80\U00098b46&\x0bIT\U000e86c0\t\U000bb40a\U000ac8ccEtã@.g06513\x0cèÑ~\x15\U0001e6b9¨V\U000e8ee4¢R\x1d\U0010cf54(\U00038483\x9c0\xadãÛ\x03\\Ø\x07À÷Æ"üg´©á\x86`\x05\U00016263HFì\U0010cee1\x00\U000abb80x.\U0008b9c5\U000c1de7\rø{\x1b\x9bÛ\U000b46d1EÙ¥n¾\x9e³\x85/:¹\x05\r\x98\U0008e9122\U0001b3c6æÏ\U0004d8b4Õ%ç}¹\x18\U000399ca\U000eb196<@\x1fæ\x7f\x97\x8e£Ê\x14Ú\U0004b7a1\U000edb30>Xß\x9f\U00055552\x98&\x18Å\x8fR+ì`\x97ü\U00051134\U000a5e56\x1f\x90\x18\U00051d70\U000100ff9r\x02\U000489f5"=\U0008694b\x95°\x85à#æ够\U0006a36fÁM\U0006d19dMà\U000ed40d\U000bd85e', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001886s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '£å3Í\r·\x0c¬\U0005ad5c\U00042c07ç\U0003fec6#V\\Î\x0fý\U0008b01d\x91\U000f12b4ä\ná\x95å\U000d2fb99~\x10\x81\tl\U000e6d6c\U000e2cd6\x9f\U000c1d91QQaí~\x12\x83¥\U00082b35Y\x17\U000c6e98ꚖQÝ¹\x84\U000b4913q©|D\U000fe4a0ª\x8dµ\U000fb873\x8dL"\U00048083\U0004b8ce\x88ïa?\U000acc7b\U0001ee6bP\r\U000f80d5e\x95\U00048b5e\x14"·\U0005d2f7Ôe\x1ccäaV\x16\U000cc4a9\x94ç§}\'p\U0007dc28p\U00100981ãù¢ñ\U000da359\x19r\x86𫼥\x07þuô;©\x1aÂMx\U000780e1\x1e\U000f76ef½e\x92\x89\t\x8e%\x8c\x02\x7fù\U000477d2q,\x03|\x85·n¾\U0010a342\x96yýé\U00099b80\x99\U0005b15a_ðáµÎ\U0010fd55\U000d72f9ö~Û\x05¸¾GOÊ#*\U0006ec03\x9a\U0003b6e1\x92Ó2\x98tM\U000327eb\U000ad736c𡳍\U0009354c\U000cf721\x1eA¨5ôÐ\U000acd22𮦯\x8fàü\U00098bddàÑ\x0c\xadC\x13tWµ-T\x99R\x1eX/¤Ø\U000d08fb¿È¬\U000867e0¸³´\tP\x8b\x03¿\U0004d63er\U0008341f1ó\x1emÀ\U000e95bb\x11ðf\U000f26efª\x11ÝN\x89§\U00088316\x9bãâ\U0008f9b0ÚØ\x93Dq\U00047f9aûGEn©\U00105bd1\U0002ef37Ú\U001037c5\x99\rÑ\U00099b41¬\x04\x94\x19ó\x92K\U0005c2fb\x9f\x14\x0e¥\x86\x8bÔ\x00lÆËùËF\x88\x1e\x8eüºò\U000d868a\U000731d1\x12\x04\U0003aae1\x97%Â\xad\U000aec96\x17ý\x96røÆ🮙\x98µ0½\xadþ¸óñü_÷Ñõ%©Í£8²%¿ñ𠕻\U000cad10\U000e3a3e\U00047e5a\\7J7=Æ\U000e2bb7I5g\U0007ea8d\U0010bf9e\ne\U000a1f0aá¡\x81\U000af0ebE\x9e\U000834b3Â&óè\x800\x9e\U000c94cf\x97«\x83·\U0006b3b9,\U000a8266i¾\U000cd369:\x11\x0f\x07\U0010115b¼\U000ef742K\x7fJ\U00051d27#됧\U00054c7em\U0008efb0\x07²\x1c\x0eò\U0006210e\U0008bcf4{\U000f2210Í\x8d\U000bde30à\U00010f85·Cüé°í^\U00014ab7k;\U001091123\x90º\U000b3d34øµr!«ý\U000df94ad\x0e\U000d1114M_ËQ𥭥\x18\U00065576\x0btG¦E\x84L\x1d\x05\U000cc4d3\x0c¦7\U0005b75c\x89\U0003979d\U000d05a6\x95%\U000e56c5Ü\U000d657fÊ\x98ª-fj@Ã.ïL𰤽\x12\x90w©|\x8c \\\U0004a1d9Å?¾×\x1f\U00015af5\U00067bb3\U000c7c17L§\x89\n\x19$\x17\U000f3e8aý\U000e662c\x9d«Foë𭫜\U00046a16\x00Ò\U00105bff\x14\x84¡\U000812ef\U000b54bf\U0005e8e1⟌Ñ%JÅ\x90ú\x9béUK`¦ﮡ(iãb\U0003e7f1êp=\x08\U000e75c2\U000c6590D\U00014d17P\U000feca0\x17sDÓéá\x88L_,¼·2\x9e¯Ëì\U0003a028Q\U000cca00üÉ)\x82\U00055ff2|ø\x181.\xa0\U00049648Ù_\x8c\U000fdc70\x94𑋶`¦°xqû;D0K\x13]Qo06\x02\U0006b2f8´4\x99Ù\U0003fa8e渗ß\x0e»\U000da231¯Kî\U000ba133ÍÔ9ú#\U000a29c7\U000ae8b4Õ\x90ßÒå~¤H𧌾\U000a7022£\xadÛ\x0bÑ/\U00084715Á\U00050008\U00062668Ë\U000b9350\x84·é"\U00102fdd\U000a994e\U0003ceabRý~\x8e(¢𨧱ÅE\x116<¬£øKv\U000c1621¶e\xad\U0009cef5©¿M\x19fK\'?Ôv\U00105e60q\x15\x80\x8eß\x04Å\U0008f183\x1a\x9b$\U000c9da6Ô\x1d\x17ý\x1a}\U000e5ed3#\U0006bdd9\r\U000f323b\x03Gä\U0006df35o0¯^¦ip×\x083¿4ÕÜ\x12\x02𛆢@\x16\x1f\x19ÿ\x0e*\x0f¨Ê¨쬓¬u\x1bõ\x04º\x19V\x97\U00105267𠿈DuU\U000cfba13ÂÁÏ\U00031565Ý\U0003c02bè\x80\U000b2389\x9d\x0b\x04xP\x94ôîE;\x0bä\x1f\xadj.\\\x83\x88\U0004a6e4ú¹\U00087d60¤\nþ\x1dvІI\x15A\x92N\x19\x8f\x1a\xad¸\x1ctb½MàR\x05ú²/É\U0003eed3\U000dab74¢\U000bb668𭰚IÍ\U000dafd2ñ\U000e1f88[\x04r𥡸Ø\x9e\U0003846e$RP\U000a2730\x0bTt\U000d74e6\U0008f47b\x9f\x16Åô3\U0004941e^\U000ca978\x12\x06\x0c\U000fcf81£\x94\U000a4e4dmë«³Ý¡\x81¡ëð-ÒáÔÇTtNïÝS\x07\U0003ba2d¿u\x97"\x8dQq$\U000b9719\U000d4703\U000a7529\x9a}\x8c\x8c\U000689c3¼893Ðþ7µzF\U000c50caÁ¢𭄓\U000c44bd_4\U0005146abK\U0009981cW\x1a\U0003a8e8´\U00010a360D\x00ù®\x90\x1c¦¿m\x02iÌ9叕8\ue3b9巛\U00047ee9åÂ@¶S\x9a\x00\x89\x81𭥑<aBU¶¨V\x8e$w\x9e°Ð\U00092782õ\x88NC<N\t\x80󠇎¸àd\U000c3c3aª2\U0001ab5d\U000ebf2bÕ붽Dd\x84õwra\U0005e0bc}Ø:\U0001e8fc\U000cf896\U00043169\U000341cf\U0002f24a\U00061fbf\U000b7f04\U000ac060\U00036af3¹f´æ\x17út\U000922dew䁎\U00093a1aHâ\x92;\x80X\x87Ì\x82\x07j±\U000d1b1avü-UÙ\U0003e8dfÉ\x0bä\x94\U000ac10e=ãw¸\x98\U00085d37«\x89là§úªXÝÎT\'S2\x82ÑYn\x96\x00\U000c42f1QÄ\x06ÚóûQ\U00061dc3ã©¦\xad0ÆZg\U000cdbe1<B\x1cXc\x82\x0bwÐ\x06\U0001c8bc\x8e\xa0\x9d\U0003cbfe\\\\\U00046e6b\x18\U0001ce63\x80\U00098b46&\x0bIT\U000e86c0\t\U000bb40a\U000ac8ccEtã@.g06513\x0cèÑ~\x15\U0001e6b9¨V\U000e8ee4¢R\x1d\U0010cf54(\U00038483\x9c0\xadãÛ\x03\\Ø\x07À÷Æ"üg´©á\x86`\x05\U00016263HFì\U0010cee1\x00\U000abb80x.\U0008b9c5\U000c1de7\rø{\x1b\x9bÛ\U000b46d1EÙ¥n¾\x9e³\x85/:¹\x05\r\x98\U0008e9122\U0001b3c6æÏ\U0004d8b4Õ%ç}¹\x18\U000399ca\U000eb196<@\x1fæ\x7f\x97\x8e£Ê\x14Ú\U0004b7a1\U000edb30>Xß\x9f\U00055552\x98&\x18Å\x8fR+ì`\x97ü\U00051134\U000a5e56\x1f\x90\x18\U00051d70\U000100ff9r\x02\U000489f5"=\U0008694b\x95°\x85à#æ够\U0006a36fÁM\U0006d19dMà\U000ed40d\U000bd85e', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001759s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': -95106942353737891001704287625762805083}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -95106942353737891001704287625762805083, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001732s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 1200418378}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 1200418378, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001654s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 0, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001936s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 1, 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 1, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001661s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': True, 'password': 252}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 252, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001711s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': ''}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001703s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '../../etc/passwd', 'password': -8751}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -8751, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001772s
====================================================================================================
2025-09-19 00:37:59 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -385, 'password': []}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -385, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001733s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -385, 'password': 16766}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -385, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 16766, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.00165s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -385, 'password': -385}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -385, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -385, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001874s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -385, 'password': ['3Cqø']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -385, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['3Cqø'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001725s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -385, 'password': ['3Cqøçù\x12Sá', '\x1e\x91', '\U000ef6cb', '\x9d\x98Ð\U00035818ñ/µ±ç¬', '', '\x98', 'ò']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -385, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['3Cqøçù\x12Sá', '\x1e\x91', '\U000ef6cb', '\x9d\x98Ð\U00035818ñ/µ±ç¬', '', '\x98', 'ò'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': False, 'password': ''}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': False, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001637s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '     ', 'password': ' '}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001542s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '', 'password': -25}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': -25, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.002087s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Í\xa0\x06ð\U00019ccc\U0004a908ÓQn¦ø:§6\x95uO\x19\x03xö\U000eb53d\'ýÙIOÔ\x7f¢!:©ñÅ¸\x1b\U00015465NH\U0002f68bf\x7fîau\x15\x05\U000a4495wvR§S\U00039452\x01§\U0008be81¡\x8fc8t\x8eé#s𞠶\x7fì\U000f2826¬.ª\U000ebd10\U000986a4;\x02\U0010545a%\U000560fb\x84Ñ÷Ñ\x8fp\x0f\U000de08b\U000be4f8ÍW\x95\U000e7b08\x80\U0005edd7\U000bdbb0@\U000d932d\U000d7960ß9\x0bª5\x1fÈôL5Ý;w1ï\x13W\U000baa13}ü:Ä뚄\U0007ca3fႉÁÜP\x08¾\x17âP\x86}ß8É\x96¦$YDT\U000a5f54L-ÍB\x98\x84MRPm\U000ddac2éã\x92î5*èÀ\x19\U000edfc3\U000f2daa{\x02\x11?\x1fz¸\U000803c5ÀH\U000a055aÎ᧮Û\x1d_\U00080610{çð\x83b!}\x08\x1fü¸\U0001ab7f)\x1e\x9e£\x9f\x80\U00048f8d\U000974fdm\tø\xa0÷\n\x1a\x9cúç\x19ë\U00079e09\x9e¦>n\U000d220aË*\x8cm£\U000c47e7\U000437f8z;E\x00d\\\x95ÌÆ16\x7ft\U00064146¸ÇÄ\x188\x85(\U0010e089\U000d7ef77ó\U000e50af².Ì\x16\x83¹]¡¾å\xa0\U0008648c訤\U000d0026N\U00018d93Ù\x00#m÷\nÎ\x08\U00074bc6Y\x91\x85¤³\U00041943\x06\x9b\U00080309\x8e\x1cR\xa0\x90\U000dab3d\U00090876\U000acfa5X$𧅮𩇕à4£K\U000a31f4\x94𒓧\U0001679d±ºðè ÄHùú\x88\x0cúáNµZ\x1bö¯«R\x07ã\U0004a098\U000eec33SS)\U000e169a&\x95^\nl´MéªÕ\U0006cbbb\x0fe\x11\U00039331\x88)K®\U000d9247S\U000b3328ZÒÝYú\x07\U0004d51a.u\x9ebr\U000d4387&\x00b\x83Þ\U000a1c6a=\x8a¸aሲ\U0010e4f6\x92\x8cgr\x0e\U00096553\U00086963uçÃ\x8fÏ\x8d\x90\U000a9f72\U000c5b83ºª\U000671a0\x0b\x91é&&\t\x8b\U000b3999¡\x8cd\x07ü\x7f궙\U000a942c\r\x9d%\x02\U00095bc1\nÖò#Bo<mü\x04y×5ò𦑯Ô\U000c46d4ß\U000dab52\U000a7cf5\\\U001038caÃ\U0009f755\U000da4483\x18\xad\U000775efÃ\U000c34ffëË\x18¨\U000b0690\x1f\x11æ\U000364e4\U000a0bab³\xadb\x98òcYW\\\U00090f7f\x02\U000cc876áçez5\xa0ò\U000426a1cò«¶Ð\x854\x9b\x08CJ\U000e81f9méuÙ\U0004893b\xa0C\U0010edb6¾9\U0003439bV\U000d6b23\x1aﶦ\x9dÎñvèÞ\x00$«\x1f\U00083211\U001074d7\x1c𘟈\x02\U000cfe97Ñ\x9c¯\U0009b274È\x17[±ú\x928\x07cJ\x9fz\U000b3527¨\U000e25d6\x0c\U00076df6iÂÐÛç~`\U0009d7a9åPv\U000a6f52\U0001edc8\U0006fd21Õ=\x10\U0007f1d3#£¨äeª^\x17®Ø%¿CÒJ¹¨t\U0007c5a9hª\x81Ë£Yb¤\x05ö\U00084202"q\x16¬\x16\U000918b5Ó\x01\x86R\x8e\t\x86ã\x85\x7fV\U000c32101"ÇÂ\U00076ef2\x86²\U000c2b67i\tì´y`ÇR\x7fLT£ü\x17(\U00102c93\U0010e146\U000d2d70\x06\U0002ec05宓fÑ\U000efd7cÛ\x1a-\x13Æ\U00104f8dzd÷Ù\x83\x9c\x89\x12\x84]\x83\U000e56e6\x11À|F\U000d08beO\x8d¿\U000f3940Ê\U00056487\x14õ2\U000b9e756\x07\U000d8e0f\\\x7f\U00107320i\U000adb1b\x7f\U000fb060_\U000651ab~r\x1dx¢Ytß\x17{\U000e8e24\U000820a3\xa0:%w\r\U0001e730\x0e+\U000b158e$@ç½q|\U00080debl\x10È®Ã\U000859b1è\x0c\U000bfbad\U0004a828\x83-%\U0003e1e1ä\x87í\x19½\x12ÜÎ\U00074619ÛA«🌺å\U00088a3cWôô\U000d84dd\x1a\uecc9{Sö³×¦ôv£úë÷𰤍\x9a\U000f02a0\U000aa6f4:\U000c5007\x88±\U0005ad4f\x7f\U000d84a1\U000e21bd\x84SSú_im\U000d91c1\U0005ae5dñR\x92\U00091cde\x05ÎOÄUð÷ÙOÝ\U000c4dd2\U0008d19dÝã\x03æ¡¬ø;\U00052d62¸ü\U000e2464\x9fh¯\x9b\x9b\U0008d481J<\x99\x07{\U000556e8cç\U0010df7b𰸐¶§ÈL\x1fïï\x92°\U0007d356\U000846b0\U00035096\x1f\x04õ\x90\x12ôBää\U0007b414\x91h\x92ÿ5\x13F\x14\U0009bfc6]±È\U00075e33àî\x8c&LR¦\x1f\x9c¿\x8d\x16È\x95º\x82-Éâ\U000bd2acH\x80\U000fe73b\U00080d3b¬ôÁ\x13ÝO\U000e467cÅ\U00040c2aTg\U000be955úÚJ·\x8a\x8c\x88\x11\x176Î[Æ\x1e\x1c\x99\U000615e7\x94|\x1f¼\U00075165\U0010be4d\U000ee2c0\U000d25bb\'ÔI\U00054622\x05\x988Ëz¥\x93\U00079cf9°Ã\\©\x1a𦤿Â\x85\U0010ec4e\U0008883b\x95h\U000bb844\U000b9fa0\U00096c08t\U000bda22\x1c\x9b\x0e\U0009c55crÆ\U000c8cd0\U000ba0fe\t1¨öë\U000163c2𨄻fÒ𭶪\xad\x05\U000acb27Áa³á|N\U000d2cd0)\xa0\x12\x07äS:\x12\x11å\U000d4880\x9bèá\x00£\r\x85ﯧ𑘠Î\U000cc8aa·\U00094e2bIZ𭭤S]hïx\U0009284f¹\U000366ffFú8K\x02a\U000f01e2¶áས7\U00013f62þ\x89°𫐛Ý柡Ù\x16È\U000fec97\x12¢\U000a36d2\U000e4a1fß\x96\x8f²\x0b:\x97Ò`\x81/\x0f\U000fe42c\U00089d03¾Ðê\U0009944fB\U000b88db\x9a\U00034988\U0009e4c2F\U000e4e76½ò`\x90¿\U000d9d59ö\U000dc5f7\U000e08b3Ô\x08\x1aDÝ\x833\x08Àõ\U000e5bd6z\U00073819l\x8aÉ\U00032d02^\x1d£\nØ\r\x04t꽅)*\U0004f57aoçí\U000461789.\x0c¡5\x98\x01\x9ai\x06¢Ñs4°\x9b7å ÷\U00103432÷\x03\x15\x0e\x9aÇÈyMØ\x7fk\U00060c70\x1aw\x121\U000c1963R,ìË\U0006bcfb\U0006ddd3ºº𫎂6w\U000cd06b!\\\U000b9d83\U000461b9\\Ø\x92\U000b85ea¶N,Ù돊a\U000ef342\U0008b3d2¿@\U000e5edb;Ê\U000dd909\x89\x0cÿ\x0e\x93°5\x92६ÙೌòÏðÏ\x0b\U0008956dô®¡>\x83<*Æc\x82ÀäÔw\U0007207fÕ\U0010dccc\U0003a126\x84\U0006a6cc\U000b37e2\x03Ù\x83\U000767c3&\x88¯\x8cYÍ\x0c\x95ÛA\U000abd44ÍÐP©\x86Gir£ºÊ\x19ñ\x83!wß\x81\x8bËg\U000b7f98\U000d92e7\x87WhUÒuv\U000cece4¯\x15u\x8f\x06`\x14ø×L£ðD/댰\U00081ac3>®\x8dV\U0005a7d4K\U000cf84a\U00049a23R\x19\x15Ì\x08µ\x9b\U000fa230ï+ýV\U0010ae7aE퀭<Å«\x17ÁY<\U000d5551ö\x10!\x92Spï*\x10\x1a[Ð\x80=ü\U000a45e7\x86ÃJÒh©IN\U000a5991À\U0001a980-(jéI`\x94ã/\x02¯\x90k\U000e463bÕb¶Þ\x8bò@\x87𐼖\U0010b4f3·µ\x97"X\x7fø\x1a\U00053664Ô>Z\tO\x83°g*\U00015c76\x1c½éb¨àÃõþQ亭b/\t,_\x03ð\U00034b0b', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001701s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Í\xa0\x06ð\U00019ccc\U0004a908ÓQn¦ø:§6\x95uO\x19\x03xö\U000eb53d\'ýÙIOÔ\x7f¢!:©ñÅ¸\x1b\U00015465NH\U0002f68bf\x7fîau\x15\x05\U000a4495wvR§S\U00039452\x01§\U0008be81¡\x8fc8t\x8eé#s𞠶\x7fì\U000f2826¬.ª\U000ebd10\U000986a4;\x02\U0010545a%\U000560fb\x84Ñ÷Ñ\x8fp\x0f\U000de08b\U000be4f8ÍW\x95\U000e7b08\x80\U0005edd7\U000bdbb0@\U000d932d\U000d7960ß9\x0bª5\x1fÈôL5Ý;w1ï\x13W\U000baa13}ü:Ä뚄\U0007ca3fႉÁÜP\x08¾\x17âP\x86}ß8É\x96¦$YDT\U000a5f54L-ÍB\x98\x84MRPm\U000ddac2éã\x92î5*èÀ\x19\U000edfc3\U000f2daa{\x02\x11?\x1fz¸\U000803c5ÀH\U000a055aÎ᧮Û\x1d_\U00080610{çð\x83b!}\x08\x1fü¸\U0001ab7f)\x1e\x9e£\x9f\x80\U00048f8d\U000974fdm\tø\xa0÷\n\x1a\x9cúç\x19ë\U00079e09\x9e¦>n\U000d220aË*\x8cm£\U000c47e7\U000437f8z;E\x00d\\\x95ÌÆ16\x7ft\U00064146¸ÇÄ\x188\x85(\U0010e089\U000d7ef77ó\U000e50af².Ì\x16\x83¹]¡¾å\xa0\U0008648c訤\U000d0026N\U00018d93Ù\x00#m÷\nÎ\x08\U00074bc6YL\x85¤³\U00041943\x06\x9b\U00080309\x8e\x1cR\xa0\x90\U000dab3d\U00090876\U000acfa5X$𧅮𩇕à4£K\U000a31f4\x94𒓧\U0001679d±ºðè ÄHùú\x88\x0cúáNµZ\x1bö¯«R\x07ã\U0004a098\U000eec33SS)\U000e169a&\x95^\nl´MéªÕ\U0006cbbb\x0fe\x11\U00039331\x88)K®\U000d9247S\U000b3328ZÒÝYú\x07\U0004d51a.u\x9ebr\U000d4387&\x00b\x83Þ\U000a1c6a=\x8a¸aሲ\U0010e4f6\x92\x8cgr\x0e\U00096553\U00086963uçÃ\x8fÏ\x8d\x90\U000a9f72\U000c5b83ºª\U000671a0\x0b\x91é&&\t\x8b\U000b3999¡\x8cd\x07ü\x7f궙\U000a942c\r\x9d%\x02\U00095bc1\nÖò#Bo<mü\x04y×5ò𦑯Ô\U000c46d4ß\U000dab52\U000a7cf5\\\U001038caÃ\U0009f755\U000da4483\x18\xad\U000775efÃ\U000c34ffëË\x18¨\U000b0690\x1f\x11æ\U000364e4\U000a0bab³\xadb\x98òcYW\\\U00090f7f\x02\U000cc876áçez5\xa0ò\U000426a1cò«¶Ð\x854\x9b\x08CJ\U000e81f9méuÙ\U0004893b\xa0C\U0010edb6¾9\U0003439bV\U000d6b23\x1aﶦ\x9dÎñvèÞ\x00$«\x1f\U00083211\U001074d7\x1c𘟈\x02\U000cfe97Ñ\x9c¯\U0009b274È\x17[±ú\x928\x07cJ\x9fz\U000b3527¨\U000e25d6\x0c\U00076df6iÂÐÛç~`\U0009d7a9åPv\U000a6f52\U0001edc8\U0006fd21Õ=\x10\U0007f1d3#£¨äeª^\x17®Ø%¿CÒJ¹¨t\U0007c5a9hª\x81Ë£Yb¤\x05ö\U00084202"q\x16¬\x16\U000918b5Ó\x01\x86R\x8e\t\x86ã\x85\x7fV\U000c32101"ÇÂ\U00076ef2\x86²\U000c2b67i\tì´y`ÇR\x7fLT£ü\x17(\U00102c93\U0010e146\U000d2d70\x06\U0002ec05宓fÑ\U000efd7cÛ\x1a-\x13Æ\U00104f8dzd÷Ù\x83\x9c\x89\x12\x84]\x83\U000e56e6\x11À|F\U000d08beO\x8d¿\U000f3940Ê\U00056487\x14õ2\U000b9e756\x07\U000d8e0f\\\x7f\U00107320i\U000adb1b\x7f\U000fb060_\U000651ab~r\x1dx¢Ytß\x17{\U000e8e24\U000820a3\xa0:%w\r\U0001e730\x0e+\U000b158e$@ç½q|\U00080debl\x10È®Ã\U000859b1è\x0c\U000bfbad\U0004a828\x83-%\U0003e1e1ä\x87í\x19½\x12ÜÎ\U00074619ÛA«🌺å\U00088a3cWôô\U000d84dd\x1a\uecc9{Sö³×¦ôv£úë÷𰤍\x9a\U000f02a0\U000aa6f4:\U000c5007\x88±\U0005ad4f\x7f\U000d84a1\U000e21bd\x84SSú_im\U000d91c1\U0005ae5dñR\x92\U00091cde\x05ÎOÄUð÷ÙOÝ\U000c4dd2\U0008d19dÝã\x03æ¡¬ø;\U00052d62¸ü\U000e2464\x9fh¯\x9b\x9b\U0008d481J<\x99\x07{\U000556e8cç\U0010df7b𰸐¶§ÈL\x1fïï\x92°\U0007d356\U000846b0\U00035096\x1f\x04õ\x90\x12ôBää\U0007b414\x91h\x92ÿ5\x13F\x14\U0009bfc6]±È\U00075e33àî\x8c&LR¦\x1f\x9c¿\x8d\x16È\x95º\x82-Éâ\U000bd2acH\x80\U000fe73b\U00080d3b¬ôÁ\x13ÝO\U000e467cÅ\U00040c2aTg\U000be955úÚJ·\x8a\x8c\x88\x11\x176Î[Æ\x1e\x1c\x99\U000615e7\x94|\x1f¼\U00075165\U0010be4d\U000ee2c0\U000d25bb\'ÔI\U00054622\x05\x988Ëz¥\x93\U00079cf9°Ã\\©\x1a𦤿Â\x85\U0010ec4e\U0008883b\x95h\U000bb844\U000b9fa0\U00096c08t\U000bda22\x1c\x9b\x0e\U0009c55crÆ\U000c8cd0\U000ba0fe\t1¨öë\U000163c2𨄻fÒ𭶪\xad\x05\U000acb27Áa³á|N\U000d2cd0)\xa0\x12\x07äS:\x12\x11å\U000d4880\x9bèá\x00£\r\x85ﯧ𑘠Î\U000cc8aa·\U00094e2bIZ𭭤S]hïx\U0009284f¹\U000366ffFú8K\x02a\U000f01e2¶áས7\U00013f62þ\x89°𫐛Ý柡Ù\x16È\U000fec97\x12¢\U000a36d2\U000e4a1fß\x96\x8f²\x0b:\x97Ò`\x81/\x0f\U000fe42c\U00089d03¾Ðê\U0009944fB\U000b88db\x9a\U00034988\U0009e4c2F\U000e4e76½ò`\x90¿\U000d9d59ö\U000dc5f7\U000e08b3Ô\x08\x1aDÝ\x833\x08Àõ\U000e5bd6z\U00073819l\x8aÉ\U00032d02^\x1d£\nØ\r\x04t꽅)*\U0004f57aoçí\U000461789.\x0c¡5\x98\x01\x9ai\x06¢Ñs4°\x9b7å ÷\U00103432÷\x03\x15\x0e\x9aÇÈyMØ\x7fk\U00060c70\x1aw\x121\U000c1963R,ìË\U0006bcfb\U0006ddd3ºº𫎂6w\U000cd06b!\\\U000b9d83\U000461b9\\Ø\x92\U000b85ea¶N,Ù돊a\U000ef342\U0008b3d2¿@\U000e5edb;Ê\U000dd909\x89\x0cÿ\x0e\x93°5\x92६ÙೌòÏðÏ\x0b\U0008956dô®¡>\x83<*Æc\x82ÀäÔw\U0007207fÕ\U0010dccc\U0003a126\x84\U0006a6cc\U000b37e2\x03Ù\x83\U000767c3&\x88¯\x8cYÍ\x0c\x95ÛA\U000abd44ÍÐP©\x86Gir£ºÊ\x19ñ\x83!wß\x81\x8bËg\U000b7f98\U000d92e7\x87WhUÒuv\U000cece4¯\x15u\x8f\x06`\x14ø×L£ðD/댰\U00081ac3>®\x8dV\U0005a7d4K\U000cf84a\U00049a23R\x19\x15Ì\x08µ\x9b\U000fa230ï+ýV\U0010ae7aE퀭<Å«\x17ÁY<\U000d5551ö\x10!\x92Spï*\x10\x1a[Ð\x80=ü\U000a45e7\x86ÃJÒh©IN\U000a5991À\U0001a980-(jéI`\x94ã/\x02¯\x90k\U000e463bÕb¶Þ\x8bò@\x87𐼖\U0010b4f3·µ\x97"X\x7fø\x1a\U00053664Ô>Z\tO\x83°g*\U00015c76\x1c½éb¨àÃõþQ亭b/\t,_\x03ð\U00034b0b', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001811s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Í\xa0\x06ð\U00019ccc\U0004a908ÓQn¦ø:§6\x95uO\x19\x03xö\U000eb53d\'ýÙIOÔ\x7f¢!:©ñÅ¸\x1b\U00015465NH\U0002f68bf\x7fîau\x15\x05\U000a4495wvR§S\U00039452\x01§\U0008be81¡\x8fc8t\x8eé#s𞠶\x7fì\U000f2826¬.ª\U000ebd10\U000986a4;\x02\U0010545a%\U000560fb\x84Ñ÷Ñ\x8fp\x0f\U000de08b\U000be4f8ÍW\x95\U000e7b08\x80\U0005edd7\U000bdbb0@\U000d932d\U000d7960ß9\x0bª5\x1fÈôL5Ý;w1ï\x13W\U000baa13}ü:Ä뚄\U0007ca3fႉÁÜP\x08¾\x17âP\x86}ß8É\x96¦$YDT\U000a5f54L-ÍB\x98\x84MRPm\U000ddac2éã\x92î5*èÀ\x19\U000edfc3\U000f2daa{\x02\x11?\x1fz¸\U000803c5ÀH\U000a055aÎ᧮Û\x1d_\U00080610{çð\x83b!}\x08\x1fü¸\U0001ab7f)\x1e\x9e£\x9f\x80\U00048f8d\U000974fdm\tø\xa0÷\n\x1a\x9cúç\x19ë\U00079e09\x9e¦>n\U000d220aË*\x8cm£\U000c47e7\U000437f8z;E\x00d\\\x95ÌÆ16\x7ft\U00064146¸ÇÄ\x188\x85(\U0010e089\U000d7ef77ó\U000e50af².Ì\x16\x83¹]¡¾å\xa0\U0008648c訤\U000d0026N\U00018d93Ù\x00#m÷\nÎ\x08\U00074bc6YL\x85¤³\U00041943\x06\x9b\U00080309\x8e\x1cR\xa0\x90\U000dab3d\U00090876\U000acfa5X$𧅮𩇕à4£K\U000a31f4\x94𒓧\U0001679d±ºðè ÄHùú\x88\x0cúáNµZ\x1bö¯«R\x07ã\U0004a098\U000eec33SS)\U000e169a&\x95^\nl´MéªÕ\U0006cbbb\x0fe\x11\U00039331\x88)K®\U000d9247S\U000b3328ZÒÝYú\x07\U0004d51a.u\x9ebr\U000d4387&\x00b\x83Þ\U000a1c6a=\x8a¸aሲ\U0010e4f6\x92\x8cgr\x0e\U00096553\U00086963uçÃ\x8fÏ\x8d\x90\U000a9f72\U000c5b83ºª\U000671a0\x0b\x91é&&\t\x8b\U000b3999¡\x8cd\x07ü\x7f궙\U000a942c\r\x9d%\x02\U00095bc1\nÖò#Bo<mü\x04y×5ò𦑯Ô\U000c46d4ß\U000dab52\U000a7cf5\\\U001038caÃ\U0009f755\U000da4483\x18\xad\U000775efÃ\U000c34ffëË\x18¨\U000b0690\x1f\x11æ\U000364e4\U000a0bab³\xadb\x98òcYW\\\U00090f7f\x02\U000cc876áçez5\xa0ò\U000426a1cò«¶Ð\x854\x9b\x08CJ\U000e81f9méuÙ\U0004893b\xa0C\U0010edb6¾9\U0003439bV\U000d6b23\x1aﶦ\x9dÎñvèÞ\x00$«\x1f\U00083211\U001074d7\x1c𘟈\x02\U000cfe97Ñ\x9c¯\U0009b274È\x17[±ú\x928\x07cJ\x9fz\U000b3527¨\U000e25d6\x0c\U00076df6iÂÐÛç~`\U0009d7a9åPv\U000a6f52\U0001edc8\U0006fd21Õ=\x10\U0007f1d3#£¨äeª^\x17®Ø%¿CÒJ¹¨t\U0007c5a9hª\x81Ë£Yb¤\x05ö\U00084202"q\x16¬\x16\U000918b5Ó\x01\x86R\x8e\t\x86ã\x85\x7fV\U000c32101"ÇÂ\U00076ef2\x86²\U000c2b67i\tì´y`ÇR\x7fLT£ü\x17(\U00102c93\U0010e146\U000d2d70\x06\U0002ec05宓fÑ\U000efd7cÛ\x1a-\x13Æ\U00104f8dzd÷Ù\x83\x9c\x89\x12\x84]\x83\U000e56e6\x11À|F\U000d08beO\x8d¿\U000f3940Ê\U00056487\x14õ2\U000b9e756\x07\U000d8e0f\\\x7f\U00107320i\U000adb1b\x7f\U000fb060_\U000651ab~r\x1dx¢Ytß\x17{\U000e8e24\U000820a3\xa0:%w\r\U0001e730\x0e+\U000b158e$@ç½q|\U00080debl\x10È®Ã\U000859b1è\x0c\U000bfbad\U0004a828\x83-%\U0003e1e1ä\x87í\x19½\x12ÜÎ\U00074619ÛA«🌺å\U00088a3cWôô\U000d84dd\x1a\uecc9{Sö³×¦ôv£úë÷𰤍\x9a\U000f02a0\U000aa6f4:\U000c5007\x88±\U0005ad4f\x7f\U000d84a1\U000e21bd\x84SSú_im\U000d91c1\U0005ae5dñR\x92\U00091cde\x05ÎOÄUð÷ÙOÝ\U000c4dd2\U0008d19dÝã\x03æ¡¬ø;\U00052d62¸ü\U000e2464\x9fh¯\x9b\x9b\U0008d481J<\x99\x07{\U000556e8cç\U0010df7b𰸐¶§ÈL\x1fïï\x92°\U0007d356\U000846b0\U00035096\x1f\x04õ\x90\x12ôBää\U0007b414\x91h\x92ÿ5\x13F\x14\U0009bfc6]±È\U00075e33àî\x8c&LR¦\x1f\x9c¿\x8d\x16È\x95º\x82-Éâ\U000bd2acH\x80\U000fe73b\U00080d3b¬ôÁ\x13ÝO\U000e467cÅ\U00040c2aTg\U000be955úÚJ·\x8a\x8c\x88\x11\x176Î[Æ\x1e\x1c\x99\U000615e7\x94|\x1f¼\U00075165\U0010be4d\U000ee2c0\U000d25bb\'ÔI\U00054622\x05\x988Ëz¥\x93\U00079cf9°Ã\\©\x1a𦤿Â\x85\U0010ec4e\U0008883b\x95h\U000bb844\U000b9fa0\U00096c08t\U000bda22\x1c\x9b\x0e\U0009c55crÆ\U000c8cd0\U000ba0fe\t1¨öë\U000163c2𨄻fÒ𭶪\xad\x05\U000acb27Áa³á|N\U000d2cd0)\xa0\x12\x07äS:\x12\x11å\U000d4880\x9bèá\x00£\r\x85ﯧ𑘠Î\U000cc8aa·\U00094e2bIZ𭭤S]hïx\U0009284f¹\U000366ffFú8K\x02a\U000f01e2¶áས7\U00013f62þ\x89°𫐛Ý柡Ù\x16È\U000fec97\x12¢\U000a36d2\U000e4a1fß\x96\x8f²\x0b:\x97Ò`\x81/\x0f\U000fe42c\U00089d03¾Ðê\U0009944fB\U000b88db\x9a\U00034988\U0009e4c2F\U000e4e76½ò`\x90¿\U000d9d59ö\U000dc5f7\U000e08b3Ô\x08\x1aDÝ\x833\x08Àõ\U000e5bd6z\U00073819l\x8aÉ\U00032d02^\x1d£\nØ\r\x04t꽅)*\U0004f57aoçí\U000461789.\x0c¡5\x98\x01\x9ai\x06¢Ñs4°\x9b7å ÷\U00103432÷\x03\x15\x0e\x9aÇÈyMØ\x7fk\U00060c70\x1aw\x121\U000c1963R,ìË\U0006bcfb\U0006ddd3ºº𫎂6w\U000cd06b!\\\U000b9d83\U000461b9\\Ø\x92\U000b85ea¶N,Ù돊a\U000ef342\U0008b3d2¿@\U000e5edb;Ê\U000dd909\x89\x0cÿ\x0e\x93°5\x92६ÙೌòÏðÏ\x0b\U0008956dô®¡>\x83<*Æc\x82ÀäÔw\U0007207fÕ\U0010dccc\U0003a126\x84\U0006a6cc\U000b37e2\x03Ù\x83\U000767c3&\x88¯\x8cYÍ\x0c\x95ÛA\U000abd44ÍÐP©\x86Gir£ºÊ\x19ñ\x83!wß\x81\x8bËg\U000b7f98\U000d92e7\x87WhUÒuv\U000cece4¯\x15u\x8f\x06`\x14ø×L£ðD/댰\U00081ac3>®\x8dV\U0005a7d4K\U000cf84a\U00049a23R\x19\x15Ì\x08µ\x9b\U000fa230ï+ýV\U0010ae7aE퀭<Å«\x17ÁY<\U000d5551ö\x10!\x92Spï*\x10\x1a[Ð\x80=ü\U000a45e7\x86ÃJÒh©IN\U000a5991À\U0001a980-(jéI`\x94ã/\x02¯\x90k\U000e463bÕb¶Þ\x8bò@\x87𐼖\U0010b4f3·µ\x97"X\x7fø\x1a\U00053664Ô>Z\tO\x83°g*\U00015c76\x1c½éb¨àÃõþQ亭b/\t,_\x03ð\U00034b0b', 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001667s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Í\xa0\x06ð\U00019ccc\U0004a908ÓQn¦ø:§6\x95uO\x19\x03xö\U000eb53d\'ýÙIOÔ\x7f¢!:©ñÅ¸\x1b\U00015465NH\U0002f68bf\x7fîau\x15\x05\U000a4495wvR§S\U00039452\x01§\U0008be81¡\x8fc8t\x8eé#s𞠶\x7fì\U000f2826¬.ª\U000ebd10\U000986a4;\x02\U0010545a%\U000560fb\x84Ñ÷Ñ\x8fp\x0f\U000de08b\U000be4f8ÍW\x95\U000e7b08\x80\U0005edd7\U000bdbb0@\U000d932d\U000d7960ß9\x0bª5\x1fÈôL5Ý;w1ï\x13W\U000baa13}ü:Ä뚄\U0007ca3fႉÁÜP\x08¾\x17âP\x86}ß8É\x96¦$YDT\U000a5f54L-ÍB\x98\x84MRPm\U000ddac2éã\x92î5*èÀ\x19\U000edfc3\U000f2daa{\x02\x11?\x1fz¸\U000803c5ÀH\U000a055aÎ᧮Û\x1d_\U00080610{çð\x83b!}\x08\x1fü¸\U0001ab7f)\x1e\x9e£\x9f\x80\U00048f8d\U000974fdm\tø\xa0÷\n\x1a\x9cúç\x19ë\U00079e09\x9e¦>n\U000d220aË*\x8cm£\U000c47e7\U000437f8z;E\x00d\\\x95ÌÆ16\x7ft\U00064146¸ÇÄ\x188\x85(\U0010e089\U000d7ef77ó\U000e50af².Ì\x16\x83¹]¡¾å\xa0\U0008648c訤\U000d0026N\U00018d93Ù\x00#m÷\nÎ\x08\U00074bc6YL\x85¤³\U00041943\x06\x9b\U00080309\x8e\x1cR\xa0\x90\U000dab3d\U00090876\U000acfa5X$𧅮𩇕à4£K\U000a31f4\x94𒓧\U0001679d±ºðè ÄHùú\x88\x0cúáNµZ\x1bö¯«R\x07ã\U0004a098\U000eec33SS)\U000e169a&\x95^\nl´MéªÕ\U0006cbbb\x0fe\x11\U00039331\x88)K®\U000d9247S\U000b3328ZÒÝYú\x07\U0004d51a.u\x9ebr\U000d4387&\x00b\x83Þ\U000a1c6a=\x8a¸aሲ\U0010e4f6\x92\x8cgr\x0e\U00096553\U00086963uçÃ\x8fÏ\x8d\x90\U000a9f72\U000c5b83ºª\U000671a0\x0b\x91é&&\t\x8b\U000b3999¡\x8cd\x07ü\x7f궙\U000a942c\r\x9d%\x02\U00095bc1\nÖò#Bo<mü\x04y×5ò𦑯Ô\U000c46d4ß\U000dab52\U000a7cf5\\\U001038caÃ\U0009f755\U000da4483\x18\xad\U000775efÃ\U000c34ffëË\x18¨\U000b0690\x1f\x11æ\U000364e4\U000a0bab³\xadb\x98òcYW\\\U00090f7f\x02\U000cc876áçez5\xa0ò\U000426a1cò«¶Ð\x854\x9b\x08CJ\U000e81f9méuÙ\U0004893b\xa0C\U0010edb6¾9\U0003439bV\U000d6b23\x1aﶦ\x9dÎñvèÞ\x00$«\x1f\U00083211\U001074d7\x1c𘟈\x02\U000cfe97Ñ\x9c¯\U0009b274È\x17[±ú\x928\x07cJ\x9fz\U000b3527¨\U000e25d6\x0c\U00076df6iÂÐÛç~`\U0009d7a9åPv\U000a6f52\U0001edc8\U0006fd21Õ=\x10\U0007f1d3#£¨äeª^\x17®Ø%¿CÒJ¹¨t\U0007c5a9hª\x81Ë£Yb¤\x05ö\U00084202"q\x16¬\x16\U000918b5Ó\x01\x86R\x8e\t\x86ã\x85\x7fV\U000c32101"ÇÂ\U00076ef2\x86²\U000c2b67i\tì´y`ÇR\x7fLT£ü\x17(\U00102c93\U0010e146\U000d2d70\x06\U0002ec05宓fÑ\U000efd7cÛ\x1a-\x13Æ\U00104f8dzd÷Ù\x83\x9c\x89\x12\x84]\x83\U000e56e6\x11À|F\U000d08beO\x8d¿\U000f3940Ê\U00056487\x14õ2\U000b9e756\x07\U000d8e0f\\\x7f\U00107320i\U000adb1b\x7f\U000fb060_\U000651ab~r\x1dx¢Ytß\x17{\U000e8e24\U000820a3\xa0:%w\r\U0001e730\x0e+\U000b158e$@ç½q|\U00080debl\x10È®Ã\U000859b1è\x0c\U000bfbad\U0004a828\x83-%\U0003e1e1ä\x87í\x19½\x12ÜÎ\U00074619ÛA«🌺å\U00088a3cWôô\U000d84dd\x1a\uecc9{Sö³×¦ôv£úë÷𰤍\x9a\U000f02a0\U000aa6f4:\U000c5007\x88±\U0005ad4f\x7f\U000d84a1\U000e21bd\x84SSú_im\U000d91c1\U0005ae5dñR\x92\U00091cde\x05ÎOÄUð÷ÙOÝ\U000c4dd2\U0008d19dÝã\x03æ¡¬ø;\U00052d62¸ü\U000e2464\x9fh¯\x9b\x9b\U0008d481J<\x99\x07{\U000556e8cç\U0010df7b𰸐¶§ÈL\x1fïï\x92°\U0007d356\U000846b0\U00035096\x1f\x04õ\x90\x12ôBää\U0007b414\x91h\x92ÿ5\x13F\x14\U0009bfc6]±È\U00075e33àî\x8c&LR¦\x1f\x9c¿\x8d\x16È\x95º\x82-Éâ\U000bd2acH\x80\U000fe73b\U00080d3b¬ôÁ\x13ÝO\U000e467cÅ\U00040c2aTg\U000be955úÚJ·\x8a\x8c\x88\x11\x176Î[Æ\x1e\x1c\x99\U000615e7\x94|\x1f¼\U00075165\U0010be4d\U000ee2c0\U000d25bb\'ÔI\U00054622\x05\x988Ëz¥\x93\U00079cf9°Ã\\©\x1a𦤿Â\x85\U0010ec4e\U0008883b\x95h\U000bb844\U000b9fa0\U00096c08t\U000bda22\x1c\x9b\x0e\U0009c55crÆ\U000c8cd0\U000ba0fe\t1¨öë\U000163c2𨄻fÒ𭶪\xad\x05\U000acb27Áa³á|N\U000d2cd0)\xa0\x12\x07äS:\x12\x11å\U000d4880\x9bèá\x00£\r\x85ﯧ𑘠Î\U000cc8aa·\U00094e2bIZ𭭤S]hïx\U0009284f¹\U000366ffFú8K\x02a\U000f01e2¶áས7\U00013f62þ\x89°𫐛Ý柡Ù\x16È\U000fec97\x12¢\U000a36d2\U000e4a1fß\x96\x8f²\x0b:\x97Ò`\x81/\x0f\U000fe42c\U00089d03¾Ðê\U0009944fB\U000b88db\x9a\U00034988\U0009e4c2F\U000e4e76½ò`\x90¿\U000d9d59ö\U000dc5f7\U000e08b3Ô\x08\x1aDÝ\x833\x08Àõ\U000e5bd6z\U00073819l\x8aÉ\U00032d02^\x1d£\nØ\r\x04t꽅)*\U0004f57aoçí\U000461789.\x0c¡5\x98\x01\x9ai\x06¢Ñs4°\x9b7å ÷\U00103432÷\x03\x15\x0e\x9aÇÈyMØ\x7fk\U00060c70\x1aw\x121\U000c1963R,ìË\U0006bcfb\U0006ddd3ºº𫎂6w\U000cd06b!\\\U000b9d83\U000461b9\\Ø\x92\U000b85ea¶N,Ù돊a\U000ef342\U0008b3d2¿@\U000e5edb;Ê\U000dd909\x89\x0cÿ\x0e\x93°5\x92६ÙೌòÏðÏ\x0b\U0008956dô®¡>\x83<*Æc\x82ÀäÔw\U0007207fÕ\U0010dccc\U0003a126\x84\U0006a6cc\U000b37e2\x03Ù\x83\U000767c3&\x88¯\x8cYÍ\x0c\x95ÛA\U000abd44ÍÐP©\x86Gir£ºÊ\x19ñ\x83!wß\x81\x8bËg\U000b7f98\U000d92e7\x87WhUÒuv\U000cece4¯\x15u\x8f\x06`\x14ø×L£ðD/댰\U00081ac3>®\x8dV\U0005a7d4K\U000cf84a\U00049a23R\x19\x15Ì\x08µ\x9b\U000fa230ï+ýV\U0010ae7aE퀭<Å«\x17ÁY<\U000d5551ö\x10!\x92Spï*\x10\x1a[Ð\x80=ü\U000a45e7\x86ÃJÒh©IN\U000a5991À\U0001a980-(jéI`\x94ã/\x02¯\x90k\U000e463bÕb¶Þ\x8bò@\x87𐼖\U0010b4f3·µ\x97"X\x7fø\x1a\U00053664Ô>Z\tO\x83°g*\U00015c76\x1c½éb¨àÃõþQ亭b/\t,_\x03ð\U00034b0b', 'password': "<script>alert('xss')</script>"}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001703s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ['', '0\xa0', '', '', '0\U00019ccc', '\xa0'], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': ['', '0\xa0', '', '', '0\U00019ccc', '\xa0'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001937s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '     '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '     '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001704s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 24544, 'password': "' OR '1'='1' --"}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': 24544, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001624s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': -95}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': -95, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'missing', 'loc': ['body', 'password'], 'msg': 'Field required', 'input': {'username': -95}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001757s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '\U000f63a9$\U000ecaaaï\x13ô\U00033be8é\U00014ba0L\U000e2ab1g\U001010c8\x85\x9a¯I5ÿt_\U000a01ed1²¢\x0bü\x01gS\x9bÇÐM_Yé\U000f290a捳4\U0007cc28\U0010a294Ú\U0005cac8\x8eÑèb\U00095f9b\U000db4baÍ+\x11*Ù\'°\U0003608bÖ6¬ëo\U000d1be5L¤{D$\U000c7663\x19\x82¸çâ±\U000718ae\x83W\x7f\x9aH\x8eåø\U0009ea0dÙ\x88ÿ²âg\x08±·Â¦;\x14\x17Ï\x8a¥X\x0c\x8c,\U00038ae4$\U00014115\U0009ac2bO(NÕ0è\U00091ed5iSOhNî\U0009203c#v¿\U000b94a5\U000d85e3¼\x9dÒ\x18:ÌÖ\x84¹¿÷áb,𣓈\U00054536ø\x9ar\x1eâøÁ\x1aè\x9a\x01³A£\x19𒓥\U00105f75\x88¨¶\U0006dded\x9d𧾧\U00035fd1\x8cmÊÕ\r\x1d¾ú~ÉE\x13\U00038a40%©³H²äÀï𠅴6¼\x18HÍ,\U0006fc77I\x1a¬8·z\U001085a2ØÏ3íôÓE&\x92\x83â1\x93\x12\U000bd101\ts|8\U00101015A²¢\U000b2ffcç×|\U000e1f24äÉt{¸Ã\U000b9b80\U0006f79aâ\U00013577\x89 ×\tJgs\x82s©\x1a\x7f\x12üRË\x1ae\U00046d74\x0c\x1d\'Q\U000f8f0cÍ\U000ca0b4s\U00019e4fg¡¤[\U0001ca8fÞ\x96\U000c39f79\U000c4dcf\U0006e7a8𨤁#Ùòú\U000eb15e\x86ÅꂏJ´&X\U00054182"\x7f\U00087833â\x86\x9aã\U000c7fd0D{¦\x0cy\x16\x85\x89\x8dìÜ\U0008416fÒ>\U00096de4Û`¬\U000accc7\x1fᇡ\U00080a74\x90»¡\U000bbcddUÐ\n\x1e\x9c\U000c2cba(\x9c×\U000f9e85U_\U000a6d92{Xä²\U0006a5e2CúxùJ\U00069274\x06\U000fc71bæywØ\x81*&iì\U0001dcf4\x1f\U000d7734b?Èï"ÇÚ\x84`\U00103658\x1f¶\U000bfa6bp\U00061e0e\x04~üú\U00052714\x8e´\x1dê\U000e6d28Qýb²\x91\U00094a68\U000cbc4ad1a\U000b3ab3è\x04¸I𬲁\x08(}FÞÁó\x94𫻡À¾ÿí \U000ab88f\U0006da5c¿è\U000b4397\U000fbeaa\x9f\x8c\U000c9d45Í§Ù1ü\U000c4ff5G\x00Â\x96\x82Ä\x8bÀüc£v\U000b817fm\xadi\U000fba30\U0010fb21ÿ0hÂg\U0010c8abûQ³sÍ\x7f\U000d0a9f®+\x93\U0008e08fò¾\'\U000e0ebbaè\x8f\U00108f34\U000a0897\U000fc8b5<ßTw\U00109449ÆRò\U000cb086³\U00067b7e\x86\x16#ô=}¨\U00066559\x0cü\x7fÆ\x98\x05¹𤴛79\U00087ce7\x93¾tÇßñ\'\U000a9f05\x1eZ\x86¨3\rØ\x95öë:G0\x1br²Ââ\x13Ó\x08`\x91q\x8aè`l\uf3dc\U000ca1b2¹T\x1d®6(\x12¾\U000f6d74Ã\x98遣G¦\U0001a788RØs\x8a\x1d\x0b\x89»\U000a38eeu\U000c9277J2\x99\U001068c5×\U00098cb4\xad\x9f\x1b\x00¿\U000e29ce\t^uý\U001095a4\x06\x91\U0005958eÊD\U00051554%-Ê\U0007d53c侧ò\x0cR×hS\x0e·\U0007e6b6hâ\U00100f6dXÀ\U0010ef53𫤓\U000c91e4\U000dd541oÑ\x90\U000c9e53Tv\x89È4Þ\x13^\x19\x17©7ñ¢Å\x97R7\U00101ee5\x8dÄ\U00101819üêÀ=\U000a2cbfT\U000a4921ò\U0004234f¹þ\U000ae0a5\U00082e25B\x1bg×Îþ\U00106880±\x0f\U000626152\U0003f966\U000ac6e2\x94\U0006d49bÿ\U000f100d0\x03g\U000b2f1a3·6\x08ý\x87\U00106f43ài龫\U00076412[y{Ç¢R\U0004d280»\x02en`ê\x9a6\U000b3634\'\x92\U000a2d41Iõà*OeÃÒ\x1dÏ\x127ì+»6+\x88𦰑-¢\x10-\x18ÙMÐ\U0008a242\U0003b796,\U0008e477"\U000abf35\U00102f3b|\x15\x1a©\U0005d054úÑ\U00041647\U000b74a5Bx\U0009feec;Ûßñå\x05\x918»?Ù\x05\U000e9da4nK\U000134d8ÏºÚåñ\x8a蜨?µ\x95\U000e133a\x85ø©ýMs\x04\x98ô\U000b5259qØ\x1e𢹨\x0e\U0003ed03\U000bce57\U000b8bc4\xadI24U\n,àp\x8c\t\U000326d2Í\U000d3d91\x85\x8bxF;\U0006df26{䚾 \U00044fe5ã𠌹𭲬\U000817afò]n?Ñ\x07\x97\U00056bbf@$pYä刂µO\U000433e7í\x965õ\U0007d86f1Qæ\U0007e46bêP¸\U000ccb0bÇ\U00076fd0\\T\x9b\U000ccb2a;\\ì²¾e\x8cÅ\U000b30bf\x0f©\x9a\U00048875]\x8fÈ/D\U000824d0\x90fjî\U000ef657¤£\U000fbbffÈN\x81|Uâ\x96\x84ÔÓSV¿ÓE\x98È9ð.\r,7%©ù mà\x0f\x7f\U000735a9𤲎Y\U00053789\U00099b98麎:n\x8fÿ\U0010ea30\x1cî\U00046396\x18£5¬a\U00101d20ãØ\x0b¨{âÊ\'´ÖÚ\x9b𨝳\U000d4d2cq:5\x9bòí\U00097f1cæ-\x0bW\U0005d38a\x83\x17¾\U000808a9B¹\x06\U0004cf5a\x8d³É𭰛\x142C\x16¯3\U000b384c(¹\x1e\x11©Ü2\x8eH\U000d592b$\x95{U\x9b7\U000e0711û\U000efa38¬óÊu4\x01\x9f\U00097975\U000e58c2¸\x89U\x94\x9d=§\x05S\U000f3f46\U00056f33\U000ad5c9\U000f4f5d1\U000862d3\x06\x99\x9b\n\x7f\U0004be0ay¿\U0004a7e5\U000e6bf4\x1c횢M\U000ab5a4\U000c1fa4`冉T\x94VØ\x00µc\U0009f9fdUj\U0010d341H\U0010da75_\U000484be\x8f\x0b\U000eddff5\x05\x82\U0003493dÕ\U000f3b72\x03\x8a°³Y\U0006a176\x99ç±\x9e\x04\x95\x84¨)𬦗n\U000985c3º!ÆÁ\x8c¾eÏ𫫸k\x88ZX0\x95\xad\U00068c55U\x11ÆÕÌ|\U0003770b\x82s\x18ª¢\x98+\x90\U0004b0e2D\U000a7cc1âz\x01ó69å´·\x0f@oê\x8b?èè\U0010da55¬,+_>\x88\U0010ebf7\U0006c0f1\U00064e9dQß\x82\x8e%É\U000abaa7w\x7fªÌ`h𪖕`ì\U00074ce0\x00\'·âJ\x0b\U00060e74\U0006ea49é\x16Y\\\U00062414\r\x060𗚠ú\U0005540b\x81g\x19\U000fb276~f\x10\U000626c8oi*🭠\x9aâ\x14\U0005a28cx½1À\U000a367c.\U00014907\x9c¡\x13\x1fØ\U0001e45dÇÃíá\x7f»õ\x0f¤\x91.\U00074aff\x9eó`\x10s©\U00073244\x9b𦵯V3\x93\x00=\U000f9fbcK\x07\x02º\x08\x91\U000198c8\x9dß\U000fce77\U0007a274\U000df009D;0\x8e\U00070f01\U000d0770\U000dfdd6\x8b\x07æ\x07\U000941df\x01¿\\AA\U00092417\t\U00079dd3+ÆD]Ô\U0007a15f]%aö+\x12\x97Ï\x7fz\U000b8e78´t÷é\x19\x8eꕕ\x8c×äaì)\U000c1590×8kZ\x01âÍ\x10\x13\U0008539d\U001044d9\x13\x82«\U0010a561zmô@¡X\U0001bb63¥\x0fÇÖ{iÝæ~«³\x08𬑁L\x82', 'password': ['"¢#<\x86\U000851bc\r\U000f2230']}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': ['"¢#<\x86\U000851bc\r\U000f2230'], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001874s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': [], 'password': True}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'username'], 'msg': 'Input should be a valid string', 'input': [], 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}, {'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': True, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001782s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'password': '    '}
✅ <Response>
     Response Body: {'detail': [{'type': 'missing', 'loc': ['body', 'username'], 'msg': 'Field required', 'input': {'password': '    '}, 'url': 'https://errors.pydantic.dev/2.10/v/missing'}]}
     Elapsed: 0.001929s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': ' ', 'password': 0}
✅ <Response>
     Response Body: {'detail': [{'type': 'string_type', 'loc': ['body', 'password'], 'msg': 'Input should be a valid string', 'input': 0, 'url': 'https://errors.pydantic.dev/2.10/v/string_type'}]}
     Elapsed: 0.001669s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001682s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=C}2_p@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00171s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '=C}2_p@Tktwfve.nLuG.g2vI6n.McKINsEY', 'password': 'Ă\U000dfbc2𠁗Ø\U000daccaăW¬^'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001502s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'c&0Pi@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001553s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'c&0Pi@j.CN', 'password': 'Ĉ®fh_ÍÇz¯'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001565s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'y@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001791s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'y@bG.wz.diRECtOry', 'password': 'UĈĤ6j&ùEòðEĪÈ¤Ï\U00044bffË\U000a21a5Ī*'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001751s
====================================================================================================
2025-09-19 00:38:00 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'EUkVni}sJN@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001799s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'EUkVni}sJN@a.kred', 'password': 'Üíģ𨡂w蛑\U000dd7fc'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001604s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@A.com', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001666s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@L.emV.hOUse', 'password': 'Ą\xadVVã©@Ï'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001669s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@U.L161533550R.emV.hOUse', 'password': 'Ċĸ\U0006d83e᱙ěă\U00036869īá\U000c9a6a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001858s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@U.L161533550R.emV.hOUse', 'password': 'ăĸ\U0006d83e᱙ěă\U00036869īá\U000c9a6a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001781s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@U.LmV.emV.hOUse', 'password': 'ăĸ\U0006d83e᱙ěă\U00036869īá\U000c9a6a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001626s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@U.LmV.LmV.hOUse', 'password': 'ăĸ\U0006d83e᱙ěă\U00036869īá\U000c9a6a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001674s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@Lm41.LmV.hOUse', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001629s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'z@Lm41.Lm41.hOUse', 'password': '0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002326s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'L@kgFok.V.B.uYlc5.A.S.plUMbINg', 'password': 'DK2¥ĺ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001839s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'L@kgFok.V.B.uYlc5.A.S.plUMbINg', 'password': '\U00040247137ĺ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001829s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'L@A.V.B.uYlc5.A.S.plUMbINg', 'password': '\U00040247137ĺ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001742s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'L@A.V.B.uYlc5.A.S.plUMbINg', 'password': '7137ĺ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001833s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'L@A.S.plUMbINg', 'password': '!𠥣*W'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002131s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'L@A.A.plUMbINg', 'password': '!𠥣*W'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002301s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VM@y.PraMErICA', 'password': '&'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001765s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VM@A37.PraMErICA', 'password': '\U000ca081'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001742s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VM@A37.PraMEriCA', 'password': '\U000ca081'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001818s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VM@D.A.PraMEriCA', 'password': '0\U000ca081'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001712s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'VM@A.A.PraMEriCA', 'password': '0\U000ca081'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0016s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fu@FnZ0f.k.Xn--90AiS', 'password': 'īÂ\U000f09a9É3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00166s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fu@FnZ0f.k.Xn--90AiS', 'password': 'īÂ\U000f09a933'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0017s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fu@FnZ0f.k.Xn--90AiS', 'password': 'īÂ\U000f09a933'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001702s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Fu@FnZZf.k.Xn--90AiS', 'password': 'īÂ\U000f09a933'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001948s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'u@A1.TheATrE', 'password': '1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001967s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'u@i0RTQfsPp-UYZzhXXuW.am.K.e.S.A0.A.TheATrE', 'password': 'N\U0006cb8f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001626s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'u@i0RTQfsPp-UYZzhXXu0.am.K.e.S.A0.A.TheATrE', 'password': 'N\U0006cb8f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00167s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'O-@U.C.Bck3rqybv0atrm.aep-7POkpkCy9VGx.b.Y.Iz1.XN--4GBRIM', 'password': 'ŀOŀ)'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001694s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'O-@U.C.Iz1.aep-7POkpkCy9VGx.b.Y.Iz1.XN--4GBRIM', 'password': 'ŀOŀ)'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001609s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'O-@U.C.Iz1.aep-7POkpkCy9VGx.b.Y.Iz1.XN--4GBRIM', 'password': 'ŀOŀ)'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002036s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'O-@Hmx.E.D.C.Iz1.aep-7POkpkCy9VGx.b.Y.Iz1.XN--4GBRIM', 'password': 'mF^7)Mº÷'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001731s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'O-@Hmx.a.D.C.Iz1.aep-7POkpkCy9VGx.b.Y.Iz1.XN--4GBRIM', 'password': 'mF^7)Mº÷'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001851s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'O-@A.A.I.XN--4GBRIM', 'password': 'K'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001747s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'O-@A.XN--4GBRIM', 'password': 'Ł'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001674s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'rg=o0ss%!@r.PD.IkU.FAnS', 'password': 'aö÷Ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001862s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'rg24o0ss%!@r.PD.IkU.FAnS', 'password': 'aö÷Ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'rg24o0ss%!@r.PD.IkD.FAnS', 'password': 'aö÷Ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001952s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'rg24o0ss%!@r.PD.IkD.FANS', 'password': 'aö÷Ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001784s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'rg24o0ss%!@r.IkD01D.FANS', 'password': 'aö÷Ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001578s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'rg24o0ss%!@r.rkD01D.FANS', 'password': 'aö÷Ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001832s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'rg24o0ss%!@rkD01D.rkD01D.FANS', 'password': 'aö÷Ó'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001907s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Rd!L@tZPKE.gHJbQQH5LfXXxqwWdpJt-qpDKxCe.T.MTmcyKuHi657.NOW', 'password': '\U000c4683\U000fe06b\U00069e09'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002073s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Rd!L@tZPKE.gHJbQQH5LfXXxqwWdpJt-qpDKxCe.T.MmmcyKuHi657.NOW', 'password': '\U000c4683\U000fe06b\U00069e09'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001689s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Rd!L@gHJbQQH5LfXXxqwWdpJt-qpDKxCe.T.MmmcyKuHi657.NOW', 'password': '\U0001157e1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001821s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Rd!00@gHJbQQH5LfXXxqwWdpJt-qpDKxCe.T.MmmcyKuHi657.NOW', 'password': '\U0001157e1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001726s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Rd!00@gHJbQQH5LfXXxqwWdpJt-qpDKxCe.T.MHJbQQH5LfXXxqwWdpJt-qpDKxCe.NOW', 'password': '\U0001157e1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001808s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Rd!00@T.T.MHJbQQH5LfXXxqwWdpJt-qpDKxCe.NOW', 'password': '\U0001157e1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001575s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'Rd!00@T.T.THJbQQH5LfXXxqwWdpJt-qpDKxCe.NOW', 'password': '\U0001157e1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002096s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l*N9Pw*6PfTvnW/m~lduSoUA@t.Q3.coDeS', 'password': 'Ġe\U00075db7Æ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00171s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l*N9Pw*6PfTvnW/m~lduSoUA@Q.Q3.coDeS', 'password': 'Ġe\U00075db7Æ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001768s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l*N9Pw*6PfTvnW/m~lduSoUA@Q3.Q3.coDeS', 'password': 'Ġe\U00075db7Æ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001961s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'l*N9Pw*6PfTvnW/m~lduSoUA@Q3.Q3.coDeS', 'password': 'Ġe\U00075db7Æ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001606s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%LuFtB%@i.shIksha', 'password': '>Ā8\U00046546bĜ\U0009bedb'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002414s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%LuFtB%@F.B7.i.shIksha', 'password': '\U00046546bĜ\U0009bedb'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002006s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '%LuFtB%@F.B7.i7.shIksha', 'password': '\U00046546bĜ\U0009bedb'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001915s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'H@T.Pf', 'password': 'Üþ½\U001064b9𬿥d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001676s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'H@G.B.Pf', 'password': '\U001064b9𬿥d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001641s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'H@G.B.Pf', 'password': '\U001064b9𬿥d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001616s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'H@G.B.Pf', 'password': 'd𬿥d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001653s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'H@G.G.Pf', 'password': 'd𬿥d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001644s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'H@G.G.Pf', 'password': 'd𬿥dó2\U000f9ebb'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001542s
====================================================================================================
2025-09-19 00:38:01 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'H@G.G.Pf', 'password': 'd𬿥dó2\U000f9ebb'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001665s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/sqBK$-47@RaXU5zP.Bharti', 'password': '±ĐªĜ×'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001553s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/sqBK$-47@RaXU5zP.Bharti', 'password': '±ĐªĜ×'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001911s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/sqBK$-47@Ra5U5zP.Bharti', 'password': '±ĐªĜ×'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001643s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/sqBK$-47@A4.Ra5U5zP.Bharti', 'password': '𧉄6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001701s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/sqBK$-47@A4.Ra5U7zP.Bharti', 'password': '𧉄6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001739s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/sqBK$-47@A4.R55U7zP.Bharti', 'password': '𧉄6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '/sqBK$-47@A4.R55U7zP.BhaRti', 'password': '𧉄6'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00188s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lkKqg5h8Mv2@hul.o.TravElErsiNSUraNcE', 'password': 'UĢ;ĭ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00181s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lkKqg5h8Mv2@oul.o.TravElErsiNSUraNcE', 'password': 'UĢ;ĭ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001655s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lkKqg5h8Mv2@oul.oul.TravElErsiNSUraNcE', 'password': 'UĢ;ĭ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001844s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lkKqg5h8Mv2@l540BMvXowEOu.ou0.oul.TravElErsiNSUraNcE', 'password': 'ćĭbĳ{gÐá'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001751s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lkKqg5h8Mv2@l540BMvXowEOu.ou0.oul.travElErsiNSUraNcE', 'password': 'ćĭbĳ{gÐá'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002095s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lkKqg5h8Mv2@oul.ou0.oul.travElErsiNSUraNcE', 'password': 'ćĭbĳ{gÐá'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001738s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'lkKqg5h8Mv2@oul.oul.oul.travElErsiNSUraNcE', 'password': 'ćĭbĳ{gÐá'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001697s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'wLcGdZ@Kn.Odr.gZCVAx3uyjT3F.iFc7.tw216.J9Vj0.cAsinO', 'password': 'įįĈ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002041s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'wLcGdZ@Kn.Odr.gZCVAx3uyjT3F.iFc7.tw216.JZCVAx3uyjT3F.cAsinO', 'password': 'įįĈ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001767s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'wLcGdZ@Kn.Ow216.gZCVAx3uyjT3F.iFc7.tw216.JZCVAx3uyjT3F.cAsinO', 'password': 'įįĈ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00188s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'wLcGdZ@Kn.Ow216.gw216.iFc7.tw216.JZCVAx3uyjT3F.cAsinO', 'password': 'įįĈ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001853s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'wLcGdZ@Kn.Ow216.gw216.iFc7.tw216.JZCVAx3uyjT3F.cAsinO', 'password': 'ĈįĈ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001765s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'wLcGdZ@Kn.Ow216.gw216.iFc7.tZCVAx3uyjT36.JZCVAx3uyjT3F.cAsinO', 'password': 'ĈįĈ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001622s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'wLcGdZ@Ow216.Ow216.gw216.iFc7.tZCVAx3uyjT36.JZCVAx3uyjT3F.cAsinO', 'password': 'ĈįĈ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001756s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ovY-7!^+@sIZm.d.veRSiCheRUng', 'password': ']ß'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001749s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ovY-7!^+@dh040.veRSiCheRUng', 'password': '13'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00182s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ovY-7!^+@dh040.veRSiCheRUng', 'password': '33'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001847s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ovY-7!^+@d4040.veRSiCheRUng', 'password': '33'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001681s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ovY-7!^+@d4040.veRSiCheRUng', 'password': '33'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001715s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ovY-7!^+@d4040.verSiCheRUng', 'password': '33'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001679s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'ovY-7!^+@B1.verSiCheRUng', 'password': '00'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001578s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'wm@H.Z.fARm', 'password': '𩯒E'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001668s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': '0@H.xn--CZr694b', 'password': '𩯒E'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002171s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001783s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_¡\U000f75e0a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00157s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_×ᆅ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001577s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_±·°\U0003595a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000e892díÎ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001661s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00093f9f\U00087bc1𱉼\U00088fa0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001672s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000d6d15\U000f88b5\x0enõ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001649s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000cb5a7\U0004a681'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001632s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000becaf'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001693s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x17𣃸h\x85𤾝'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001608s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8f\x1f'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001824s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x1a'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001729s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_q\U000e2daf\x12\U00036ff3.'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001549s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_q>'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001661s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_>>'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001628s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00041700'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001647s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00041700\U00041700'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001667s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_40'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001591s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ï'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001706s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ï\x1c\x1a\x84õ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001751s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Ï\x1c\x1a\x84\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001674s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x84\x1c\x1a\x84\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001686s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x84\x1c\x84\x84\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001648s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x84\x1c\x84\x84\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001881s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x1c\x1c\x84\x84\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001689s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C\U00092e10d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00149s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C\U00092e10\U000409ad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001616s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C\U00092e10\U000409ad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.0016s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C\U000409ad\U000409ad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001607s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_C\U00050d00\x1aÎ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00178s
====================================================================================================
2025-09-19 00:38:02 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00050d00\U00050d00\x1aÎ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001677s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00050d00\U00050d00ȆÒÀ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00165s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x0e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001636s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0958#IQ×'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001711s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0958×IQ×'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001621s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0958×I××'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001468s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0958\U000c0958I××'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00159s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0958\U000c0958\U000897e5'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001742s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U000c0958\U000c0958\U000897e5\x10#'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001408s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x1a\x8d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001562s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8d\x8d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001953s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8d\x8dx¶\r'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001778s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8d\x8dx\x8d\r'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001612s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8d\x8dx\U000d0a00Ù'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001546s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8d\x8dÙ\U000d0a00Ù'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001658s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8d\x8dÙ\U000d0a00𤻌'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001574s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x90\U000e2977@øA'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00151s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x90\U000e2977\x90øA'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001741s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x90\U000e2977\x90ø\U000db692'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001608s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x90\U000e2977\x90ø\U000db692'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001831s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ø\U000e2977\x90ø\U000db692'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001703s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ø\U000e2977\x90ø\U000db692'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001715s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ø>'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001804s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_"\x01éï\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001471s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_"\x01"ï\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001813s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_"\x01ïï\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001723s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_"\x01ï\x84\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001628s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_"\x01ï3\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001548s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_"\x01ï3\x84'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001604s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_"\x01ï3\x01'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001615s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_%WK\U000b8367'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001824s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00070c011z\U00079db9Z'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001803s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U00070c011z\U00079db9Z'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002048s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_z1z\U00079db9Z'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001681s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Z1z\U00079db9Z'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001516s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Z1z\U00079db9Z'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001668s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_Z1𑂔\U00033300W'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001637s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ĵî³ç\x0b'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001666s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ĵî³î\x0b'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001598s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ĵîĵî\x0b'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001603s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ĵîĵ\U000e0b05\x1e'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00205s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ĵîĵ\U000e0b05\U00069737'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002017s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ĵîĵ\U000e0b051'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00175s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_ĵ0'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00169s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_¿'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001645s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U0006efba\U0005dfd4ã'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001642s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U0006efba\U0005dfd4ã\U0005dfd4型'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001587s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U0006efba\U0005dfd4ã\U0005dfd4\x9d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001635s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\U0006efba\U0005dfd4ã\U0005dfd4O'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00173s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𢠁Ö'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001655s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_𢠁Ö𢠁\x8eÚ'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.002065s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U£'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001625s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_U7'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001737s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_UU'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001568s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_UU'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001689s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_3'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001591s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00161s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_1®¡X'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001651s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_y'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001648s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_yy<'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001619s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_yy<'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00197s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_yy<'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001686s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_yy<'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001577s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_yy<'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001699s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_yyy'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001534s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_\x8d'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001669s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_z\U0010e30f\xad\x07¹'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001559s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_z\U00012721@긂¹'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.00159s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_z\U00012721@긂1'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001623s
====================================================================================================
2025-09-19 00:38:03 [MainProcess]-[MainThread]-[logging_middleware._process_log_outputs:143]-[INFO]:
====================================================================================================
🅰️ <API>: LoginForAccessTokenApiLoginTokenPostAPI 用户提供用户名和密码进行登录，成功后返回JWT令牌
🚀 <Request>
     URL: http://127.0.0.1:9999/api/login/token
     Method: POST
     Request Json: {'username': 'aomaker', 'password': 'test_password_z\U0001272102\xad'}
✅ <Response>
     Response Body: {'detail': '用户名或密码错误'}
     Elapsed: 0.001887s
====================================================================================================
